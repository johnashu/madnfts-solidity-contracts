/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADRouter1155, MADRouter1155Interface } from "../MADRouter1155";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxFeeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFeeBurnt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory1155",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600180556703782dace9d900006004553480156200002157600080fd5b50604051620021443803806200214483398101604081905262000044916200027b565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b191690558115801590620000a25750600081115b620000f45760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d6178206665652073657474696e6773000000000000000060448201526064015b60405180910390fd5b60078290556008819055600280546001600160a01b0319166001600160a01b03878116919091179091558416156200013157620001318462000147565b6200013c8362000191565b5050505050620002e0565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314620001dc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401620000eb565b6001600160a01b038116620002265760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401620000eb565b60068190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6001600160a01b03811681146200027857600080fd5b50565b600080600080600060a086880312156200029457600080fd5b8551620002a18162000262565b6020870151909550620002b48162000262565b6040870151909450620002c78162000262565b6060870151608090970151959894975095949392505050565b611e5480620002f06000396000f3fe60806040526004361061018b5760003560e01c806366d003ac116100d6578063b611f9d61161007f578063e427affe11610059578063e427affe14610405578063edc9e7a41461041b578063f940e3851461043b57600080fd5b8063b611f9d6146103bc578063c99aa4e5146103dc578063cd22e7d5146103f257600080fd5b80638b9f1815116100b05780638b9f1815146103695780638da5cb5b1461037c578063ae6e7faf1461039c57600080fd5b806366d003ac14610314578063785e9e86146103345780638456cb591461035457600080fd5b80633f4ba83a11610138578063583fef3411610112578063583fef34146102b0578063586ba782146102d45780635c975abb146102ea57600080fd5b80633f4ba83a146102505780635041c8e714610265578063535f64e71461029d57600080fd5b80630b78f9c0116101695780630b78f9c0146101f057806313af4035146102105780633bbed4a01461023057600080fd5b806306fdde0314610190578063089f8b1b146101bb5780630a98eae5146101dd575b600080fd5b34801561019c57600080fd5b506101a561045b565b6040516101b291906117dd565b60405180910390f35b3480156101c757600080fd5b506101db6101d6366004611833565b610472565b005b6101db6101eb366004611942565b6105e9565b3480156101fc57600080fd5b506101db61020b3660046119ae565b610741565b34801561021c57600080fd5b506101db61022b3660046119d0565b610831565b34801561023c57600080fd5b506101db61024b3660046119d0565b6108fe565b34801561025c57600080fd5b506101db6109cb565b34801561027157600080fd5b50600254610285906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6101db6102ab3660046119f4565b610a1e565b3480156102bc57600080fd5b506102c660055481565b6040519081526020016101b2565b3480156102e057600080fd5b506102c660045481565b3480156102f657600080fd5b50600054600160a01b900460ff1660405190151581526020016101b2565b34801561032057600080fd5b50600654610285906001600160a01b031681565b34801561034057600080fd5b50600354610285906001600160a01b031681565b34801561036057600080fd5b506101db610b39565b6101db6103773660046119f4565b610b8a565b34801561038857600080fd5b50600054610285906001600160a01b031681565b3480156103a857600080fd5b506101db6103b7366004611a71565b610ca6565b3480156103c857600080fd5b506101db6103d73660046119d0565b610e27565b3480156103e857600080fd5b506102c660075481565b6101db610400366004611b19565b610f59565b34801561041157600080fd5b506102c660085481565b34801561042757600080fd5b506102c6610436366004611c08565b611075565b34801561044757600080fd5b506101db610456366004611c4a565b6110ab565b6060602080526606726f7574657260465260606020f35b6001546001146104b65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064015b60405180910390fd5b6002600155600054600160a01b900460ff16156104fe5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b60008061050a8461136f565b915091508060ff166001146105505760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b60405163879fbedf60e01b815283151560048201526001600160a01b0385169063879fbedf90602401600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050508215158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a45050600180555050565b6001546001146106285760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff16156106705760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b600061067b8561136f565b9150508060ff166001146106c05760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b6106d06340d097c360e01b6114c4565b60405163f745586f60e01b81526001600160a01b0386169063f745586f903490610704908890889088903390600401611cb3565b6000604051808303818588803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b5050600180555050505050505050565b6000546001600160a01b0316331461078a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104ad565b600754821115801561079e57506008548111155b6107ea5760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d617860448201526064016104ad565b6005819055600482905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b0316331461087a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104ad565b6001600160a01b0381166108c25760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104ad565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146109475760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104ad565b6001600160a01b03811661098f5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104ad565b60068190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6000546001600160a01b03163314610a145760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104ad565b610a1c611604565b565b600154600114610a5d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff1615610aa55760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b6000610ab08561136f565b9150508060ff16600114610af55760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b610b056340d097c360e01b6114c4565b60405163d580725d60e01b81526001600160a01b0386169063d580725d903490610704908890889088903390600401611cf0565b6000546001600160a01b03163314610b825760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104ad565b610a1c6116a0565b600154600114610bc95760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff1615610c115760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b6000610c1c8561136f565b9150610c30905063044df8e760e41b6114c4565b8060ff16600114610c725760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b60405163d78147cb60e01b81526001600160a01b0386169063d78147cb903490610704908890889088903390600401611cf0565b600154600114610ce55760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff1615610d2d5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b600080610d398461136f565b915091508060ff16600114610d7f5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b6040516302fe530560e01b81526001600160a01b038516906302fe530590610dab9086906004016117dd565b600060405180830381600087803b158015610dc557600080fd5b505af1158015610dd9573d6000803e3d6000fd5b5050505082604051610deb9190611d3a565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a35050600180555050565b600154600114610e665760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff1615610eae5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b6000610eb98261136f565b9150508060ff16600114610efe5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b816001600160a01b031663c360a1b76040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f3957600080fd5b505af1158015610f4d573d6000803e3d6000fd5b50505050505060018055565b600154600114610f985760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff1615610fe05760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b6000610feb8561136f565b9150610fff905063044df8e760e41b6114c4565b8060ff166001146110415760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b604051630d6fa7b160e41b81526001600160a01b0386169063d6fa7b10903490610704908790899088903390600401611d56565b6000816340d097c360e01b0361108d57505060045490565b8163044df8e760e41b036110a357505060055490565b506000919050565b6001546001146110ea5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104ad565b6002600155600054600160a01b900460ff16156111325760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b60008061113e8461136f565b915091508060ff1660010361132e576001600160a01b038316158015906111cd57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca9190611ddc565b15155b61128f57836001600160a01b03163160000361122b5760405162461bcd60e51b815260206004820152600860248201527f4e4f5f46554e445300000000000000000000000000000000000000000000000060448201526064016104ad565b6006546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050506112f7565b600654604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a4611365565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104ad565b5050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e19190611ddc565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa15801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e9190611df5565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd9190611e24565b9050915091565b6003546001600160a01b03161561160157600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115489190611ddc565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa1580156115ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cf9190611ddc565b90508082146115e65763f7760f256000526004601cfd5b6003546115fe906001600160a01b0316333085611726565b50505b50565b600054600160a01b900460ff1661165d5760405162461bcd60e51b815260206004820152600860248201527f554e50415553454400000000000000000000000000000000000000000000000060448201526064016104ad565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff16156116e35760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104ad565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611696565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806117b25760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104ad565b5050505050565b60005b838110156117d45781810151838201526020016117bc565b50506000910152565b60208152600082518060208401526117fc8160408501602087016117b9565b601f01601f19169190910160400192915050565b6001600160a01b038116811461160157600080fd5b801515811461160157600080fd5b6000806040838503121561184657600080fd5b823561185181611810565b9150602083013561186181611825565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118ab576118ab61186c565b604052919050565b600067ffffffffffffffff8211156118cd576118cd61186c565b5060051b60200190565b600082601f8301126118e857600080fd5b813560206118fd6118f8836118b3565b611882565b82815260059290921b8401810191818101908684111561191c57600080fd5b8286015b848110156119375780358352918301918301611920565b509695505050505050565b6000806000806080858703121561195857600080fd5b843561196381611810565b9350602085013561197381611810565b925060408501359150606085013567ffffffffffffffff81111561199657600080fd5b6119a2878288016118d7565b91505092959194509250565b600080604083850312156119c157600080fd5b50508035926020909101359150565b6000602082840312156119e257600080fd5b81356119ed81611810565b9392505050565b60008060008060808587031215611a0a57600080fd5b8435611a1581611810565b93506020850135611a2581611810565b9250604085013567ffffffffffffffff80821115611a4257600080fd5b611a4e888389016118d7565b93506060870135915080821115611a6457600080fd5b506119a2878288016118d7565b60008060408385031215611a8457600080fd5b8235611a8f81611810565b915060208381013567ffffffffffffffff80821115611aad57600080fd5b818601915086601f830112611ac157600080fd5b813581811115611ad357611ad361186c565b611ae5601f8201601f19168501611882565b91508082528784828501011115611afb57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215611b2f57600080fd5b8435611b3a81611810565b935060208581013567ffffffffffffffff80821115611b5857600080fd5b611b6489838a016118d7565b95506040880135915080821115611b7a57600080fd5b818801915088601f830112611b8e57600080fd5b8135611b9c6118f8826118b3565b81815260059190911b8301840190848101908b831115611bbb57600080fd5b938501935b82851015611be2578435611bd381611810565b82529385019390850190611bc0565b965050506060880135925080831115611bfa57600080fd5b50506119a2878288016118d7565b600060208284031215611c1a57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146119ed57600080fd5b60008060408385031215611c5d57600080fd5b8235611c6881611810565b9150602083013561186181611810565b600081518084526020808501945080840160005b83811015611ca857815187529582019590820190600101611c8c565b509495945050505050565b60006001600160a01b03808716835285602084015260806040840152611cdc6080840186611c78565b915080841660608401525095945050505050565b60006001600160a01b03808716835260806020840152611d136080840187611c78565b8381036040850152611d258187611c78565b92505080841660608401525095945050505050565b60008251611d4c8184602087016117b9565b9190910192915050565b6080808252855190820181905260009060209060a0840190828901845b82811015611d985781516001600160a01b031684529284019290840190600101611d73565b50505083810382850152611dac8188611c78565b9150508281036040840152611dc18186611c78565b9150506001600160a01b038316606083015295945050505050565b600060208284031215611dee57600080fd5b5051919050565b60008060408385031215611e0857600080fd5b8251611e1381611810565b602084015190925061186181611825565b600060208284031215611e3657600080fd5b815160ff811681146119ed57600080fdfea164736f6c6343000810000a";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _maxFeeMint: PromiseOrValue<BigNumberish>,
    _maxFeeBurnt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      _maxFeeMint,
      _maxFeeBurnt,
      overrides || {}
    ) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _maxFeeMint: PromiseOrValue<BigNumberish>,
    _maxFeeBurnt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      _maxFeeMint,
      _maxFeeBurnt,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
