/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter1155, MADRouter1155Interface } from "../MADRouter1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory1155",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBalance",
        type: "uint256",
      },
    ],
    name: "creatorBatchMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBalance",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalBalance",
        type: "uint256",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180556703782dace9d9000060035560006004553480156200002657600080fd5b506040516200320a3803806200320a833981016040819052620000499162000183565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000ca57620000ca81620000d2565b5050620001c2565b6000546001600160a01b03163314620001205760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6001600160a01b03811681146200018057600080fd5b50565b600080604083850312156200019757600080fd5b8251620001a4816200016a565b6020840151909250620001b7816200016a565b809150509250929050565b61303880620001d26000396000f3fe6080604052600436106101ac5760003560e01c80635c975abb116100ec578063ab9acd571161008a578063cab2e41f11610064578063cab2e41f14610449578063cd22e7d514610469578063edc9e7a41461047c578063f940e3851461049c57600080fd5b8063ab9acd57146103f6578063ae6e7faf14610416578063c3b903c91461043657600080fd5b80638456cb59116100c65780638456cb591461038e5780638b9f1815146103a35780638da5cb5b146103b6578063a123c38d146103d657600080fd5b80635c975abb146103245780636a326ab11461034e578063785e9e861461036e57600080fd5b80633929a78411610159578063535f64e711610133578063535f64e7146102c457806356ead46b146102d7578063583fef34146102ea578063586ba7821461030e57600080fd5b80633929a784146102645780633f4ba83a146102775780635041c8e71461028c57600080fd5b806313af40351161018a57806313af40351461021157806317f9fad11461023157806331b73f1e1461025157600080fd5b806306fdde03146101b15780630a98eae5146101dc5780630b78f9c0146101f1575b600080fd5b3480156101bd57600080fd5b506101c66104bc565b6040516101d391906126a6565b60405180910390f35b6101ef6101ea3660046127c4565b6104d3565b005b3480156101fd57600080fd5b506101ef61020c366004612830565b610630565b34801561021d57600080fd5b506101ef61022c366004612852565b61072c565b34801561023d57600080fd5b506101ef61024c366004612876565b6107f9565b6101ef61025f3660046128af565b6108e9565b6101ef61027236600461292d565b610a46565b34801561028357600080fd5b506101ef610b6a565b34801561029857600080fd5b506002546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016101d3565b6101ef6102d23660046129e2565b610bbd565b6101ef6102e5366004612a5f565b610cd8565b3480156102f657600080fd5b5061030060045481565b6040519081526020016101d3565b34801561031a57600080fd5b5061030060035481565b34801561033057600080fd5b50600054600160a01b900460ff1660405190151581526020016101d3565b34801561035a57600080fd5b506101ef610369366004612852565b610dbc565b34801561037a57600080fd5b506005546102ac906001600160a01b031681565b34801561039a57600080fd5b506101ef610e67565b6101ef6103b13660046129e2565b610eb8565b3480156103c257600080fd5b506000546102ac906001600160a01b031681565b3480156103e257600080fd5b506101ef6103f1366004612aaf565b61101e565b34801561040257600080fd5b506101ef610411366004612b07565b61112c565b34801561042257600080fd5b506101ef610431366004612b52565b6112f9565b6101ef610444366004612bfa565b6114b7565b34801561045557600080fd5b506101ef610464366004612aaf565b61161a565b6101ef610477366004612c3b565b6116f5565b34801561048857600080fd5b50610300610497366004612d2a565b6118b2565b3480156104a857600080fd5b506101ef6104b7366004612876565b6118e8565b6060602080526606726f7574657260465260606020f35b6001546001146105175760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064015b60405180910390fd5b6002600155600054600160a01b900460ff161561055f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b600061056a85612072565b9150508060ff166001146105af5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b6105bf6340d097c360e01b6121c7565b60405163f745586f60e01b81526001600160a01b0386169063f745586f9034906105f3908890889088903390600401612d8f565b6000604051808303818588803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b5050600180555050505050505050565b6000546001600160a01b031633146106795760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b6802b5e3af16b18800008210801561069957506802b5e3af16b188000081105b6106e55760405162461bcd60e51b815260206004820152600c60248201527f496e76616c696420466565730000000000000000000000000000000000000000604482015260640161050e565b6004819055600382905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146107755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b6001600160a01b0381166107bd5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161050e565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146108425760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b6001600160a01b03811661088a5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161050e565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b1580156108cd57600080fd5b505af11580156108e1573d6000803e3d6000fd5b505050505050565b6001546001146109285760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff16156109705760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b600061097b85612072565b9150508060ff16600203610a04576109996340d097c360e01b6121c7565b60405163451f246360e01b81526001600160a01b0386169063451f24639034906109cd908890889088903390600401612dcc565b6000604051808303818588803b1580156109e657600080fd5b505af11580156109fa573d6000803e3d6000fd5b5050505050610a3b565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b505060018055505050565b600154600114610a855760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff1615610acd5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b6000610ad886612072565b9150508060ff16600203610a0457610af66340d097c360e01b6121c7565b6040516307176a1360e51b81526001600160a01b0387169063e2ed4260903490610b2c9089908990899089903390600401612e12565b6000604051808303818588803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b505050505050506001805550505050565b6000546001600160a01b03163314610bb35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b610bbb612301565b565b600154600114610bfc5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff1615610c445760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b6000610c4f85612072565b9150508060ff16600114610c945760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b610ca46340d097c360e01b6121c7565b60405163d580725d60e01b81526001600160a01b0386169063d580725d9034906105f3908890889088903390600401612e8b565b600154600114610d175760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff1615610d5f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b6000610d6a85612072565b9150508060ff16600203610a0457610d886340d097c360e01b6121c7565b6040516361abec4f60e01b81526001600160a01b038616906361abec4f9034906109cd908890889088903390600401612ed5565b6000546001600160a01b03163314610e055760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314610eb05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161050e565b610bbb61239d565b600154600114610ef75760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff1615610f3f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b6000610f4a85612072565b9150610f5e905063044df8e760e41b6121c7565b8060ff16600114610fea578060ff16600214610fb65760028160ff1611610fb65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b60405163d78147cb60e01b81526001600160a01b0386169063d78147cb9034906109cd908890889088903390600401612e8b565b60405163d78147cb60e01b81526001600160a01b0386169063d78147cb9034906105f3908890889088903390600401612e8b565b60015460011461105d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff16156110a55760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b60006110b085612072565b9150508060ff16600203610a04576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b50505050610a3b565b60015460011461116b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff16156111b35760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b60038160ff16106111f55760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b60008061120185612072565b9150915060018360ff1610156112555761121c818686612423565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4610a3b565b8260ff166001036112a45761126b818686612502565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4610a3b565b8260ff16600203610a3b576112ba81868661253b565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b6001546001146113385760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff16156113805760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b60008061138c84612072565b915091508060ff1660010361143e576040516302fe530560e01b81526001600160a01b038516906302fe5305906113c79086906004016126a6565b600060405180830381600087803b1580156113e157600080fd5b505af11580156113f5573d6000803e3d6000fd5b50505050826040516114079190612f0e565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a36114ad565b8060ff16600203611475576040516302fe530560e01b81526001600160a01b038516906302fe5305906113c79086906004016126a6565b60028160ff161115610a04576040516302fe530560e01b81526001600160a01b038516906302fe5305906113c79086906004016126a6565b5050600180555050565b6001546001146114f65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff161561153e5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b600061154984612072565b91505060ff81161561158c5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b61159660de612574565b6115a66340d097c360e01b6121c7565b60405163107234eb60e11b81526001600160a01b038481166004830152602482018490523360448301528516906320e469d69034906064016000604051808303818588803b1580156115f757600080fd5b505af115801561160b573d6000803e3d6000fd5b50506001805550505050505050565b6001546001146116595760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff16156116a15760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b60006116ac85612072565b9150508060ff16600203610a04576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c19186906064016110f5565b6001546001146117345760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff161561177c5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b600061178785612072565b915061179b905063044df8e760e41b6121c7565b60018160ff1610611832578060ff166001146117fe578060ff166002146117fe5760028160ff16116117fe5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161050e565b604051630d6fa7b160e41b81526001600160a01b0386169063d6fa7b109034906109cd908790899088903390600401612f2a565b846001600160a01b031663b8ce670d348560008151811061185557611855612fb0565b60200260200101518560008151811061187057611870612fb0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03909216600483015260248201523360448201526064016105f3565b6000816340d097c360e01b036118ca57505060035490565b8163044df8e760e41b036118e057505060045490565b506000919050565b6001546001146119275760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161050e565b6002600155600054600160a01b900460ff161561196f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b60008061197b84612072565b9150915060018160ff161015611b3a576001600160a01b03831615801590611a0b57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a089190612fc6565b15155b611aac57836001600160a01b031631600003611a545760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161050e565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a8f57600080fd5b505af1158015611aa3573d6000803e3d6000fd5b50505050611b07565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611aee57600080fd5b505af1158015611b02573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600103611cf4576001600160a01b03831615801590611bc557506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc29190612fc6565b15155b611c6657836001600160a01b031631600003611c0e5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161050e565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611c4957600080fd5b505af1158015611c5d573d6000803e3d6000fd5b50505050611cc1565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611ca857600080fd5b505af1158015611cbc573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600203611eae576001600160a01b03831615801590611d7f57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611d58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7c9190612fc6565b15155b611e2057836001600160a01b031631600003611dc85760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161050e565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611e0357600080fd5b505af1158015611e17573d6000803e3d6000fd5b50505050611e7b565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611e6257600080fd5b505af1158015611e76573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff1611156114ad576001600160a01b03831615801590611f3a57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f379190612fc6565b15155b611fdb57836001600160a01b031631600003611f835760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161050e565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611fbe57600080fd5b505af1158015611fd2573d6000803e3d6000fd5b50505050612036565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561201d57600080fd5b505af1158015612031573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa1580156120c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e49190612fc6565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa15801561212d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121519190612fdf565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa15801561219c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c0919061300e565b9050915091565b6005546001600160a01b0316156122fe57600554604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015612227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224b9190612fc6565b604051633b7279e960e21b81526001600160e01b031984166004820152909150600090309063edc9e7a490602401602060405180830381865afa158015612296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ba9190612fc6565b90506122c582612574565b6122ce81612574565b8082146122e35763f7760f256000526004601cfd5b6005546122fb906001600160a01b03163330856125ce565b50505b50565b600054600160a01b900460ff1661235a5760405162461bcd60e51b815260206004820152600860248201527f554e504155534544000000000000000000000000000000000000000000000000604482015260640161050e565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff16156123e05760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161050e565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001612393565b60018360ff1610156124905760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b15801561247357600080fd5b505af1158015612487573d6000803e3d6000fd5b505050506122fb565b8260ff166001036124c95760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612459565b8260ff16600203610a045760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612459565b8260ff16600203610a04576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f490602401612459565b8260ff16600203610a0457604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b390602401612459565b6122fe8160405160240161258a91815260200190565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663f5b1bba960e01b179052612661565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061265a5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161050e565b5050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60005b8381101561269d578181015183820152602001612685565b50506000910152565b60208152600082518060208401526126c5816040850160208701612682565b601f01601f19169190910160400192915050565b6001600160a01b03811681146122fe57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561272d5761272d6126ee565b604052919050565b600067ffffffffffffffff82111561274f5761274f6126ee565b5060051b60200190565b600082601f83011261276a57600080fd5b8135602061277f61277a83612735565b612704565b82815260059290921b8401810191818101908684111561279e57600080fd5b8286015b848110156127b957803583529183019183016127a2565b509695505050505050565b600080600080608085870312156127da57600080fd5b84356127e5816126d9565b935060208501356127f5816126d9565b925060408501359150606085013567ffffffffffffffff81111561281857600080fd5b61282487828801612759565b91505092959194509250565b6000806040838503121561284357600080fd5b50508035926020909101359150565b60006020828403121561286457600080fd5b813561286f816126d9565b9392505050565b6000806040838503121561288957600080fd5b8235612894816126d9565b915060208301356128a4816126d9565b809150509250929050565b600080600080608085870312156128c557600080fd5b84356128d0816126d9565b9350602085013567ffffffffffffffff808211156128ed57600080fd5b6128f988838901612759565b9450604087013591508082111561290f57600080fd5b5061291c87828801612759565b949793965093946060013593505050565b60008060008060006080868803121561294557600080fd5b8535612950816126d9565b9450602086013567ffffffffffffffff8082111561296d57600080fd5b818801915088601f83011261298157600080fd5b81358181111561299057600080fd5b8960208260051b85010111156129a557600080fd5b6020830196508095505060408801359150808211156129c357600080fd5b506129d088828901612759565b95989497509295606001359392505050565b600080600080608085870312156129f857600080fd5b8435612a03816126d9565b93506020850135612a13816126d9565b9250604085013567ffffffffffffffff80821115612a3057600080fd5b612a3c88838901612759565b93506060870135915080821115612a5257600080fd5b5061282487828801612759565b60008060008060808587031215612a7557600080fd5b8435612a80816126d9565b935060208501359250604085013567ffffffffffffffff811115612aa357600080fd5b61291c87828801612759565b60008060008060808587031215612ac557600080fd5b8435612ad0816126d9565b966020860135965060408601359560600135945092505050565b80151581146122fe57600080fd5b60ff811681146122fe57600080fd5b600080600060608486031215612b1c57600080fd5b8335612b27816126d9565b92506020840135612b3781612aea565b91506040840135612b4781612af8565b809150509250925092565b60008060408385031215612b6557600080fd5b8235612b70816126d9565b915060208381013567ffffffffffffffff80821115612b8e57600080fd5b818601915086601f830112612ba257600080fd5b813581811115612bb457612bb46126ee565b612bc6601f8201601f19168501612704565b91508082528784828501011115612bdc57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080600060608486031215612c0f57600080fd5b8335612c1a816126d9565b92506020840135612c2a816126d9565b929592945050506040919091013590565b60008060008060808587031215612c5157600080fd5b8435612c5c816126d9565b935060208581013567ffffffffffffffff80821115612c7a57600080fd5b612c8689838a01612759565b95506040880135915080821115612c9c57600080fd5b818801915088601f830112612cb057600080fd5b8135612cbe61277a82612735565b81815260059190911b8301840190848101908b831115612cdd57600080fd5b938501935b82851015612d04578435612cf5816126d9565b82529385019390850190612ce2565b965050506060880135925080831115612d1c57600080fd5b505061282487828801612759565b600060208284031215612d3c57600080fd5b81356001600160e01b03198116811461286f57600080fd5b600081518084526020808501945080840160005b83811015612d8457815187529582019590820190600101612d68565b509495945050505050565b60006001600160a01b03808716835285602084015260806040840152612db86080840186612d54565b915080841660608401525095945050505050565b608081526000612ddf6080830187612d54565b8281036020840152612df18187612d54565b9150508360408301526001600160a01b038316606083015295945050505050565b6080808252810185905260008660a08301825b88811015612e55578235612e38816126d9565b6001600160a01b0316825260209283019290910190600101612e25565b508381036020850152612e688188612d54565b925050508360408301526001600160a01b03831660608301529695505050505050565b60006001600160a01b03808716835260806020840152612eae6080840187612d54565b8381036040850152612ec08187612d54565b92505080841660608401525095945050505050565b848152608060208201526000612eee6080830186612d54565b90508360408301526001600160a01b038316606083015295945050505050565b60008251612f20818460208701612682565b9190910192915050565b6080808252855190820181905260009060209060a0840190828901845b82811015612f6c5781516001600160a01b031684529284019290840190600101612f47565b50505083810382850152612f808188612d54565b9150508281036040840152612f958186612d54565b9150506001600160a01b038316606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612fd857600080fd5b5051919050565b60008060408385031215612ff257600080fd5b8251612ffd816126d9565b60208401519092506128a481612aea565b60006020828403121561302057600080fd5b815161286f81612af856fea164736f6c6343000810000a";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
