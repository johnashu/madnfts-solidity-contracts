/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b5060405162003c9738038062003c978339810160408190526200003991620001b8565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35060076200009488826200037a565b5060088690556009859055600a8054610100600160a81b0319166101006001600160a01b03878116820292909217928390556001600160601b0386166002819055600380549290940483166001600160a01b031992831617909355600c80549091169184169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505062000446565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200019b57600080fd5b919050565b80516001600160601b03811681146200019b57600080fd5b600080600080600080600060e0888a031215620001d457600080fd5b87516001600160401b0380821115620001ec57600080fd5b818a0191508a601f8301126200020157600080fd5b8151818111156200021657620002166200016d565b604051601f8201601f19908116603f011681019083821181831017156200024157620002416200016d565b81604052828152602093508d848487010111156200025e57600080fd5b600091505b8282101562000282578482018401518183018501529083019062000263565b6000848483010152809b50505050808a01519750505060408801519450620002ad6060890162000183565b9350620002bd60808901620001a0565b9250620002cd60a0890162000183565b9150620002dd60c0890162000183565b905092959891949750929550565b600181811c908216806200030057607f821691505b6020821081036200032157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037557600081815260208120601f850160051c81016020861015620003505750805b601f850160051c820191505b8181101562000371578281556001016200035c565b5050505b505050565b81516001600160401b038111156200039657620003966200016d565b620003ae81620003a78454620002eb565b8462000327565b602080601f831160018114620003e65760008415620003cd5750858301515b600019600386901b1c1916600185901b17855562000371565b600085815260208120601f198616915b828110156200041757888601518255948401946001909101908401620003f6565b5085821015620004365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61384180620004566000396000f3fe6080604052600436106101e15760003560e01c8063879fbedf11610102578063d5abeb0111610095578063f23a6e6111610064578063f23a6e61146105d3578063f242432a14610600578063f4f3b20014610620578063f745586f1461064057600080fd5b8063d5abeb011461055f578063d6fa7b1014610575578063d78147cb14610588578063e985e9c51461059b57600080fd5b8063a22cb465116100d1578063a22cb465146104d1578063bc197c81146104f1578063d351cfdc14610539578063d580725d1461054c57600080fd5b8063879fbedf146104665780638da5cb5b146104865780638fc3b549146104a6578063a035b1fe146104bb57600080fd5b806322ab47a11161017a5780633cd8045e116101495780633cd8045e146103c75780634e1273f4146104045780637754305c14610431578063785e9e861461044657600080fd5b806322ab47a1146103395780632a55205a146103535780632eb2c2d6146103925780633ccfd60b146103b257600080fd5b80630e89341c116101b65780630e89341c146102c457806313af4035146102f157806318160ddd146103115780631b2ef1ca1461032657600080fd5b8062f74867146101e6578062fdd58e1461023157806301ffc9a71461027257806302fe5305146102a2575b600080fd5b3480156101f257600080fd5b5061021e610201366004612b44565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023d57600080fd5b5061021e61024c366004612b74565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027e57600080fd5b5061029261028d366004612bb6565b610653565b6040519015158152602001610228565b3480156102ae57600080fd5b506102c26102bd366004612c21565b6106c0565b005b3480156102d057600080fd5b506102e46102df366004612cb6565b61075c565b6040516102289190612d1f565b3480156102fd57600080fd5b506102c261030c366004612d32565b6107a8565b34801561031d57600080fd5b5061021e610855565b6102c2610334366004612d4f565b610865565b34801561034557600080fd5b50600a546102929060ff1681565b34801561035f57600080fd5b5061037361036e366004612d4f565b610a2c565b604080516001600160a01b039093168352602083019190915201610228565b34801561039e57600080fd5b506102c26103ad366004612dff565b610a62565b3480156103be57600080fd5b506102c2610e57565b3480156103d357600080fd5b50600a546103ec9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610228565b34801561041057600080fd5b5061042461041f366004612ebe565b61116f565b6040516102289190612f65565b34801561043d57600080fd5b506102e4611299565b34801561045257600080fd5b50600c546103ec906001600160a01b031681565b34801561047257600080fd5b506102c2610481366004612f88565b61132b565b34801561049257600080fd5b506004546103ec906001600160a01b031681565b3480156104b257600080fd5b50600b5461021e565b3480156104c757600080fd5b5061021e60085481565b3480156104dd57600080fd5b506102c26104ec366004612fa3565b6113b1565b3480156104fd57600080fd5b5061052061050c366004612dff565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610228565b6102c261054736600461305e565b61141b565b6102c261055a3660046130c2565b611609565b34801561056b57600080fd5b5061021e60095481565b6102c261058336600461314b565b611716565b6102c26105963660046130c2565b61186b565b3480156105a757600080fd5b506102926105b6366004613242565b600060208181529281526040808220909352908152205460ff1681565b3480156105df57600080fd5b506105206105ee366004613270565b63f23a6e6160e01b9695505050505050565b34801561060c57600080fd5b506102c261061b366004613270565b611951565b34801561062c57600080fd5b506102c261063b366004612d32565b611c62565b6102c261064e3660046132ec565b611fe4565b60006301ffc9a760e01b6001600160e01b0319831614806106845750636cdb3d1360e11b6001600160e01b03198316145b8061069f57506303a24d0760e21b6001600160e01b03198316145b806106ba575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b0316331461070e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600761071a82826133bc565b5080604051610729919061347c565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b548211156107765763bad086ea6000526004601cfd5b6007610781836120e2565b604051602001610792929190613498565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107f15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061086060065490565b905090565b6005546001146108a45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610705565b6002600555600a5460ff166108cc576040516316851fc760e11b815260040160405180910390fd5b6108d6818361355d565b60095481600b546108e7919061357c565b11156109065760405163d05cb60960e01b815260040160405180910390fd5b600854600c54849033906000906001600160a01b0316610926573461099a565b600c54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061358f565b9050806109a7848661355d565b146109c55760405163f7760f2560e01b815260040160405180910390fd5b6109d0336002612131565b60005b87811015610a07576109ff336109e96001612250565b896040518060200160405280600081525061227c565b6001016109d3565b87811015610a1d5763dfb035c96000526004601cfd5b50506001600555505050505050565b6003546002546001600160a01b039091169060009061271090610a4f908561355d565b610a5991906135a8565b90509250929050565b848314610aa35760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b336001600160a01b0389161480610adb57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610b185760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610705565b60008060005b87811015610cc757888882818110610b3857610b386135ca565b905060200201359250868682818110610b5357610b536135ca565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610bcf5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610c325760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610b1e565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610d1b949392919061362b565b60405180910390a46001600160a01b0389163b15610e015760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610d6f9033908f908e908e908e908e908e908e90600401613686565b6020604051808303816000875af1158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db291906136ea565b6001600160e01b03191614610dfc5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b610e4b565b6001600160a01b038916610e4b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b50505050505050505050565b6004546001600160a01b03163314610ea05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f19919061358f565b905060008167ffffffffffffffff811115610f3657610f36612bda565b604051908082528060200260200182016040528015610f5f578160200160208202803683370190505b50905060008267ffffffffffffffff811115610f7d57610f7d612bda565b604051908082528060200260200182016040528015610fa6578160200160208202803683370190505b5090504760005b8481101561111857600a54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110289190613707565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561107e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a2919061358f565b9050818684815181106110b7576110b76135ca565b6001600160a01b03909216602092830291909101909101526127106110dd82606461355d565b6110e7908661355d565b6110f191906135a8565b858481518110611103576111036135ca565b60209081029190910101525050600101610fad565b60005b858110156111675761115f858281518110611138576111386135ca565b6020026020010151858381518110611152576111526135ca565b6020026020010151612425565b60010161111b565b505050505050565b60608382146111b25760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b8367ffffffffffffffff8111156111cb576111cb612bda565b6040519080825280602002602001820160405280156111f4578160200160208202803683370190505b50905060005b848110156112905761126b868683818110611217576112176135ca565b905060200201602081019061122c9190612d32565b85858481811061123e5761123e6135ca565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061127d5761127d6135ca565b60209081029190910101526001016111fa565b50949350505050565b6060600780546112a89061333c565b80601f01602080910402602001604051908101604052809291908181526020018280546112d49061333c565b80156113215780601f106112f657610100808354040283529160200191611321565b820191906000526020600020905b81548152906001019060200180831161130457829003601f168201915b5050505050905090565b6004546001600160a01b031633146113745760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60055460011461145a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610705565b6002600555600a5460ff16611482576040516316851fc760e11b815260040160405180910390fd5b80518251146114d35760405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e47544800000000000000000000000000000000006044820152606401610705565b600c546000906001600160a01b03166114ec573461155e565b600c54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e919061358f565b835190915061156d8183612480565b600c546001600160a01b03161561159657600c54611596906001600160a01b03163330856124e1565b60005b818110156115cc576115c38482815181106115b6576115b66135ca565b6020026020010151612250565b50600101611599565b818110156115e25763dfb035c96000526004601cfd5b6115fd33868660405180602001604052806000815250612574565b50506001600555505050565b6004546001600160a01b031633146116525760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b61165b826126d4565b60095481600b5461166c919061357c565b111561168b5760405163d05cb60960e01b815260040160405180910390fd5b611696826000612131565b83516000905b808210156116dc576116d18583815181106116b9576116b96135ca565b6020026020010151600661271990919063ffffffff16565b81600101915061169c565b808210156116f25763dfb035c96000526004601cfd5b61170d87878760405180602001604052806000815250612574565b50505050505050565b6004546001600160a01b0316331461175f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b61176a816001612131565b825184516000919081148015611781575083518551145b6117bf5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b80821015611855576117f48483815181106117dc576117dc6135ca565b6020026020010151600661272090919063ffffffff16565b61184a868381518110611809576118096135ca565b6020026020010151868481518110611823576118236135ca565b602002602001015186858151811061183d5761183d6135ca565b602002602001015161273a565b8160010191506117bf565b808210156111675763dfb035c96000526004601cfd5b6004546001600160a01b031633146118b45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b81518351146118f75760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b611902816001612131565b82516000905b80821015611930576119258483815181106117dc576117dc6135ca565b816001019150611908565b808210156119465763dfb035c96000526004601cfd5b611167868686612822565b336001600160a01b038716148061198957506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119c65760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038a168452909152902054611a225760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611a855760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611ab790849061357c565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611aee908490613724565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611c185760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611b869033908b908a908a908a908a90600401613737565b6020604051808303816000875af1158015611ba5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc991906136ea565b6001600160e01b03191614611c135760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b611167565b6001600160a01b0385166111675760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b6004546001600160a01b03163314611cab5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d24919061358f565b905060008167ffffffffffffffff811115611d4157611d41612bda565b604051908082528060200260200182016040528015611d6a578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d8857611d88612bda565b604051908082528060200260200182016040528015611db1578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e22919061358f565b90505b84821015611f9457600a54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea09190613707565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1a919061358f565b905081868581518110611f2f57611f2f6135ca565b6001600160a01b0390921660209283029190910190910152612710611f5582606461355d565b611f5f908561355d565b611f6991906135a8565b858581518110611f7b57611f7b6135ca565b6020026020010181815250508360010193505050611e25565b60005b8581101561170d57611fdc87868381518110611fb557611fb56135ca565b6020026020010151868481518110611fcf57611fcf6135ca565b60200260200101516129ca565b600101611f97565b6004546001600160a01b0316331461202d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b82612037836126d4565b612041919061355d565b60095481600b54612052919061357c565b11156120715760405163d05cb60960e01b815260040160405180910390fd5b61207c826000612131565b60005b848110156120cc576120c4866120956001612250565b8684815181106120a7576120a76135ca565b60200260200101516040518060200160405280600081525061227c565b60010161207f565b848110156111675763dfb035c96000526004601cfd5b604080516080810191829052607f0190826030600a8206018353600a90045b801561211f57600183039250600a81066030018353600a9004612101565b50819003601f19909101908152919050565b600c546000906001600160a01b031661214a57346121be565b600c54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa15801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be919061358f565b9050336001600160a01b03841614806121e05750600c546001600160a01b0316155b1561224b578160ff16600003612206576122016340d097c360e01b82612a50565b612222565b8160ff166001036122225761222263044df8e760e41b82612a50565b600c546001600160a01b03161561224b57600c5461224b906001600160a01b03168430846124e1565b505050565b600061225b82612b05565b5081600b600082825461226e919061357c565b9091555050600b5492915050565b60008381526001602090815260408083206001600160a01b0388168452909152812080548492906122ae90849061357c565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156123d55760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061234390339060009089908990899060040161377c565b6020604051808303816000875af1158015612362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238691906136ea565b6001600160e01b031916146123d05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b61241f565b6001600160a01b03841661241f5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b50505050565b600080600080600085875af190508061224b5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610705565b808260085461248f919061355d565b146124ad5760405163f7760f2560e01b815260040160405180910390fd5b60095482600b546124be919061357c565b11156124dd5760405163d05cb60960e01b815260040160405180910390fd5b5050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061256d5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610705565b5050505050565b82516000805b828110156125ea57858181518110612594576125946135ca565b602002602001015191508481815181106125b0576125b06135ca565b6020908102919091018101516000848152600180845260408083206001600160a01b038d168452909452929020805490910190550161257a565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888860405161263b9291906137b4565b60405180910390a46001600160a01b0386163b1561268a5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611b869033906000908b908b908b906004016137e2565b6001600160a01b0386166111675760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b8051600090815b81811015612712578381815181106126f5576126f56135ca565b602002602001015183612708919061357c565b92506001016126db565b5050919050565b8154019055565b8154806127355763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561279d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906127cf908490613724565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b0383166128785760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610705565b81516000805b8281101561296a57848181518110612898576128986135ca565b602002602001015191508381815181106128b4576128b46135ca565b60209081029190910181015160008481526001835260408082206001600160a01b038b1683529093529190912054101561291d5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b83818151811061292f5761292f6135ca565b6020908102919091018101516000848152600180845260408083206001600160a01b038c16845290945292902080549190910390550161287e565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516129bb9291906137b4565b60405180910390a45050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061241f5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610705565b6004546001600160a01b0316803b63ffffffff8116600003612a725750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aee919061358f565b905080841461256d5763f7760f256000526004601cfd5b6000612b146006838154019055565b6006546106ba565b6001600160a01b0381168114612b3157600080fd5b50565b8035612b3f81612b1c565b919050565b60008060408385031215612b5757600080fd5b823591506020830135612b6981612b1c565b809150509250929050565b60008060408385031215612b8757600080fd5b8235612b9281612b1c565b946020939093013593505050565b6001600160e01b031981168114612b3157600080fd5b600060208284031215612bc857600080fd5b8135612bd381612ba0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612c1957612c19612bda565b604052919050565b60006020808385031215612c3457600080fd5b823567ffffffffffffffff80821115612c4c57600080fd5b818501915085601f830112612c6057600080fd5b813581811115612c7257612c72612bda565b612c84601f8201601f19168501612bf0565b91508082528684828501011115612c9a57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612cc857600080fd5b5035919050565b60005b83811015612cea578181015183820152602001612cd2565b50506000910152565b60008151808452612d0b816020860160208601612ccf565b601f01601f19169290920160200192915050565b602081526000612bd36020830184612cf3565b600060208284031215612d4457600080fd5b8135612bd381612b1c565b60008060408385031215612d6257600080fd5b50508035926020909101359150565b60008083601f840112612d8357600080fd5b50813567ffffffffffffffff811115612d9b57600080fd5b6020830191508360208260051b8501011115612db657600080fd5b9250929050565b60008083601f840112612dcf57600080fd5b50813567ffffffffffffffff811115612de757600080fd5b602083019150836020828501011115612db657600080fd5b60008060008060008060008060a0898b031215612e1b57600080fd5b8835612e2681612b1c565b97506020890135612e3681612b1c565b9650604089013567ffffffffffffffff80821115612e5357600080fd5b612e5f8c838d01612d71565b909850965060608b0135915080821115612e7857600080fd5b612e848c838d01612d71565b909650945060808b0135915080821115612e9d57600080fd5b50612eaa8b828c01612dbd565b999c989b5096995094979396929594505050565b60008060008060408587031215612ed457600080fd5b843567ffffffffffffffff80821115612eec57600080fd5b612ef888838901612d71565b90965094506020870135915080821115612f1157600080fd5b50612f1e87828801612d71565b95989497509550505050565b600081518084526020808501945080840160005b83811015612f5a57815187529582019590820190600101612f3e565b509495945050505050565b602081526000612bd36020830184612f2a565b80358015158114612b3f57600080fd5b600060208284031215612f9a57600080fd5b612bd382612f78565b60008060408385031215612fb657600080fd5b8235612fc181612b1c565b9150610a5960208401612f78565b600067ffffffffffffffff821115612fe957612fe9612bda565b5060051b60200190565b600082601f83011261300457600080fd5b8135602061301961301483612fcf565b612bf0565b82815260059290921b8401810191818101908684111561303857600080fd5b8286015b84811015613053578035835291830191830161303c565b509695505050505050565b6000806040838503121561307157600080fd5b823567ffffffffffffffff8082111561308957600080fd5b61309586838701612ff3565b935060208501359150808211156130ab57600080fd5b506130b885828601612ff3565b9150509250929050565b600080600080608085870312156130d857600080fd5b84356130e381612b1c565b9350602085013567ffffffffffffffff8082111561310057600080fd5b61310c88838901612ff3565b9450604087013591508082111561312257600080fd5b5061312f87828801612ff3565b925050606085013561314081612b1c565b939692955090935050565b6000806000806080858703121561316157600080fd5b843567ffffffffffffffff8082111561317957600080fd5b818701915087601f83011261318d57600080fd5b8135602061319d61301483612fcf565b82815260059290921b8401810191818101908b8411156131bc57600080fd5b948201945b838610156131e35785356131d481612b1c565b825294820194908201906131c1565b985050880135925050808211156131f957600080fd5b61320588838901612ff3565b9450604087013591508082111561321b57600080fd5b5061322887828801612ff3565b92505061323760608601612b34565b905092959194509250565b6000806040838503121561325557600080fd5b823561326081612b1c565b91506020830135612b6981612b1c565b60008060008060008060a0878903121561328957600080fd5b863561329481612b1c565b955060208701356132a481612b1c565b94506040870135935060608701359250608087013567ffffffffffffffff8111156132ce57600080fd5b6132da89828a01612dbd565b979a9699509497509295939492505050565b6000806000806080858703121561330257600080fd5b843561330d81612b1c565b935060208501359250604085013567ffffffffffffffff81111561333057600080fd5b61312f87828801612ff3565b600181811c9082168061335057607f821691505b60208210810361337057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561224b57600081815260208120601f850160051c8101602086101561339d5750805b601f850160051c820191505b81811015611167578281556001016133a9565b815167ffffffffffffffff8111156133d6576133d6612bda565b6133ea816133e4845461333c565b84613376565b602080601f83116001811461341f57600084156134075750858301515b600019600386901b1c1916600185901b178555611167565b600085815260208120601f198616915b8281101561344e5788860151825594840194600190910190840161342f565b508582101561346c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161348e818460208701612ccf565b9190910192915050565b60008084546134a68161333c565b600182811680156134be57600181146134d357613502565b60ff1984168752821515830287019450613502565b8860005260208060002060005b858110156134f95781548a8201529084019082016134e0565b50505082870194505b505050508351613516818360208801612ccf565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561357757613577613547565b500290565b808201808211156106ba576106ba613547565b6000602082840312156135a157600080fd5b5051919050565b6000826135c557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561361257600080fd5b8260051b80836020870137939093016020019392505050565b60408152600061363f6040830186886135e0565b82810360208401526136528185876135e0565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526136b360a08301888a6135e0565b82810360608401526136c68187896135e0565b905082810360808401526136db81858761365d565b9b9a5050505050505050505050565b6000602082840312156136fc57600080fd5b8151612bd381612ba0565b60006020828403121561371957600080fd5b8151612bd381612b1c565b818103818111156106ba576106ba613547565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261377060a08301848661365d565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261365260a0830184612cf3565b6040815260006137c76040830185612f2a565b82810360208401526137d98185612f2a565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261380e60a0830186612f2a565b82810360608401526138208186612f2a565b905082810360808401526137708185612cf356fea164736f6c6343000810000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
