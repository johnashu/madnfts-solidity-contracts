/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b506040516200391a3803806200391a8339810160408190526200003991620001a8565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600762000094878262000356565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000422565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200018b57600080fd5b919050565b80516001600160601b03811681146200018b57600080fd5b60008060008060008060c08789031215620001c257600080fd5b86516001600160401b0380821115620001da57600080fd5b818901915089601f830112620001ef57600080fd5b8151818111156200020457620002046200015d565b604051601f8201601f19908116603f011681019083821181831017156200022f576200022f6200015d565b81604052828152602093508c848487010111156200024c57600080fd5b600091505b8282101562000270578482018401518183018501529083019062000251565b6000848483010152809a505050508089015196505050604087015193506200029b6060880162000173565b9250620002ab6080880162000190565b9150620002bb60a0880162000173565b90509295509295509295565b600181811c90821680620002dc57607f821691505b602082108103620002fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035157600081815260208120601f850160051c810160208610156200032c5750805b601f850160051c820191505b818110156200034d5782815560010162000338565b5050505b505050565b81516001600160401b038111156200037257620003726200015d565b6200038a81620003838454620002c7565b8462000303565b602080601f831160018114620003c25760008415620003a95750858301515b600019600386901b1c1916600185901b1785556200034d565b600085815260208120601f198616915b82811015620003f357888601518255948401946001909101908401620003d2565b5085821015620004125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6134e880620004326000396000f3fe6080604052600436106101d65760003560e01c80636b20c45411610102578063a22cb46511610095578063e985e9c511610064578063e985e9c514610583578063f23a6e61146105bb578063f242432a146105e8578063f4f3b2001461060857600080fd5b8063a22cb465146104f2578063bc197c8114610512578063d351cfdc1461055a578063d5abeb011461056d57600080fd5b80638da5cb5b116100d15780638da5cb5b146104945780638e959323146104b45780638fc3b549146104c7578063a035b1fe146104dc57600080fd5b80636b20c454146104395780637754305c1461044c57806381b0b75614610461578063879fbedf1461047457600080fd5b80631b2ef1ca1161017a5780633512639c116101495780633512639c146103a75780633ccfd60b146103ba5780633cd8045e146103cf5780634e1273f41461040c57600080fd5b80631b2ef1ca1461031b57806322ab47a11461032e5780632a55205a146103485780632eb2c2d61461038757600080fd5b806302fe5305116101b657806302fe5305146102975780630e89341c146102b957806313af4035146102e657806318160ddd1461030657600080fd5b8062f74867146101db578062fdd58e1461022657806301ffc9a714610267575b600080fd5b3480156101e757600080fd5b506102136101f6366004612844565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023257600080fd5b50610213610241366004612874565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027357600080fd5b506102876102823660046128b6565b610628565b604051901515815260200161021d565b3480156102a357600080fd5b506102b76102b2366004612921565b610695565b005b3480156102c557600080fd5b506102d96102d43660046129b6565b610731565b60405161021d9190612a1f565b3480156102f257600080fd5b506102b7610301366004612a32565b61077d565b34801561031257600080fd5b5061021361082a565b6102b7610329366004612a4f565b61083a565b34801561033a57600080fd5b50600a546102879060ff1681565b34801561035457600080fd5b50610368610363366004612a4f565b610960565b604080516001600160a01b03909316835260208301919091520161021d565b34801561039357600080fd5b506102b76103a2366004612aff565b610996565b6102b76103b5366004612c4d565b610d8b565b3480156103c657600080fd5b506102b7610e9c565b3480156103db57600080fd5b50600a546103f49061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b34801561041857600080fd5b5061042c610427366004612cc3565b6111ac565b60405161021d9190612d6a565b6102b7610447366004612c4d565b6112d6565b34801561045857600080fd5b506102d96113e0565b6102b761046f366004612d7d565b611472565b34801561048057600080fd5b506102b761048f366004612e3f565b6115b4565b3480156104a057600080fd5b506004546103f4906001600160a01b031681565b6102b76104c2366004612e5a565b61163a565b3480156104d357600080fd5b50600b54610213565b3480156104e857600080fd5b5061021360085481565b3480156104fe57600080fd5b506102b761050d366004612ea9565b61173b565b34801561051e57600080fd5b5061054161052d366004612aff565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161021d565b6102b7610568366004612ed5565b6117a5565b34801561057957600080fd5b5061021360095481565b34801561058f57600080fd5b5061028761059e366004612f39565b600060208181529281526040808220909352908152205460ff1681565b3480156105c757600080fd5b506105416105d6366004612f67565b63f23a6e6160e01b9695505050505050565b3480156105f457600080fd5b506102b7610603366004612f67565b6118da565b34801561061457600080fd5b506102b7610623366004612a32565b611beb565b60006301ffc9a760e01b6001600160e01b0319831614806106595750636cdb3d1360e11b6001600160e01b03198316145b8061067457506303a24d0760e21b6001600160e01b03198316145b8061068f575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106e35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60076106ef8282613063565b50806040516106fe9190613123565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561074b5763bad086ea6000526004601cfd5b600761075683611f76565b60405160200161076792919061313f565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107c65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061083560065490565b905090565b6005546001146108795760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff166108a1576040516316851fc760e11b815260040160405180910390fd5b6108ab8183613204565b60095481600b546108bc9190613223565b11156108db5760405163d05cb60960e01b815260040160405180910390fd5b60085483346108ea8284613204565b146109085760405163f7760f2560e01b815260040160405180910390fd5b60005b8581101561093d576109353361091f611fc5565b8760405180602001604052806000815250611ff0565b60010161090b565b858110156109535763dfb035c96000526004601cfd5b5050600160055550505050565b6003546002546001600160a01b0390911690600090612710906109839085613204565b61098d9190613236565b90509250929050565b8483146109d75760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b336001600160a01b0389161480610a0f57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a4c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008060005b87811015610bfb57888882818110610a6c57610a6c613258565b905060200201359250868682818110610a8757610a87613258565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610b035760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b665760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a52565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c4f94939291906132b9565b60405180910390a46001600160a01b0389163b15610d355760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ca39033908f908e908e908e908e908e908e90600401613314565b6020604051808303816000875af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190613378565b6001600160e01b03191614610d305760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610d7f565b6001600160a01b038916610d7f5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050505050505050565b6004546001600160a01b03163314610dd45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b610ddd81612199565b60095481600b54610dee9190613223565b1115610e0d5760405163d05cb60960e01b815260040160405180910390fd5b610e1d6340d097c360e01b6121de565b82516000905b80821015610e6357610e58848381518110610e4057610e40613258565b6020026020010151600661229290919063ffffffff16565b816001019150610e23565b80821015610e795763dfb035c96000526004601cfd5b610e9486868660405180602001604052806000815250612299565b505050505050565b6004546001600160a01b03163314610ee55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e9190613395565b905060008167ffffffffffffffff811115610f7b57610f7b6128da565b604051908082528060200260200182016040528015610fa4578160200160208202803683370190505b50905060008267ffffffffffffffff811115610fc257610fc26128da565b604051908082528060200260200182016040528015610feb578160200160208202803683370190505b5090504760005b8481101561115d57600a54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106d91906133ae565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa1580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e79190613395565b9050818684815181106110fc576110fc613258565b6001600160a01b0390921660209283029190910190910152612710611122826064613204565b61112c9086613204565b6111369190613236565b85848151811061114857611148613258565b60209081029190910101525050600101610ff2565b60005b85811015610e94576111a485828151811061117d5761117d613258565b602002602001015185838151811061119757611197613258565b60200260200101516123f9565b600101611160565b60608382146111ef5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b8367ffffffffffffffff811115611208576112086128da565b604051908082528060200260200182016040528015611231578160200160208202803683370190505b50905060005b848110156112cd576112a886868381811061125457611254613258565b90506020020160208101906112699190612a32565b85858481811061127b5761127b613258565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106112ba576112ba613258565b6020908102919091010152600101611237565b50949350505050565b6004546001600160a01b0316331461131f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b61132f63044df8e760e41b6121de565b80518251146113725760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b81516000905b808210156113b8576113ad83838151811061139557611395613258565b6020026020010151600661245990919063ffffffff16565b816001019150611378565b808210156113ce5763dfb035c96000526004601cfd5b6113d9858585612473565b5050505050565b6060600780546113ef90612fe3565b80601f016020809104026020016040519081016040528092919081815260200182805461141b90612fe3565b80156114685780601f1061143d57610100808354040283529160200191611468565b820191906000526020600020905b81548152906001019060200180831161144b57829003601f168201915b5050505050905090565b6004546001600160a01b031633146114bb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6114cb63044df8e760e41b6121de565b8151835160009190811480156114e2575082518451145b6115205760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b8082101561159e5761153d83838151811061139557611395613258565b61159385838151811061155257611552613258565b602002602001015185848151811061156c5761156c613258565b602002602001015185858151811061158657611586613258565b602002602001015161261b565b816001019150611520565b808210156113d95763dfb035c96000526004601cfd5b6004546001600160a01b031633146115fd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6004546001600160a01b031633146116835760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b8161168d82612199565b6116979190613204565b60095481600b546116a89190613223565b11156116c75760405163d05cb60960e01b815260040160405180910390fd5b6116d76340d097c360e01b6121de565b60005b838110156117255761171d856116ee611fc5565b85848151811061170057611700613258565b602002602001015160405180602001604052806000815250611ff0565b6001016116da565b838110156113d95763dfb035c96000526004601cfd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6005546001146117e45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff1661180c576040516316851fc760e11b815260040160405180910390fd5b805182511461185d5760405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e475448000000000000000000000000000000000060448201526064016106da565b815161186881612703565b60005b8181101561189e5761189583828151811061188857611888613258565b6020026020010151612763565b5060010161186b565b818110156118b45763dfb035c96000526004601cfd5b6118cf33858560405180602001604052806000815250612299565b505060016005555050565b336001600160a01b038716148061191257506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b61194f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a1684529091529020546119ab5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611a0e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611a40908490613223565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611a779084906133cb565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611ba15760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611b0f9033908b908a908a908a908a906004016133de565b6020604051808303816000875af1158015611b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b529190613378565b6001600160e01b03191614611b9c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610e94565b6001600160a01b038516610e945760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b6004546001600160a01b03163314611c345760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cad9190613395565b905060008167ffffffffffffffff811115611cca57611cca6128da565b604051908082528060200260200182016040528015611cf3578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d1157611d116128da565b604051908082528060200260200182016040528015611d3a578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dab9190613395565b90505b84821015611f1d57600a54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2991906133ae565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea39190613395565b905081868581518110611eb857611eb8613258565b6001600160a01b0390921660209283029190910190910152612710611ede826064613204565b611ee89085613204565b611ef29190613236565b858581518110611f0457611f04613258565b6020026020010181815250508360010193505050611dae565b60005b85811015611f6d57611f6587868381518110611f3e57611f3e613258565b6020026020010151868481518110611f5857611f58613258565b6020026020010151612792565b600101611f20565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611fb357600183039250600a81066030018353600a9004611f95565b50819003601f19909101908152919050565b6000611fcf612818565b506001600b6000828254611fe39190613223565b9091555050600b54919050565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612022908490613223565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156121495760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906120b7903390600090899089908990600401613423565b6020604051808303816000875af11580156120d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fa9190613378565b6001600160e01b031916146121445760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b612193565b6001600160a01b0384166121935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050565b8051600090815b818110156121d7578381815181106121ba576121ba613258565b6020026020010151836121cd9190613223565b92506001016121a0565b5050919050565b6004546001600160a01b0316803b63ffffffff81166000036121ff57505050565b60048054604051633b7279e960e21b81526001600160e01b03198616928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190613395565b90508034146121935763f7760f256000526004601cfd5b8154019055565b82516000805b8281101561230f578581815181106122b9576122b9613258565b602002602001015191508481815181106122d5576122d5613258565b6020908102919091018101516000848152600180845260408083206001600160a01b038d168452909452929020805490910190550161229f565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888860405161236092919061345b565b60405180910390a46001600160a01b0386163b156123af5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611b0f9033906000908b908b908b90600401613489565b6001600160a01b038616610e945760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b600080600080600085875af19050806124545760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106da565b505050565b81548061246e5763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166124c95760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106da565b81516000805b828110156125bb578481815181106124e9576124e9613258565b6020026020010151915083818151811061250557612505613258565b60209081029190910181015160008481526001835260408082206001600160a01b038b1683529093529190912054101561256e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b83818151811061258057612580613258565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016124cf565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161260c92919061345b565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561267e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906126b09084906133cb565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b34816008546127129190613204565b146127305760405163f7760f2560e01b815260040160405180910390fd5b60095481600b546127419190613223565b11156127605760405163d05cb60960e01b815260040160405180910390fd5b50565b60006127726006838154019055565b81600b60008282546127849190613223565b9091555050600b5492915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806121935760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106da565b6000612828600680546001019055565b5060065490565b6001600160a01b038116811461276057600080fd5b6000806040838503121561285757600080fd5b8235915060208301356128698161282f565b809150509250929050565b6000806040838503121561288757600080fd5b82356128928161282f565b946020939093013593505050565b6001600160e01b03198116811461276057600080fd5b6000602082840312156128c857600080fd5b81356128d3816128a0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612919576129196128da565b604052919050565b6000602080838503121561293457600080fd5b823567ffffffffffffffff8082111561294c57600080fd5b818501915085601f83011261296057600080fd5b813581811115612972576129726128da565b612984601f8201601f191685016128f0565b9150808252868482850101111561299a57600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156129c857600080fd5b5035919050565b60005b838110156129ea5781810151838201526020016129d2565b50506000910152565b60008151808452612a0b8160208601602086016129cf565b601f01601f19169290920160200192915050565b6020815260006128d360208301846129f3565b600060208284031215612a4457600080fd5b81356128d38161282f565b60008060408385031215612a6257600080fd5b50508035926020909101359150565b60008083601f840112612a8357600080fd5b50813567ffffffffffffffff811115612a9b57600080fd5b6020830191508360208260051b8501011115612ab657600080fd5b9250929050565b60008083601f840112612acf57600080fd5b50813567ffffffffffffffff811115612ae757600080fd5b602083019150836020828501011115612ab657600080fd5b60008060008060008060008060a0898b031215612b1b57600080fd5b8835612b268161282f565b97506020890135612b368161282f565b9650604089013567ffffffffffffffff80821115612b5357600080fd5b612b5f8c838d01612a71565b909850965060608b0135915080821115612b7857600080fd5b612b848c838d01612a71565b909650945060808b0135915080821115612b9d57600080fd5b50612baa8b828c01612abd565b999c989b5096995094979396929594505050565b600067ffffffffffffffff821115612bd857612bd86128da565b5060051b60200190565b600082601f830112612bf357600080fd5b81356020612c08612c0383612bbe565b6128f0565b82815260059290921b84018101918181019086841115612c2757600080fd5b8286015b84811015612c425780358352918301918301612c2b565b509695505050505050565b600080600060608486031215612c6257600080fd5b8335612c6d8161282f565b9250602084013567ffffffffffffffff80821115612c8a57600080fd5b612c9687838801612be2565b93506040860135915080821115612cac57600080fd5b50612cb986828701612be2565b9150509250925092565b60008060008060408587031215612cd957600080fd5b843567ffffffffffffffff80821115612cf157600080fd5b612cfd88838901612a71565b90965094506020870135915080821115612d1657600080fd5b50612d2387828801612a71565b95989497509550505050565b600081518084526020808501945080840160005b83811015612d5f57815187529582019590820190600101612d43565b509495945050505050565b6020815260006128d36020830184612d2f565b600080600060608486031215612d9257600080fd5b833567ffffffffffffffff80821115612daa57600080fd5b818601915086601f830112612dbe57600080fd5b81356020612dce612c0383612bbe565b82815260059290921b8401810191818101908a841115612ded57600080fd5b948201945b83861015612e14578535612e058161282f565b82529482019490820190612df2565b97505087013592505080821115612c8a57600080fd5b80358015158114612e3a57600080fd5b919050565b600060208284031215612e5157600080fd5b6128d382612e2a565b600080600060608486031215612e6f57600080fd5b8335612e7a8161282f565b925060208401359150604084013567ffffffffffffffff811115612e9d57600080fd5b612cb986828701612be2565b60008060408385031215612ebc57600080fd5b8235612ec78161282f565b915061098d60208401612e2a565b60008060408385031215612ee857600080fd5b823567ffffffffffffffff80821115612f0057600080fd5b612f0c86838701612be2565b93506020850135915080821115612f2257600080fd5b50612f2f85828601612be2565b9150509250929050565b60008060408385031215612f4c57600080fd5b8235612f578161282f565b915060208301356128698161282f565b60008060008060008060a08789031215612f8057600080fd5b8635612f8b8161282f565b95506020870135612f9b8161282f565b94506040870135935060608701359250608087013567ffffffffffffffff811115612fc557600080fd5b612fd189828a01612abd565b979a9699509497509295939492505050565b600181811c90821680612ff757607f821691505b60208210810361301757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561245457600081815260208120601f850160051c810160208610156130445750805b601f850160051c820191505b81811015610e9457828155600101613050565b815167ffffffffffffffff81111561307d5761307d6128da565b6130918161308b8454612fe3565b8461301d565b602080601f8311600181146130c657600084156130ae5750858301515b600019600386901b1c1916600185901b178555610e94565b600085815260208120601f198616915b828110156130f5578886015182559484019460019091019084016130d6565b50858210156131135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516131358184602087016129cf565b9190910192915050565b600080845461314d81612fe3565b60018281168015613165576001811461317a576131a9565b60ff19841687528215158302870194506131a9565b8860005260208060002060005b858110156131a05781548a820152908401908201613187565b50505082870194505b5050505083516131bd8183602088016129cf565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561321e5761321e6131ee565b500290565b8082018082111561068f5761068f6131ee565b60008261325357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156132a057600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006132cd60408301868861326e565b82810360208401526132e081858761326e565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261334160a08301888a61326e565b828103606084015261335481878961326e565b905082810360808401526133698185876132eb565b9b9a5050505050505050505050565b60006020828403121561338a57600080fd5b81516128d3816128a0565b6000602082840312156133a757600080fd5b5051919050565b6000602082840312156133c057600080fd5b81516128d38161282f565b8181038181111561068f5761068f6131ee565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261341760a0830184866132eb565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526132e060a08301846129f3565b60408152600061346e6040830185612d2f565b82810360208401526134808185612d2f565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526134b560a0830186612d2f565b82810360608401526134c78186612d2f565b9050828103608084015261341781856129f356fea164736f6c6343000810000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
