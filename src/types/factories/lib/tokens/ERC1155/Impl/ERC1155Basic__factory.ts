/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b5060405162003cb838038062003cb88339810160408190526200003991620001b8565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35060076200009488826200037a565b5060088690556009859055600a8054610100600160a81b0319166101006001600160a01b03878116820292909217928390556001600160601b0386166002819055600380549290940483166001600160a01b031992831617909355600c80549091169184169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505062000446565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200019b57600080fd5b919050565b80516001600160601b03811681146200019b57600080fd5b600080600080600080600060e0888a031215620001d457600080fd5b87516001600160401b0380821115620001ec57600080fd5b818a0191508a601f8301126200020157600080fd5b8151818111156200021657620002166200016d565b604051601f8201601f19908116603f011681019083821181831017156200024157620002416200016d565b81604052828152602093508d848487010111156200025e57600080fd5b600091505b8282101562000282578482018401518183018501529083019062000263565b6000848483010152809b50505050808a01519750505060408801519450620002ad6060890162000183565b9350620002bd60808901620001a0565b9250620002cd60a0890162000183565b9150620002dd60c0890162000183565b905092959891949750929550565b600181811c908216806200030057607f821691505b6020821081036200032157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037557600081815260208120601f850160051c81016020861015620003505750805b601f850160051c820191505b8181101562000371578281556001016200035c565b5050505b505050565b81516001600160401b038111156200039657620003966200016d565b620003ae81620003a78454620002eb565b8462000327565b602080601f831160018114620003e65760008415620003cd5750858301515b600019600386901b1c1916600185901b17855562000371565b600085815260208120601f198616915b828110156200041757888601518255948401946001909101908401620003f6565b5085821015620004365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61386280620004566000396000f3fe6080604052600436106101e15760003560e01c80638da5cb5b11610102578063d6fa7b1011610095578063f23a6e6111610064578063f23a6e61146105d3578063f242432a14610600578063f4f3b20014610620578063f745586f1461064057600080fd5b8063d6fa7b1014610562578063d78147cb14610575578063e7d3fe6b14610588578063e985e9c51461059b57600080fd5b8063bc197c81116100d1578063bc197c81146104de578063bc279b0d14610526578063d580725d14610539578063d5abeb011461054c57600080fd5b80638da5cb5b146104735780638fc3b54914610493578063a035b1fe146104a8578063a22cb465146104be57600080fd5b80632a55205a1161017a5780634e1273f4116101495780634e1273f4146103f15780637754305c1461041e578063785e9e8614610433578063879fbedf1461045357600080fd5b80632a55205a146103405780632eb2c2d61461037f5780633ccfd60b1461039f5780633cd8045e146103b457600080fd5b80630e89341c116101b65780630e89341c146102c457806313af4035146102f157806318160ddd1461031157806322ab47a11461032657600080fd5b8062f74867146101e6578062fdd58e1461023157806301ffc9a71461027257806302fe5305146102a2575b600080fd5b3480156101f257600080fd5b5061021e610201366004612b23565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023d57600080fd5b5061021e61024c366004612b53565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027e57600080fd5b5061029261028d366004612b95565b610653565b6040519015158152602001610228565b3480156102ae57600080fd5b506102c26102bd366004612c00565b6106c0565b005b3480156102d057600080fd5b506102e46102df366004612c95565b61075c565b6040516102289190612cfe565b3480156102fd57600080fd5b506102c261030c366004612d11565b6107a8565b34801561031d57600080fd5b5061021e610855565b34801561033257600080fd5b50600a546102929060ff1681565b34801561034c57600080fd5b5061036061035b366004612d2e565b610865565b604080516001600160a01b039093168352602083019190915201610228565b34801561038b57600080fd5b506102c261039a366004612dde565b61089b565b3480156103ab57600080fd5b506102c2610c90565b3480156103c057600080fd5b50600a546103d99061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610228565b3480156103fd57600080fd5b5061041161040c366004612e9d565b610fa8565b6040516102289190612f44565b34801561042a57600080fd5b506102e46110d2565b34801561043f57600080fd5b50600c546103d9906001600160a01b031681565b34801561045f57600080fd5b506102c261046e366004612f67565b611164565b34801561047f57600080fd5b506004546103d9906001600160a01b031681565b34801561049f57600080fd5b50600b5461021e565b3480156104b457600080fd5b5061021e60085481565b3480156104ca57600080fd5b506102c26104d9366004612f82565b6111ea565b3480156104ea57600080fd5b5061050d6104f9366004612dde565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610228565b6102c261053436600461303d565b611254565b6102c26105473660046130b5565b611445565b34801561055857600080fd5b5061021e60095481565b6102c261057036600461313e565b611552565b6102c26105833660046130b5565b6116a7565b6102c2610596366004613235565b61178d565b3480156105a757600080fd5b506102926105b6366004613263565b600060208181529281526040808220909352908152205460ff1681565b3480156105df57600080fd5b5061050d6105ee366004613291565b63f23a6e6160e01b9695505050505050565b34801561060c57600080fd5b506102c261061b366004613291565b611955565b34801561062c57600080fd5b506102c261063b366004612d11565b611c66565b6102c261064e36600461330d565b611fe8565b60006301ffc9a760e01b6001600160e01b0319831614806106845750636cdb3d1360e11b6001600160e01b03198316145b8061069f57506303a24d0760e21b6001600160e01b03198316145b806106ba575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b0316331461070e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600761071a82826133dd565b5080604051610729919061349d565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b548211156107765763bad086ea6000526004601cfd5b6007610781836120e6565b6040516020016107929291906134b9565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107f15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061086060065490565b905090565b6003546002546001600160a01b039091169060009061271090610888908561357e565b610892919061359d565b90509250929050565b8483146108dc5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b336001600160a01b038916148061091457506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6109515760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610705565b60008060005b87811015610b0057888882818110610971576109716135bf565b90506020020135925086868281811061098c5761098c6135bf565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610a085760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610a6b5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610957565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610b549493929190613620565b60405180910390a46001600160a01b0389163b15610c3a5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ba89033908f908e908e908e908e908e908e9060040161367b565b6020604051808303816000875af1158015610bc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610beb91906136df565b6001600160e01b03191614610c355760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b610c84565b6001600160a01b038916610c845760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b50505050505050505050565b6004546001600160a01b03163314610cd95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5291906136fc565b905060008167ffffffffffffffff811115610d6f57610d6f612bb9565b604051908082528060200260200182016040528015610d98578160200160208202803683370190505b50905060008267ffffffffffffffff811115610db657610db6612bb9565b604051908082528060200260200182016040528015610ddf578160200160208202803683370190505b5090504760005b84811015610f5157600a54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015610e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e619190613715565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edb91906136fc565b905081868481518110610ef057610ef06135bf565b6001600160a01b0390921660209283029190910190910152612710610f1682606461357e565b610f20908661357e565b610f2a919061359d565b858481518110610f3c57610f3c6135bf565b60209081029190910101525050600101610de6565b60005b85811015610fa057610f98858281518110610f7157610f716135bf565b6020026020010151858381518110610f8b57610f8b6135bf565b6020026020010151612135565b600101610f54565b505050505050565b6060838214610feb5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b8367ffffffffffffffff81111561100457611004612bb9565b60405190808252806020026020018201604052801561102d578160200160208202803683370190505b50905060005b848110156110c9576110a4868683818110611050576110506135bf565b90506020020160208101906110659190612d11565b858584818110611077576110776135bf565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106110b6576110b66135bf565b6020908102919091010152600101611033565b50949350505050565b6060600780546110e19061335d565b80601f016020809104026020016040519081016040528092919081815260200182805461110d9061335d565b801561115a5780601f1061112f5761010080835404028352916020019161115a565b820191906000526020600020905b81548152906001019060200180831161113d57829003601f168201915b5050505050905090565b6004546001600160a01b031633146111ad5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6005546001146112935760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610705565b6002600555600a5460ff166112bb576040516316851fc760e11b815260040160405180910390fd5b815183511461130c5760405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e47544800000000000000000000000000000000006044820152606401610705565b600c546000906001600160a01b03166113255734611399565b600c54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139991906136fc565b84519091506113a88183612195565b600c546001600160a01b0316156113d157600c546113d1906001600160a01b03168430856121f6565b60005b81811015611407576113fe8582815181106113f1576113f16135bf565b6020026020010151612289565b506001016113d4565b8181101561141d5763dfb035c96000526004601cfd5b611438338787604051806020016040528060008152506122b5565b5050600160055550505050565b6004546001600160a01b0316331461148e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b61149782612415565b60095481600b546114a89190613732565b11156114c75760405163d05cb60960e01b815260040160405180910390fd5b6114d282600061245a565b83516000905b808210156115185761150d8583815181106114f5576114f56135bf565b6020026020010151600661254f90919063ffffffff16565b8160010191506114d8565b8082101561152e5763dfb035c96000526004601cfd5b611549878787604051806020016040528060008152506122b5565b50505050505050565b6004546001600160a01b0316331461159b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b6115a681600161245a565b8251845160009190811480156115bd575083518551145b6115fb5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b8082101561169157611630848381518110611618576116186135bf565b6020026020010151600661255690919063ffffffff16565b611686868381518110611645576116456135bf565b602002602001015186848151811061165f5761165f6135bf565b6020026020010151868581518110611679576116796135bf565b6020026020010151612570565b8160010191506115fb565b80821015610fa05763dfb035c96000526004601cfd5b6004546001600160a01b031633146116f05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b81518351146117335760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610705565b61173e81600161245a565b82516000905b8082101561176c57611761848381518110611618576116186135bf565b816001019150611744565b808210156117825763dfb035c96000526004601cfd5b610fa0868686612658565b6005546001146117cc5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610705565b6002600555600a5460ff166117f4576040516316851fc760e11b815260040160405180910390fd5b6117fe828461357e565b60095481600b5461180f9190613732565b111561182e5760405163d05cb60960e01b815260040160405180910390fd5b600854600c54859084906000906001600160a01b031661184e57346118c2565b600c54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa15801561189e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c291906136fc565b9050806118cf848661357e565b146118ed5760405163f7760f2560e01b815260040160405180910390fd5b6118f886600261245a565b60005b8881101561192f57611927336119116001612289565b8a60405180602001604052806000815250612800565b6001016118fb565b888110156119455763dfb035c96000526004601cfd5b5050600160055550505050505050565b336001600160a01b038716148061198d57506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119ca5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038a168452909152902054611a265760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611a895760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611abb908490613732565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611af2908490613745565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611c1c5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611b8a9033908b908a908a908a908a90600401613758565b6020604051808303816000875af1158015611ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcd91906136df565b6001600160e01b03191614611c175760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b610fa0565b6001600160a01b038516610fa05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b6004546001600160a01b03163314611caf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2891906136fc565b905060008167ffffffffffffffff811115611d4557611d45612bb9565b604051908082528060200260200182016040528015611d6e578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d8c57611d8c612bb9565b604051908082528060200260200182016040528015611db5578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2691906136fc565b90505b84821015611f9857600a54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea49190613715565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1e91906136fc565b905081868581518110611f3357611f336135bf565b6001600160a01b0390921660209283029190910190910152612710611f5982606461357e565b611f63908561357e565b611f6d919061359d565b858581518110611f7f57611f7f6135bf565b6020026020010181815250508360010193505050611e29565b60005b8581101561154957611fe087868381518110611fb957611fb96135bf565b6020026020010151868481518110611fd357611fd36135bf565b60200260200101516129a9565b600101611f9b565b6004546001600160a01b031633146120315760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610705565b8261203b83612415565b612045919061357e565b60095481600b546120569190613732565b11156120755760405163d05cb60960e01b815260040160405180910390fd5b61208082600061245a565b60005b848110156120d0576120c8866120996001612289565b8684815181106120ab576120ab6135bf565b602002602001015160405180602001604052806000815250612800565b600101612083565b84811015610fa05763dfb035c96000526004601cfd5b604080516080810191829052607f0190826030600a8206018353600a90045b801561212357600183039250600a81066030018353600a9004612105565b50819003601f19909101908152919050565b600080600080600085875af19050806121905760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610705565b505050565b80826008546121a4919061357e565b146121c25760405163f7760f2560e01b815260040160405180910390fd5b60095482600b546121d39190613732565b11156121f25760405163d05cb60960e01b815260040160405180910390fd5b5050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806122825760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610705565b5050505050565b600061229482612a2f565b5081600b60008282546122a79190613732565b9091555050600b5492915050565b82516000805b8281101561232b578581815181106122d5576122d56135bf565b602002602001015191508481815181106122f1576122f16135bf565b6020908102919091018101516000848152600180845260408083206001600160a01b038d16845290945292902080549091019055016122bb565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888860405161237c92919061379d565b60405180910390a46001600160a01b0386163b156123cb5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611b8a9033906000908b908b908b906004016137cb565b6001600160a01b038616610fa05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b8051600090815b8181101561245357838181518110612436576124366135bf565b6020026020010151836124499190613732565b925060010161241c565b5050919050565b600c546000906001600160a01b031661247357346124e7565b600c54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156124c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e791906136fc565b90508160ff1660000361250a576125056340d097c360e01b82612a46565b612526565b8160ff166001036125265761252663044df8e760e41b82612a46565b600c546001600160a01b03161561219057600c54612190906001600160a01b03168430846121f6565b8154019055565b81548061256b5763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156125d35760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610705565b60008281526001602090815260408083206001600160a01b038716845290915281208054839290612605908490613745565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b0383166126ae5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610705565b81516000805b828110156127a0578481815181106126ce576126ce6135bf565b602002602001015191508381815181106126ea576126ea6135bf565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156127535760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610705565b838181518110612765576127656135bf565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016126b4565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516127f192919061379d565b60405180910390a45050505050565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612832908490613732565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156129595760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906128c790339060009089908990899060040161381d565b6020604051808303816000875af11580156128e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290a91906136df565b6001600160e01b031916146129545760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610705565b6129a3565b6001600160a01b0384166129a35760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610705565b50505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806129a35760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610705565b6000612a3e6006838154019055565b6006546106ba565b6004546001600160a01b0316803b63ffffffff8116600003612a685750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ae491906136fc565b90508084146122825763f7760f256000526004601cfd5b6001600160a01b0381168114612b1057600080fd5b50565b8035612b1e81612afb565b919050565b60008060408385031215612b3657600080fd5b823591506020830135612b4881612afb565b809150509250929050565b60008060408385031215612b6657600080fd5b8235612b7181612afb565b946020939093013593505050565b6001600160e01b031981168114612b1057600080fd5b600060208284031215612ba757600080fd5b8135612bb281612b7f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bf857612bf8612bb9565b604052919050565b60006020808385031215612c1357600080fd5b823567ffffffffffffffff80821115612c2b57600080fd5b818501915085601f830112612c3f57600080fd5b813581811115612c5157612c51612bb9565b612c63601f8201601f19168501612bcf565b91508082528684828501011115612c7957600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612ca757600080fd5b5035919050565b60005b83811015612cc9578181015183820152602001612cb1565b50506000910152565b60008151808452612cea816020860160208601612cae565b601f01601f19169290920160200192915050565b602081526000612bb26020830184612cd2565b600060208284031215612d2357600080fd5b8135612bb281612afb565b60008060408385031215612d4157600080fd5b50508035926020909101359150565b60008083601f840112612d6257600080fd5b50813567ffffffffffffffff811115612d7a57600080fd5b6020830191508360208260051b8501011115612d9557600080fd5b9250929050565b60008083601f840112612dae57600080fd5b50813567ffffffffffffffff811115612dc657600080fd5b602083019150836020828501011115612d9557600080fd5b60008060008060008060008060a0898b031215612dfa57600080fd5b8835612e0581612afb565b97506020890135612e1581612afb565b9650604089013567ffffffffffffffff80821115612e3257600080fd5b612e3e8c838d01612d50565b909850965060608b0135915080821115612e5757600080fd5b612e638c838d01612d50565b909650945060808b0135915080821115612e7c57600080fd5b50612e898b828c01612d9c565b999c989b5096995094979396929594505050565b60008060008060408587031215612eb357600080fd5b843567ffffffffffffffff80821115612ecb57600080fd5b612ed788838901612d50565b90965094506020870135915080821115612ef057600080fd5b50612efd87828801612d50565b95989497509550505050565b600081518084526020808501945080840160005b83811015612f3957815187529582019590820190600101612f1d565b509495945050505050565b602081526000612bb26020830184612f09565b80358015158114612b1e57600080fd5b600060208284031215612f7957600080fd5b612bb282612f57565b60008060408385031215612f9557600080fd5b8235612fa081612afb565b915061089260208401612f57565b600067ffffffffffffffff821115612fc857612fc8612bb9565b5060051b60200190565b600082601f830112612fe357600080fd5b81356020612ff8612ff383612fae565b612bcf565b82815260059290921b8401810191818101908684111561301757600080fd5b8286015b84811015613032578035835291830191830161301b565b509695505050505050565b60008060006060848603121561305257600080fd5b833567ffffffffffffffff8082111561306a57600080fd5b61307687838801612fd2565b9450602086013591508082111561308c57600080fd5b5061309986828701612fd2565b92505060408401356130aa81612afb565b809150509250925092565b600080600080608085870312156130cb57600080fd5b84356130d681612afb565b9350602085013567ffffffffffffffff808211156130f357600080fd5b6130ff88838901612fd2565b9450604087013591508082111561311557600080fd5b5061312287828801612fd2565b925050606085013561313381612afb565b939692955090935050565b6000806000806080858703121561315457600080fd5b843567ffffffffffffffff8082111561316c57600080fd5b818701915087601f83011261318057600080fd5b81356020613190612ff383612fae565b82815260059290921b8401810191818101908b8411156131af57600080fd5b948201945b838610156131d65785356131c781612afb565b825294820194908201906131b4565b985050880135925050808211156131ec57600080fd5b6131f888838901612fd2565b9450604087013591508082111561320e57600080fd5b5061321b87828801612fd2565b92505061322a60608601612b13565b905092959194509250565b60008060006060848603121561324a57600080fd5b833592506020840135915060408401356130aa81612afb565b6000806040838503121561327657600080fd5b823561328181612afb565b91506020830135612b4881612afb565b60008060008060008060a087890312156132aa57600080fd5b86356132b581612afb565b955060208701356132c581612afb565b94506040870135935060608701359250608087013567ffffffffffffffff8111156132ef57600080fd5b6132fb89828a01612d9c565b979a9699509497509295939492505050565b6000806000806080858703121561332357600080fd5b843561332e81612afb565b935060208501359250604085013567ffffffffffffffff81111561335157600080fd5b61312287828801612fd2565b600181811c9082168061337157607f821691505b60208210810361339157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561219057600081815260208120601f850160051c810160208610156133be5750805b601f850160051c820191505b81811015610fa0578281556001016133ca565b815167ffffffffffffffff8111156133f7576133f7612bb9565b61340b81613405845461335d565b84613397565b602080601f83116001811461344057600084156134285750858301515b600019600386901b1c1916600185901b178555610fa0565b600085815260208120601f198616915b8281101561346f57888601518255948401946001909101908401613450565b508582101561348d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516134af818460208701612cae565b9190910192915050565b60008084546134c78161335d565b600182811680156134df57600181146134f457613523565b60ff1984168752821515830287019450613523565b8860005260208060002060005b8581101561351a5781548a820152908401908201613501565b50505082870194505b505050508351613537818360208801612cae565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561359857613598613568565b500290565b6000826135ba57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561360757600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006136346040830186886135d5565b82810360208401526136478185876135d5565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526136a860a08301888a6135d5565b82810360608401526136bb8187896135d5565b905082810360808401526136d0818587613652565b9b9a5050505050505050505050565b6000602082840312156136f157600080fd5b8151612bb281612b7f565b60006020828403121561370e57600080fd5b5051919050565b60006020828403121561372757600080fd5b8151612bb281612afb565b808201808211156106ba576106ba613568565b818103818111156106ba576106ba613568565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261379160a083018486613652565b98975050505050505050565b6040815260006137b06040830185612f09565b82810360208401526137c28185612f09565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526137f760a0830186612f09565b82810360608401526138098186612f09565b905082810360808401526137918185612cd2565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261364760a0830184612cd256fea164736f6c6343000810000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
