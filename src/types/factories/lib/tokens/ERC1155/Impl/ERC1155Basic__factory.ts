/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b50604051620038f0380380620038f08339810160408190526200003991620001a8565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600762000094878262000356565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000422565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200018b57600080fd5b919050565b80516001600160601b03811681146200018b57600080fd5b60008060008060008060c08789031215620001c257600080fd5b86516001600160401b0380821115620001da57600080fd5b818901915089601f830112620001ef57600080fd5b8151818111156200020457620002046200015d565b604051601f8201601f19908116603f011681019083821181831017156200022f576200022f6200015d565b81604052828152602093508c848487010111156200024c57600080fd5b600091505b8282101562000270578482018401518183018501529083019062000251565b6000848483010152809a505050508089015196505050604087015193506200029b6060880162000173565b9250620002ab6080880162000190565b9150620002bb60a0880162000173565b90509295509295509295565b600181811c90821680620002dc57607f821691505b602082108103620002fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035157600081815260208120601f850160051c810160208610156200032c5750805b601f850160051c820191505b818110156200034d5782815560010162000338565b5050505b505050565b81516001600160401b038111156200037257620003726200015d565b6200038a81620003838454620002c7565b8462000303565b602080601f831160018114620003c25760008415620003a95750858301515b600019600386901b1c1916600185901b1785556200034d565b600085815260208120601f198616915b82811015620003f357888601518255948401946001909101908401620003d2565b5085821015620004125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6134be80620004326000396000f3fe6080604052600436106101d65760003560e01c80636b20c45411610102578063a22cb46511610095578063e985e9c511610064578063e985e9c514610583578063f23a6e61146105bb578063f242432a146105e8578063f4f3b2001461060857600080fd5b8063a22cb465146104f2578063bc197c8114610512578063d351cfdc1461055a578063d5abeb011461056d57600080fd5b80638da5cb5b116100d15780638da5cb5b146104945780638e959323146104b45780638fc3b549146104c7578063a035b1fe146104dc57600080fd5b80636b20c454146104395780637754305c1461044c57806381b0b75614610461578063879fbedf1461047457600080fd5b80631b2ef1ca1161017a5780633512639c116101495780633512639c146103a75780633ccfd60b146103ba5780633cd8045e146103cf5780634e1273f41461040c57600080fd5b80631b2ef1ca1461031b57806322ab47a11461032e5780632a55205a146103485780632eb2c2d61461038757600080fd5b806302fe5305116101b657806302fe5305146102975780630e89341c146102b957806313af4035146102e657806318160ddd1461030657600080fd5b8062f74867146101db578062fdd58e1461022657806301ffc9a714610267575b600080fd5b3480156101e757600080fd5b506102136101f636600461281a565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023257600080fd5b5061021361024136600461284a565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027357600080fd5b5061028761028236600461288c565b610628565b604051901515815260200161021d565b3480156102a357600080fd5b506102b76102b23660046128f7565b610695565b005b3480156102c557600080fd5b506102d96102d436600461298c565b610731565b60405161021d91906129f5565b3480156102f257600080fd5b506102b7610301366004612a08565b61077d565b34801561031257600080fd5b5061021361082a565b6102b7610329366004612a25565b61083a565b34801561033a57600080fd5b50600a546102879060ff1681565b34801561035457600080fd5b50610368610363366004612a25565b610962565b604080516001600160a01b03909316835260208301919091520161021d565b34801561039357600080fd5b506102b76103a2366004612ad5565b610998565b6102b76103b5366004612c23565b610d8d565b3480156103c657600080fd5b506102b7610e9e565b3480156103db57600080fd5b50600a546103f49061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b34801561041857600080fd5b5061042c610427366004612c99565b6111ae565b60405161021d9190612d40565b6102b7610447366004612c23565b6112d8565b34801561045857600080fd5b506102d96113e2565b6102b761046f366004612d53565b611474565b34801561048057600080fd5b506102b761048f366004612e15565b6115b6565b3480156104a057600080fd5b506004546103f4906001600160a01b031681565b6102b76104c2366004612e30565b61163c565b3480156104d357600080fd5b50600b54610213565b3480156104e857600080fd5b5061021360085481565b3480156104fe57600080fd5b506102b761050d366004612e7f565b61173f565b34801561051e57600080fd5b5061054161052d366004612ad5565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161021d565b6102b7610568366004612eab565b6117a9565b34801561057957600080fd5b5061021360095481565b34801561058f57600080fd5b5061028761059e366004612f0f565b600060208181529281526040808220909352908152205460ff1681565b3480156105c757600080fd5b506105416105d6366004612f3d565b63f23a6e6160e01b9695505050505050565b3480156105f457600080fd5b506102b7610603366004612f3d565b6118de565b34801561061457600080fd5b506102b7610623366004612a08565b611bef565b60006301ffc9a760e01b6001600160e01b0319831614806106595750636cdb3d1360e11b6001600160e01b03198316145b8061067457506303a24d0760e21b6001600160e01b03198316145b8061068f575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106e35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60076106ef8282613039565b50806040516106fe91906130f9565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561074b5763bad086ea6000526004601cfd5b600761075683611f7a565b604051602001610767929190613115565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107c65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061083560065490565b905090565b6005546001146108795760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff166108a1576040516316851fc760e11b815260040160405180910390fd5b6108ab81836131da565b60095481600b546108bc91906131f9565b11156108db5760405163d05cb60960e01b815260040160405180910390fd5b60085483346108ea82846131da565b146109085760405163f7760f2560e01b815260040160405180910390fd5b60005b8581101561093f57610937336109216001611fc9565b8760405180602001604052806000815250611ff5565b60010161090b565b858110156109555763dfb035c96000526004601cfd5b5050600160055550505050565b6003546002546001600160a01b03909116906000906127109061098590856131da565b61098f919061320c565b90509250929050565b8483146109d95760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b336001600160a01b0389161480610a1157506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a4e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008060005b87811015610bfd57888882818110610a6e57610a6e61322e565b905060200201359250868682818110610a8957610a8961322e565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610b055760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b685760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a54565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c51949392919061328f565b60405180910390a46001600160a01b0389163b15610d375760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ca59033908f908e908e908e908e908e908e906004016132ea565b6020604051808303816000875af1158015610cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce8919061334e565b6001600160e01b03191614610d325760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610d81565b6001600160a01b038916610d815760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050505050505050565b6004546001600160a01b03163314610dd65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b610ddf8161219e565b60095481600b54610df091906131f9565b1115610e0f5760405163d05cb60960e01b815260040160405180910390fd5b610e1f6340d097c360e01b6121e3565b82516000905b80821015610e6557610e5a848381518110610e4257610e4261322e565b6020026020010151600661229790919063ffffffff16565b816001019150610e25565b80821015610e7b5763dfb035c96000526004601cfd5b610e968686866040518060200160405280600081525061229e565b505050505050565b6004546001600160a01b03163314610ee75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f60919061336b565b905060008167ffffffffffffffff811115610f7d57610f7d6128b0565b604051908082528060200260200182016040528015610fa6578160200160208202803683370190505b50905060008267ffffffffffffffff811115610fc457610fc46128b0565b604051908082528060200260200182016040528015610fed578160200160208202803683370190505b5090504760005b8481101561115f57600a54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa15801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190613384565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa1580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e9919061336b565b9050818684815181106110fe576110fe61322e565b6001600160a01b03909216602092830291909101909101526127106111248260646131da565b61112e90866131da565b611138919061320c565b85848151811061114a5761114a61322e565b60209081029190910101525050600101610ff4565b60005b85811015610e96576111a685828151811061117f5761117f61322e565b60200260200101518583815181106111995761119961322e565b60200260200101516123fe565b600101611162565b60608382146111f15760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b8367ffffffffffffffff81111561120a5761120a6128b0565b604051908082528060200260200182016040528015611233578160200160208202803683370190505b50905060005b848110156112cf576112aa8686838181106112565761125661322e565b905060200201602081019061126b9190612a08565b85858481811061127d5761127d61322e565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106112bc576112bc61322e565b6020908102919091010152600101611239565b50949350505050565b6004546001600160a01b031633146113215760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b61133163044df8e760e41b6121e3565b80518251146113745760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b81516000905b808210156113ba576113af8383815181106113975761139761322e565b6020026020010151600661245e90919063ffffffff16565b81600101915061137a565b808210156113d05763dfb035c96000526004601cfd5b6113db858585612478565b5050505050565b6060600780546113f190612fb9565b80601f016020809104026020016040519081016040528092919081815260200182805461141d90612fb9565b801561146a5780601f1061143f5761010080835404028352916020019161146a565b820191906000526020600020905b81548152906001019060200180831161144d57829003601f168201915b5050505050905090565b6004546001600160a01b031633146114bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6114cd63044df8e760e41b6121e3565b8151835160009190811480156114e4575082518451145b6115225760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b808210156115a05761153f8383815181106113975761139761322e565b6115958583815181106115545761155461322e565b602002602001015185848151811061156e5761156e61322e565b60200260200101518585815181106115885761158861322e565b6020026020010151612620565b816001019150611522565b808210156113db5763dfb035c96000526004601cfd5b6004546001600160a01b031633146115ff5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6004546001600160a01b031633146116855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b8161168f8261219e565b61169991906131da565b60095481600b546116aa91906131f9565b11156116c95760405163d05cb60960e01b815260040160405180910390fd5b6116d96340d097c360e01b6121e3565b60005b8381101561172957611721856116f26001611fc9565b8584815181106117045761170461322e565b602002602001015160405180602001604052806000815250611ff5565b6001016116dc565b838110156113db5763dfb035c96000526004601cfd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6005546001146117e85760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff16611810576040516316851fc760e11b815260040160405180910390fd5b80518251146118615760405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e475448000000000000000000000000000000000060448201526064016106da565b815161186c81612708565b60005b818110156118a25761189983828151811061188c5761188c61322e565b6020026020010151611fc9565b5060010161186f565b818110156118b85763dfb035c96000526004601cfd5b6118d33385856040518060200160405280600081525061229e565b505060016005555050565b336001600160a01b038716148061191657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119535760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a1684529091529020546119af5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611a125760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611a449084906131f9565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611a7b9084906133a1565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611ba55760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611b139033908b908a908a908a908a906004016133b4565b6020604051808303816000875af1158015611b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b56919061334e565b6001600160e01b03191614611ba05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610e96565b6001600160a01b038516610e965760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b6004546001600160a01b03163314611c385760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb1919061336b565b905060008167ffffffffffffffff811115611cce57611cce6128b0565b604051908082528060200260200182016040528015611cf7578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d1557611d156128b0565b604051908082528060200260200182016040528015611d3e578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611daf919061336b565b90505b84821015611f2157600a54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2d9190613384565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea7919061336b565b905081868581518110611ebc57611ebc61322e565b6001600160a01b0390921660209283029190910190910152612710611ee28260646131da565b611eec90856131da565b611ef6919061320c565b858581518110611f0857611f0861322e565b6020026020010181815250508360010193505050611db2565b60005b85811015611f7157611f6987868381518110611f4257611f4261322e565b6020026020010151868481518110611f5c57611f5c61322e565b6020026020010151612768565b600101611f24565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611fb757600183039250600a81066030018353600a9004611f99565b50819003601f19909101908152919050565b6000611fd4826127ee565b5081600b6000828254611fe791906131f9565b9091555050600b5492915050565b60008381526001602090815260408083206001600160a01b0388168452909152812080548492906120279084906131f9565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b1561214e5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906120bc9033906000908990899089906004016133f9565b6020604051808303816000875af11580156120db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ff919061334e565b6001600160e01b031916146121495760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b612198565b6001600160a01b0384166121985760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050565b8051600090815b818110156121dc578381815181106121bf576121bf61322e565b6020026020010151836121d291906131f9565b92506001016121a5565b5050919050565b6004546001600160a01b0316803b63ffffffff811660000361220457505050565b60048054604051633b7279e960e21b81526001600160e01b03198616928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa15801561225c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612280919061336b565b90508034146121985763f7760f256000526004601cfd5b8154019055565b82516000805b82811015612314578581815181106122be576122be61322e565b602002602001015191508481815181106122da576122da61322e565b6020908102919091018101516000848152600180845260408083206001600160a01b038d16845290945292902080549091019055016122a4565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051612365929190613431565b60405180910390a46001600160a01b0386163b156123b45760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611b139033906000908b908b908b9060040161345f565b6001600160a01b038616610e965760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b600080600080600085875af19050806124595760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106da565b505050565b8154806124735763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166124ce5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106da565b81516000805b828110156125c0578481815181106124ee576124ee61322e565b6020026020010151915083818151811061250a5761250a61322e565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156125735760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b8381815181106125855761258561322e565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016124d4565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612611929190613431565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156126835760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906126b59084906133a1565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b348160085461271791906131da565b146127355760405163f7760f2560e01b815260040160405180910390fd5b60095481600b5461274691906131f9565b11156127655760405163d05cb60960e01b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806121985760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106da565b60006127fd6006838154019055565b60065461068f565b6001600160a01b038116811461276557600080fd5b6000806040838503121561282d57600080fd5b82359150602083013561283f81612805565b809150509250929050565b6000806040838503121561285d57600080fd5b823561286881612805565b946020939093013593505050565b6001600160e01b03198116811461276557600080fd5b60006020828403121561289e57600080fd5b81356128a981612876565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128ef576128ef6128b0565b604052919050565b6000602080838503121561290a57600080fd5b823567ffffffffffffffff8082111561292257600080fd5b818501915085601f83011261293657600080fd5b813581811115612948576129486128b0565b61295a601f8201601f191685016128c6565b9150808252868482850101111561297057600080fd5b8084840185840137600090820190930192909252509392505050565b60006020828403121561299e57600080fd5b5035919050565b60005b838110156129c05781810151838201526020016129a8565b50506000910152565b600081518084526129e18160208601602086016129a5565b601f01601f19169290920160200192915050565b6020815260006128a960208301846129c9565b600060208284031215612a1a57600080fd5b81356128a981612805565b60008060408385031215612a3857600080fd5b50508035926020909101359150565b60008083601f840112612a5957600080fd5b50813567ffffffffffffffff811115612a7157600080fd5b6020830191508360208260051b8501011115612a8c57600080fd5b9250929050565b60008083601f840112612aa557600080fd5b50813567ffffffffffffffff811115612abd57600080fd5b602083019150836020828501011115612a8c57600080fd5b60008060008060008060008060a0898b031215612af157600080fd5b8835612afc81612805565b97506020890135612b0c81612805565b9650604089013567ffffffffffffffff80821115612b2957600080fd5b612b358c838d01612a47565b909850965060608b0135915080821115612b4e57600080fd5b612b5a8c838d01612a47565b909650945060808b0135915080821115612b7357600080fd5b50612b808b828c01612a93565b999c989b5096995094979396929594505050565b600067ffffffffffffffff821115612bae57612bae6128b0565b5060051b60200190565b600082601f830112612bc957600080fd5b81356020612bde612bd983612b94565b6128c6565b82815260059290921b84018101918181019086841115612bfd57600080fd5b8286015b84811015612c185780358352918301918301612c01565b509695505050505050565b600080600060608486031215612c3857600080fd5b8335612c4381612805565b9250602084013567ffffffffffffffff80821115612c6057600080fd5b612c6c87838801612bb8565b93506040860135915080821115612c8257600080fd5b50612c8f86828701612bb8565b9150509250925092565b60008060008060408587031215612caf57600080fd5b843567ffffffffffffffff80821115612cc757600080fd5b612cd388838901612a47565b90965094506020870135915080821115612cec57600080fd5b50612cf987828801612a47565b95989497509550505050565b600081518084526020808501945080840160005b83811015612d3557815187529582019590820190600101612d19565b509495945050505050565b6020815260006128a96020830184612d05565b600080600060608486031215612d6857600080fd5b833567ffffffffffffffff80821115612d8057600080fd5b818601915086601f830112612d9457600080fd5b81356020612da4612bd983612b94565b82815260059290921b8401810191818101908a841115612dc357600080fd5b948201945b83861015612dea578535612ddb81612805565b82529482019490820190612dc8565b97505087013592505080821115612c6057600080fd5b80358015158114612e1057600080fd5b919050565b600060208284031215612e2757600080fd5b6128a982612e00565b600080600060608486031215612e4557600080fd5b8335612e5081612805565b925060208401359150604084013567ffffffffffffffff811115612e7357600080fd5b612c8f86828701612bb8565b60008060408385031215612e9257600080fd5b8235612e9d81612805565b915061098f60208401612e00565b60008060408385031215612ebe57600080fd5b823567ffffffffffffffff80821115612ed657600080fd5b612ee286838701612bb8565b93506020850135915080821115612ef857600080fd5b50612f0585828601612bb8565b9150509250929050565b60008060408385031215612f2257600080fd5b8235612f2d81612805565b9150602083013561283f81612805565b60008060008060008060a08789031215612f5657600080fd5b8635612f6181612805565b95506020870135612f7181612805565b94506040870135935060608701359250608087013567ffffffffffffffff811115612f9b57600080fd5b612fa789828a01612a93565b979a9699509497509295939492505050565b600181811c90821680612fcd57607f821691505b602082108103612fed57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561245957600081815260208120601f850160051c8101602086101561301a5750805b601f850160051c820191505b81811015610e9657828155600101613026565b815167ffffffffffffffff811115613053576130536128b0565b613067816130618454612fb9565b84612ff3565b602080601f83116001811461309c57600084156130845750858301515b600019600386901b1c1916600185901b178555610e96565b600085815260208120601f198616915b828110156130cb578886015182559484019460019091019084016130ac565b50858210156130e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161310b8184602087016129a5565b9190910192915050565b600080845461312381612fb9565b6001828116801561313b57600181146131505761317f565b60ff198416875282151583028701945061317f565b8860005260208060002060005b858110156131765781548a82015290840190820161315d565b50505082870194505b5050505083516131938183602088016129a5565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156131f4576131f46131c4565b500290565b8082018082111561068f5761068f6131c4565b60008261322957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561327657600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006132a3604083018688613244565b82810360208401526132b6818587613244565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261331760a08301888a613244565b828103606084015261332a818789613244565b9050828103608084015261333f8185876132c1565b9b9a5050505050505050505050565b60006020828403121561336057600080fd5b81516128a981612876565b60006020828403121561337d57600080fd5b5051919050565b60006020828403121561339657600080fd5b81516128a981612805565b8181038181111561068f5761068f6131c4565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526133ed60a0830184866132c1565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526132b660a08301846129c9565b6040815260006134446040830185612d05565b82810360208401526134568185612d05565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261348b60a0830186612d05565b828103606084015261349d8186612d05565b905082810360808401526133ed81856129c956fea164736f6c6343000810000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
