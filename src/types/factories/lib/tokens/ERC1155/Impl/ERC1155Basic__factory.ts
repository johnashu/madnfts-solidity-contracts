/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b50604051620038fc380380620038fc8339810160408190526200003991620001a8565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600762000094878262000356565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000422565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200018b57600080fd5b919050565b80516001600160601b03811681146200018b57600080fd5b60008060008060008060c08789031215620001c257600080fd5b86516001600160401b0380821115620001da57600080fd5b818901915089601f830112620001ef57600080fd5b8151818111156200020457620002046200015d565b604051601f8201601f19908116603f011681019083821181831017156200022f576200022f6200015d565b81604052828152602093508c848487010111156200024c57600080fd5b600091505b8282101562000270578482018401518183018501529083019062000251565b6000848483010152809a505050508089015196505050604087015193506200029b6060880162000173565b9250620002ab6080880162000190565b9150620002bb60a0880162000173565b90509295509295509295565b600181811c90821680620002dc57607f821691505b602082108103620002fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035157600081815260208120601f850160051c810160208610156200032c5750805b601f850160051c820191505b818110156200034d5782815560010162000338565b5050505b505050565b81516001600160401b038111156200037257620003726200015d565b6200038a81620003838454620002c7565b8462000303565b602080601f831160018114620003c25760008415620003a95750858301515b600019600386901b1c1916600185901b1785556200034d565b600085815260208120601f198616915b82811015620003f357888601518255948401946001909101908401620003d2565b5085821015620004125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6134ca80620004326000396000f3fe6080604052600436106101d65760003560e01c80636b20c45411610102578063a22cb46511610095578063e985e9c511610064578063e985e9c514610583578063f23a6e61146105bb578063f242432a146105e8578063f4f3b2001461060857600080fd5b8063a22cb465146104f2578063bc197c8114610512578063d351cfdc1461055a578063d5abeb011461056d57600080fd5b80638da5cb5b116100d15780638da5cb5b146104945780638e959323146104b45780638fc3b549146104c7578063a035b1fe146104dc57600080fd5b80636b20c454146104395780637754305c1461044c57806381b0b75614610461578063879fbedf1461047457600080fd5b80631b2ef1ca1161017a5780633512639c116101495780633512639c146103a75780633ccfd60b146103ba5780633cd8045e146103cf5780634e1273f41461040c57600080fd5b80631b2ef1ca1461031b57806322ab47a11461032e5780632a55205a146103485780632eb2c2d61461038757600080fd5b806302fe5305116101b657806302fe5305146102975780630e89341c146102b957806313af4035146102e657806318160ddd1461030657600080fd5b8062f74867146101db578062fdd58e1461022657806301ffc9a714610267575b600080fd5b3480156101e757600080fd5b506102136101f6366004612826565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023257600080fd5b50610213610241366004612856565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027357600080fd5b50610287610282366004612898565b610628565b604051901515815260200161021d565b3480156102a357600080fd5b506102b76102b2366004612903565b610695565b005b3480156102c557600080fd5b506102d96102d4366004612998565b610731565b60405161021d9190612a01565b3480156102f257600080fd5b506102b7610301366004612a14565b61077d565b34801561031257600080fd5b5061021361082a565b6102b7610329366004612a31565b61083a565b34801561033a57600080fd5b50600a546102879060ff1681565b34801561035457600080fd5b50610368610363366004612a31565b610962565b604080516001600160a01b03909316835260208301919091520161021d565b34801561039357600080fd5b506102b76103a2366004612ae1565b610998565b6102b76103b5366004612c2f565b610d8d565b3480156103c657600080fd5b506102b7610e9e565b3480156103db57600080fd5b50600a546103f49061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b34801561041857600080fd5b5061042c610427366004612ca5565b6111ae565b60405161021d9190612d4c565b6102b7610447366004612c2f565b6112d8565b34801561045857600080fd5b506102d96113e2565b6102b761046f366004612d5f565b611474565b34801561048057600080fd5b506102b761048f366004612e21565b6115b6565b3480156104a057600080fd5b506004546103f4906001600160a01b031681565b6102b76104c2366004612e3c565b61163c565b3480156104d357600080fd5b50600b54610213565b3480156104e857600080fd5b5061021360085481565b3480156104fe57600080fd5b506102b761050d366004612e8b565b61173f565b34801561051e57600080fd5b5061054161052d366004612ae1565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161021d565b6102b7610568366004612eb7565b6117a9565b34801561057957600080fd5b5061021360095481565b34801561058f57600080fd5b5061028761059e366004612f1b565b600060208181529281526040808220909352908152205460ff1681565b3480156105c757600080fd5b506105416105d6366004612f49565b63f23a6e6160e01b9695505050505050565b3480156105f457600080fd5b506102b7610603366004612f49565b6118de565b34801561061457600080fd5b506102b7610623366004612a14565b611bef565b60006301ffc9a760e01b6001600160e01b0319831614806106595750636cdb3d1360e11b6001600160e01b03198316145b8061067457506303a24d0760e21b6001600160e01b03198316145b8061068f575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106e35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60076106ef8282613045565b50806040516106fe9190613105565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561074b5763bad086ea6000526004601cfd5b600761075683611f7a565b604051602001610767929190613121565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107c65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061083560065490565b905090565b6005546001146108795760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff166108a1576040516316851fc760e11b815260040160405180910390fd5b6108ab81836131e6565b60095481600b546108bc9190613205565b11156108db5760405163d05cb60960e01b815260040160405180910390fd5b60085483346108ea82846131e6565b146109085760405163f7760f2560e01b815260040160405180910390fd5b60005b8581101561093f57610937336109216001611fc9565b8760405180602001604052806000815250612001565b60010161090b565b858110156109555763dfb035c96000526004601cfd5b5050600160055550505050565b6003546002546001600160a01b03909116906000906127109061098590856131e6565b61098f9190613218565b90509250929050565b8483146109d95760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b336001600160a01b0389161480610a1157506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a4e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008060005b87811015610bfd57888882818110610a6e57610a6e61323a565b905060200201359250868682818110610a8957610a8961323a565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610b055760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b685760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a54565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c51949392919061329b565b60405180910390a46001600160a01b0389163b15610d375760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ca59033908f908e908e908e908e908e908e906004016132f6565b6020604051808303816000875af1158015610cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce8919061335a565b6001600160e01b03191614610d325760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610d81565b6001600160a01b038916610d815760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050505050505050565b6004546001600160a01b03163314610dd65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b610ddf816121aa565b60095481600b54610df09190613205565b1115610e0f5760405163d05cb60960e01b815260040160405180910390fd5b610e1f6340d097c360e01b6121ef565b82516000905b80821015610e6557610e5a848381518110610e4257610e4261323a565b602002602001015160066122a390919063ffffffff16565b816001019150610e25565b80821015610e7b5763dfb035c96000526004601cfd5b610e96868686604051806020016040528060008152506122aa565b505050505050565b6004546001600160a01b03163314610ee75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190613377565b905060008167ffffffffffffffff811115610f7d57610f7d6128bc565b604051908082528060200260200182016040528015610fa6578160200160208202803683370190505b50905060008267ffffffffffffffff811115610fc457610fc46128bc565b604051908082528060200260200182016040528015610fed578160200160208202803683370190505b5090504760005b8481101561115f57600a54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa15801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190613390565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa1580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e99190613377565b9050818684815181106110fe576110fe61323a565b6001600160a01b03909216602092830291909101909101526127106111248260646131e6565b61112e90866131e6565b6111389190613218565b85848151811061114a5761114a61323a565b60209081029190910101525050600101610ff4565b60005b85811015610e96576111a685828151811061117f5761117f61323a565b60200260200101518583815181106111995761119961323a565b602002602001015161240a565b600101611162565b60608382146111f15760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b8367ffffffffffffffff81111561120a5761120a6128bc565b604051908082528060200260200182016040528015611233578160200160208202803683370190505b50905060005b848110156112cf576112aa8686838181106112565761125661323a565b905060200201602081019061126b9190612a14565b85858481811061127d5761127d61323a565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106112bc576112bc61323a565b6020908102919091010152600101611239565b50949350505050565b6004546001600160a01b031633146113215760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b61133163044df8e760e41b6121ef565b80518251146113745760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b81516000905b808210156113ba576113af8383815181106113975761139761323a565b6020026020010151600661246a90919063ffffffff16565b81600101915061137a565b808210156113d05763dfb035c96000526004601cfd5b6113db858585612484565b5050505050565b6060600780546113f190612fc5565b80601f016020809104026020016040519081016040528092919081815260200182805461141d90612fc5565b801561146a5780601f1061143f5761010080835404028352916020019161146a565b820191906000526020600020905b81548152906001019060200180831161144d57829003601f168201915b5050505050905090565b6004546001600160a01b031633146114bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6114cd63044df8e760e41b6121ef565b8151835160009190811480156114e4575082518451145b6115225760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106da565b808210156115a05761153f8383815181106113975761139761323a565b6115958583815181106115545761155461323a565b602002602001015185848151811061156e5761156e61323a565b60200260200101518585815181106115885761158861323a565b602002602001015161262c565b816001019150611522565b808210156113db5763dfb035c96000526004601cfd5b6004546001600160a01b031633146115ff5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6004546001600160a01b031633146116855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b8161168f826121aa565b61169991906131e6565b60095481600b546116aa9190613205565b11156116c95760405163d05cb60960e01b815260040160405180910390fd5b6116d96340d097c360e01b6121ef565b60005b8381101561172957611721856116f26001611fc9565b8584815181106117045761170461323a565b602002602001015160405180602001604052806000815250612001565b6001016116dc565b838110156113db5763dfb035c96000526004601cfd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6005546001146117e85760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106da565b6002600555600a5460ff16611810576040516316851fc760e11b815260040160405180910390fd5b80518251146118615760405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e475448000000000000000000000000000000000060448201526064016106da565b815161186c81612714565b60005b818110156118a25761189983828151811061188c5761188c61323a565b6020026020010151611fc9565b5060010161186f565b818110156118b85763dfb035c96000526004601cfd5b6118d3338585604051806020016040528060008152506122aa565b505060016005555050565b336001600160a01b038716148061191657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119535760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a1684529091529020546119af5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611a125760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611a44908490613205565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611a7b9084906133ad565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611ba55760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611b139033908b908a908a908a908a906004016133c0565b6020604051808303816000875af1158015611b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b56919061335a565b6001600160e01b03191614611ba05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b610e96565b6001600160a01b038516610e965760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b6004546001600160a01b03163314611c385760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106da565b6000600a60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb19190613377565b905060008167ffffffffffffffff811115611cce57611cce6128bc565b604051908082528060200260200182016040528015611cf7578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d1557611d156128bc565b604051908082528060200260200182016040528015611d3e578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611daf9190613377565b90505b84821015611f2157600a54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2d9190613390565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea79190613377565b905081868581518110611ebc57611ebc61323a565b6001600160a01b0390921660209283029190910190910152612710611ee28260646131e6565b611eec90856131e6565b611ef69190613218565b858581518110611f0857611f0861323a565b6020026020010181815250508360010193505050611db2565b60005b85811015611f7157611f6987868381518110611f4257611f4261323a565b6020026020010151868481518110611f5c57611f5c61323a565b6020026020010151612774565b600101611f24565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611fb757600183039250600a81066030018353600a9004611f99565b50819003601f19909101908152919050565b6000611fd36127fa565b50611fe16006838154019055565b81600b6000828254611ff39190613205565b9091555050600b5492915050565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612033908490613205565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b1561215a5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906120c8903390600090899089908990600401613405565b6020604051808303816000875af11580156120e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210b919061335a565b6001600160e01b031916146121555760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106da565b6121a4565b6001600160a01b0384166121a45760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b50505050565b8051600090815b818110156121e8578381815181106121cb576121cb61323a565b6020026020010151836121de9190613205565b92506001016121b1565b5050919050565b6004546001600160a01b0316803b63ffffffff811660000361221057505050565b60048054604051633b7279e960e21b81526001600160e01b03198616928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228c9190613377565b90508034146121a45763f7760f256000526004601cfd5b8154019055565b82516000805b82811015612320578581815181106122ca576122ca61323a565b602002602001015191508481815181106122e6576122e661323a565b6020908102919091018101516000848152600180845260408083206001600160a01b038d16845290945292902080549091019055016122b0565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888860405161237192919061343d565b60405180910390a46001600160a01b0386163b156123c05760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611b139033906000908b908b908b9060040161346b565b6001600160a01b038616610e965760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106da565b600080600080600085875af19050806124655760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106da565b505050565b81548061247f5763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166124da5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106da565b81516000805b828110156125cc578481815181106124fa576124fa61323a565b602002602001015191508381815181106125165761251661323a565b60209081029190910181015160008481526001835260408082206001600160a01b038b1683529093529190912054101561257f5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106da565b8381815181106125915761259161323a565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016124e0565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161261d92919061343d565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561268f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106da565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906126c19084906133ad565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b348160085461272391906131e6565b146127415760405163f7760f2560e01b815260040160405180910390fd5b60095481600b546127529190613205565b11156127715760405163d05cb60960e01b815260040160405180910390fd5b50565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806121a45760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106da565b600061280a600680546001019055565b5060065490565b6001600160a01b038116811461277157600080fd5b6000806040838503121561283957600080fd5b82359150602083013561284b81612811565b809150509250929050565b6000806040838503121561286957600080fd5b823561287481612811565b946020939093013593505050565b6001600160e01b03198116811461277157600080fd5b6000602082840312156128aa57600080fd5b81356128b581612882565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128fb576128fb6128bc565b604052919050565b6000602080838503121561291657600080fd5b823567ffffffffffffffff8082111561292e57600080fd5b818501915085601f83011261294257600080fd5b813581811115612954576129546128bc565b612966601f8201601f191685016128d2565b9150808252868482850101111561297c57600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156129aa57600080fd5b5035919050565b60005b838110156129cc5781810151838201526020016129b4565b50506000910152565b600081518084526129ed8160208601602086016129b1565b601f01601f19169290920160200192915050565b6020815260006128b560208301846129d5565b600060208284031215612a2657600080fd5b81356128b581612811565b60008060408385031215612a4457600080fd5b50508035926020909101359150565b60008083601f840112612a6557600080fd5b50813567ffffffffffffffff811115612a7d57600080fd5b6020830191508360208260051b8501011115612a9857600080fd5b9250929050565b60008083601f840112612ab157600080fd5b50813567ffffffffffffffff811115612ac957600080fd5b602083019150836020828501011115612a9857600080fd5b60008060008060008060008060a0898b031215612afd57600080fd5b8835612b0881612811565b97506020890135612b1881612811565b9650604089013567ffffffffffffffff80821115612b3557600080fd5b612b418c838d01612a53565b909850965060608b0135915080821115612b5a57600080fd5b612b668c838d01612a53565b909650945060808b0135915080821115612b7f57600080fd5b50612b8c8b828c01612a9f565b999c989b5096995094979396929594505050565b600067ffffffffffffffff821115612bba57612bba6128bc565b5060051b60200190565b600082601f830112612bd557600080fd5b81356020612bea612be583612ba0565b6128d2565b82815260059290921b84018101918181019086841115612c0957600080fd5b8286015b84811015612c245780358352918301918301612c0d565b509695505050505050565b600080600060608486031215612c4457600080fd5b8335612c4f81612811565b9250602084013567ffffffffffffffff80821115612c6c57600080fd5b612c7887838801612bc4565b93506040860135915080821115612c8e57600080fd5b50612c9b86828701612bc4565b9150509250925092565b60008060008060408587031215612cbb57600080fd5b843567ffffffffffffffff80821115612cd357600080fd5b612cdf88838901612a53565b90965094506020870135915080821115612cf857600080fd5b50612d0587828801612a53565b95989497509550505050565b600081518084526020808501945080840160005b83811015612d4157815187529582019590820190600101612d25565b509495945050505050565b6020815260006128b56020830184612d11565b600080600060608486031215612d7457600080fd5b833567ffffffffffffffff80821115612d8c57600080fd5b818601915086601f830112612da057600080fd5b81356020612db0612be583612ba0565b82815260059290921b8401810191818101908a841115612dcf57600080fd5b948201945b83861015612df6578535612de781612811565b82529482019490820190612dd4565b97505087013592505080821115612c6c57600080fd5b80358015158114612e1c57600080fd5b919050565b600060208284031215612e3357600080fd5b6128b582612e0c565b600080600060608486031215612e5157600080fd5b8335612e5c81612811565b925060208401359150604084013567ffffffffffffffff811115612e7f57600080fd5b612c9b86828701612bc4565b60008060408385031215612e9e57600080fd5b8235612ea981612811565b915061098f60208401612e0c565b60008060408385031215612eca57600080fd5b823567ffffffffffffffff80821115612ee257600080fd5b612eee86838701612bc4565b93506020850135915080821115612f0457600080fd5b50612f1185828601612bc4565b9150509250929050565b60008060408385031215612f2e57600080fd5b8235612f3981612811565b9150602083013561284b81612811565b60008060008060008060a08789031215612f6257600080fd5b8635612f6d81612811565b95506020870135612f7d81612811565b94506040870135935060608701359250608087013567ffffffffffffffff811115612fa757600080fd5b612fb389828a01612a9f565b979a9699509497509295939492505050565b600181811c90821680612fd957607f821691505b602082108103612ff957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561246557600081815260208120601f850160051c810160208610156130265750805b601f850160051c820191505b81811015610e9657828155600101613032565b815167ffffffffffffffff81111561305f5761305f6128bc565b6130738161306d8454612fc5565b84612fff565b602080601f8311600181146130a857600084156130905750858301515b600019600386901b1c1916600185901b178555610e96565b600085815260208120601f198616915b828110156130d7578886015182559484019460019091019084016130b8565b50858210156130f55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516131178184602087016129b1565b9190910192915050565b600080845461312f81612fc5565b60018281168015613147576001811461315c5761318b565b60ff198416875282151583028701945061318b565b8860005260208060002060005b858110156131825781548a820152908401908201613169565b50505082870194505b50505050835161319f8183602088016129b1565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613200576132006131d0565b500290565b8082018082111561068f5761068f6131d0565b60008261323557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561328257600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006132af604083018688613250565b82810360208401526132c2818587613250565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261332360a08301888a613250565b8281036060840152613336818789613250565b9050828103608084015261334b8185876132cd565b9b9a5050505050505050505050565b60006020828403121561336c57600080fd5b81516128b581612882565b60006020828403121561338957600080fd5b5051919050565b6000602082840312156133a257600080fd5b81516128b581612811565b8181038181111561068f5761068f6131d0565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526133f960a0830184866132cd565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526132c260a08301846129d5565b6040815260006134506040830185612d11565b82810360208401526134628185612d11565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261349760a0830186612d11565b82810360608401526134a98186612d11565b905082810360808401526133f981856129d556fea164736f6c6343000810000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
