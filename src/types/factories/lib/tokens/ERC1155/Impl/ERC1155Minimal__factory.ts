/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Minimal,
  ERC1155MinimalInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b3238038062002b328339810160408190526200003491620001a9565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35060076200008f878262000360565b506006859055600580546001600160a01b038087166001600160a01b031992831681179093556001600160601b03861660028190556003805490931690931790915560088054918416620100000262010000600160b01b03199092169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050506200042c565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200018c57600080fd5b919050565b80516001600160601b03811681146200018c57600080fd5b60008060008060008060c08789031215620001c357600080fd5b86516001600160401b0380821115620001db57600080fd5b818901915089601f830112620001f057600080fd5b8151818111156200020557620002056200015e565b604051601f8201601f19908116603f011681019083821181831017156200023057620002306200015e565b81604052828152602093508c848487010111156200024d57600080fd5b600091505b8282101562000271578482018401518183018501529083019062000252565b6000848483010152809a505050508089015196505050620002956040880162000174565b9350620002a56060880162000191565b9250620002b56080880162000174565b9150620002c560a0880162000174565b90509295509295509295565b600181811c90821680620002e657607f821691505b6020821081036200030757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035b57600081815260208120601f850160051c81016020861015620003365750805b601f850160051c820191505b81811015620003575782815560010162000342565b5050505b505050565b81516001600160401b038111156200037c576200037c6200015e565b62000394816200038d8454620002d1565b846200030d565b602080601f831160018114620003cc5760008415620003b35750858301515b600019600386901b1c1916600185901b17855562000357565b600085815260208120601f198616915b82811015620003fd57888601518255948401946001909101908401620003dc565b50858210156200041c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6126f6806200043c6000396000f3fe6080604052600436106101895760003560e01c80634e1273f4116100d6578063b8ce670d1161007f578063f23a6e6111610059578063f23a6e61146104e6578063f242432a14610513578063f4f3b2001461053357600080fd5b8063b8ce670d14610453578063bc197c8114610466578063e985e9c5146104ae57600080fd5b80638da5cb5b116100b05780638da5cb5b146103fd578063a035b1fe1461041d578063a22cb4651461043357600080fd5b80634e1273f41461038a578063785e9e86146103b7578063879fbedf146103dd57600080fd5b806322ab47a1116101385780632eb2c2d6116101125780632eb2c2d61461031d5780633ccfd60b1461033d5780633cd8045e1461035257600080fd5b806322ab47a1146102ac5780632a55205a146102cb5780632db115441461030a57600080fd5b80630e89341c116101695780630e89341c1461024a57806313af40351461027757806320e469d61461029957600080fd5b8062f748671461018e578062fdd58e146101d957806301ffc9a71461021a575b600080fd5b34801561019a57600080fd5b506101c66101a9366004611fa0565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b506101c66101f4366004611fd0565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561022657600080fd5b5061023a610235366004612012565b610553565b60405190151581526020016101d0565b34801561025657600080fd5b5061026a610265366004612036565b6105c0565b6040516101d09190612095565b34801561028357600080fd5b506102976102923660046120a8565b610698565b005b6102976102a73660046120c5565b61074a565b3480156102b857600080fd5b5060085461023a90610100900460ff1681565b3480156102d757600080fd5b506102eb6102e6366004612107565b610815565b604080516001600160a01b0390931683526020830191909152016101d0565b610297610318366004612036565b61084b565b34801561032957600080fd5b506102976103383660046121b7565b61098c565b34801561034957600080fd5b50610297610d81565b34801561035e57600080fd5b50600554610372906001600160a01b031681565b6040516001600160a01b0390911681526020016101d0565b34801561039657600080fd5b506103aa6103a5366004612276565b611083565b6040516101d091906122e2565b3480156103c357600080fd5b50600854610372906201000090046001600160a01b031681565b3480156103e957600080fd5b506102976103f836600461233b565b6111ad565b34801561040957600080fd5b50600454610372906001600160a01b031681565b34801561042957600080fd5b506101c660065481565b34801561043f57600080fd5b5061029761044e366004612356565b611245565b6102976104613660046120c5565b6112af565b34801561047257600080fd5b506104956104813660046121b7565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101d0565b3480156104ba57600080fd5b5061023a6104c9366004612382565b600060208181529281526040808220909352908152205460ff1681565b3480156104f257600080fd5b506104956105013660046123b0565b63f23a6e6160e01b9695505050505050565b34801561051f57600080fd5b5061029761052e3660046123b0565b61130f565b34801561053f57600080fd5b5061029761054e3660046120a8565b611620565b60006301ffc9a760e01b6001600160e01b0319831614806105845750636cdb3d1360e11b6001600160e01b03198316145b8061059f57506303a24d0760e21b6001600160e01b03198316145b806105ba575063152a902d60e11b6001600160e01b03198316145b92915050565b6060816001146105e357604051631bf4348160e31b815260040160405180910390fd5b60085460ff1661060657604051634d5e5fb360e01b815260040160405180910390fd5b600780546106139061242c565b80601f016020809104026020016040519081016040528092919081815260200182805461063f9061242c565b801561068c5780601f106106615761010080835404028352916020019161068c565b820191906000526020600020905b81548152906001019060200180831161066f57829003601f168201915b50505050509050919050565b6004546001600160a01b031633146106e65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6004546001600160a01b031633146107935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106dd565b60085460ff16156107b757604051631bbdf5c560e31b815260040160405180910390fd5b60018211156107d957604051631bf4348160e31b815260040160405180910390fd5b6107e4816000611995565b6008805460ff191660019081179091556040805160208101909152600081526108109185918590611ace565b505050565b6003546002546001600160a01b039091169060009061271090610838908561247c565b610842919061249b565b90509250929050565b600854610100900460ff166108735760405163287588a160e11b815260040160405180910390fd5b6008546000906201000090046001600160a01b03166108925734610909565b600854604051636eb1769f60e11b8152336004820152306024820152620100009091046001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090991906124bd565b9050600654811461092d5760405163f7760f2560e01b815260040160405180910390fd5b60085460ff161561095157604051631bbdf5c560e31b815260040160405180910390fd5b61095c336002611995565b6008805460ff191660019081179091556040805160208101909152600081526109889133918590611ace565b5050565b8483146109cd5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106dd565b336001600160a01b0389161480610a0557506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a425760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106dd565b60008060005b87811015610bf157888882818110610a6257610a626124d6565b905060200201359250868682818110610a7d57610a7d6124d6565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610af95760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106dd565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b5c5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106dd565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a48565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c459493929190612537565b60405180910390a46001600160a01b0389163b15610d2b5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610c999033908f908e908e908e908e908e908e90600401612592565b6020604051808303816000875af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc91906125f6565b6001600160e01b03191614610d265760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106dd565b610d75565b6001600160a01b038916610d755760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106dd565b50505050505050505050565b6004546001600160a01b03163314610dca5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106dd565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3891906124bd565b905060008167ffffffffffffffff811115610e5557610e55612613565b604051908082528060200260200182016040528015610e7e578160200160208202803683370190505b50905060008267ffffffffffffffff811115610e9c57610e9c612613565b604051908082528060200260200182016040528015610ec5578160200160208202803683370190505b5090504760005b8481101561102c57600554604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612629565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610f92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb691906124bd565b905081868481518110610fcb57610fcb6124d6565b6001600160a01b0390921660209283029190910190910152612710610ff182606461247c565b610ffb908661247c565b611005919061249b565b858481518110611017576110176124d6565b60209081029190910101525050600101610ecc565b60005b8581101561107b5761107385828151811061104c5761104c6124d6565b6020026020010151858381518110611066576110666124d6565b6020026020010151611c77565b60010161102f565b505050505050565b60608382146110c65760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106dd565b8367ffffffffffffffff8111156110df576110df612613565b604051908082528060200260200182016040528015611108578160200160208202803683370190505b50905060005b848110156111a45761117f86868381811061112b5761112b6124d6565b905060200201602081019061114091906120a8565b858584818110611152576111526124d6565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b828281518110611191576111916124d6565b602090810291909101015260010161110e565b50949350505050565b6004546001600160a01b031633146111f65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106dd565b6008805461ff0019166101008315158102919091179182905560405160ff91909204161515907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146112f85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106dd565b611303816001611995565b61081083600184611cd2565b336001600160a01b038716148061134757506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6113845760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106dd565b60008481526001602090815260408083206001600160a01b038a1684529091529020546113e05760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106dd565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156114435760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106dd565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611475908490612646565b909155505060008481526001602090815260408083206001600160a01b038a168452909152812080548592906114ac908490612659565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156115d65760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906115449033908b908a908a908a908a9060040161266c565b6020604051808303816000875af1158015611563573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158791906125f6565b6001600160e01b031916146115d15760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106dd565b61107b565b6001600160a01b03851661107b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106dd565b6004546001600160a01b031633146116695760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106dd565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156116b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d791906124bd565b905060008167ffffffffffffffff8111156116f4576116f4612613565b60405190808252806020026020018201604052801561171d578160200160208202803683370190505b50905060008267ffffffffffffffff81111561173b5761173b612613565b604051908082528060200260200182016040528015611764578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156117b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d591906124bd565b90505b8482101561193c57600554604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561182a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184e9190612629565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561189e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c291906124bd565b9050818685815181106118d7576118d76124d6565b6001600160a01b03909216602092830291909101909101526127106118fd82606461247c565b611907908561247c565b611911919061249b565b858581518110611923576119236124d6565b60200260200101818152505083600101935050506117d8565b60005b8581101561198c576119848786838151811061195d5761195d6124d6565b6020026020010151868481518110611977576119776124d6565b6020026020010151611dba565b60010161193f565b50505050505050565b6008546000906201000090046001600160a01b03166119b45734611a2f565b600854604051636eb1769f60e11b81526001600160a01b038581166004830152306024830152620100009092049091169063dd62ed3e90604401602060405180830381865afa158015611a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2f91906124bd565b9050336001600160a01b0384161480611a5757506008546201000090046001600160a01b0316155b15610810578160ff16600003611a7d57611a786340d097c360e01b82611e40565b611a99565b8160ff16600103611a9957611a9963044df8e760e41b82611e40565b6008546201000090046001600160a01b03161561081057600854610810906201000090046001600160a01b0316843084611efc565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290611b00908490612646565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15611c275760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190611b959033906000908990899089906004016126b1565b6020604051808303816000875af1158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd891906125f6565b6001600160e01b03191614611c225760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106dd565b611c71565b6001600160a01b038416611c715760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106dd565b50505050565b600080600080600085875af19050806108105760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106dd565b60008281526001602090815260408083206001600160a01b0387168452909152902054811115611d355760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106dd565b60008281526001602090815260408083206001600160a01b038716845290915281208054839290611d67908490612659565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611c715760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106dd565b6004546001600160a01b0316803b63ffffffff8116600003611e625750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ede91906124bd565b9050808414611ef55763f7760f256000526004601cfd5b5050505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611ef55760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016106dd565b6001600160a01b0381168114611f9d57600080fd5b50565b60008060408385031215611fb357600080fd5b823591506020830135611fc581611f88565b809150509250929050565b60008060408385031215611fe357600080fd5b8235611fee81611f88565b946020939093013593505050565b6001600160e01b031981168114611f9d57600080fd5b60006020828403121561202457600080fd5b813561202f81611ffc565b9392505050565b60006020828403121561204857600080fd5b5035919050565b6000815180845260005b8181101561207557602081850181015186830182015201612059565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061202f602083018461204f565b6000602082840312156120ba57600080fd5b813561202f81611f88565b6000806000606084860312156120da57600080fd5b83356120e581611f88565b92506020840135915060408401356120fc81611f88565b809150509250925092565b6000806040838503121561211a57600080fd5b50508035926020909101359150565b60008083601f84011261213b57600080fd5b50813567ffffffffffffffff81111561215357600080fd5b6020830191508360208260051b850101111561216e57600080fd5b9250929050565b60008083601f84011261218757600080fd5b50813567ffffffffffffffff81111561219f57600080fd5b60208301915083602082850101111561216e57600080fd5b60008060008060008060008060a0898b0312156121d357600080fd5b88356121de81611f88565b975060208901356121ee81611f88565b9650604089013567ffffffffffffffff8082111561220b57600080fd5b6122178c838d01612129565b909850965060608b013591508082111561223057600080fd5b61223c8c838d01612129565b909650945060808b013591508082111561225557600080fd5b506122628b828c01612175565b999c989b5096995094979396929594505050565b6000806000806040858703121561228c57600080fd5b843567ffffffffffffffff808211156122a457600080fd5b6122b088838901612129565b909650945060208701359150808211156122c957600080fd5b506122d687828801612129565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561231a578351835292840192918401916001016122fe565b50909695505050505050565b8035801515811461233657600080fd5b919050565b60006020828403121561234d57600080fd5b61202f82612326565b6000806040838503121561236957600080fd5b823561237481611f88565b915061084260208401612326565b6000806040838503121561239557600080fd5b82356123a081611f88565b91506020830135611fc581611f88565b60008060008060008060a087890312156123c957600080fd5b86356123d481611f88565b955060208701356123e481611f88565b94506040870135935060608701359250608087013567ffffffffffffffff81111561240e57600080fd5b61241a89828a01612175565b979a9699509497509295939492505050565b600181811c9082168061244057607f821691505b60208210810361246057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561249657612496612466565b500290565b6000826124b857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156124cf57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561251e57600080fd5b8260051b80836020870137939093016020019392505050565b60408152600061254b6040830186886124ec565b828103602084015261255e8185876124ec565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526125bf60a08301888a6124ec565b82810360608401526125d28187896124ec565b905082810360808401526125e7818587612569565b9b9a5050505050505050505050565b60006020828403121561260857600080fd5b815161202f81611ffc565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561263b57600080fd5b815161202f81611f88565b808201808211156105ba576105ba612466565b818103818111156105ba576105ba612466565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526126a560a083018486612569565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261255e60a083018461204f56fea164736f6c6343000810000a";

type ERC1155MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Minimal__factory extends ContractFactory {
  constructor(...args: ERC1155MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Minimal> {
    return super.deploy(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Minimal>;
  }
  override getDeployTransaction(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Minimal {
    return super.attach(address) as ERC1155Minimal;
  }
  override connect(signer: Signer): ERC1155Minimal__factory {
    return super.connect(signer) as ERC1155Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MinimalInterface {
    return new utils.Interface(_abi) as ERC1155MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Minimal;
  }
}
