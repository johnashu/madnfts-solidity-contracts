/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Minimal,
  ERC1155MinimalInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f2a38038062002f2a8339810160408190526200003491620001a9565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35060076200008f878262000360565b506006859055600580546001600160a01b038087166001600160a01b031992831681179093556001600160601b03861660028190556003805490931690931790915560088054918416620100000262010000600160b01b03199092169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050506200042c565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200018c57600080fd5b919050565b80516001600160601b03811681146200018c57600080fd5b60008060008060008060c08789031215620001c357600080fd5b86516001600160401b0380821115620001db57600080fd5b818901915089601f830112620001f057600080fd5b8151818111156200020557620002056200015e565b604051601f8201601f19908116603f011681019083821181831017156200023057620002306200015e565b81604052828152602093508c848487010111156200024d57600080fd5b600091505b8282101562000271578482018401518183018501529083019062000252565b6000848483010152809a505050508089015196505050620002956040880162000174565b9350620002a56060880162000191565b9250620002b56080880162000174565b9150620002c560a0880162000174565b90509295509295509295565b600181811c90821680620002e657607f821691505b6020821081036200030757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035b57600081815260208120601f850160051c81016020861015620003365750805b601f850160051c820191505b81811015620003575782815560010162000342565b5050505b505050565b81516001600160401b038111156200037c576200037c6200015e565b62000394816200038d8454620002d1565b846200030d565b602080601f831160018114620003cc5760008415620003b35750858301515b600019600386901b1c1916600185901b17855562000357565b600085815260208120601f198616915b82811015620003fd57888601518255948401946001909101908401620003dc565b50858210156200041c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612aee806200043c6000396000f3fe6080604052600436106101aa5760003560e01c80634e1273f4116100ec578063a22cb4651161008a578063e985e9c511610064578063e985e9c514610508578063f23a6e6114610540578063f242432a1461056d578063f4f3b2001461058d57600080fd5b8063a22cb4651461048d578063b8ce670d146104ad578063bc197c81146104c057600080fd5b80638da5cb5b116100c65780638da5cb5b146104315780639dc29fac14610451578063a035b1fe14610464578063a14481941461047a57600080fd5b80634e1273f4146103be578063785e9e86146103eb578063879fbedf1461041157600080fd5b806322ab47a1116101595780632eb2c2d6116101335780632eb2c2d61461033e5780633ccfd60b1461035e5780633cd8045e1461037357806341a38e7f146103ab57600080fd5b806322ab47a1146102cd5780632a55205a146102ec5780632db115441461032b57600080fd5b80630e89341c1161018a5780630e89341c1461026b57806313af40351461029857806320e469d6146102ba57600080fd5b8062f74867146101af578062fdd58e146101fa57806301ffc9a71461023b575b600080fd5b3480156101bb57600080fd5b506101e76101ca366004612398565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e76102153660046123c8565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561024757600080fd5b5061025b61025636600461240a565b6105ad565b60405190151581526020016101f1565b34801561027757600080fd5b5061028b61028636600461242e565b61061a565b6040516101f1919061248d565b3480156102a457600080fd5b506102b86102b33660046124a0565b6106f2565b005b6102b86102c83660046124bd565b6107a4565b3480156102d957600080fd5b5060085461025b90610100900460ff1681565b3480156102f857600080fd5b5061030c6103073660046124ff565b61095e565b604080516001600160a01b0390931683526020830191909152016101f1565b6102b861033936600461242e565b610994565b34801561034a57600080fd5b506102b86103593660046125af565b610a7f565b34801561036a57600080fd5b506102b8610e74565b34801561037f57600080fd5b50600554610393906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b6102b86103b9366004612398565b611176565b3480156103ca57600080fd5b506103de6103d936600461266e565b6112fd565b6040516101f191906126da565b3480156103f757600080fd5b50600854610393906201000090046001600160a01b031681565b34801561041d57600080fd5b506102b861042c366004612733565b611427565b34801561043d57600080fd5b50600454610393906001600160a01b031681565b6102b861045f3660046123c8565b6114bf565b34801561047057600080fd5b506101e760065481565b6102b86104883660046123c8565b611577565b34801561049957600080fd5b506102b86104a836600461274e565b611691565b6102b86104bb3660046124bd565b6116fb565b3480156104cc57600080fd5b506104ef6104db3660046125af565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101f1565b34801561051457600080fd5b5061025b61052336600461277a565b600060208181529281526040808220909352908152205460ff1681565b34801561054c57600080fd5b506104ef61055b3660046127a8565b63f23a6e6160e01b9695505050505050565b34801561057957600080fd5b506102b86105883660046127a8565b611849565b34801561059957600080fd5b506102b86105a83660046124a0565b611b5a565b60006301ffc9a760e01b6001600160e01b0319831614806105de5750636cdb3d1360e11b6001600160e01b03198316145b806105f957506303a24d0760e21b6001600160e01b03198316145b80610614575063152a902d60e11b6001600160e01b03198316145b92915050565b60608160011461063d57604051631bf4348160e31b815260040160405180910390fd5b60085460ff1661066057604051634d5e5fb360e01b815260040160405180910390fd5b6007805461066d90612824565b80601f016020809104026020016040519081016040528092919081815260200182805461069990612824565b80156106e65780601f106106bb576101008083540402835291602001916106e6565b820191906000526020600020905b8154815290600101906020018083116106c957829003601f168201915b50505050509050919050565b6004546001600160a01b031633146107405760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6004546001600160a01b031633146107ed5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6008546201000090046001600160a01b031661083a5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b600854604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b5919061285e565b90506108c86340d097c360e01b82611ecf565b60085460ff16156108ec57604051631bbdf5c560e31b815260040160405180910390fd5b600183111561090e57604051631bf4348160e31b815260040160405180910390fd5b60085461092c906201000090046001600160a01b0316833084611f8b565b6008805460ff191660019081179091556040805160208101909152600081526109589186918690612017565b50505050565b6003546002546001600160a01b039091169060009061271090610981908561288d565b61098b91906128ac565b90509250929050565b6008546201000090046001600160a01b0316156109e25760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b600854610100900460ff16610a0a5760405163287588a160e11b815260040160405180910390fd5b6006543414610a2c5760405163f7760f2560e01b815260040160405180910390fd5b60085460ff1615610a5057604051631bbdf5c560e31b815260040160405180910390fd5b6008805460ff19166001908117909155604080516020810190915260008152610a7c9133918490612017565b50565b848314610ac05760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610737565b336001600160a01b0389161480610af857506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610b355760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610737565b60008060005b87811015610ce457888882818110610b5557610b556128ce565b905060200201359250868682818110610b7057610b706128ce565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610bec5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610737565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610c4f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610737565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610b3b565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610d38949392919061292f565b60405180910390a46001600160a01b0389163b15610e1e5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610d8c9033908f908e908e908e908e908e908e9060040161298a565b6020604051808303816000875af1158015610dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcf91906129ee565b6001600160e01b03191614610e195760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610737565b610e68565b6001600160a01b038916610e685760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610737565b50505050505050505050565b6004546001600160a01b03163314610ebd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b919061285e565b905060008167ffffffffffffffff811115610f4857610f48612a0b565b604051908082528060200260200182016040528015610f71578160200160208202803683370190505b50905060008267ffffffffffffffff811115610f8f57610f8f612a0b565b604051908082528060200260200182016040528015610fb8578160200160208202803683370190505b5090504760005b8481101561111f57600554604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110359190612a21565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061285e565b9050818684815181106110be576110be6128ce565b6001600160a01b03909216602092830291909101909101526127106110e482606461288d565b6110ee908661288d565b6110f891906128ac565b85848151811061110a5761110a6128ce565b60209081029190910101525050600101610fbf565b60005b8581101561116e5761116685828151811061113f5761113f6128ce565b6020026020010151858381518110611159576111596128ce565b60200260200101516121ba565b600101611122565b505050505050565b6008546201000090046001600160a01b03166111c35760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b600854610100900460ff166111eb5760405163287588a160e11b815260040160405180910390fd5b600854604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611266919061285e565b9050600654811461128a5760405163f7760f2560e01b815260040160405180910390fd5b60085460ff16156112ae57604051631bbdf5c560e31b815260040160405180910390fd5b6008546112cc906201000090046001600160a01b0316833084611f8b565b6008805460ff191660019081179091556040805160208101909152600081526112f89133918690612017565b505050565b60608382146113405760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610737565b8367ffffffffffffffff81111561135957611359612a0b565b604051908082528060200260200182016040528015611382578160200160208202803683370190505b50905060005b8481101561141e576113f98686838181106113a5576113a56128ce565b90506020020160208101906113ba91906124a0565b8585848181106113cc576113cc6128ce565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061140b5761140b6128ce565b6020908102919091010152600101611388565b50949350505050565b6004546001600160a01b031633146114705760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6008805461ff0019166101008315158102919091179182905560405160ff91909204161515907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6004546001600160a01b031633146115085760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6008546201000090046001600160a01b0316156115565760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b61156763044df8e760e41b34611ecf565b61157382600183612215565b5050565b6004546001600160a01b031633146115c05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6008546201000090046001600160a01b03161561160e5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b61161f6340d097c360e01b34611ecf565b60085460ff161561164357604051631bbdf5c560e31b815260040160405180910390fd5b600181111561166557604051631bf4348160e31b815260040160405180910390fd5b6008805460ff191660019081179091556040805160208101909152600081526115739184918490612017565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146117445760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6008546201000090046001600160a01b03166117915760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610737565b600854604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c919061285e565b905061181f63044df8e760e41b82611ecf565b60085461183d906201000090046001600160a01b0316833084611f8b565b61095884600185612215565b336001600160a01b038716148061188157506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6118be5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610737565b60008481526001602090815260408083206001600160a01b038a16845290915290205461191a5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610737565b60008481526001602090815260408083206001600160a01b038a16845290915290205483111561197d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610737565b60008481526001602090815260408083206001600160a01b0389168452909152812080548592906119af908490612a3e565b909155505060008481526001602090815260408083206001600160a01b038a168452909152812080548592906119e6908490612a51565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611b105760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611a7e9033908b908a908a908a908a90600401612a64565b6020604051808303816000875af1158015611a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac191906129ee565b6001600160e01b03191614611b0b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610737565b61116e565b6001600160a01b03851661116e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610737565b6004546001600160a01b03163314611ba35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610737565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c11919061285e565b905060008167ffffffffffffffff811115611c2e57611c2e612a0b565b604051908082528060200260200182016040528015611c57578160200160208202803683370190505b50905060008267ffffffffffffffff811115611c7557611c75612a0b565b604051908082528060200260200182016040528015611c9e578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0f919061285e565b90505b84821015611e7657600554604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d889190612a21565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfc919061285e565b905081868581518110611e1157611e116128ce565b6001600160a01b0390921660209283029190910190910152612710611e3782606461288d565b611e41908561288d565b611e4b91906128ac565b858581518110611e5d57611e5d6128ce565b6020026020010181815250508360010193505050611d12565b60005b85811015611ec657611ebe87868381518110611e9757611e976128ce565b6020026020010151868481518110611eb157611eb16128ce565b60200260200101516122fd565b600101611e79565b50505050505050565b6004546001600160a01b0316803b63ffffffff8116600003611ef15750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d919061285e565b9050808414611f845763f7760f256000526004601cfd5b5050505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611f845760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610737565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612049908490612a3e565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156121705760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906120de903390600090899089908990600401612aa9565b6020604051808303816000875af11580156120fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212191906129ee565b6001600160e01b0319161461216b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610737565b610958565b6001600160a01b0384166109585760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610737565b600080600080600085875af19050806112f85760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610737565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156122785760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610737565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906122aa908490612a51565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806109585760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610737565b6001600160a01b0381168114610a7c57600080fd5b600080604083850312156123ab57600080fd5b8235915060208301356123bd81612383565b809150509250929050565b600080604083850312156123db57600080fd5b82356123e681612383565b946020939093013593505050565b6001600160e01b031981168114610a7c57600080fd5b60006020828403121561241c57600080fd5b8135612427816123f4565b9392505050565b60006020828403121561244057600080fd5b5035919050565b6000815180845260005b8181101561246d57602081850181015186830182015201612451565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006124276020830184612447565b6000602082840312156124b257600080fd5b813561242781612383565b6000806000606084860312156124d257600080fd5b83356124dd81612383565b92506020840135915060408401356124f481612383565b809150509250925092565b6000806040838503121561251257600080fd5b50508035926020909101359150565b60008083601f84011261253357600080fd5b50813567ffffffffffffffff81111561254b57600080fd5b6020830191508360208260051b850101111561256657600080fd5b9250929050565b60008083601f84011261257f57600080fd5b50813567ffffffffffffffff81111561259757600080fd5b60208301915083602082850101111561256657600080fd5b60008060008060008060008060a0898b0312156125cb57600080fd5b88356125d681612383565b975060208901356125e681612383565b9650604089013567ffffffffffffffff8082111561260357600080fd5b61260f8c838d01612521565b909850965060608b013591508082111561262857600080fd5b6126348c838d01612521565b909650945060808b013591508082111561264d57600080fd5b5061265a8b828c0161256d565b999c989b5096995094979396929594505050565b6000806000806040858703121561268457600080fd5b843567ffffffffffffffff8082111561269c57600080fd5b6126a888838901612521565b909650945060208701359150808211156126c157600080fd5b506126ce87828801612521565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015612712578351835292840192918401916001016126f6565b50909695505050505050565b8035801515811461272e57600080fd5b919050565b60006020828403121561274557600080fd5b6124278261271e565b6000806040838503121561276157600080fd5b823561276c81612383565b915061098b6020840161271e565b6000806040838503121561278d57600080fd5b823561279881612383565b915060208301356123bd81612383565b60008060008060008060a087890312156127c157600080fd5b86356127cc81612383565b955060208701356127dc81612383565b94506040870135935060608701359250608087013567ffffffffffffffff81111561280657600080fd5b61281289828a0161256d565b979a9699509497509295939492505050565b600181811c9082168061283857607f821691505b60208210810361285857634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561287057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156128a7576128a7612877565b500290565b6000826128c957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561291657600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006129436040830186886128e4565b82810360208401526129568185876128e4565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526129b760a08301888a6128e4565b82810360608401526129ca8187896128e4565b905082810360808401526129df818587612961565b9b9a5050505050505050505050565b600060208284031215612a0057600080fd5b8151612427816123f4565b634e487b7160e01b600052604160045260246000fd5b600060208284031215612a3357600080fd5b815161242781612383565b8082018082111561061457610614612877565b8181038181111561061457610614612877565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152612a9d60a083018486612961565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261295660a083018461244756fea164736f6c6343000810000a";

type ERC1155MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Minimal__factory extends ContractFactory {
  constructor(...args: ERC1155MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Minimal> {
    return super.deploy(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Minimal>;
  }
  override getDeployTransaction(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Minimal {
    return super.attach(address) as ERC1155Minimal;
  }
  override connect(signer: Signer): ERC1155Minimal__factory {
    return super.connect(signer) as ERC1155Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MinimalInterface {
    return new utils.Interface(_abi) as ERC1155MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Minimal;
  }
}
