/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "URILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b50604051620041663803806200416683398101604081905262000039916200029d565b600480546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03841617905560096200017087826200045d565b50600a80546001600160a01b03199081166001600160a01b03888116918217909355600d805483168585161790556001600160601b03871660025560038054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000529565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028057600080fd5b919050565b80516001600160601b03811681146200028057600080fd5b60008060008060008060c08789031215620002b757600080fd5b86516001600160401b0380821115620002cf57600080fd5b818901915089601f830112620002e457600080fd5b815181811115620002f957620002f962000252565b604051601f8201601f19908116603f0116810190838211818310171562000324576200032462000252565b81604052828152602093508c848487010111156200034157600080fd5b600091505b8282101562000365578482018401518183018501529083019062000346565b6000848483010152809a5050505062000380818a0162000268565b96505050620003926040880162000285565b9350620003a26060880162000268565b9250620003b26080880162000268565b9150620003c260a0880162000268565b90509295509295509295565b600181811c90821680620003e357607f821691505b6020821081036200040457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200045857600081815260208120601f850160051c81016020861015620004335750805b601f850160051c820191505b8181101562000454578281556001016200043f565b5050505b505050565b81516001600160401b0381111562000479576200047962000252565b62000491816200048a8454620003ce565b846200040a565b602080601f831160018114620004c95760008415620004b05750858301515b600019600386901b1c1916600185901b17855562000454565b600085815260208120601f198616915b82811015620004fa57888601518255948401946001909101908401620004d9565b5085821015620005195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051613c176200054f60003960006110e8015260006110090152613c176000f3fe6080604052600436106101d65760003560e01c80636c19e78311610102578063c360a1b711610095578063e985e9c511610064578063e985e9c5146105a6578063f23a6e61146105de578063f242432a1461060b578063f4f3b2001461062b57600080fd5b8063c360a1b714610551578063c811026414610566578063d6fa7b1014610580578063d78147cb1461059357600080fd5b80638fc3b549116100d15780638fc3b549146104a4578063a22cb465146104b9578063bc197c81146104d9578063bfa556e41461052157600080fd5b80636c19e7831461042f5780637754305c1461044f578063785e9e86146104645780638da5cb5b1461048457600080fd5b806318160ddd1161017a5780633644e515116101495780633644e515146103a05780633ccfd60b146103b55780633cd8045e146103ca5780634e1273f41461040257600080fd5b806318160ddd146103195780632a55205a1461032e5780632eb2c2d61461036d57806332667d431461038d57600080fd5b806302fe5305116101b657806302fe5305146102975780630e89341c146102b957806310251d7f146102e657806313af4035146102f957600080fd5b8062f74867146101db578062fdd58e1461022657806301ffc9a714610267575b600080fd5b3480156101e757600080fd5b506102136101f6366004612eb9565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023257600080fd5b50610213610241366004612ee9565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561027357600080fd5b50610287610282366004612f2b565b61064b565b604051901515815260200161021d565b3480156102a357600080fd5b506102b76102b2366004612f96565b6106b8565b005b3480156102c557600080fd5b506102d96102d436600461302b565b61077c565b60405161021d9190613094565b6102b76102f43660046130d0565b6107d3565b34801561030557600080fd5b506102b761031436600461312d565b610935565b34801561032557600080fd5b506102136109d7565b34801561033a57600080fd5b5061034e61034936600461314a565b6109e7565b604080516001600160a01b03909316835260208301919091520161021d565b34801561037957600080fd5b506102b76103883660046131fa565b610a1d565b6102b761039b3660046130d0565b610e12565b3480156103ac57600080fd5b50610213611005565b3480156103c157600080fd5b506102b761110a565b3480156103d657600080fd5b50600a546103ea906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b34801561040e57600080fd5b5061042261041d3660046132b9565b61140c565b60405161021d9190613360565b34801561043b57600080fd5b506102b761044a36600461312d565b611536565b34801561045b57600080fd5b506102d96115d6565b34801561047057600080fd5b50600d546103ea906001600160a01b031681565b34801561049057600080fd5b506004546103ea906001600160a01b031681565b3480156104b057600080fd5b50600c54610213565b3480156104c557600080fd5b506102b76104d4366004613373565b611668565b3480156104e557600080fd5b506105086104f43660046131fa565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161021d565b34801561052d57600080fd5b5061028761053c36600461302b565b600b6020526000908152604090205460ff1681565b34801561055d57600080fd5b506102b76116d2565b34801561057257600080fd5b506008546102879060ff1681565b6102b761058e366004613435565b611769565b6102b76105a136600461352c565b6118c8565b3480156105b257600080fd5b506102876105c13660046135b5565b600060208181529281526040808220909352908152205460ff1681565b3480156105ea57600080fd5b506105086105f93660046135e3565b63f23a6e6160e01b9695505050505050565b34801561061757600080fd5b506102b76106263660046135e3565b6119b8565b34801561063757600080fd5b506102b761064636600461312d565b611cc9565b60006301ffc9a760e01b6001600160e01b03198316148061067c5750636cdb3d1360e11b6001600160e01b03198316145b8061069757506303a24d0760e21b6001600160e01b03198316145b806106b2575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146107065760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60085460ff16151560010361072e57604051639619d74760e01b815260040160405180910390fd5b600961073a82826136d9565b50806040516107499190613799565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600c548211156107a157604051635d68437560e11b815260040160405180910390fd5b60096107ac8361203e565b6040516020016107bd929190613828565b6040516020818303038152906040529050919050565b6005546001146108125760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106fd565b600260055560006108258585858561208d565b905060006108323361220c565b905061083f828783612299565b600d546001600160a01b03161561086857600d54610868906001600160a01b0316333084612348565b85356000908152600b602090815260408220805460ff1916600117905561089190880188613875565b9050905060005b818110156109265761091e60608901356108b560408b018b613875565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108f49250505060208c018c613875565b85818110610904576109046138bf565b9050602002016020810190610919919061312d565b6123db565b600101610898565b50506001600555505050505050565b6004546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006109e260075490565b905090565b6003546002546001600160a01b039091169060009061271090610a0a90856138eb565b610a14919061390a565b90509250929050565b848314610a5e5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106fd565b336001600160a01b0389161480610a9657506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610ad35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106fd565b60008060005b87811015610c8257888882818110610af357610af36138bf565b905060200201359250868682818110610b0e57610b0e6138bf565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610b8a5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106fd565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610bed5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610ad9565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610cd6949392919061395e565b60405180910390a46001600160a01b0389163b15610dbc5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610d2a9033908f908e908e908e908e908e908e906004016139b9565b6020604051808303816000875af1158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d9190613a1d565b6001600160e01b03191614610db75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106fd565b610e06565b6001600160a01b038916610e065760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106fd565b50505050505050505050565b600554600114610e515760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106fd565b60026005556000610e648585858561248a565b90506000610e713361220c565b9050610e7e828783612575565b600d546001600160a01b031615610ea757600d54610ea7906001600160a01b0316333084612348565b85356000908152600b602090815260408220805460ff19166001179055610ed090880188613875565b915060009050610ee36040890189613875565b90508214610f245760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b81811015610f6157610f58610f3c60408a018a613875565b83818110610f4c57610f4c6138bf565b905060200201356125f1565b50600101610f24565b610926610f7460a08a0160808b0161312d565b610f8160208b018b613875565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610fc09250505060408c018c613875565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506040805160208101909152908152925061261d915050565b60007f000000000000000000000000000000000000000000000000000000000000000046146110e55750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b031633146111535760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c19190613a3a565b905060008167ffffffffffffffff8111156111de576111de612f4f565b604051908082528060200260200182016040528015611207578160200160208202803683370190505b50905060008267ffffffffffffffff81111561122557611225612f4f565b60405190808252806020026020018201604052801561124e578160200160208202803683370190505b5090504760005b848110156113b557600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156112a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cb9190613a53565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561131b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133f9190613a3a565b905081868481518110611354576113546138bf565b6001600160a01b039092166020928302919091019091015261271061137a8260646138eb565b61138490866138eb565b61138e919061390a565b8584815181106113a0576113a06138bf565b60209081029190910101525050600101611255565b60005b85811015611404576113fc8582815181106113d5576113d56138bf565b60200260200101518583815181106113ef576113ef6138bf565b602002602001015161277d565b6001016113b8565b505050505050565b606083821461144f5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106fd565b8367ffffffffffffffff81111561146857611468612f4f565b604051908082528060200260200182016040528015611491578160200160208202803683370190505b50905060005b8481101561152d576115088686838181106114b4576114b46138bf565b90506020020160208101906114c9919061312d565b8585848181106114db576114db6138bf565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061151a5761151a6138bf565b6020908102919091010152600101611497565b50949350505050565b6004546001600160a01b0316331461157f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6060600980546115e59061365f565b80601f01602080910402602001604051908101604052809291908181526020018280546116119061365f565b801561165e5780601f106116335761010080835404028352916020019161165e565b820191906000526020600020905b81548152906001019060200180831161164157829003601f168201915b5050505050905090565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b0316331461171b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b6008805460ff1916600117905560405161173790600990613a70565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b6004546001600160a01b031633146117b25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b6117bd8160016127d8565b8251825160009190811480156117d35750855181145b6118105760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b808210156118a65761184584838151811061182d5761182d6138bf565b602002602001015160076128f290919063ffffffff16565b61189b86838151811061185a5761185a6138bf565b6020026020010151868481518110611874576118746138bf565b602002602001015186858151811061188e5761188e6138bf565b602002602001015161290c565b816001019150611810565b80821015611404576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6004546001600160a01b031633146119115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b61191c8160016127d8565b825182516000919081146119635760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b8082101561198b5761198084838151811061182d5761182d6138bf565b816001019150611963565b808210156119ad576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6114048686866129f4565b336001600160a01b03871614806119f057506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b611a2d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106fd565b60008481526001602090815260408083206001600160a01b038a168452909152902054611a895760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106fd565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611aec5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611b1e908490613a7c565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611b55908490613a8f565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611c7f5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611bed9033908b908a908a908a908a90600401613aa2565b6020604051808303816000875af1158015611c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c309190613a1d565b6001600160e01b03191614611c7a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106fd565b611404565b6001600160a01b0385166114045760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106fd565b6004546001600160a01b03163314611d125760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106fd565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d809190613a3a565b905060008167ffffffffffffffff811115611d9d57611d9d612f4f565b604051908082528060200260200182016040528015611dc6578160200160208202803683370190505b50905060008267ffffffffffffffff811115611de457611de4612f4f565b604051908082528060200260200182016040528015611e0d578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190613a3a565b90505b84821015611fe557600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef79190613a53565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611f47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6b9190613a3a565b905081868581518110611f8057611f806138bf565b6001600160a01b0390921660209283029190910190910152612710611fa68260646138eb565b611fb090856138eb565b611fba919061390a565b858581518110611fcc57611fcc6138bf565b6020026020010181815250508360010193505050611e81565b60005b858110156120355761202d87868381518110612006576120066138bf565b6020026020010151868481518110612020576120206138bf565b6020026020010151612b9c565b600101611fe8565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561207b57600183039250600a81066030018353600a900461205d565b50819003601f19909101908152919050565b60006001612099611005565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c6987356120c960208a018a613875565b6040516020016120da929190613ae7565b604051602081830303815290604052805190602001208980604001906121009190613875565b604051602001612111929190613b29565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b6040516020818303038152906040528051906020012060405160200161219a92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156121f8573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600d546000906001600160a01b031661222557346106b2565b600d54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190613a3a565b6006546001600160a01b038481169116146122c757604051632057875960e21b815260040160405180910390fd5b81356000908152600b602052604090205460ff16156122f95760405163e647f41360e01b815260040160405180910390fd5b6123066020830183613875565b905061231a606084013560808501356138eb565b61232491906138eb565b81146123435760405163f7760f2560e01b815260040160405180910390fd5b505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806123d45760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016106fd565b5050505050565b8282511461241c5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b60005b838110156124845761247c8261244d858481518110612440576124406138bf565b60200260200101516125f1565b85848151811061245f5761245f6138bf565b602002602001015160405180602001604052806000815250612c22565b60010161241f565b50505050565b60006001612496611005565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed4353887356124c660208a018a613875565b6040516020016124d7929190613b29565b604051602081830303815290604052805190602001208980604001906124fd9190613875565b60405160200161250e929190613b29565b60408051601f19818403018152919052805160209091012060608b013561253b60a08d0160808e0161312d565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e00161215d565b6006546001600160a01b038481169116146125a357604051632057875960e21b815260040160405180910390fd5b81356000908152600b602052604090205460ff16156125d55760405163e647f41360e01b815260040160405180910390fd5b6125e26020830183613875565b612324915060608401356138eb565b60006125fc82612dc5565b5081600c600082825461260f9190613a7c565b9091555050600c5492915050565b82516000805b828110156126935785818151811061263d5761263d6138bf565b60200260200101519150848181518110612659576126596138bf565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501612623565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88886040516126e4929190613b52565b60405180910390a46001600160a01b0386163b156127335760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611bed9033906000908b908b908b90600401613b80565b6001600160a01b0386166114045760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106fd565b600080600080600085875af19050806123435760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106fd565b600d546000906001600160a01b03166127f15734612865565b600d54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128659190613a3a565b9050336001600160a01b03841614806128875750600d546001600160a01b0316155b15612343578160ff166000036128ad576128a86340d097c360e01b82612ddc565b6128c9565b8160ff166001036128c9576128c963044df8e760e41b82612ddc565b600d546001600160a01b03161561234357600d54612343906001600160a01b0316843084612348565b8154806129075763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561296f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106fd565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906129a1908490613a8f565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b038316612a4a5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106fd565b81516000805b82811015612b3c57848181518110612a6a57612a6a6138bf565b60200260200101519150838181518110612a8657612a866138bf565b60209081029190910181015160008481526001835260408082206001600160a01b038b16835290935291909120541015612aef5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106fd565b838181518110612b0157612b016138bf565b6020908102919091018101516000848152600180845260408083206001600160a01b038c168452909452929020805491909103905501612a50565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612b8d929190613b52565b60405180910390a45050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806124845760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106fd565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612c54908490613a7c565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612d7b5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190612ce9903390600090899089908990600401613bd2565b6020604051808303816000875af1158015612d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2c9190613a1d565b6001600160e01b03191614612d765760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106fd565b612484565b6001600160a01b0384166124845760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106fd565b6000612dd46007838154019055565b6007546106b2565b6004546001600160a01b0316803b63ffffffff8116600003612dfe5750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e7a9190613a3a565b90508084146123d45763f7760f256000526004601cfd5b6001600160a01b0381168114612ea657600080fd5b50565b8035612eb481612e91565b919050565b60008060408385031215612ecc57600080fd5b823591506020830135612ede81612e91565b809150509250929050565b60008060408385031215612efc57600080fd5b8235612f0781612e91565b946020939093013593505050565b6001600160e01b031981168114612ea657600080fd5b600060208284031215612f3d57600080fd5b8135612f4881612f15565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612f8e57612f8e612f4f565b604052919050565b60006020808385031215612fa957600080fd5b823567ffffffffffffffff80821115612fc157600080fd5b818501915085601f830112612fd557600080fd5b813581811115612fe757612fe7612f4f565b612ff9601f8201601f19168501612f65565b9150808252868482850101111561300f57600080fd5b8084840185840137600090820190930192909252509392505050565b60006020828403121561303d57600080fd5b5035919050565b60005b8381101561305f578181015183820152602001613047565b50506000910152565b60008151808452613080816020860160208601613044565b601f01601f19169290920160200192915050565b602081526000612f486020830184613068565b600060a082840312156130b957600080fd5b50919050565b803560ff81168114612eb457600080fd5b600080600080608085870312156130e657600080fd5b843567ffffffffffffffff8111156130fd57600080fd5b613109878288016130a7565b945050613118602086016130bf565b93969395505050506040820135916060013590565b60006020828403121561313f57600080fd5b8135612f4881612e91565b6000806040838503121561315d57600080fd5b50508035926020909101359150565b60008083601f84011261317e57600080fd5b50813567ffffffffffffffff81111561319657600080fd5b6020830191508360208260051b85010111156131b157600080fd5b9250929050565b60008083601f8401126131ca57600080fd5b50813567ffffffffffffffff8111156131e257600080fd5b6020830191508360208285010111156131b157600080fd5b60008060008060008060008060a0898b03121561321657600080fd5b883561322181612e91565b9750602089013561323181612e91565b9650604089013567ffffffffffffffff8082111561324e57600080fd5b61325a8c838d0161316c565b909850965060608b013591508082111561327357600080fd5b61327f8c838d0161316c565b909650945060808b013591508082111561329857600080fd5b506132a58b828c016131b8565b999c989b5096995094979396929594505050565b600080600080604085870312156132cf57600080fd5b843567ffffffffffffffff808211156132e757600080fd5b6132f38883890161316c565b9096509450602087013591508082111561330c57600080fd5b506133198782880161316c565b95989497509550505050565b600081518084526020808501945080840160005b8381101561335557815187529582019590820190600101613339565b509495945050505050565b602081526000612f486020830184613325565b6000806040838503121561338657600080fd5b823561339181612e91565b915060208301358015158114612ede57600080fd5b600067ffffffffffffffff8211156133c0576133c0612f4f565b5060051b60200190565b600082601f8301126133db57600080fd5b813560206133f06133eb836133a6565b612f65565b82815260059290921b8401810191818101908684111561340f57600080fd5b8286015b8481101561342a5780358352918301918301613413565b509695505050505050565b6000806000806080858703121561344b57600080fd5b843567ffffffffffffffff8082111561346357600080fd5b818701915087601f83011261347757600080fd5b813560206134876133eb836133a6565b82815260059290921b8401810191818101908b8411156134a657600080fd5b948201945b838610156134cd5785356134be81612e91565b825294820194908201906134ab565b985050880135925050808211156134e357600080fd5b6134ef888389016133ca565b9450604087013591508082111561350557600080fd5b50613512878288016133ca565b92505061352160608601612ea9565b905092959194509250565b6000806000806080858703121561354257600080fd5b843561354d81612e91565b9350602085013567ffffffffffffffff8082111561356a57600080fd5b613576888389016133ca565b9450604087013591508082111561358c57600080fd5b50613599878288016133ca565b92505060608501356135aa81612e91565b939692955090935050565b600080604083850312156135c857600080fd5b82356135d381612e91565b91506020830135612ede81612e91565b60008060008060008060a087890312156135fc57600080fd5b863561360781612e91565b9550602087013561361781612e91565b94506040870135935060608701359250608087013567ffffffffffffffff81111561364157600080fd5b61364d89828a016131b8565b979a9699509497509295939492505050565b600181811c9082168061367357607f821691505b6020821081036130b957634e487b7160e01b600052602260045260246000fd5b601f82111561234357600081815260208120601f850160051c810160208610156136ba5750805b601f850160051c820191505b81811015611404578281556001016136c6565b815167ffffffffffffffff8111156136f3576136f3612f4f565b61370781613701845461365f565b84613693565b602080601f83116001811461373c57600084156137245750858301515b600019600386901b1c1916600185901b178555611404565b600085815260208120601f198616915b8281101561376b5788860151825594840194600190910190840161374c565b50858210156137895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516137ab818460208701613044565b9190910192915050565b600081546137c28161365f565b600182811680156137da57600181146137ef5761381e565b60ff198416875282151583028701945061381e565b8560005260208060002060005b858110156138155781548a8201529084019082016137fc565b50505082870194505b5050505092915050565b600061383482856137b5565b8351613844818360208801613044565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e1984360301811261388c57600080fd5b83018035915067ffffffffffffffff8211156138a757600080fd5b6020019150600581901b36038213156131b157600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613905576139056138d5565b500290565b60008261392757634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b0383111561394557600080fd5b8260051b80836020870137939093016020019392505050565b60408152600061397260408301868861392c565b828103602084015261398581858761392c565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526139e660a08301888a61392c565b82810360608401526139f981878961392c565b90508281036080840152613a0e818587613990565b9b9a5050505050505050505050565b600060208284031215613a2f57600080fd5b8151612f4881612f15565b600060208284031215613a4c57600080fd5b5051919050565b600060208284031215613a6557600080fd5b8151612f4881612e91565b6000612f4882846137b5565b808201808211156106b2576106b26138d5565b818103818111156106b2576106b26138d5565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152613adb60a083018486613990565b98975050505050505050565b60008184825b85811015613b1e578135613b0081612e91565b6001600160a01b031683526020928301929190910190600101613aed565b509095945050505050565b60006001600160fb1b03831115613b3f57600080fd5b8260051b80858437919091019392505050565b604081526000613b656040830185613325565b8281036020840152613b778185613325565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152613bac60a0830186613325565b8281036060840152613bbe8186613325565b90508281036080840152613adb8185613068565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261398560a083018461306856fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
