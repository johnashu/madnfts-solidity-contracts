/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162003cf338038062003cf3833981016040819052620000399162000290565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03831617905560086200017086826200043f565b50600980546001600160a01b03199081166001600160a01b038781169182179093556001600160601b03861660025560038054909216179055604051908216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050506200050b565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027357600080fd5b919050565b80516001600160601b03811681146200027357600080fd5b600080600080600060a08688031215620002a957600080fd5b85516001600160401b0380821115620002c157600080fd5b818801915088601f830112620002d657600080fd5b815181811115620002eb57620002eb62000245565b604051601f8201601f19908116603f0116810190838211818310171562000316576200031662000245565b81604052828152602093508b848487010111156200033357600080fd5b600091505b8282101562000357578482018401518183018501529083019062000338565b6000848483010152809950505050620003728189016200025b565b95505050620003846040870162000278565b925062000394606087016200025b565b9150620003a4608087016200025b565b90509295509295909350565b600181811c90821680620003c557607f821691505b602082108103620003e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200043a57600081815260208120601f850160051c81016020861015620004155750805b601f850160051c820191505b81811015620004365782815560010162000421565b5050505b505050565b81516001600160401b038111156200045b576200045b62000245565b62000473816200046c8454620003b0565b84620003ec565b602080601f831160018114620004ab5760008415620004925750858301515b600019600386901b1c1916600185901b17855562000436565b600085815260208120601f198616915b82811015620004dc57888601518255948401946001909101908401620004bb565b5085821015620004fb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516137c2620005316000396000610fc101526000610ee201526137c26000f3fe6080604052600436106101aa5760003560e01c80633cd8045e116100ec578063a22cb4651161008a578063e985e9c511610064578063e985e9c514610516578063f23a6e611461054e578063f242432a1461057b578063f4f3b2001461059b57600080fd5b8063a22cb4651461047e578063bc197c811461049e578063bfa556e4146104e657600080fd5b80636c19e783116100c65780636c19e783146104165780637754305c1461043657806381b0b7561461044b5780638da5cb5b1461045e57600080fd5b80633cd8045e1461039e5780634e1273f4146103d65780636b20c4541461040357600080fd5b806313af4035116101595780632eb2c2d6116101335780632eb2c2d61461034157806332667d43146103615780633644e515146103745780633ccfd60b1461038957600080fd5b806313af4035146102cd57806318160ddd146102ed5780632a55205a1461030257600080fd5b806302fe53051161018a57806302fe53051461026b5780630e89341c1461028d57806310251d7f146102ba57600080fd5b8062f74867146101af578062fdd58e146101fa57806301ffc9a71461023b575b600080fd5b3480156101bb57600080fd5b506101e76101ca366004612ad9565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e7610215366004612b09565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561024757600080fd5b5061025b610256366004612b4b565b6105bb565b60405190151581526020016101f1565b34801561027757600080fd5b5061028b610286366004612bb6565b610628565b005b34801561029957600080fd5b506102ad6102a8366004612c4b565b6106c4565b6040516101f19190612cb4565b61028b6102c8366004612cf5565b61071b565b3480156102d957600080fd5b5061028b6102e8366004612d52565b610845565b3480156102f957600080fd5b506101e76108e7565b34801561030e57600080fd5b5061032261031d366004612d6f565b6108f7565b604080516001600160a01b0390931683526020830191909152016101f1565b34801561034d57600080fd5b5061028b61035c366004612e1f565b61092d565b61028b61036f366004612cf5565b610d22565b34801561038057600080fd5b506101e7610ede565b34801561039557600080fd5b5061028b610fe3565b3480156103aa57600080fd5b506009546103be906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b3480156103e257600080fd5b506103f66103f1366004612ede565b6112e5565b6040516101f19190612f85565b61028b610411366004613027565b61140f565b34801561042257600080fd5b5061028b610431366004612d52565b611523565b34801561044257600080fd5b506102ad6115c3565b61028b61045936600461309d565b611655565b34801561046a57600080fd5b506004546103be906001600160a01b031681565b34801561048a57600080fd5b5061028b61049936600461314a565b6117a1565b3480156104aa57600080fd5b506104cd6104b9366004612e1f565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101f1565b3480156104f257600080fd5b5061025b610501366004612c4b565b600a6020526000908152604090205460ff1681565b34801561052257600080fd5b5061025b61053136600461317d565b600060208181529281526040808220909352908152205460ff1681565b34801561055a57600080fd5b506104cd6105693660046131ab565b63f23a6e6160e01b9695505050505050565b34801561058757600080fd5b5061028b6105963660046131ab565b61180b565b3480156105a757600080fd5b5061028b6105b6366004612d52565b611b1c565b60006301ffc9a760e01b6001600160e01b0319831614806105ec5750636cdb3d1360e11b6001600160e01b03198316145b8061060757506303a24d0760e21b6001600160e01b03198316145b80610622575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106765760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600861068282826132a1565b50806040516106919190613361565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b548211156106e957604051635d68437560e11b815260040160405180910390fd5b60086106f483611e91565b60405160200161070592919061337d565b6040516020818303038152906040529050919050565b60055460011461075a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161066d565b6002600555600061076d85858585611ee0565b9050610779818661205f565b84356000908152600a602090815260408220805460ff191660011790556107a29087018761342c565b9050905060005b818110156108375761082f60608801356107c660408a018a61342c565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108059250505060208b018b61342c565b8581811061081557610815613476565b905060200201602081019061082a9190612d52565b61210d565b6001016107a9565b505060016005555050505050565b6004546001600160a01b0316331461088e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006108f260075490565b905090565b6003546002546001600160a01b03909116906000906127109061091a90856134a2565b61092491906134c1565b90509250929050565b84831461096e5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161066d565b336001600160a01b03891614806109a657506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6109e35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161066d565b60008060005b87811015610b9257888882818110610a0357610a03613476565b905060200201359250868682818110610a1e57610a1e613476565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610a9a5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161066d565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610afd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000206000828254039250508190555080806001019150506109e9565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610be69493929190613515565b60405180910390a46001600160a01b0389163b15610ccc5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610c3a9033908f908e908e908e908e908e908e90600401613570565b6020604051808303816000875af1158015610c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7d91906135d4565b6001600160e01b03191614610cc75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161066d565b610d16565b6001600160a01b038916610d165760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161066d565b50505050505050505050565b600554600114610d615760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161066d565b60026005556000610d74858585856121a2565b9050610d80818661228d565b84356000908152600a602090815260408220805460ff19166001179055610da99087018761342c565b915060009050610dbc604088018861342c565b90508214610dfd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b81811015610e3a57610e31610e15604089018961342c565b83818110610e2557610e25613476565b90506020020135612309565b50600101610dfd565b610837610e4d60a0890160808a01612d52565b610e5a60208a018a61342c565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610e999250505060408b018b61342c565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250612338915050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610fbe5750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b0316331461102c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a91906135f1565b905060008167ffffffffffffffff8111156110b7576110b7612b6f565b6040519080825280602002602001820160405280156110e0578160200160208202803683370190505b50905060008267ffffffffffffffff8111156110fe576110fe612b6f565b604051908082528060200260200182016040528015611127578160200160208202803683370190505b5090504760005b8481101561128e57600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a4919061360a565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121891906135f1565b90508186848151811061122d5761122d613476565b6001600160a01b03909216602092830291909101909101526127106112538260646134a2565b61125d90866134a2565b61126791906134c1565b85848151811061127957611279613476565b6020908102919091010152505060010161112e565b60005b858110156112dd576112d58582815181106112ae576112ae613476565b60200260200101518583815181106112c8576112c8613476565b6020026020010151612498565b600101611291565b505050505050565b60608382146113285760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161066d565b8367ffffffffffffffff81111561134157611341612b6f565b60405190808252806020026020018201604052801561136a578160200160208202803683370190505b50905060005b84811015611406576113e186868381811061138d5761138d613476565b90506020020160208101906113a29190612d52565b8585848181106113b4576113b4613476565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106113f3576113f3613476565b6020908102919091010152600101611370565b50949350505050565b6004546001600160a01b031633146114585760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b61146863044df8e760e41b6124f8565b815181516000919081146114af5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b808210156114ef576114e48383815181106114cc576114cc613476565b602002602001015160076125ac90919063ffffffff16565b8160010191506114af565b80821015611511576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61151c8585856125c6565b5050505050565b6004546001600160a01b0316331461156c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6060600880546115d290613227565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe90613227565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b5050505050905090565b6004546001600160a01b0316331461169e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b6116ae63044df8e760e41b6124f8565b8151815160009190811480156116c45750845181145b6117015760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b8082101561177f5761171e8383815181106114cc576114cc613476565b61177485838151811061173357611733613476565b602002602001015185848151811061174d5761174d613476565b602002602001015185858151811061176757611767613476565b602002602001015161276e565b816001019150611701565b8082101561151c576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b038716148061184357506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6118805760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161066d565b60008481526001602090815260408083206001600160a01b038a1684529091529020546118dc5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161066d565b60008481526001602090815260408083206001600160a01b038a16845290915290205483111561193f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611971908490613627565b909155505060008481526001602090815260408083206001600160a01b038a168452909152812080548592906119a890849061363a565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611ad25760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611a409033908b908a908a908a908a9060040161364d565b6020604051808303816000875af1158015611a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8391906135d4565b6001600160e01b03191614611acd5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161066d565b6112dd565b6001600160a01b0385166112dd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161066d565b6004546001600160a01b03163314611b655760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161066d565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd391906135f1565b905060008167ffffffffffffffff811115611bf057611bf0612b6f565b604051908082528060200260200182016040528015611c19578160200160208202803683370190505b50905060008267ffffffffffffffff811115611c3757611c37612b6f565b604051908082528060200260200182016040528015611c60578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd191906135f1565b90505b84821015611e3857600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4a919061360a565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe91906135f1565b905081868581518110611dd357611dd3613476565b6001600160a01b0390921660209283029190910190910152612710611df98260646134a2565b611e0390856134a2565b611e0d91906134c1565b858581518110611e1f57611e1f613476565b6020026020010181815250508360010193505050611cd4565b60005b85811015611e8857611e8087868381518110611e5957611e59613476565b6020026020010151868481518110611e7357611e73613476565b6020026020010151612856565b600101611e3b565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611ece57600183039250600a81066030018353600a9004611eb0565b50819003601f19909101908152919050565b60006001611eec610ede565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c698735611f1c60208a018a61342c565b604051602001611f2d929190613692565b60405160208183030381529060405280519060200120898060400190611f53919061342c565b604051602001611f649291906136d4565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b60405160208183030381529060405280519060200120604051602001611fed92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561204b573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6006546001600160a01b0383811691161461208d57604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff16156120bf5760405163e647f41360e01b815260040160405180910390fd5b6120cc602082018261342c565b90506120e0606083013560808401356134a2565b6120ea91906134a2565b34146121095760405163f7760f2560e01b815260040160405180910390fd5b5050565b8282511461214e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b60005b8381101561219c57612194826121656128dc565b85848151811061217757612177613476565b602002602001015160405180602001604052806000815250612907565b600101612151565b50505050565b600060016121ae610ede565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed4353887356121de60208a018a61342c565b6040516020016121ef9291906136d4565b60405160208183030381529060405280519060200120898060400190612215919061342c565b6040516020016122269291906136d4565b60408051601f19818403018152919052805160209091012060608b013561225360a08d0160808e01612d52565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e001611fb0565b6006546001600160a01b038381169116146122bb57604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff16156122ed5760405163e647f41360e01b815260040160405180910390fd5b6122fa602082018261342c565b6120ea915060608301356134a2565b60006123186007838154019055565b81600b600082825461232a9190613627565b9091555050600b5492915050565b82516000805b828110156123ae5785818151811061235857612358613476565b6020026020010151915084818151811061237457612374613476565b6020908102919091018101516000848152600180845260408083206001600160a01b038d168452909452929020805490910190550161233e565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88886040516123ff9291906136fd565b60405180910390a46001600160a01b0386163b1561244e5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611a409033906000908b908b908b9060040161372b565b6001600160a01b0386166112dd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161066d565b600080600080600085875af19050806124f35760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161066d565b505050565b6004546001600160a01b0316803b63ffffffff811660000361251957505050565b60048054604051633b7279e960e21b81526001600160e01b03198616928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259591906135f1565b905080341461219c5763f7760f256000526004601cfd5b8154806125c15763ce3a3d376000526004601cfd5b039055565b6001600160a01b03831661261c5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d0000000000000000000000000000000000000000604482015260640161066d565b81516000805b8281101561270e5784818151811061263c5761263c613476565b6020026020010151915083818151811061265857612658613476565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156126c15760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161066d565b8381815181106126d3576126d3613476565b6020908102919091018101516000848152600180845260408083206001600160a01b038c168452909452929020805491909103905501612622565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161275f9291906136fd565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156127d15760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161066d565b60008281526001602090815260408083206001600160a01b03871684529091528120805483929061280390849061363a565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061219c5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161066d565b60006128e6612aaa565b506001600b60008282546128fa9190613627565b9091555050600b54919050565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612939908490613627565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612a605760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906129ce90339060009089908990899060040161377d565b6020604051808303816000875af11580156129ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1191906135d4565b6001600160e01b03191614612a5b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161066d565b61219c565b6001600160a01b03841661219c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161066d565b6000612aba600780546001019055565b5060075490565b6001600160a01b0381168114612ad657600080fd5b50565b60008060408385031215612aec57600080fd5b823591506020830135612afe81612ac1565b809150509250929050565b60008060408385031215612b1c57600080fd5b8235612b2781612ac1565b946020939093013593505050565b6001600160e01b031981168114612ad657600080fd5b600060208284031215612b5d57600080fd5b8135612b6881612b35565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bae57612bae612b6f565b604052919050565b60006020808385031215612bc957600080fd5b823567ffffffffffffffff80821115612be157600080fd5b818501915085601f830112612bf557600080fd5b813581811115612c0757612c07612b6f565b612c19601f8201601f19168501612b85565b91508082528684828501011115612c2f57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612c5d57600080fd5b5035919050565b60005b83811015612c7f578181015183820152602001612c67565b50506000910152565b60008151808452612ca0816020860160208601612c64565b601f01601f19169290920160200192915050565b602081526000612b686020830184612c88565b600060a08284031215612cd957600080fd5b50919050565b803560ff81168114612cf057600080fd5b919050565b60008060008060808587031215612d0b57600080fd5b843567ffffffffffffffff811115612d2257600080fd5b612d2e87828801612cc7565b945050612d3d60208601612cdf565b93969395505050506040820135916060013590565b600060208284031215612d6457600080fd5b8135612b6881612ac1565b60008060408385031215612d8257600080fd5b50508035926020909101359150565b60008083601f840112612da357600080fd5b50813567ffffffffffffffff811115612dbb57600080fd5b6020830191508360208260051b8501011115612dd657600080fd5b9250929050565b60008083601f840112612def57600080fd5b50813567ffffffffffffffff811115612e0757600080fd5b602083019150836020828501011115612dd657600080fd5b60008060008060008060008060a0898b031215612e3b57600080fd5b8835612e4681612ac1565b97506020890135612e5681612ac1565b9650604089013567ffffffffffffffff80821115612e7357600080fd5b612e7f8c838d01612d91565b909850965060608b0135915080821115612e9857600080fd5b612ea48c838d01612d91565b909650945060808b0135915080821115612ebd57600080fd5b50612eca8b828c01612ddd565b999c989b5096995094979396929594505050565b60008060008060408587031215612ef457600080fd5b843567ffffffffffffffff80821115612f0c57600080fd5b612f1888838901612d91565b90965094506020870135915080821115612f3157600080fd5b50612f3e87828801612d91565b95989497509550505050565b600081518084526020808501945080840160005b83811015612f7a57815187529582019590820190600101612f5e565b509495945050505050565b602081526000612b686020830184612f4a565b600067ffffffffffffffff821115612fb257612fb2612b6f565b5060051b60200190565b600082601f830112612fcd57600080fd5b81356020612fe2612fdd83612f98565b612b85565b82815260059290921b8401810191818101908684111561300157600080fd5b8286015b8481101561301c5780358352918301918301613005565b509695505050505050565b60008060006060848603121561303c57600080fd5b833561304781612ac1565b9250602084013567ffffffffffffffff8082111561306457600080fd5b61307087838801612fbc565b9350604086013591508082111561308657600080fd5b5061309386828701612fbc565b9150509250925092565b6000806000606084860312156130b257600080fd5b833567ffffffffffffffff808211156130ca57600080fd5b818601915086601f8301126130de57600080fd5b813560206130ee612fdd83612f98565b82815260059290921b8401810191818101908a84111561310d57600080fd5b948201945b8386101561313457853561312581612ac1565b82529482019490820190613112565b9750508701359250508082111561306457600080fd5b6000806040838503121561315d57600080fd5b823561316881612ac1565b915060208301358015158114612afe57600080fd5b6000806040838503121561319057600080fd5b823561319b81612ac1565b91506020830135612afe81612ac1565b60008060008060008060a087890312156131c457600080fd5b86356131cf81612ac1565b955060208701356131df81612ac1565b94506040870135935060608701359250608087013567ffffffffffffffff81111561320957600080fd5b61321589828a01612ddd565b979a9699509497509295939492505050565b600181811c9082168061323b57607f821691505b602082108103612cd957634e487b7160e01b600052602260045260246000fd5b601f8211156124f357600081815260208120601f850160051c810160208610156132825750805b601f850160051c820191505b818110156112dd5782815560010161328e565b815167ffffffffffffffff8111156132bb576132bb612b6f565b6132cf816132c98454613227565b8461325b565b602080601f83116001811461330457600084156132ec5750858301515b600019600386901b1c1916600185901b1785556112dd565b600085815260208120601f198616915b8281101561333357888601518255948401946001909101908401613314565b50858210156133515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613373818460208701612c64565b9190910192915050565b600080845461338b81613227565b600182811680156133a357600181146133b8576133e7565b60ff19841687528215158302870194506133e7565b8860005260208060002060005b858110156133de5781548a8201529084019082016133c5565b50505082870194505b5050505083516133fb818360208801612c64565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e1984360301811261344357600080fd5b83018035915067ffffffffffffffff82111561345e57600080fd5b6020019150600581901b3603821315612dd657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156134bc576134bc61348c565b500290565b6000826134de57634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b038311156134fc57600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006135296040830186886134e3565b828103602084015261353c8185876134e3565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261359d60a08301888a6134e3565b82810360608401526135b08187896134e3565b905082810360808401526135c5818587613547565b9b9a5050505050505050505050565b6000602082840312156135e657600080fd5b8151612b6881612b35565b60006020828403121561360357600080fd5b5051919050565b60006020828403121561361c57600080fd5b8151612b6881612ac1565b808201808211156106225761062261348c565b818103818111156106225761062261348c565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261368660a083018486613547565b98975050505050505050565b60008184825b858110156136c95781356136ab81612ac1565b6001600160a01b031683526020928301929190910190600101613698565b509095945050505050565b60006001600160fb1b038311156136ea57600080fd5b8260051b80858437919091019392505050565b6040815260006137106040830185612f4a565b82810360208401526137228185612f4a565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261375760a0830186612f4a565b82810360608401526137698186612f4a565b905082810360808401526136868185612c88565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261353c60a0830184612c8856fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
