/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b50604051620040453803806200404583398101604081905262000039916200029d565b600480546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03841617905560086200017087826200045d565b50600980546001600160a01b03199081166001600160a01b03888116918217909355600c805483168585161790556001600160601b03871660025560038054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000529565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028057600080fd5b919050565b80516001600160601b03811681146200028057600080fd5b60008060008060008060c08789031215620002b757600080fd5b86516001600160401b0380821115620002cf57600080fd5b818901915089601f830112620002e457600080fd5b815181811115620002f957620002f962000252565b604051601f8201601f19908116603f0116810190838211818310171562000324576200032462000252565b81604052828152602093508c848487010111156200034157600080fd5b600091505b8282101562000365578482018401518183018501529083019062000346565b6000848483010152809a5050505062000380818a0162000268565b96505050620003926040880162000285565b9350620003a26060880162000268565b9250620003b26080880162000268565b9150620003c260a0880162000268565b90509295509295509295565b600181811c90821680620003e357607f821691505b6020821081036200040457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200045857600081815260208120601f850160051c81016020861015620004335750805b601f850160051c820191505b8181101562000454578281556001016200043f565b5050505b505050565b81516001600160401b0381111562000479576200047962000252565b62000491816200048a8454620003ce565b846200040a565b602080601f831160018114620004c95760008415620004b05750858301515b600019600386901b1c1916600185901b17855562000454565b600085815260208120601f198616915b82811015620004fa57888601518255948401946001909101908401620004d9565b5085821015620005195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051613af66200054f600039600061107b01526000610f9c0152613af66000f3fe6080604052600436106101c05760003560e01c80634e1273f4116100f7578063bc197c8111610095578063e985e9c511610064578063e985e9c514610561578063f23a6e6114610599578063f242432a146105c6578063f4f3b200146105e657600080fd5b8063bc197c81146104c3578063bfa556e41461050b578063d6fa7b101461053b578063d78147cb1461054e57600080fd5b8063785e9e86116100d1578063785e9e861461044e5780638da5cb5b1461046e5780638fc3b5491461048e578063a22cb465146104a357600080fd5b80634e1273f4146103ec5780636c19e783146104195780637754305c1461043957600080fd5b806318160ddd1161016457806332667d431161013e57806332667d43146103775780633644e5151461038a5780633ccfd60b1461039f5780633cd8045e146103b457600080fd5b806318160ddd146103035780632a55205a146103185780632eb2c2d61461035757600080fd5b806302fe5305116101a057806302fe5305146102815780630e89341c146102a357806310251d7f146102d057806313af4035146102e357600080fd5b8062f74867146101c5578062fdd58e1461021057806301ffc9a714610251575b600080fd5b3480156101d157600080fd5b506101fd6101e0366004612db5565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b506101fd61022b366004612de5565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561025d57600080fd5b5061027161026c366004612e27565b610606565b6040519015158152602001610207565b34801561028d57600080fd5b506102a161029c366004612e92565b610673565b005b3480156102af57600080fd5b506102c36102be366004612f27565b61070f565b6040516102079190612f90565b6102a16102de366004612fcc565b610766565b3480156102ef57600080fd5b506102a16102fe366004613029565b6108c8565b34801561030f57600080fd5b506101fd61096a565b34801561032457600080fd5b50610338610333366004613046565b61097a565b604080516001600160a01b039093168352602083019190915201610207565b34801561036357600080fd5b506102a16103723660046130f6565b6109b0565b6102a1610385366004612fcc565b610da5565b34801561039657600080fd5b506101fd610f98565b3480156103ab57600080fd5b506102a161109d565b3480156103c057600080fd5b506009546103d4906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b3480156103f857600080fd5b5061040c6104073660046131b5565b61139f565b604051610207919061325c565b34801561042557600080fd5b506102a1610434366004613029565b6114c9565b34801561044557600080fd5b506102c3611569565b34801561045a57600080fd5b50600c546103d4906001600160a01b031681565b34801561047a57600080fd5b506004546103d4906001600160a01b031681565b34801561049a57600080fd5b50600b546101fd565b3480156104af57600080fd5b506102a16104be36600461326f565b6115fb565b3480156104cf57600080fd5b506104f26104de3660046130f6565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610207565b34801561051757600080fd5b50610271610526366004612f27565b600a6020526000908152604090205460ff1681565b6102a1610549366004613331565b611665565b6102a161055c366004613428565b6117c4565b34801561056d57600080fd5b5061027161057c3660046134b1565b600060208181529281526040808220909352908152205460ff1681565b3480156105a557600080fd5b506104f26105b43660046134df565b63f23a6e6160e01b9695505050505050565b3480156105d257600080fd5b506102a16105e13660046134df565b6118b4565b3480156105f257600080fd5b506102a1610601366004613029565b611bc5565b60006301ffc9a760e01b6001600160e01b0319831614806106375750636cdb3d1360e11b6001600160e01b03198316145b8061065257506303a24d0760e21b6001600160e01b03198316145b8061066d575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106c15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60086106cd82826135d5565b50806040516106dc9190613695565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561073457604051635d68437560e11b815260040160405180910390fd5b600861073f83611f3a565b6040516020016107509291906136b1565b6040516020818303038152906040529050919050565b6005546001146107a55760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106b8565b600260055560006107b885858585611f89565b905060006107c533612108565b90506107d2828783612195565b600c546001600160a01b0316156107fb57600c546107fb906001600160a01b0316333084612244565b85356000908152600a602090815260408220805460ff1916600117905561082490880188613760565b9050905060005b818110156108b9576108b1606089013561084860408b018b613760565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108879250505060208c018c613760565b85818110610897576108976137aa565b90506020020160208101906108ac9190613029565b6122d7565b60010161082b565b50506001600555505050505050565b6004546001600160a01b031633146109115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061097560075490565b905090565b6003546002546001600160a01b03909116906000906127109061099d90856137d6565b6109a791906137f5565b90509250929050565b8483146109f15760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106b8565b336001600160a01b0389161480610a2957506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a665760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106b8565b60008060005b87811015610c1557888882818110610a8657610a866137aa565b905060200201359250868682818110610aa157610aa16137aa565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610b1d5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b805760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a6c565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c699493929190613849565b60405180910390a46001600160a01b0389163b15610d4f5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610cbd9033908f908e908e908e908e908e908e906004016138a4565b6020604051808303816000875af1158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d009190613908565b6001600160e01b03191614610d4a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b610d99565b6001600160a01b038916610d995760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b50505050505050505050565b600554600114610de45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106b8565b60026005556000610df785858585612386565b90506000610e0433612108565b9050610e11828783612471565b600c546001600160a01b031615610e3a57600c54610e3a906001600160a01b0316333084612244565b85356000908152600a602090815260408220805460ff19166001179055610e6390880188613760565b915060009050610e766040890189613760565b90508214610eb75760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b81811015610ef457610eeb610ecf60408a018a613760565b83818110610edf57610edf6137aa565b905060200201356124ed565b50600101610eb7565b6108b9610f0760a08a0160808b01613029565b610f1460208b018b613760565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610f539250505060408c018c613760565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250612519915050565b60007f000000000000000000000000000000000000000000000000000000000000000046146110785750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b031633146110e65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111549190613925565b905060008167ffffffffffffffff81111561117157611171612e4b565b60405190808252806020026020018201604052801561119a578160200160208202803683370190505b50905060008267ffffffffffffffff8111156111b8576111b8612e4b565b6040519080825280602002602001820160405280156111e1578160200160208202803683370190505b5090504760005b8481101561134857600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e919061393e565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d29190613925565b9050818684815181106112e7576112e76137aa565b6001600160a01b039092166020928302919091019091015261271061130d8260646137d6565b61131790866137d6565b61132191906137f5565b858481518110611333576113336137aa565b602090810291909101015250506001016111e8565b60005b858110156113975761138f858281518110611368576113686137aa565b6020026020010151858381518110611382576113826137aa565b6020026020010151612679565b60010161134b565b505050505050565b60608382146113e25760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106b8565b8367ffffffffffffffff8111156113fb576113fb612e4b565b604051908082528060200260200182016040528015611424578160200160208202803683370190505b50905060005b848110156114c05761149b868683818110611447576114476137aa565b905060200201602081019061145c9190613029565b85858481811061146e5761146e6137aa565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106114ad576114ad6137aa565b602090810291909101015260010161142a565b50949350505050565b6004546001600160a01b031633146115125760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6060600880546115789061355b565b80601f01602080910402602001604051908101604052809291908181526020018280546115a49061355b565b80156115f15780601f106115c6576101008083540402835291602001916115f1565b820191906000526020600020905b8154815290600101906020018083116115d457829003601f168201915b5050505050905090565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146116ae5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6116b98160016126d4565b8251825160009190811480156116cf5750855181145b61170c5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b808210156117a257611741848381518110611729576117296137aa565b602002602001015160076127ee90919063ffffffff16565b611797868381518110611756576117566137aa565b6020026020010151868481518110611770576117706137aa565b602002602001015186858151811061178a5761178a6137aa565b6020026020010151612808565b81600101915061170c565b80821015611397576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6004546001600160a01b0316331461180d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6118188160016126d4565b8251825160009190811461185f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b808210156118875761187c848381518110611729576117296137aa565b81600101915061185f565b808210156118a9576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6113978686866128f0565b336001600160a01b03871614806118ec57506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119295760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038a1684529091529020546119855760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156119e85760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611a1a90849061395b565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611a5190849061396e565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611b7b5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611ae99033908b908a908a908a908a90600401613981565b6020604051808303816000875af1158015611b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2c9190613908565b6001600160e01b03191614611b765760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b611397565b6001600160a01b0385166113975760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b6004546001600160a01b03163314611c0e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7c9190613925565b905060008167ffffffffffffffff811115611c9957611c99612e4b565b604051908082528060200260200182016040528015611cc2578160200160208202803683370190505b50905060008267ffffffffffffffff811115611ce057611ce0612e4b565b604051908082528060200260200182016040528015611d09578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a9190613925565b90505b84821015611ee157600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df3919061393e565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e679190613925565b905081868581518110611e7c57611e7c6137aa565b6001600160a01b0390921660209283029190910190910152612710611ea28260646137d6565b611eac90856137d6565b611eb691906137f5565b858581518110611ec857611ec86137aa565b6020026020010181815250508360010193505050611d7d565b60005b85811015611f3157611f2987868381518110611f0257611f026137aa565b6020026020010151868481518110611f1c57611f1c6137aa565b6020026020010151612a98565b600101611ee4565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611f7757600183039250600a81066030018353600a9004611f59565b50819003601f19909101908152919050565b60006001611f95610f98565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c698735611fc560208a018a613760565b604051602001611fd69291906139c6565b60405160208183030381529060405280519060200120898060400190611ffc9190613760565b60405160200161200d929190613a08565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b6040516020818303038152906040528051906020012060405160200161209692919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156120f4573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600c546000906001600160a01b0316612121573461066d565b600c54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190613925565b6006546001600160a01b038481169116146121c357604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff16156121f55760405163e647f41360e01b815260040160405180910390fd5b6122026020830183613760565b9050612216606084013560808501356137d6565b61222091906137d6565b811461223f5760405163f7760f2560e01b815260040160405180910390fd5b505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806122d05760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016106b8565b5050505050565b828251146123185760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60005b83811015612380576123788261234985848151811061233c5761233c6137aa565b60200260200101516124ed565b85848151811061235b5761235b6137aa565b602002602001015160405180602001604052806000815250612b1e565b60010161231b565b50505050565b60006001612392610f98565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed4353887356123c260208a018a613760565b6040516020016123d3929190613a08565b604051602081830303815290604052805190602001208980604001906123f99190613760565b60405160200161240a929190613a08565b60408051601f19818403018152919052805160209091012060608b013561243760a08d0160808e01613029565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e001612059565b6006546001600160a01b0384811691161461249f57604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff16156124d15760405163e647f41360e01b815260040160405180910390fd5b6124de6020830183613760565b612220915060608401356137d6565b60006124f882612cc1565b5081600b600082825461250b919061395b565b9091555050600b5492915050565b82516000805b8281101561258f57858181518110612539576125396137aa565b60200260200101519150848181518110612555576125556137aa565b6020908102919091018101516000848152600180845260408083206001600160a01b038d168452909452929020805490910190550161251f565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88886040516125e0929190613a31565b60405180910390a46001600160a01b0386163b1561262f5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611ae99033906000908b908b908b90600401613a5f565b6001600160a01b0386166113975760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b600080600080600085875af190508061223f5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106b8565b600c546000906001600160a01b03166126ed5734612761565b600c54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa15801561273d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127619190613925565b9050336001600160a01b03841614806127835750600c546001600160a01b0316155b1561223f578160ff166000036127a9576127a46340d097c360e01b82612cd8565b6127c5565b8160ff166001036127c5576127c563044df8e760e41b82612cd8565b600c546001600160a01b03161561223f57600c5461223f906001600160a01b0316843084612244565b8154806128035763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561286b5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60008281526001602090815260408083206001600160a01b03871684529091528120805483929061289d90849061396e565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b0383166129465760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106b8565b81516000805b82811015612a3857848181518110612966576129666137aa565b60200260200101519150838181518110612982576129826137aa565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156129eb5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b8381815181106129fd576129fd6137aa565b6020908102919091018101516000848152600180845260408083206001600160a01b038c16845290945292902080549190910390550161294c565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612a89929190613a31565b60405180910390a45050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806123805760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106b8565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612b5090849061395b565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612c775760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190612be5903390600090899089908990600401613ab1565b6020604051808303816000875af1158015612c04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c289190613908565b6001600160e01b03191614612c725760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b612380565b6001600160a01b0384166123805760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b6000612cd06007838154019055565b60075461066d565b6004546001600160a01b0316803b63ffffffff8116600003612cfa5750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d769190613925565b90508084146122d05763f7760f256000526004601cfd5b6001600160a01b0381168114612da257600080fd5b50565b8035612db081612d8d565b919050565b60008060408385031215612dc857600080fd5b823591506020830135612dda81612d8d565b809150509250929050565b60008060408385031215612df857600080fd5b8235612e0381612d8d565b946020939093013593505050565b6001600160e01b031981168114612da257600080fd5b600060208284031215612e3957600080fd5b8135612e4481612e11565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612e8a57612e8a612e4b565b604052919050565b60006020808385031215612ea557600080fd5b823567ffffffffffffffff80821115612ebd57600080fd5b818501915085601f830112612ed157600080fd5b813581811115612ee357612ee3612e4b565b612ef5601f8201601f19168501612e61565b91508082528684828501011115612f0b57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612f3957600080fd5b5035919050565b60005b83811015612f5b578181015183820152602001612f43565b50506000910152565b60008151808452612f7c816020860160208601612f40565b601f01601f19169290920160200192915050565b602081526000612e446020830184612f64565b600060a08284031215612fb557600080fd5b50919050565b803560ff81168114612db057600080fd5b60008060008060808587031215612fe257600080fd5b843567ffffffffffffffff811115612ff957600080fd5b61300587828801612fa3565b94505061301460208601612fbb565b93969395505050506040820135916060013590565b60006020828403121561303b57600080fd5b8135612e4481612d8d565b6000806040838503121561305957600080fd5b50508035926020909101359150565b60008083601f84011261307a57600080fd5b50813567ffffffffffffffff81111561309257600080fd5b6020830191508360208260051b85010111156130ad57600080fd5b9250929050565b60008083601f8401126130c657600080fd5b50813567ffffffffffffffff8111156130de57600080fd5b6020830191508360208285010111156130ad57600080fd5b60008060008060008060008060a0898b03121561311257600080fd5b883561311d81612d8d565b9750602089013561312d81612d8d565b9650604089013567ffffffffffffffff8082111561314a57600080fd5b6131568c838d01613068565b909850965060608b013591508082111561316f57600080fd5b61317b8c838d01613068565b909650945060808b013591508082111561319457600080fd5b506131a18b828c016130b4565b999c989b5096995094979396929594505050565b600080600080604085870312156131cb57600080fd5b843567ffffffffffffffff808211156131e357600080fd5b6131ef88838901613068565b9096509450602087013591508082111561320857600080fd5b5061321587828801613068565b95989497509550505050565b600081518084526020808501945080840160005b8381101561325157815187529582019590820190600101613235565b509495945050505050565b602081526000612e446020830184613221565b6000806040838503121561328257600080fd5b823561328d81612d8d565b915060208301358015158114612dda57600080fd5b600067ffffffffffffffff8211156132bc576132bc612e4b565b5060051b60200190565b600082601f8301126132d757600080fd5b813560206132ec6132e7836132a2565b612e61565b82815260059290921b8401810191818101908684111561330b57600080fd5b8286015b84811015613326578035835291830191830161330f565b509695505050505050565b6000806000806080858703121561334757600080fd5b843567ffffffffffffffff8082111561335f57600080fd5b818701915087601f83011261337357600080fd5b813560206133836132e7836132a2565b82815260059290921b8401810191818101908b8411156133a257600080fd5b948201945b838610156133c95785356133ba81612d8d565b825294820194908201906133a7565b985050880135925050808211156133df57600080fd5b6133eb888389016132c6565b9450604087013591508082111561340157600080fd5b5061340e878288016132c6565b92505061341d60608601612da5565b905092959194509250565b6000806000806080858703121561343e57600080fd5b843561344981612d8d565b9350602085013567ffffffffffffffff8082111561346657600080fd5b613472888389016132c6565b9450604087013591508082111561348857600080fd5b50613495878288016132c6565b92505060608501356134a681612d8d565b939692955090935050565b600080604083850312156134c457600080fd5b82356134cf81612d8d565b91506020830135612dda81612d8d565b60008060008060008060a087890312156134f857600080fd5b863561350381612d8d565b9550602087013561351381612d8d565b94506040870135935060608701359250608087013567ffffffffffffffff81111561353d57600080fd5b61354989828a016130b4565b979a9699509497509295939492505050565b600181811c9082168061356f57607f821691505b602082108103612fb557634e487b7160e01b600052602260045260246000fd5b601f82111561223f57600081815260208120601f850160051c810160208610156135b65750805b601f850160051c820191505b81811015611397578281556001016135c2565b815167ffffffffffffffff8111156135ef576135ef612e4b565b613603816135fd845461355b565b8461358f565b602080601f83116001811461363857600084156136205750858301515b600019600386901b1c1916600185901b178555611397565b600085815260208120601f198616915b8281101561366757888601518255948401946001909101908401613648565b50858210156136855787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516136a7818460208701612f40565b9190910192915050565b60008084546136bf8161355b565b600182811680156136d757600181146136ec5761371b565b60ff198416875282151583028701945061371b565b8860005260208060002060005b858110156137125781548a8201529084019082016136f9565b50505082870194505b50505050835161372f818360208801612f40565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e1984360301811261377757600080fd5b83018035915067ffffffffffffffff82111561379257600080fd5b6020019150600581901b36038213156130ad57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156137f0576137f06137c0565b500290565b60008261381257634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b0383111561383057600080fd5b8260051b80836020870137939093016020019392505050565b60408152600061385d604083018688613817565b8281036020840152613870818587613817565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526138d160a08301888a613817565b82810360608401526138e4818789613817565b905082810360808401526138f981858761387b565b9b9a5050505050505050505050565b60006020828403121561391a57600080fd5b8151612e4481612e11565b60006020828403121561393757600080fd5b5051919050565b60006020828403121561395057600080fd5b8151612e4481612d8d565b8082018082111561066d5761066d6137c0565b8181038181111561066d5761066d6137c0565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526139ba60a08301848661387b565b98975050505050505050565b60008184825b858110156139fd5781356139df81612d8d565b6001600160a01b0316835260209283019291909101906001016139cc565b509095945050505050565b60006001600160fb1b03831115613a1e57600080fd5b8260051b80858437919091019392505050565b604081526000613a446040830185613221565b8281036020840152613a568185613221565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152613a8b60a0830186613221565b8281036060840152613a9d8186613221565b905082810360808401526139ba8185612f64565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261387060a0830184612f6456fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
