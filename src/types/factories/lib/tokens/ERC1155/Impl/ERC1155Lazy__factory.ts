/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162003cff38038062003cff833981016040819052620000399162000290565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03831617905560086200017086826200043f565b50600980546001600160a01b03199081166001600160a01b038781169182179093556001600160601b03861660025560038054909216179055604051908216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050506200050b565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027357600080fd5b919050565b80516001600160601b03811681146200027357600080fd5b600080600080600060a08688031215620002a957600080fd5b85516001600160401b0380821115620002c157600080fd5b818801915088601f830112620002d657600080fd5b815181811115620002eb57620002eb62000245565b604051601f8201601f19908116603f0116810190838211818310171562000316576200031662000245565b81604052828152602093508b848487010111156200033357600080fd5b600091505b8282101562000357578482018401518183018501529083019062000338565b6000848483010152809950505050620003728189016200025b565b95505050620003846040870162000278565b925062000394606087016200025b565b9150620003a4608087016200025b565b90509295509295909350565b600181811c90821680620003c557607f821691505b602082108103620003e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200043a57600081815260208120601f850160051c81016020861015620004155750805b601f850160051c820191505b81811015620004365782815560010162000421565b5050505b505050565b81516001600160401b038111156200045b576200045b62000245565b62000473816200046c8454620003b0565b84620003ec565b602080601f831160018114620004ab5760008415620004925750858301515b600019600386901b1c1916600185901b17855562000436565b600085815260208120601f198616915b82811015620004dc57888601518255948401946001909101908401620004bb565b5085821015620004fb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516137ce620005316000396000610fe101526000610f0201526137ce6000f3fe6080604052600436106101b55760003560e01c80634e1273f4116100ec578063a22cb4651161008a578063e985e9c511610064578063e985e9c514610536578063f23a6e611461056e578063f242432a1461059b578063f4f3b200146105bb57600080fd5b8063a22cb4651461049e578063bc197c81146104be578063bfa556e41461050657600080fd5b80637754305c116100c65780637754305c1461044157806381b0b756146104565780638da5cb5b146104695780638fc3b5491461048957600080fd5b80634e1273f4146103e15780636b20c4541461040e5780636c19e7831461042157600080fd5b806318160ddd1161015957806332667d431161013357806332667d431461036c5780633644e5151461037f5780633ccfd60b146103945780633cd8045e146103a957600080fd5b806318160ddd146102f85780632a55205a1461030d5780632eb2c2d61461034c57600080fd5b806302fe53051161019557806302fe5305146102765780630e89341c1461029857806310251d7f146102c557806313af4035146102d857600080fd5b8062f74867146101ba578062fdd58e1461020557806301ffc9a714610246575b600080fd5b3480156101c657600080fd5b506101f26101d5366004612ae5565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561021157600080fd5b506101f2610220366004612b15565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561025257600080fd5b50610266610261366004612b57565b6105db565b60405190151581526020016101fc565b34801561028257600080fd5b50610296610291366004612bc2565b610648565b005b3480156102a457600080fd5b506102b86102b3366004612c57565b6106e4565b6040516101fc9190612cc0565b6102966102d3366004612d01565b61073b565b3480156102e457600080fd5b506102966102f3366004612d5e565b610865565b34801561030457600080fd5b506101f2610907565b34801561031957600080fd5b5061032d610328366004612d7b565b610917565b604080516001600160a01b0390931683526020830191909152016101fc565b34801561035857600080fd5b50610296610367366004612e2b565b61094d565b61029661037a366004612d01565b610d42565b34801561038b57600080fd5b506101f2610efe565b3480156103a057600080fd5b50610296611003565b3480156103b557600080fd5b506009546103c9906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b3480156103ed57600080fd5b506104016103fc366004612eea565b611305565b6040516101fc9190612f91565b61029661041c366004613033565b61142f565b34801561042d57600080fd5b5061029661043c366004612d5e565b611543565b34801561044d57600080fd5b506102b86115e3565b6102966104643660046130a9565b611675565b34801561047557600080fd5b506004546103c9906001600160a01b031681565b34801561049557600080fd5b50600b546101f2565b3480156104aa57600080fd5b506102966104b9366004613156565b6117c1565b3480156104ca57600080fd5b506104ed6104d9366004612e2b565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101fc565b34801561051257600080fd5b50610266610521366004612c57565b600a6020526000908152604090205460ff1681565b34801561054257600080fd5b50610266610551366004613189565b600060208181529281526040808220909352908152205460ff1681565b34801561057a57600080fd5b506104ed6105893660046131b7565b63f23a6e6160e01b9695505050505050565b3480156105a757600080fd5b506102966105b63660046131b7565b61182b565b3480156105c757600080fd5b506102966105d6366004612d5e565b611b3c565b60006301ffc9a760e01b6001600160e01b03198316148061060c5750636cdb3d1360e11b6001600160e01b03198316145b8061062757506303a24d0760e21b6001600160e01b03198316145b80610642575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106965760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60086106a282826132ad565b50806040516106b1919061336d565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561070957604051635d68437560e11b815260040160405180910390fd5b600861071483611eb1565b604051602001610725929190613389565b6040516020818303038152906040529050919050565b60055460011461077a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161068d565b6002600555600061078d85858585611f00565b9050610799818661207f565b84356000908152600a602090815260408220805460ff191660011790556107c290870187613438565b9050905060005b818110156108575761084f60608801356107e660408a018a613438565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108259250505060208b018b613438565b8581811061083557610835613482565b905060200201602081019061084a9190612d5e565b61212d565b6001016107c9565b505060016005555050505050565b6004546001600160a01b031633146108ae5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061091260075490565b905090565b6003546002546001600160a01b03909116906000906127109061093a90856134ae565b61094491906134cd565b90509250929050565b84831461098e5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161068d565b336001600160a01b03891614806109c657506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a035760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161068d565b60008060005b87811015610bb257888882818110610a2357610a23613482565b905060200201359250868682818110610a3e57610a3e613482565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610aba5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b1d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a09565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c069493929190613521565b60405180910390a46001600160a01b0389163b15610cec5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610c5a9033908f908e908e908e908e908e908e9060040161357c565b6020604051808303816000875af1158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9d91906135e0565b6001600160e01b03191614610ce75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b610d36565b6001600160a01b038916610d365760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b50505050505050505050565b600554600114610d815760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161068d565b60026005556000610d94858585856121dc565b9050610da081866122c7565b84356000908152600a602090815260408220805460ff19166001179055610dc990870187613438565b915060009050610ddc6040880188613438565b90508214610e1d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b81811015610e5a57610e51610e356040890189613438565b83818110610e4557610e45613482565b90506020020135612343565b50600101610e1d565b610857610e6d60a0890160808a01612d5e565b610e7a60208a018a613438565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610eb99250505060408b018b613438565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506040805160208101909152908152925061236f915050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610fde5750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b0316331461104c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ba91906135fd565b905060008167ffffffffffffffff8111156110d7576110d7612b7b565b604051908082528060200260200182016040528015611100578160200160208202803683370190505b50905060008267ffffffffffffffff81111561111e5761111e612b7b565b604051908082528060200260200182016040528015611147578160200160208202803683370190505b5090504760005b848110156112ae57600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156111a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c49190613616565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123891906135fd565b90508186848151811061124d5761124d613482565b6001600160a01b03909216602092830291909101909101526127106112738260646134ae565b61127d90866134ae565b61128791906134cd565b85848151811061129957611299613482565b6020908102919091010152505060010161114e565b60005b858110156112fd576112f58582815181106112ce576112ce613482565b60200260200101518583815181106112e8576112e8613482565b60200260200101516124cf565b6001016112b1565b505050505050565b60608382146113485760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161068d565b8367ffffffffffffffff81111561136157611361612b7b565b60405190808252806020026020018201604052801561138a578160200160208202803683370190505b50905060005b84811015611426576114018686838181106113ad576113ad613482565b90506020020160208101906113c29190612d5e565b8585848181106113d4576113d4613482565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061141357611413613482565b6020908102919091010152600101611390565b50949350505050565b6004546001600160a01b031633146114785760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b61148863044df8e760e41b61252f565b815181516000919081146114cf5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b8082101561150f576115048383815181106114ec576114ec613482565b602002602001015160076125e390919063ffffffff16565b8160010191506114cf565b80821015611531576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61153c8585856125fd565b5050505050565b6004546001600160a01b0316331461158c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6060600880546115f290613233565b80601f016020809104026020016040519081016040528092919081815260200182805461161e90613233565b801561166b5780601f106116405761010080835404028352916020019161166b565b820191906000526020600020905b81548152906001019060200180831161164e57829003601f168201915b5050505050905090565b6004546001600160a01b031633146116be5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6116ce63044df8e760e41b61252f565b8151815160009190811480156116e45750845181145b6117215760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b8082101561179f5761173e8383815181106114ec576114ec613482565b61179485838151811061175357611753613482565b602002602001015185848151811061176d5761176d613482565b602002602001015185858151811061178757611787613482565b60200260200101516127a5565b816001019150611721565b8082101561153c576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b038716148061186357506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6118a05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161068d565b60008481526001602090815260408083206001600160a01b038a1684529091529020546118fc5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b60008481526001602090815260408083206001600160a01b038a16845290915290205483111561195f5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611991908490613633565b909155505060008481526001602090815260408083206001600160a01b038a168452909152812080548592906119c8908490613646565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611af25760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611a609033908b908a908a908a908a90600401613659565b6020604051808303816000875af1158015611a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa391906135e0565b6001600160e01b03191614611aed5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b6112fd565b6001600160a01b0385166112fd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b6004546001600160a01b03163314611b855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611bcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf391906135fd565b905060008167ffffffffffffffff811115611c1057611c10612b7b565b604051908082528060200260200182016040528015611c39578160200160208202803683370190505b50905060008267ffffffffffffffff811115611c5757611c57612b7b565b604051908082528060200260200182016040528015611c80578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611ccd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf191906135fd565b90505b84821015611e5857600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6a9190613616565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dde91906135fd565b905081868581518110611df357611df3613482565b6001600160a01b0390921660209283029190910190910152612710611e198260646134ae565b611e2390856134ae565b611e2d91906134cd565b858581518110611e3f57611e3f613482565b6020026020010181815250508360010193505050611cf4565b60005b85811015611ea857611ea087868381518110611e7957611e79613482565b6020026020010151868481518110611e9357611e93613482565b602002602001015161288d565b600101611e5b565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611eee57600183039250600a81066030018353600a9004611ed0565b50819003601f19909101908152919050565b60006001611f0c610efe565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c698735611f3c60208a018a613438565b604051602001611f4d92919061369e565b60405160208183030381529060405280519060200120898060400190611f739190613438565b604051602001611f849291906136e0565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b6040516020818303038152906040528051906020012060405160200161200d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561206b573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6006546001600160a01b038381169116146120ad57604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff16156120df5760405163e647f41360e01b815260040160405180910390fd5b6120ec6020820182613438565b9050612100606083013560808401356134ae565b61210a91906134ae565b34146121295760405163f7760f2560e01b815260040160405180910390fd5b5050565b8282511461216e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b60005b838110156121d6576121ce8261219f85848151811061219257612192613482565b6020026020010151612343565b8584815181106121b1576121b1613482565b602002602001015160405180602001604052806000815250612913565b600101612171565b50505050565b600060016121e8610efe565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed43538873561221860208a018a613438565b6040516020016122299291906136e0565b6040516020818303038152906040528051906020012089806040019061224f9190613438565b6040516020016122609291906136e0565b60408051601f19818403018152919052805160209091012060608b013561228d60a08d0160808e01612d5e565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e001611fd0565b6006546001600160a01b038381169116146122f557604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff16156123275760405163e647f41360e01b815260040160405180910390fd5b6123346020820182613438565b61210a915060608301356134ae565b600061234e82612ab6565b5081600b60008282546123619190613633565b9091555050600b5492915050565b82516000805b828110156123e55785818151811061238f5761238f613482565b602002602001015191508481815181106123ab576123ab613482565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501612375565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051612436929190613709565b60405180910390a46001600160a01b0386163b156124855760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611a609033906000908b908b908b90600401613737565b6001600160a01b0386166112fd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b600080600080600085875af190508061252a5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161068d565b505050565b6004546001600160a01b0316803b63ffffffff811660000361255057505050565b60048054604051633b7279e960e21b81526001600160e01b03198616928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa1580156125a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125cc91906135fd565b90508034146121d65763f7760f256000526004601cfd5b8154806125f85763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166126535760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d0000000000000000000000000000000000000000604482015260640161068d565b81516000805b828110156127455784818151811061267357612673613482565b6020026020010151915083818151811061268f5761268f613482565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156126f85760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b83818151811061270a5761270a613482565b6020908102919091018101516000848152600180845260408083206001600160a01b038c168452909452929020805491909103905501612659565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612796929190613709565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156128085760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b60008281526001602090815260408083206001600160a01b03871684529091528120805483929061283a908490613646565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806121d65760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161068d565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612945908490613633565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612a6c5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e61906129da903390600090899089908990600401613789565b6020604051808303816000875af11580156129f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1d91906135e0565b6001600160e01b03191614612a675760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b6121d6565b6001600160a01b0384166121d65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b6000612ac56007838154019055565b600754610642565b6001600160a01b0381168114612ae257600080fd5b50565b60008060408385031215612af857600080fd5b823591506020830135612b0a81612acd565b809150509250929050565b60008060408385031215612b2857600080fd5b8235612b3381612acd565b946020939093013593505050565b6001600160e01b031981168114612ae257600080fd5b600060208284031215612b6957600080fd5b8135612b7481612b41565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bba57612bba612b7b565b604052919050565b60006020808385031215612bd557600080fd5b823567ffffffffffffffff80821115612bed57600080fd5b818501915085601f830112612c0157600080fd5b813581811115612c1357612c13612b7b565b612c25601f8201601f19168501612b91565b91508082528684828501011115612c3b57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612c6957600080fd5b5035919050565b60005b83811015612c8b578181015183820152602001612c73565b50506000910152565b60008151808452612cac816020860160208601612c70565b601f01601f19169290920160200192915050565b602081526000612b746020830184612c94565b600060a08284031215612ce557600080fd5b50919050565b803560ff81168114612cfc57600080fd5b919050565b60008060008060808587031215612d1757600080fd5b843567ffffffffffffffff811115612d2e57600080fd5b612d3a87828801612cd3565b945050612d4960208601612ceb565b93969395505050506040820135916060013590565b600060208284031215612d7057600080fd5b8135612b7481612acd565b60008060408385031215612d8e57600080fd5b50508035926020909101359150565b60008083601f840112612daf57600080fd5b50813567ffffffffffffffff811115612dc757600080fd5b6020830191508360208260051b8501011115612de257600080fd5b9250929050565b60008083601f840112612dfb57600080fd5b50813567ffffffffffffffff811115612e1357600080fd5b602083019150836020828501011115612de257600080fd5b60008060008060008060008060a0898b031215612e4757600080fd5b8835612e5281612acd565b97506020890135612e6281612acd565b9650604089013567ffffffffffffffff80821115612e7f57600080fd5b612e8b8c838d01612d9d565b909850965060608b0135915080821115612ea457600080fd5b612eb08c838d01612d9d565b909650945060808b0135915080821115612ec957600080fd5b50612ed68b828c01612de9565b999c989b5096995094979396929594505050565b60008060008060408587031215612f0057600080fd5b843567ffffffffffffffff80821115612f1857600080fd5b612f2488838901612d9d565b90965094506020870135915080821115612f3d57600080fd5b50612f4a87828801612d9d565b95989497509550505050565b600081518084526020808501945080840160005b83811015612f8657815187529582019590820190600101612f6a565b509495945050505050565b602081526000612b746020830184612f56565b600067ffffffffffffffff821115612fbe57612fbe612b7b565b5060051b60200190565b600082601f830112612fd957600080fd5b81356020612fee612fe983612fa4565b612b91565b82815260059290921b8401810191818101908684111561300d57600080fd5b8286015b848110156130285780358352918301918301613011565b509695505050505050565b60008060006060848603121561304857600080fd5b833561305381612acd565b9250602084013567ffffffffffffffff8082111561307057600080fd5b61307c87838801612fc8565b9350604086013591508082111561309257600080fd5b5061309f86828701612fc8565b9150509250925092565b6000806000606084860312156130be57600080fd5b833567ffffffffffffffff808211156130d657600080fd5b818601915086601f8301126130ea57600080fd5b813560206130fa612fe983612fa4565b82815260059290921b8401810191818101908a84111561311957600080fd5b948201945b8386101561314057853561313181612acd565b8252948201949082019061311e565b9750508701359250508082111561307057600080fd5b6000806040838503121561316957600080fd5b823561317481612acd565b915060208301358015158114612b0a57600080fd5b6000806040838503121561319c57600080fd5b82356131a781612acd565b91506020830135612b0a81612acd565b60008060008060008060a087890312156131d057600080fd5b86356131db81612acd565b955060208701356131eb81612acd565b94506040870135935060608701359250608087013567ffffffffffffffff81111561321557600080fd5b61322189828a01612de9565b979a9699509497509295939492505050565b600181811c9082168061324757607f821691505b602082108103612ce557634e487b7160e01b600052602260045260246000fd5b601f82111561252a57600081815260208120601f850160051c8101602086101561328e5750805b601f850160051c820191505b818110156112fd5782815560010161329a565b815167ffffffffffffffff8111156132c7576132c7612b7b565b6132db816132d58454613233565b84613267565b602080601f83116001811461331057600084156132f85750858301515b600019600386901b1c1916600185901b1785556112fd565b600085815260208120601f198616915b8281101561333f57888601518255948401946001909101908401613320565b508582101561335d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161337f818460208701612c70565b9190910192915050565b600080845461339781613233565b600182811680156133af57600181146133c4576133f3565b60ff19841687528215158302870194506133f3565b8860005260208060002060005b858110156133ea5781548a8201529084019082016133d1565b50505082870194505b505050508351613407818360208801612c70565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e1984360301811261344f57600080fd5b83018035915067ffffffffffffffff82111561346a57600080fd5b6020019150600581901b3603821315612de257600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156134c8576134c8613498565b500290565b6000826134ea57634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b0383111561350857600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006135356040830186886134ef565b82810360208401526135488185876134ef565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526135a960a08301888a6134ef565b82810360608401526135bc8187896134ef565b905082810360808401526135d1818587613553565b9b9a5050505050505050505050565b6000602082840312156135f257600080fd5b8151612b7481612b41565b60006020828403121561360f57600080fd5b5051919050565b60006020828403121561362857600080fd5b8151612b7481612acd565b8082018082111561064257610642613498565b8181038181111561064257610642613498565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261369260a083018486613553565b98975050505050505050565b60008184825b858110156136d55781356136b781612acd565b6001600160a01b0316835260209283019291909101906001016136a4565b509095945050505050565b60006001600160fb1b038311156136f657600080fd5b8260051b80858437919091019392505050565b60408152600061371c6040830185612f56565b828103602084015261372e8185612f56565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261376360a0830186612f56565b82810360608401526137758186612f56565b905082810360808401526136928185612c94565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261354860a0830184612c9456fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
