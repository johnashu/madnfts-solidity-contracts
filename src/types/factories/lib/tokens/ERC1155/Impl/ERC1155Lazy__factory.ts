/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b50604051620048c5380380620048c583398101604081905262000039916200029d565b600480546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03841617905560086200017087826200045d565b50600980546001600160a01b03199081166001600160a01b03888116918217909355600c805483168585161790556001600160601b03871660025560038054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000529565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028057600080fd5b919050565b80516001600160601b03811681146200028057600080fd5b60008060008060008060c08789031215620002b757600080fd5b86516001600160401b0380821115620002cf57600080fd5b818901915089601f830112620002e457600080fd5b815181811115620002f957620002f962000252565b604051601f8201601f19908116603f0116810190838211818310171562000324576200032462000252565b81604052828152602093508c848487010111156200034157600080fd5b600091505b8282101562000365578482018401518183018501529083019062000346565b6000848483010152809a5050505062000380818a0162000268565b96505050620003926040880162000285565b9350620003a26060880162000268565b9250620003b26080880162000268565b9150620003c260a0880162000268565b90509295509295509295565b600181811c90821680620003e357607f821691505b6020821081036200040457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200045857600081815260208120601f850160051c81016020861015620004335750805b601f850160051c820191505b8181101562000454578281556001016200043f565b5050505b505050565b81516001600160401b0381111562000479576200047962000252565b62000491816200048a8454620003ce565b846200040a565b602080601f831160018114620004c95760008415620004b05750858301515b600019600386901b1c1916600185901b17855562000454565b600085815260208120601f198616915b82811015620004fa57888601518255948401946001909101908401620004d9565b5085821015620005195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516143766200054f600039600061136b0152600061128c01526143766000f3fe6080604052600436106101fc5760003560e01c806368ab30f31161011d578063a22cb465116100b0578063d78147cb1161007f578063f23a6e6111610064578063f23a6e6114610621578063f242432a1461064e578063f4f3b2001461066e57600080fd5b8063d78147cb146105d6578063e985e9c5146105e957600080fd5b8063a22cb4651461052b578063bc197c811461054b578063bfa556e414610593578063d6fa7b10146105c357600080fd5b8063785e9e86116100ec578063785e9e86146104c357806381b0b756146104e35780638da5cb5b146104f65780638fc3b5491461051657600080fd5b806368ab30f3146104685780636b20c4541461047b5780636c19e7831461048e5780637754305c146104ae57600080fd5b806325dc2c93116101955780633644e515116101645780633644e515146103d95780633ccfd60b146103ee5780633cd8045e146104035780634e1273f41461043b57600080fd5b806325dc2c93146103545780632a55205a146103675780632eb2c2d6146103a657806332667d43146103c657600080fd5b80630e89341c116101d15780630e89341c146102df57806310251d7f1461030c57806313af40351461031f57806318160ddd1461033f57600080fd5b8062f7486714610201578062fdd58e1461024c57806301ffc9a71461028d57806302fe5305146102bd575b600080fd5b34801561020d57600080fd5b5061023961021c366004613538565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561025857600080fd5b50610239610267366004613568565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561029957600080fd5b506102ad6102a83660046135aa565b61068e565b6040519015158152602001610243565b3480156102c957600080fd5b506102dd6102d8366004613615565b6106fb565b005b3480156102eb57600080fd5b506102ff6102fa3660046136aa565b610797565b6040516102439190613713565b6102dd61031a366004613754565b6107ee565b34801561032b57600080fd5b506102dd61033a3660046137b1565b610961565b34801561034b57600080fd5b50610239610a03565b6102dd6103623660046137ce565b610a13565b34801561037357600080fd5b50610387610382366004613844565b610cb9565b604080516001600160a01b039093168352602083019190915201610243565b3480156103b257600080fd5b506102dd6103c13660046138f4565b610cef565b6102dd6103d4366004613754565b6110e4565b3480156103e557600080fd5b50610239611288565b3480156103fa57600080fd5b506102dd61138d565b34801561040f57600080fd5b50600954610423906001600160a01b031681565b6040516001600160a01b039091168152602001610243565b34801561044757600080fd5b5061045b6104563660046139b3565b61168f565b6040516102439190613a5a565b6102dd6104763660046137ce565b6117b9565b6102dd610489366004613afc565b611985565b34801561049a57600080fd5b506102dd6104a93660046137b1565b611ae2565b3480156104ba57600080fd5b506102ff611b82565b3480156104cf57600080fd5b50600c54610423906001600160a01b031681565b6102dd6104f1366004613bd6565b611c14565b34801561050257600080fd5b50600454610423906001600160a01b031681565b34801561052257600080fd5b50600b54610239565b34801561053757600080fd5b506102dd610546366004613c25565b611da9565b34801561055757600080fd5b5061057a6105663660046138f4565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610243565b34801561059f57600080fd5b506102ad6105ae3660046136aa565b600a6020526000908152604090205460ff1681565b6102dd6105d1366004613c58565b611e13565b6102dd6105e4366004613cf3565b612032565b3480156105f557600080fd5b506102ad610604366004613d31565b600060208181529281526040808220909352908152205460ff1681565b34801561062d57600080fd5b5061057a61063c366004613d5f565b63f23a6e6160e01b9695505050505050565b34801561065a57600080fd5b506102dd610669366004613d5f565b6121fe565b34801561067a57600080fd5b506102dd6106893660046137b1565b61250f565b60006301ffc9a760e01b6001600160e01b0319831614806106bf5750636cdb3d1360e11b6001600160e01b03198316145b806106da57506303a24d0760e21b6001600160e01b03198316145b806106f5575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146107495760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60086107558282613e55565b50806040516107649190613f15565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b548211156107bc57604051635d68437560e11b815260040160405180910390fd5b60086107c78361287b565b6040516020016107d8929190613f31565b6040516020818303038152906040529050919050565b60055460011461082d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610740565b6002600555600c546001600160a01b03161561087a5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b6000610888858585856128ca565b9050610895818634612a49565b84356000908152600a602090815260408220805460ff191660011790556108be90870187613fe0565b9050905060005b818110156109535761094b60608801356108e260408a018a613fe0565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109219250505060208b018b613fe0565b858181106109315761093161402a565b905060200201602081019061094691906137b1565b612af8565b6001016108c5565b505060016005555050505050565b6004546001600160a01b031633146109aa5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610a0e60075490565b905090565b600554600114610a525760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610740565b6002600555600c546001600160a01b0316610a9e5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b6000610aac86868686612ba7565b600c54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529293506000929091169063dd62ed3e90604401602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190614040565b9050610b33828883612c92565b600c54610b4b906001600160a01b0316843084612d0e565b86356000908152600a602090815260408220805460ff19166001179055610b7490890189613fe0565b915060009050610b8760408a018a613fe0565b90508214610bc85760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b81811015610c0557610bfc610be060408b018b613fe0565b83818110610bf057610bf061402a565b90506020020135612d9a565b50600101610bc8565b610ca9610c1860a08b0160808c016137b1565b610c2560208c018c613fe0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610c649250505060408d018d613fe0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250612dc6915050565b5050600160055550505050505050565b6003546002546001600160a01b039091169060009061271090610cdc908561406f565b610ce6919061408e565b90509250929050565b848314610d305760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610740565b336001600160a01b0389161480610d6857506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610da55760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610740565b60008060005b87811015610f5457888882818110610dc557610dc561402a565b905060200201359250868682818110610de057610de061402a565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610e5c5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610740565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610ebf5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610dab565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610fa894939291906140e2565b60405180910390a46001600160a01b0389163b1561108e5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ffc9033908f908e908e908e908e908e908e9060040161413d565b6020604051808303816000875af115801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f91906141a1565b6001600160e01b031916146110895760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610740565b6110d8565b6001600160a01b0389166110d85760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610740565b50505050505050505050565b6005546001146111235760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610740565b6002600555600c546001600160a01b0316156111705760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b600061117e85858585612ba7565b905061118b818634612c92565b84356000908152600a602090815260408220805460ff191660011790556111b490870187613fe0565b9150600090506111c76040880188613fe0565b905082146112085760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b8181101561122957611220610be06040890189613fe0565b50600101611208565b61095361123c60a0890160808a016137b1565b61124960208a018a613fe0565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610c649250505060408b018b613fe0565b60007f000000000000000000000000000000000000000000000000000000000000000046146113685750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b031633146113d65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114449190614040565b905060008167ffffffffffffffff811115611461576114616135ce565b60405190808252806020026020018201604052801561148a578160200160208202803683370190505b50905060008267ffffffffffffffff8111156114a8576114a86135ce565b6040519080825280602002602001820160405280156114d1578160200160208202803683370190505b5090504760005b8481101561163857600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561152a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154e91906141be565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c29190614040565b9050818684815181106115d7576115d761402a565b6001600160a01b03909216602092830291909101909101526127106115fd82606461406f565b611607908661406f565b611611919061408e565b8584815181106116235761162361402a565b602090810291909101015250506001016114d8565b60005b858110156116875761167f8582815181106116585761165861402a565b60200260200101518583815181106116725761167261402a565b6020026020010151612f26565b60010161163b565b505050505050565b60608382146116d25760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610740565b8367ffffffffffffffff8111156116eb576116eb6135ce565b604051908082528060200260200182016040528015611714578160200160208202803683370190505b50905060005b848110156117b05761178b8686838181106117375761173761402a565b905060200201602081019061174c91906137b1565b85858481811061175e5761175e61402a565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061179d5761179d61402a565b602090810291909101015260010161171a565b50949350505050565b6005546001146117f85760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610740565b6002600555600c546001600160a01b03166118445760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b6000611852868686866128ca565b600c54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529293506000929091169063dd62ed3e90604401602060405180830381865afa1580156118a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cc9190614040565b90506118d9828883612a49565b600c546118f1906001600160a01b0316843084612d0e565b86356000908152600a602090815260408220805460ff1916600117905561191a90890189613fe0565b9050905060005b81811015610ca95761197d60608a013561193e60408c018c613fe0565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109219250505060208d018d613fe0565b600101611921565b6004546001600160a01b031633146119ce5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b600c546001600160a01b031615611a165760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b611a2763044df8e760e41b34612f81565b81518151600091908114611a6e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b80821015611aae57611aa3838381518110611a8b57611a8b61402a565b6020026020010151600761303690919063ffffffff16565b816001019150611a6e565b80821015611ad0576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b611adb858585613050565b5050505050565b6004546001600160a01b03163314611b2b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b606060088054611b9190613ddb565b80601f0160208091040260200160405190810160405280929190818152602001828054611bbd90613ddb565b8015611c0a5780601f10611bdf57610100808354040283529160200191611c0a565b820191906000526020600020905b815481529060010190602001808311611bed57829003601f168201915b5050505050905090565b6004546001600160a01b03163314611c5d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b600c546001600160a01b031615611ca55760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b611cb663044df8e760e41b34612f81565b815181516000919081148015611ccc5750845181145b611d095760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b80821015611d8757611d26838381518110611a8b57611a8b61402a565b611d7c858381518110611d3b57611d3b61402a565b6020026020010151858481518110611d5557611d5561402a565b6020026020010151858581518110611d6f57611d6f61402a565b60200260200101516131f8565b816001019150611d09565b80821015611adb576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b03163314611e5c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b600c546001600160a01b0316611ea35760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b600c54604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e90604401602060405180830381865afa158015611ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f189190614040565b9050611f2b63044df8e760e41b82612f81565b600c54611f43906001600160a01b0316833084612d0e565b835183516000919081148015611f595750865181145b611f965760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b8082101561200757611fb3858381518110611a8b57611a8b61402a565b611ffc878381518110611fc857611fc861402a565b6020026020010151878481518110611fe257611fe261402a565b6020026020010151878581518110611d6f57611d6f61402a565b816001019150611f96565b80821015612029576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b50505050505050565b6004546001600160a01b0316331461207b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b600c546001600160a01b03166120c25760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610740565b600c54604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e90604401602060405180830381865afa158015612113573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121379190614040565b905061214a63044df8e760e41b82612f81565b600c54612162906001600160a01b0316833084612d0e565b835183516000919081146121a95760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b808210156121d1576121c6858381518110611a8b57611a8b61402a565b8160010191506121a9565b808210156121f3576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b612029878787613050565b336001600160a01b038716148061223657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6122735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610740565b60008481526001602090815260408083206001600160a01b038a1684529091529020546122cf5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610740565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156123325760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b60008481526001602090815260408083206001600160a01b0389168452909152812080548592906123649084906141db565b909155505060008481526001602090815260408083206001600160a01b038a1684529091528120805485929061239b9084906141ee565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156124c55760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906124339033908b908a908a908a908a90600401614201565b6020604051808303816000875af1158015612452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247691906141a1565b6001600160e01b031916146124c05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610740565b611687565b6001600160a01b0385166116875760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610740565b6004546001600160a01b031633146125585760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610740565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156125a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c69190614040565b905060008167ffffffffffffffff8111156125e3576125e36135ce565b60405190808252806020026020018201604052801561260c578160200160208202803683370190505b50905060008267ffffffffffffffff81111561262a5761262a6135ce565b604051908082528060200260200182016040528015612653578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156126a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c49190614040565b90505b8482101561282b57600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015612719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061273d91906141be565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561278d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b19190614040565b9050818685815181106127c6576127c661402a565b6001600160a01b03909216602092830291909101909101526127106127ec82606461406f565b6127f6908561406f565b612800919061408e565b8585815181106128125761281261402a565b60200260200101818152505083600101935050506126c7565b60005b85811015612029576128738786838151811061284c5761284c61402a565b60200260200101518684815181106128665761286661402a565b60200260200101516132e0565b60010161282e565b604080516080810191829052607f0190826030600a8206018353600a90045b80156128b857600183039250600a81066030018353600a900461289a565b50819003601f19909101908152919050565b600060016128d6611288565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561290660208a018a613fe0565b604051602001612917929190614246565b6040516020818303038152906040528051906020012089806040019061293d9190613fe0565b60405160200161294e929190614288565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b604051602081830303815290604052805190602001206040516020016129d792919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015612a35573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6006546001600160a01b03848116911614612a7757604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff1615612aa95760405163e647f41360e01b815260040160405180910390fd5b612ab66020830183613fe0565b9050612aca6060840135608085013561406f565b612ad4919061406f565b8114612af35760405163f7760f2560e01b815260040160405180910390fd5b505050565b82825114612b395760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b60005b83811015612ba157612b9982612b6a858481518110612b5d57612b5d61402a565b6020026020010151612d9a565b858481518110612b7c57612b7c61402a565b602002602001015160405180602001604052806000815250613366565b600101612b3c565b50505050565b60006001612bb3611288565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed435388735612be360208a018a613fe0565b604051602001612bf4929190614288565b60405160208183030381529060405280519060200120898060400190612c1a9190613fe0565b604051602001612c2b929190614288565b60408051601f19818403018152919052805160209091012060608b0135612c5860a08d0160808e016137b1565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e00161299a565b6006546001600160a01b03848116911614612cc057604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff1615612cf25760405163e647f41360e01b815260040160405180910390fd5b612cff6020830183613fe0565b612ad49150606084013561406f565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611adb5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610740565b6000612da582613509565b5081600b6000828254612db891906141db565b9091555050600b5492915050565b82516000805b82811015612e3c57858181518110612de657612de661402a565b60200260200101519150848181518110612e0257612e0261402a565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501612dcc565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051612e8d9291906142b1565b60405180910390a46001600160a01b0386163b15612edc5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c81906124339033906000908b908b908b906004016142df565b6001600160a01b0386166116875760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610740565b600080600080600085875af1905080612af35760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610740565b6004546001600160a01b0316803b63ffffffff8116600003612fa35750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301f9190614040565b9050808414611adb5763f7760f256000526004601cfd5b81548061304b5763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166130a65760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610740565b81516000805b82811015613198578481815181106130c6576130c661402a565b602002602001015191508381815181106130e2576130e261402a565b60209081029190910181015160008481526001835260408082206001600160a01b038b1683529093529190912054101561314b5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610740565b83818151811061315d5761315d61402a565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016130ac565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516131e99291906142b1565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b038716845290915290205481111561325b5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610740565b60008281526001602090815260408083206001600160a01b03871684529091528120805483929061328d9084906141ee565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080612ba15760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610740565b60008381526001602090815260408083206001600160a01b0388168452909152812080548492906133989084906141db565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156134bf5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061342d903390600090899089908990600401614331565b6020604051808303816000875af115801561344c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061347091906141a1565b6001600160e01b031916146134ba5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610740565b612ba1565b6001600160a01b038416612ba15760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610740565b60006135186007838154019055565b6007546106f5565b6001600160a01b038116811461353557600080fd5b50565b6000806040838503121561354b57600080fd5b82359150602083013561355d81613520565b809150509250929050565b6000806040838503121561357b57600080fd5b823561358681613520565b946020939093013593505050565b6001600160e01b03198116811461353557600080fd5b6000602082840312156135bc57600080fd5b81356135c781613594565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561360d5761360d6135ce565b604052919050565b6000602080838503121561362857600080fd5b823567ffffffffffffffff8082111561364057600080fd5b818501915085601f83011261365457600080fd5b813581811115613666576136666135ce565b613678601f8201601f191685016135e4565b9150808252868482850101111561368e57600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156136bc57600080fd5b5035919050565b60005b838110156136de5781810151838201526020016136c6565b50506000910152565b600081518084526136ff8160208601602086016136c3565b601f01601f19169290920160200192915050565b6020815260006135c760208301846136e7565b600060a0828403121561373857600080fd5b50919050565b803560ff8116811461374f57600080fd5b919050565b6000806000806080858703121561376a57600080fd5b843567ffffffffffffffff81111561378157600080fd5b61378d87828801613726565b94505061379c6020860161373e565b93969395505050506040820135916060013590565b6000602082840312156137c357600080fd5b81356135c781613520565b600080600080600060a086880312156137e657600080fd5b853567ffffffffffffffff8111156137fd57600080fd5b61380988828901613726565b9550506138186020870161373e565b93506040860135925060608601359150608086013561383681613520565b809150509295509295909350565b6000806040838503121561385757600080fd5b50508035926020909101359150565b60008083601f84011261387857600080fd5b50813567ffffffffffffffff81111561389057600080fd5b6020830191508360208260051b85010111156138ab57600080fd5b9250929050565b60008083601f8401126138c457600080fd5b50813567ffffffffffffffff8111156138dc57600080fd5b6020830191508360208285010111156138ab57600080fd5b60008060008060008060008060a0898b03121561391057600080fd5b883561391b81613520565b9750602089013561392b81613520565b9650604089013567ffffffffffffffff8082111561394857600080fd5b6139548c838d01613866565b909850965060608b013591508082111561396d57600080fd5b6139798c838d01613866565b909650945060808b013591508082111561399257600080fd5b5061399f8b828c016138b2565b999c989b5096995094979396929594505050565b600080600080604085870312156139c957600080fd5b843567ffffffffffffffff808211156139e157600080fd5b6139ed88838901613866565b90965094506020870135915080821115613a0657600080fd5b50613a1387828801613866565b95989497509550505050565b600081518084526020808501945080840160005b83811015613a4f57815187529582019590820190600101613a33565b509495945050505050565b6020815260006135c76020830184613a1f565b600067ffffffffffffffff821115613a8757613a876135ce565b5060051b60200190565b600082601f830112613aa257600080fd5b81356020613ab7613ab283613a6d565b6135e4565b82815260059290921b84018101918181019086841115613ad657600080fd5b8286015b84811015613af15780358352918301918301613ada565b509695505050505050565b600080600060608486031215613b1157600080fd5b8335613b1c81613520565b9250602084013567ffffffffffffffff80821115613b3957600080fd5b613b4587838801613a91565b93506040860135915080821115613b5b57600080fd5b50613b6886828701613a91565b9150509250925092565b600082601f830112613b8357600080fd5b81356020613b93613ab283613a6d565b82815260059290921b84018101918181019086841115613bb257600080fd5b8286015b84811015613af1578035613bc981613520565b8352918301918301613bb6565b600080600060608486031215613beb57600080fd5b833567ffffffffffffffff80821115613c0357600080fd5b613c0f87838801613b72565b94506020860135915080821115613b3957600080fd5b60008060408385031215613c3857600080fd5b8235613c4381613520565b91506020830135801515811461355d57600080fd5b60008060008060808587031215613c6e57600080fd5b843567ffffffffffffffff80821115613c8657600080fd5b613c9288838901613b72565b95506020870135915080821115613ca857600080fd5b613cb488838901613a91565b94506040870135915080821115613cca57600080fd5b50613cd787828801613a91565b9250506060850135613ce881613520565b939692955090935050565b60008060008060808587031215613d0957600080fd5b8435613d1481613520565b9350602085013567ffffffffffffffff80821115613ca857600080fd5b60008060408385031215613d4457600080fd5b8235613d4f81613520565b9150602083013561355d81613520565b60008060008060008060a08789031215613d7857600080fd5b8635613d8381613520565b95506020870135613d9381613520565b94506040870135935060608701359250608087013567ffffffffffffffff811115613dbd57600080fd5b613dc989828a016138b2565b979a9699509497509295939492505050565b600181811c90821680613def57607f821691505b60208210810361373857634e487b7160e01b600052602260045260246000fd5b601f821115612af357600081815260208120601f850160051c81016020861015613e365750805b601f850160051c820191505b8181101561168757828155600101613e42565b815167ffffffffffffffff811115613e6f57613e6f6135ce565b613e8381613e7d8454613ddb565b84613e0f565b602080601f831160018114613eb85760008415613ea05750858301515b600019600386901b1c1916600185901b178555611687565b600085815260208120601f198616915b82811015613ee757888601518255948401946001909101908401613ec8565b5085821015613f055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613f278184602087016136c3565b9190910192915050565b6000808454613f3f81613ddb565b60018281168015613f575760018114613f6c57613f9b565b60ff1984168752821515830287019450613f9b565b8860005260208060002060005b85811015613f925781548a820152908401908201613f79565b50505082870194505b505050508351613faf8183602088016136c3565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e19843603018112613ff757600080fd5b83018035915067ffffffffffffffff82111561401257600080fd5b6020019150600581901b36038213156138ab57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561405257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561408957614089614059565b500290565b6000826140ab57634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b038311156140c957600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006140f66040830186886140b0565b82810360208401526141098185876140b0565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261416a60a08301888a6140b0565b828103606084015261417d8187896140b0565b90508281036080840152614192818587614114565b9b9a5050505050505050505050565b6000602082840312156141b357600080fd5b81516135c781613594565b6000602082840312156141d057600080fd5b81516135c781613520565b808201808211156106f5576106f5614059565b818103818111156106f5576106f5614059565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261423a60a083018486614114565b98975050505050505050565b60008184825b8581101561427d57813561425f81613520565b6001600160a01b03168352602092830192919091019060010161424c565b509095945050505050565b60006001600160fb1b0383111561429e57600080fd5b8260051b80858437919091019392505050565b6040815260006142c46040830185613a1f565b82810360208401526142d68185613a1f565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261430b60a0830186613a1f565b828103606084015261431d8186613a1f565b9050828103608084015261423a81856136e7565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261410960a08301846136e756fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
