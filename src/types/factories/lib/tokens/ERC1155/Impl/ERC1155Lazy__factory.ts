/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162003d9038038062003d90833981016040819052620000399162000327565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b0383161790558451620001779060089060208801906200024c565b50600980546001600160a01b03199081166001600160a01b038781169182179093556001600160601b03861660025560038054909216179055604051908216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050506200049d565b8280546200025a906200044a565b90600052602060002090601f0160209004810192826200027e5760008555620002c9565b82601f106200029957805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c9578251825591602001919060010190620002ac565b50620002d7929150620002db565b5090565b5b80821115620002d75760008155600101620002dc565b80516001600160a01b03811681146200030a57600080fd5b919050565b80516001600160601b03811681146200030a57600080fd5b600080600080600060a086880312156200033f578081fd5b85516001600160401b038082111562000356578283fd5b818801915088601f8301126200036a578283fd5b8151818111156200037f576200037f62000487565b604051601f8201601f19908116603f01168101908382118183101715620003aa57620003aa62000487565b81604052828152602093508b84848701011115620003c6578586fd5b8591505b82821015620003e95784820184015181830185015290830190620003ca565b82821115620003fa57858484830101525b98506200040c915050888201620002f2565b955050506200041e604087016200030f565b92506200042e60608701620002f2565b91506200043e60808701620002f2565b90509295509295909350565b600181811c908216806200045f57607f821691505b602082108114156200048157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a0516138cd620004c3600039600061103801526000610f5901526138cd6000f3fe6080604052600436106101aa5760003560e01c80633cd8045e116100ec578063a22cb4651161008a578063e985e9c511610064578063e985e9c514610530578063f23a6e6114610568578063f242432a14610595578063f4f3b200146105b557600080fd5b8063a22cb46514610498578063bc197c81146104b8578063bfa556e41461050057600080fd5b80636c19e783116100c65780636c19e783146104235780637754305c1461044357806381b0b756146104585780638da5cb5b1461047857600080fd5b80633cd8045e1461039e5780634e1273f4146103d65780636b20c4541461040357600080fd5b806313af4035116101595780632eb2c2d6116101335780632eb2c2d61461034157806332667d43146103615780633644e515146103745780633ccfd60b1461038957600080fd5b806313af4035146102cd57806318160ddd146102ed5780632a55205a1461030257600080fd5b806302fe53051161018a57806302fe53051461026b5780630e89341c1461028d57806310251d7f146102ba57600080fd5b8062f74867146101af578062fdd58e146101fa57806301ffc9a71461023b575b600080fd5b3480156101bb57600080fd5b506101e76101ca3660046132cc565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e761021536600461303a565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561024757600080fd5b5061025b610256366004613194565b6105d5565b60405190151581526020016101f1565b34801561027757600080fd5b5061028b6102863660046131cc565b610642565b005b34801561029957600080fd5b506102ad6102a836600461317c565b6106e5565b6040516101f191906136e7565b61028b6102c8366004613259565b610741565b3480156102d957600080fd5b5061028b6102e8366004612dea565b610879565b3480156102f957600080fd5b506101e761091b565b34801561030e57600080fd5b5061032261031d3660046132f0565b61092b565b604080516001600160a01b0390931683526020830191909152016101f1565b34801561034d57600080fd5b5061028b61035c366004612e61565b610961565b61028b61036f366004613259565b610d81565b34801561038057600080fd5b506101e7610f55565b34801561039557600080fd5b5061028b61105a565b3480156103aa57600080fd5b506009546103be906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b3480156103e257600080fd5b506103f66103f1366004613065565b6113dd565b6040516101f191906136af565b34801561040f57600080fd5b5061028b61041e366004612f96565b61153f565b34801561042f57600080fd5b5061028b61043e366004612dea565b611651565b34801561044f57600080fd5b506102ad6116f1565b34801561046457600080fd5b5061028b6104733660046130ce565b611783565b34801561048457600080fd5b506004546103be906001600160a01b031681565b3480156104a457600080fd5b5061028b6104b3366004613009565b611906565b3480156104c457600080fd5b506104e76104d3366004612e61565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101f1565b34801561050c57600080fd5b5061025b61051b36600461317c565b600a6020526000908152604090205460ff1681565b34801561053c57600080fd5b5061025b61054b366004612e29565b600060208181529281526040808220909352908152205460ff1681565b34801561057457600080fd5b506104e7610583366004612f1c565b63f23a6e6160e01b9695505050505050565b3480156105a157600080fd5b5061028b6105b0366004612f1c565b611970565b3480156105c157600080fd5b5061028b6105d0366004612dea565b611c90565b60006301ffc9a760e01b6001600160e01b0319831614806106065750636cdb3d1360e11b6001600160e01b03198316145b8061062157506303a24d0760e21b6001600160e01b03198316145b8061063c575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106905760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b80516106a3906008906020840190612c2b565b50806040516106b2919061345c565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b60606106ef61091b565b82111561070f57604051635d68437560e11b815260040160405180910390fd5b600861071a83612095565b60405160200161072b929190613478565b6040516020818303038152906040529050919050565b6005546001146107805760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610687565b60026005556000610793858585856120e4565b905061079f8186612263565b84356000908152600a602090815260408220805460ff191660011790556107c8908701876136fa565b9050905060005b8181101561086b5761086360608801356107ec60408a018a6136fa565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061082b9250505060208b018b6136fa565b8581811061084957634e487b7160e01b600052603260045260246000fd5b905060200201602081019061085e9190612dea565b612316565b6001016107cf565b505060016005555050505050565b6004546001600160a01b031633146108c25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061092660075490565b905090565b6003546002546001600160a01b03909116906000906127109061094e90856137cf565b61095891906137af565b90509250929050565b8483146109a25760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610687565b336001600160a01b03891614806109da57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a175760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610687565b60008060005b87811015610be257888882818110610a4557634e487b7160e01b600052603260045260246000fd5b905060200201359250868682818110610a6e57634e487b7160e01b600052603260045260246000fd5b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610aea5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610687565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b4d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a1d565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c369493929190613688565b60405180910390a46001600160a01b0389163b15610d2b5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610c8a9033908f908e908e908e908e908e908e9060040161354a565b602060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc91906131b0565b6001600160e01b03191614610d265760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610687565b610d75565b6001600160a01b038916610d755760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610687565b50505050505050505050565b600554600114610dc05760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610687565b60026005556000610dd3858585856123b9565b9050610ddf81866124a4565b84356000908152600a602090815260408220805460ff19166001179055610e08908701876136fa565b915060009050610e1b60408801886136fa565b90508214610e5c5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b81811015610eb157610ea9610e7460408901896136fa565b83818110610e9257634e487b7160e01b600052603260045260246000fd5b90506020020135600761252590919063ffffffff16565b600101610e5c565b61086b610ec460a0890160808a01612dea565b610ed160208a018a6136fa565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610f109250505060408b018b6136fa565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506040805160208101909152908152925061252c915050565b60007f000000000000000000000000000000000000000000000000000000000000000046146110355750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b031633146110a35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad916004808301926020929190829003018186803b1580156110e857600080fd5b505afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112091906132b4565b905060008167ffffffffffffffff81111561114b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611174578160200160208202803683370190505b50905060008267ffffffffffffffff8111156111a057634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156111c9578160200160208202803683370190505b5090504760005b8481101561136a57600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be9060240160206040518083038186803b15801561121d57600080fd5b505afa158015611231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112559190612e0d565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf9060240160206040518083038186803b1580156112a057600080fd5b505afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d891906132b4565b9050818684815181106112fb57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101526127106113218260646137cf565b61132b90866137cf565b61133591906137af565b85848151811061135557634e487b7160e01b600052603260045260246000fd5b602090810291909101015250506001016111d0565b60005b858110156113d5576113cd85828151811061139857634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106113c057634e487b7160e01b600052603260045260246000fd5b60200260200101516126a8565b60010161136d565b505050505050565b60608382146114205760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610687565b8367ffffffffffffffff81111561144757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611470578160200160208202803683370190505b50905060005b84811015611536576115038686838181106114a157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114b69190612dea565b8585848181106114d657634e487b7160e01b600052603260045260246000fd5b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061152357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611476565b50949350505050565b6004546001600160a01b031633146115885760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b815181516000919081146115cf5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b8082101561161d576116128383815181106115fa57634e487b7160e01b600052603260045260246000fd5b6020026020010151600761270890919063ffffffff16565b8160010191506115cf565b8082101561163f576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61164a858585612722565b5050505050565b6004546001600160a01b0316331461169a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b60606008805461170090613831565b80601f016020809104026020016040519081016040528092919081815260200182805461172c90613831565b80156117795780601f1061174e57610100808354040283529160200191611779565b820191906000526020600020905b81548152906001019060200180831161175c57829003601f168201915b5050505050905090565b6004546001600160a01b031633146117cc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b8151815160009190811480156117e25750845181145b61182e5760405162461bcd60e51b815260206004820152600f60248201527f494e56414c49445f414d4f554e545300000000000000000000000000000000006044820152606401610687565b808210156118e4576118598383815181106115fa57634e487b7160e01b600052603260045260246000fd5b6118d985838151811061187c57634e487b7160e01b600052603260045260246000fd5b60200260200101518584815181106118a457634e487b7160e01b600052603260045260246000fd5b60200260200101518585815181106118cc57634e487b7160e01b600052603260045260246000fd5b60200260200101516128f4565b81600101915061182e565b8082101561164a576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b03871614806119a857506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6119e55760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610687565b60008481526001602090815260408083206001600160a01b038a168452909152902054611a415760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610687565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115611aa45760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611ad6908490613797565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611b0d9084906137ee565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611c465760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611ba59033908b908a908a908a908a9060040161360c565b602060405180830381600087803b158015611bbf57600080fd5b505af1158015611bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf791906131b0565b6001600160e01b03191614611c415760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610687565b6113d5565b6001600160a01b0385166113d55760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610687565b6004546001600160a01b03163314611cd95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610687565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad916004808301926020929190829003018186803b158015611d1e57600080fd5b505afa158015611d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5691906132b4565b905060008167ffffffffffffffff811115611d8157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611daa578160200160208202803683370190505b50905060008267ffffffffffffffff811115611dd657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611dff578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a082319060240160206040518083038186803b158015611e4757600080fd5b505afa158015611e5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7f91906132b4565b90505b8482101561202057600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be9060240160206040518083038186803b158015611ecf57600080fd5b505afa158015611ee3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f079190612e0d565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf9060240160206040518083038186803b158015611f5257600080fd5b505afa158015611f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8a91906132b4565b905081868581518110611fad57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152612710611fd38260646137cf565b611fdd90856137cf565b611fe791906137af565b85858151811061200757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508360010193505050611e82565b60005b8581101561208c576120848786838151811061204f57634e487b7160e01b600052603260045260246000fd5b602002602001015186848151811061207757634e487b7160e01b600052603260045260246000fd5b60200260200101516129dc565b600101612023565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b80156120d257600183039250600a81066030018353600a90046120b4565b50819003601f19909101908152919050565b600060016120f0610f55565b7fad272c3a554b50b54e1fc8b13b2c376323e15b1af7eca2e20a56272dea6da99e873561212060208a018a6136fa565b6040516020016121319291906133f0565b6040516020818303038152906040528051906020012089806040019061215791906136fa565b604051602001612168929190613432565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b604051602081830303815290604052805190602001206040516020016121f192919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561224f573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6006546001600160a01b0383811691161461229157604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff161515600114156122c85760405163e647f41360e01b815260040160405180910390fd5b6122d560208201826136fa565b90506122e9606083013560808401356137cf565b6122f391906137cf565b34146123125760405163f7760f2560e01b815260040160405180910390fd5b5050565b828251146123575760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b60005b838110156123b3576123ab8261236e612a62565b85848151811061238e57634e487b7160e01b600052603260045260246000fd5b602002602001015160405180602001604052806000815250612a79565b60010161235a565b50505050565b600060016123c5610f55565b7fb011fab3ad4473b2bcf5d6f51416ccbe1783124fbce523be4ac681ed63a0b0ba87356123f560208a018a6136fa565b604051602001612406929190613432565b6040516020818303038152906040528051906020012089806040019061242c91906136fa565b60405160200161243d929190613432565b60408051601f19818403018152919052805160209091012060608b013561246a60a08d0160808e01612dea565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e0016121b4565b6006546001600160a01b038381169116146124d257604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff161515600114156125095760405163e647f41360e01b815260040160405180910390fd5b61251660208201826136fa565b6122f3915060608301356137cf565b8154019055565b82516000805b828110156125be5785818151811061255a57634e487b7160e01b600052603260045260246000fd5b6020026020010151915084818151811061258457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501612532565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888860405161260f9291906136c2565b60405180910390a46001600160a01b0386163b1561265e5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611ba59033906000908b908b908b906004016135ae565b6001600160a01b0386166113d55760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610687565b600080600080600085875af19050806127035760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610687565b505050565b81548061271d5763ce3a3d376000526004601cfd5b039055565b6001600160a01b0383166127785760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610687565b81516000805b82811015612894578481815181106127a657634e487b7160e01b600052603260045260246000fd5b602002602001015191508381815181106127d057634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156128395760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610687565b83818151811061285957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516000848152600180845260408083206001600160a01b038c16845290945292902080549190910390550161277e565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516128e59291906136c2565b60405180910390a45050505050565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156129575760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610687565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906129899084906137ee565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806123b35760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610687565b6000612a72600780546001019055565b5060075490565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612aab908490613797565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612be15760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190612b40903390600090899089908990600401613645565b602060405180830381600087803b158015612b5a57600080fd5b505af1158015612b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9291906131b0565b6001600160e01b03191614612bdc5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610687565b6123b3565b6001600160a01b0384166123b35760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610687565b828054612c3790613831565b90600052602060002090601f016020900481019282612c595760008555612c9f565b82601f10612c7257805160ff1916838001178555612c9f565b82800160010185558215612c9f579182015b82811115612c9f578251825591602001919060010190612c84565b50612cab929150612caf565b5090565b5b80821115612cab5760008155600101612cb0565b60008083601f840112612cd5578182fd5b50813567ffffffffffffffff811115612cec578182fd5b6020830191508360208260051b8501011115612d0757600080fd5b9250929050565b600082601f830112612d1e578081fd5b81356020612d33612d2e83613773565b613742565b80838252828201915082860187848660051b8901011115612d52578586fd5b855b85811015612d7057813584529284019290840190600101612d54565b5090979650505050505050565b60008083601f840112612d8e578182fd5b50813567ffffffffffffffff811115612da5578182fd5b602083019150836020828501011115612d0757600080fd5b600060a08284031215612dce578081fd5b50919050565b803560ff81168114612de557600080fd5b919050565b600060208284031215612dfb578081fd5b8135612e0681613892565b9392505050565b600060208284031215612e1e578081fd5b8151612e0681613892565b60008060408385031215612e3b578081fd5b8235612e4681613892565b91506020830135612e5681613892565b809150509250929050565b60008060008060008060008060a0898b031215612e7c578384fd5b8835612e8781613892565b97506020890135612e9781613892565b9650604089013567ffffffffffffffff80821115612eb3578586fd5b612ebf8c838d01612cc4565b909850965060608b0135915080821115612ed7578586fd5b612ee38c838d01612cc4565b909650945060808b0135915080821115612efb578384fd5b50612f088b828c01612d7d565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612f34578182fd5b8635612f3f81613892565b95506020870135612f4f81613892565b94506040870135935060608701359250608087013567ffffffffffffffff811115612f78578283fd5b612f8489828a01612d7d565b979a9699509497509295939492505050565b600080600060608486031215612faa578081fd5b8335612fb581613892565b9250602084013567ffffffffffffffff80821115612fd1578283fd5b612fdd87838801612d0e565b93506040860135915080821115612ff2578283fd5b50612fff86828701612d0e565b9150509250925092565b6000806040838503121561301b578182fd5b823561302681613892565b915060208301358015158114612e56578182fd5b6000806040838503121561304c578182fd5b823561305781613892565b946020939093013593505050565b6000806000806040858703121561307a578182fd5b843567ffffffffffffffff80821115613091578384fd5b61309d88838901612cc4565b909650945060208701359150808211156130b5578384fd5b506130c287828801612cc4565b95989497509550505050565b6000806000606084860312156130e2578081fd5b833567ffffffffffffffff808211156130f9578283fd5b818601915086601f83011261310c578283fd5b8135602061311c612d2e83613773565b8083825282820191508286018b848660051b890101111561313b578788fd5b8796505b8487101561316657803561315281613892565b83526001969096019591830191830161313f565b5097505087013592505080821115612fd1578283fd5b60006020828403121561318d578081fd5b5035919050565b6000602082840312156131a5578081fd5b8135612e06816138aa565b6000602082840312156131c1578081fd5b8151612e06816138aa565b600060208083850312156131de578182fd5b823567ffffffffffffffff808211156131f5578384fd5b818501915085601f830112613208578384fd5b81358181111561321a5761321a61387c565b61322c601f8201601f19168501613742565b91508082528684828501011115613241578485fd5b80848401858401378101909201929092529392505050565b6000806000806080858703121561326e578182fd5b843567ffffffffffffffff811115613284578283fd5b61329087828801612dbd565b94505061329f60208601612dd4565b93969395505050506040820135916060013590565b6000602082840312156132c5578081fd5b5051919050565b600080604083850312156132de578182fd5b823591506020830135612e5681613892565b60008060408385031215613302578182fd5b50508035926020909101359150565b81835260006001600160fb1b03831115613329578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561337457815187529582019590820190600101613358565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526133c0816020860160208601613805565b601f01601f19169290920160200192915050565b600081516133e6818560208601613805565b9290920192915050565b60008184825b8581101561342757813561340981613892565b6001600160a01b0316835260209283019291909101906001016133f6565b509095945050505050565b60006001600160fb1b03831115613447578081fd5b8260051b808584379190910190815292915050565b6000825161346e818460208701613805565b9190910192915050565b600080845482600182811c91508083168061349457607f831692505b60208084108214156134b457634e487b7160e01b87526022600452602487fd5b8180156134c857600181146134d957613505565b60ff19861689528489019650613505565b60008b815260209020885b868110156134fd5781548b8201529085019083016134e4565b505084890196505b50505050505061354161351882866133d4565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808b168352808a1660208401525060a0604083015261357760a08301888a613311565b828103606084015261358a818789613311565b9050828103608084015261359f81858761337f565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a060408301526135da60a0830186613345565b82810360608401526135ec8186613345565b9050828103608084015261360081856133a8565b98975050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261360060a08301848661337f565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261367d60a08301846133a8565b979650505050505050565b60408152600061369c604083018688613311565b828103602084015261367d818587613311565b602081526000612e066020830184613345565b6040815260006136d56040830185613345565b82810360208401526135418185613345565b602081526000612e0660208301846133a8565b6000808335601e19843603018112613710578283fd5b83018035915067ffffffffffffffff82111561372a578283fd5b6020019150600581901b3603821315612d0757600080fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561376b5761376b61387c565b604052919050565b600067ffffffffffffffff82111561378d5761378d61387c565b5060051b60200190565b600082198211156137aa576137aa613866565b500190565b6000826137ca57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156137e9576137e9613866565b500290565b60008282101561380057613800613866565b500390565b60005b83811015613820578181015183820152602001613808565b838111156123b35750506000910152565b600181811c9082168061384557607f821691505b60208210811415612dce57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146138a757600080fd5b50565b6001600160e01b0319811681146138a757600080fdfea164736f6c6343000804000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
