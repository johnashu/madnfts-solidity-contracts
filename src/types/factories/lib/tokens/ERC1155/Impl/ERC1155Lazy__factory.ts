/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162003fb838038062003fb883398101604081905262000039916200029d565b600480546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600680546001600160a01b0319166001600160a01b03841617905560086200017087826200045d565b50600980546001600160a01b03199081166001600160a01b03888116918217909355600c805483168585161790556001600160601b03871660025560038054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000529565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028057600080fd5b919050565b80516001600160601b03811681146200028057600080fd5b60008060008060008060c08789031215620002b757600080fd5b86516001600160401b0380821115620002cf57600080fd5b818901915089601f830112620002e457600080fd5b815181811115620002f957620002f962000252565b604051601f8201601f19908116603f0116810190838211818310171562000324576200032462000252565b81604052828152602093508c848487010111156200034157600080fd5b600091505b8282101562000365578482018401518183018501529083019062000346565b6000848483010152809a5050505062000380818a0162000268565b96505050620003926040880162000285565b9350620003a26060880162000268565b9250620003b26080880162000268565b9150620003c260a0880162000268565b90509295509295509295565b600181811c90821680620003e357607f821691505b6020821081036200040457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200045857600081815260208120601f850160051c81016020861015620004335750805b601f850160051c820191505b8181101562000454578281556001016200043f565b5050505b505050565b81516001600160401b0381111562000479576200047962000252565b62000491816200048a8454620003ce565b846200040a565b602080601f831160018114620004c95760008415620004b05750858301515b600019600386901b1c1916600185901b17855562000454565b600085815260208120601f198616915b82811015620004fa57888601518255948401946001909101908401620004d9565b5085821015620005195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051613a696200054f6000396000610f2901526000610e4a0152613a696000f3fe6080604052600436106101c05760003560e01c806368ab30f3116100f7578063bc197c8111610095578063e985e9c511610064578063e985e9c514610561578063f23a6e6114610599578063f242432a146105c6578063f4f3b200146105e657600080fd5b8063bc197c81146104c3578063bfa556e41461050b578063d6fa7b101461053b578063d78147cb1461054e57600080fd5b8063785e9e86116100d1578063785e9e861461044e5780638da5cb5b1461046e5780638fc3b5491461048e578063a22cb465146104a357600080fd5b806368ab30f3146104065780636c19e783146104195780637754305c1461043957600080fd5b806325dc2c93116101645780633644e5151161013e5780633644e515146103775780633ccfd60b1461038c5780633cd8045e146103a15780634e1273f4146103d957600080fd5b806325dc2c93146103055780632a55205a146103185780632eb2c2d61461035757600080fd5b806302fe5305116101a057806302fe5305146102815780630e89341c146102a357806313af4035146102d057806318160ddd146102f057600080fd5b8062f74867146101c5578062fdd58e1461021057806301ffc9a714610251575b600080fd5b3480156101d157600080fd5b506101fd6101e0366004612d0f565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561021c57600080fd5b506101fd61022b366004612d3f565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561025d57600080fd5b5061027161026c366004612d81565b610606565b6040519015158152602001610207565b34801561028d57600080fd5b506102a161029c366004612dec565b610673565b005b3480156102af57600080fd5b506102c36102be366004612e81565b61070f565b6040516102079190612eea565b3480156102dc57600080fd5b506102a16102eb366004612efd565b610766565b3480156102fc57600080fd5b506101fd610808565b6102a1610313366004612f43565b610818565b34801561032457600080fd5b50610338610333366004612fb9565b610a1b565b604080516001600160a01b039093168352602083019190915201610207565b34801561036357600080fd5b506102a1610372366004613069565b610a51565b34801561038357600080fd5b506101fd610e46565b34801561039857600080fd5b506102a1610f4b565b3480156103ad57600080fd5b506009546103c1906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b3480156103e557600080fd5b506103f96103f4366004613128565b61124d565b60405161020791906131cf565b6102a1610414366004612f43565b611377565b34801561042557600080fd5b506102a1610434366004612efd565b6114ca565b34801561044557600080fd5b506102c361156a565b34801561045a57600080fd5b50600c546103c1906001600160a01b031681565b34801561047a57600080fd5b506004546103c1906001600160a01b031681565b34801561049a57600080fd5b50600b546101fd565b3480156104af57600080fd5b506102a16104be3660046131e2565b6115fc565b3480156104cf57600080fd5b506104f26104de366004613069565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610207565b34801561051757600080fd5b50610271610526366004612e81565b600a6020526000908152604090205460ff1681565b6102a16105493660046132a4565b611666565b6102a161055c36600461339b565b6117c5565b34801561056d57600080fd5b5061027161057c366004613424565b600060208181529281526040808220909352908152205460ff1681565b3480156105a557600080fd5b506104f26105b4366004613452565b63f23a6e6160e01b9695505050505050565b3480156105d257600080fd5b506102a16105e1366004613452565b6118b5565b3480156105f257600080fd5b506102a1610601366004612efd565b611bc6565b60006301ffc9a760e01b6001600160e01b0319831614806106375750636cdb3d1360e11b6001600160e01b03198316145b8061065257506303a24d0760e21b6001600160e01b03198316145b8061066d575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106c15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b60086106cd8282613548565b50806040516106dc9190613608565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060600b5482111561073457604051635d68437560e11b815260040160405180910390fd5b600861073f83611f3b565b604051602001610750929190613624565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107af5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061081360075490565b905090565b6005546001146108575760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106b8565b6002600555600061086a86868686611f8a565b9050600061087783612120565b90506108848288836121ad565b600c546001600160a01b0316156108ad57600c546108ad906001600160a01b031684308461224d565b86356000908152600a602090815260408220805460ff191660011790556108d6908901896136d3565b9150600090506108e960408a018a6136d3565b9050821461092a5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b818110156109675761095e61094260408b018b6136d3565b838181106109525761095261371d565b905060200201356122e0565b5060010161092a565b610a0b61097a60a08b0160808c01612efd565b61098760208c018c6136d3565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109c69250505060408d018d6136d3565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201829052506040805160208101909152908152925061230c915050565b5050600160055550505050505050565b6003546002546001600160a01b039091169060009061271090610a3e9085613749565b610a489190613768565b90509250929050565b848314610a925760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106b8565b336001600160a01b0389161480610aca57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610b075760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106b8565b60008060005b87811015610cb657888882818110610b2757610b2761371d565b905060200201359250868682818110610b4257610b4261371d565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610bbe5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610c215760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610b0d565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610d0a94939291906137bc565b60405180910390a46001600160a01b0389163b15610df05760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610d5e9033908f908e908e908e908e908e908e90600401613817565b6020604051808303816000875af1158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da1919061387b565b6001600160e01b03191614610deb5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b610e3a565b6001600160a01b038916610e3a5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610f265750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b03163314610f945760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190613898565b905060008167ffffffffffffffff81111561101f5761101f612da5565b604051908082528060200260200182016040528015611048578160200160208202803683370190505b50905060008267ffffffffffffffff81111561106657611066612da5565b60405190808252806020026020018201604052801561108f578160200160208202803683370190505b5090504760005b848110156111f657600954604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c91906138b1565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561115c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111809190613898565b9050818684815181106111955761119561371d565b6001600160a01b03909216602092830291909101909101526127106111bb826064613749565b6111c59086613749565b6111cf9190613768565b8584815181106111e1576111e161371d565b60209081029190910101525050600101611096565b60005b858110156112455761123d8582815181106112165761121661371d565b60200260200101518583815181106112305761123061371d565b602002602001015161246c565b6001016111f9565b505050505050565b60608382146112905760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106b8565b8367ffffffffffffffff8111156112a9576112a9612da5565b6040519080825280602002602001820160405280156112d2578160200160208202803683370190505b50905060005b8481101561136e576113498686838181106112f5576112f561371d565b905060200201602081019061130a9190612efd565b85858481811061131c5761131c61371d565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b82828151811061135b5761135b61371d565b60209081029190910101526001016112d8565b50949350505050565b6005546001146113b65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016106b8565b600260055560006113c9868686866124c7565b905060006113d683612120565b90506113e382888361259b565b600c546001600160a01b03161561140c57600c5461140c906001600160a01b031684308461224d565b86356000908152600a602090815260408220805460ff19166001179055611435908901896136d3565b9050905060005b81811015610a0b576114c260608a013561145960408c018c6136d3565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506114989250505060208d018d6136d3565b858181106114a8576114a861371d565b90506020020160208101906114bd9190612efd565b612626565b60010161143c565b6004546001600160a01b031633146115135760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b606060088054611579906134ce565b80601f01602080910402602001604051908101604052809291908181526020018280546115a5906134ce565b80156115f25780601f106115c7576101008083540402835291602001916115f2565b820191906000526020600020905b8154815290600101906020018083116115d557829003601f168201915b5050505050905090565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146116af5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6116ba8160016126d5565b8251825160009190811480156116d05750855181145b61170d5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b808210156117a35761174284838151811061172a5761172a61371d565b6020026020010151600761274890919063ffffffff16565b6117988683815181106117575761175761371d565b60200260200101518684815181106117715761177161371d565b602002602001015186858151811061178b5761178b61371d565b6020026020010151612762565b81600101915061170d565b80821015611245576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6004546001600160a01b0316331461180e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6118198160016126d5565b825182516000919081146118605760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b808210156118885761187d84838151811061172a5761172a61371d565b816001019150611860565b808210156118aa576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61124586868661284a565b336001600160a01b03871614806118ed57506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b61192a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038a1684529091529020546119865760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156119e95760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290611a1b9084906138ce565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611a529084906138e1565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611b7c5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190611aea9033908b908a908a908a908a906004016138f4565b6020604051808303816000875af1158015611b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2d919061387b565b6001600160e01b03191614611b775760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b611245565b6001600160a01b0385166112455760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b6004546001600160a01b03163314611c0f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b8565b6009546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7d9190613898565b905060008167ffffffffffffffff811115611c9a57611c9a612da5565b604051908082528060200260200182016040528015611cc3578160200160208202803683370190505b50905060008267ffffffffffffffff811115611ce157611ce1612da5565b604051908082528060200260200182016040528015611d0a578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b9190613898565b90505b84821015611ee257600954604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df491906138b1565b60095460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e689190613898565b905081868581518110611e7d57611e7d61371d565b6001600160a01b0390921660209283029190910190910152612710611ea3826064613749565b611ead9085613749565b611eb79190613768565b858581518110611ec957611ec961371d565b6020026020010181815250508360010193505050611d7e565b60005b85811015611f3257611f2a87868381518110611f0357611f0361371d565b6020026020010151868481518110611f1d57611f1d61371d565b60200260200101516129f2565b600101611ee5565b50505050505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611f7857600183039250600a81066030018353600a9004611f5a565b50819003601f19909101908152919050565b60006001611f96610e46565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed435388735611fc660208a018a6136d3565b604051602001611fd7929190613939565b60405160208183030381529060405280519060200120898060400190611ffd91906136d3565b60405160200161200e929190613939565b60408051601f19818403018152919052805160209091012060608b013561203b60a08d0160808e01612efd565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e0015b604051602081830303815290604052805190602001206040516020016120ae92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561210c573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600c546000906001600160a01b0316612139573461066d565b600c54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612189573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190613898565b6006546001600160a01b038481169116146121db57604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff161561220d5760405163e647f41360e01b815260040160405180910390fd5b61221a60208301836136d3565b61222991506060840135613749565b81146122485760405163f7760f2560e01b815260040160405180910390fd5b505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806122d95760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016106b8565b5050505050565b60006122eb82612a78565b5081600b60008282546122fe91906138ce565b9091555050600b5492915050565b82516000805b828110156123825785818151811061232c5761232c61371d565b602002602001015191508481815181106123485761234861371d565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501612312565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88886040516123d3929190613962565b60405180910390a46001600160a01b0386163b156124225760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190611aea9033906000908b908b908b90600401613990565b6001600160a01b0386166112455760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b600080600080600085875af19050806122485760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106b8565b600060016124d3610e46565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561250360208a018a6136d3565b6040516020016125149291906139e2565b6040516020818303038152906040528051906020012089806040019061253a91906136d3565b60405160200161254b929190613939565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e001612071565b6006546001600160a01b038481169116146125c957604051632057875960e21b815260040160405180910390fd5b81356000908152600a602052604090205460ff16156125fb5760405163e647f41360e01b815260040160405180910390fd5b61260860208301836136d3565b905061261c60608401356080850135613749565b6122299190613749565b828251146126675760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60005b838110156126cf576126c78261269885848151811061268b5761268b61371d565b60200260200101516122e0565b8584815181106126aa576126aa61371d565b602002602001015160405180602001604052806000815250612a8f565b60010161266a565b50505050565b60006126e083612120565b90508160ff16600003612703576126fe6340d097c360e01b82612c32565b61271f565b8160ff1660010361271f5761271f63044df8e760e41b82612c32565b600c546001600160a01b03161561224857600c54612248906001600160a01b031684308461224d565b81548061275d5763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b03871684529091529020548111156127c55760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106b8565b60008281526001602090815260408083206001600160a01b0387168452909152812080548392906127f79084906138e1565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b0383166128a05760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d000000000000000000000000000000000000000060448201526064016106b8565b81516000805b82811015612992578481815181106128c0576128c061371d565b602002602001015191508381815181106128dc576128dc61371d565b60209081029190910181015160008481526001835260408082206001600160a01b038b168352909352919091205410156129455760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106b8565b8381815181106129575761295761371d565b6020908102919091018101516000848152600180845260408083206001600160a01b038c1684529094529290208054919091039055016128a6565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516129e3929190613962565b60405180910390a45050505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806126cf5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106b8565b6000612a876007838154019055565b60075461066d565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612ac19084906138ce565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612be85760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190612b56903390600090899089908990600401613a24565b6020604051808303816000875af1158015612b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b99919061387b565b6001600160e01b03191614612be35760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106b8565b6126cf565b6001600160a01b0384166126cf5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106b8565b6004546001600160a01b0316803b63ffffffff8116600003612c545750505050565b60048054604051633b7279e960e21b81526001600160e01b03198716928101929092526000916001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015612cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd09190613898565b90508084146122d95763f7760f256000526004601cfd5b6001600160a01b0381168114612cfc57600080fd5b50565b8035612d0a81612ce7565b919050565b60008060408385031215612d2257600080fd5b823591506020830135612d3481612ce7565b809150509250929050565b60008060408385031215612d5257600080fd5b8235612d5d81612ce7565b946020939093013593505050565b6001600160e01b031981168114612cfc57600080fd5b600060208284031215612d9357600080fd5b8135612d9e81612d6b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612de457612de4612da5565b604052919050565b60006020808385031215612dff57600080fd5b823567ffffffffffffffff80821115612e1757600080fd5b818501915085601f830112612e2b57600080fd5b813581811115612e3d57612e3d612da5565b612e4f601f8201601f19168501612dbb565b91508082528684828501011115612e6557600080fd5b8084840185840137600090820190930192909252509392505050565b600060208284031215612e9357600080fd5b5035919050565b60005b83811015612eb5578181015183820152602001612e9d565b50506000910152565b60008151808452612ed6816020860160208601612e9a565b601f01601f19169290920160200192915050565b602081526000612d9e6020830184612ebe565b600060208284031215612f0f57600080fd5b8135612d9e81612ce7565b600060a08284031215612f2c57600080fd5b50919050565b803560ff81168114612d0a57600080fd5b600080600080600060a08688031215612f5b57600080fd5b853567ffffffffffffffff811115612f7257600080fd5b612f7e88828901612f1a565b955050612f8d60208701612f32565b935060408601359250606086013591506080860135612fab81612ce7565b809150509295509295909350565b60008060408385031215612fcc57600080fd5b50508035926020909101359150565b60008083601f840112612fed57600080fd5b50813567ffffffffffffffff81111561300557600080fd5b6020830191508360208260051b850101111561302057600080fd5b9250929050565b60008083601f84011261303957600080fd5b50813567ffffffffffffffff81111561305157600080fd5b60208301915083602082850101111561302057600080fd5b60008060008060008060008060a0898b03121561308557600080fd5b883561309081612ce7565b975060208901356130a081612ce7565b9650604089013567ffffffffffffffff808211156130bd57600080fd5b6130c98c838d01612fdb565b909850965060608b01359150808211156130e257600080fd5b6130ee8c838d01612fdb565b909650945060808b013591508082111561310757600080fd5b506131148b828c01613027565b999c989b5096995094979396929594505050565b6000806000806040858703121561313e57600080fd5b843567ffffffffffffffff8082111561315657600080fd5b61316288838901612fdb565b9096509450602087013591508082111561317b57600080fd5b5061318887828801612fdb565b95989497509550505050565b600081518084526020808501945080840160005b838110156131c4578151875295820195908201906001016131a8565b509495945050505050565b602081526000612d9e6020830184613194565b600080604083850312156131f557600080fd5b823561320081612ce7565b915060208301358015158114612d3457600080fd5b600067ffffffffffffffff82111561322f5761322f612da5565b5060051b60200190565b600082601f83011261324a57600080fd5b8135602061325f61325a83613215565b612dbb565b82815260059290921b8401810191818101908684111561327e57600080fd5b8286015b848110156132995780358352918301918301613282565b509695505050505050565b600080600080608085870312156132ba57600080fd5b843567ffffffffffffffff808211156132d257600080fd5b818701915087601f8301126132e657600080fd5b813560206132f661325a83613215565b82815260059290921b8401810191818101908b84111561331557600080fd5b948201945b8386101561333c57853561332d81612ce7565b8252948201949082019061331a565b9850508801359250508082111561335257600080fd5b61335e88838901613239565b9450604087013591508082111561337457600080fd5b5061338187828801613239565b92505061339060608601612cff565b905092959194509250565b600080600080608085870312156133b157600080fd5b84356133bc81612ce7565b9350602085013567ffffffffffffffff808211156133d957600080fd5b6133e588838901613239565b945060408701359150808211156133fb57600080fd5b5061340887828801613239565b925050606085013561341981612ce7565b939692955090935050565b6000806040838503121561343757600080fd5b823561344281612ce7565b91506020830135612d3481612ce7565b60008060008060008060a0878903121561346b57600080fd5b863561347681612ce7565b9550602087013561348681612ce7565b94506040870135935060608701359250608087013567ffffffffffffffff8111156134b057600080fd5b6134bc89828a01613027565b979a9699509497509295939492505050565b600181811c908216806134e257607f821691505b602082108103612f2c57634e487b7160e01b600052602260045260246000fd5b601f82111561224857600081815260208120601f850160051c810160208610156135295750805b601f850160051c820191505b8181101561124557828155600101613535565b815167ffffffffffffffff81111561356257613562612da5565b6135768161357084546134ce565b84613502565b602080601f8311600181146135ab57600084156135935750858301515b600019600386901b1c1916600185901b178555611245565b600085815260208120601f198616915b828110156135da578886015182559484019460019091019084016135bb565b50858210156135f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161361a818460208701612e9a565b9190910192915050565b6000808454613632816134ce565b6001828116801561364a576001811461365f5761368e565b60ff198416875282151583028701945061368e565b8860005260208060002060005b858110156136855781548a82015290840190820161366c565b50505082870194505b5050505083516136a2818360208801612e9a565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e198436030181126136ea57600080fd5b83018035915067ffffffffffffffff82111561370557600080fd5b6020019150600581901b360382131561302057600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561376357613763613733565b500290565b60008261378557634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b038311156137a357600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006137d060408301868861378a565b82810360208401526137e381858761378a565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a0604083015261384460a08301888a61378a565b828103606084015261385781878961378a565b9050828103608084015261386c8185876137ee565b9b9a5050505050505050505050565b60006020828403121561388d57600080fd5b8151612d9e81612d6b565b6000602082840312156138aa57600080fd5b5051919050565b6000602082840312156138c357600080fd5b8151612d9e81612ce7565b8082018082111561066d5761066d613733565b8181038181111561066d5761066d613733565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261392d60a0830184866137ee565b98975050505050505050565b60006001600160fb1b0383111561394f57600080fd5b8260051b80858437919091019392505050565b6040815260006139756040830185613194565b82810360208401526139878185613194565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526139bc60a0830186613194565b82810360608401526139ce8186613194565b9050828103608084015261392d8185612ebe565b60008184825b85811015613a195781356139fb81612ce7565b6001600160a01b0316835260209283019291909101906001016139e8565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526137e360a0830184612ebe56fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
