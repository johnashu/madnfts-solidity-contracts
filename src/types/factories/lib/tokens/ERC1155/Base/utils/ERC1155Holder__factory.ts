/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Holder,
  ERC1155HolderInterface,
} from "../../../../../../lib/tokens/ERC1155/Base/utils/ERC1155Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061064e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bc197c811461003b578063f23a6e611461006b575b600080fd5b61005560048036038101906100509190610485565b61009b565b604051610062919061058f565b60405180910390f35b610085600480360381019061008091906105aa565b610133565b604051610092919061058f565b60405180910390f35b60006100c97f09a6644fbf9dad02853e30f36808bdd0fb77cc8ab1026f1072076add34a299e760001b6101cc565b6100f57fffbc96a6138bb4b396a3318eb9eb82aca2800276b45fd5203586666c942959c560001b6101cc565b6101207e4ea61717894768a02f852345b7eb70293b2ca0b560a4f74fc30da9c6fdaede60001b6101cc565b63bc197c8160e01b905095945050505050565b60006101617f41158fee2bafca5ee5575a682fb56b930e6459f7610b878934d627816cdd733460001b6101cc565b61018d7f66d770512216881cc2d353a1df69bebd526648b0d266d75cb23f72e5c61e0c3660001b6101cc565b6101b97f83bcc36fb946d2ba7e0ddaa23f3932266fd17d036daf4babf61305002a2a0d8e60001b6101cc565b63f23a6e6160e01b905095945050505050565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061020e826101e3565b9050919050565b61021e81610203565b811461022957600080fd5b50565b60008135905061023b81610215565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61028f82610246565b810181811067ffffffffffffffff821117156102ae576102ad610257565b5b80604052505050565b60006102c16101cf565b90506102cd8282610286565b919050565b600067ffffffffffffffff8211156102ed576102ec610257565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61031681610303565b811461032157600080fd5b50565b6000813590506103338161030d565b92915050565b600061034c610347846102d2565b6102b7565b9050808382526020820190506020840283018581111561036f5761036e6102fe565b5b835b8181101561039857806103848882610324565b845260208401935050602081019050610371565b5050509392505050565b600082601f8301126103b7576103b6610241565b5b81356103c7848260208601610339565b91505092915050565b600080fd5b600067ffffffffffffffff8211156103f0576103ef610257565b5b6103f982610246565b9050602081019050919050565b82818337600083830152505050565b6000610428610423846103d5565b6102b7565b905082815260208101848484011115610444576104436103d0565b5b61044f848285610406565b509392505050565b600082601f83011261046c5761046b610241565b5b813561047c848260208601610415565b91505092915050565b600080600080600060a086880312156104a1576104a06101d9565b5b60006104af8882890161022c565b95505060206104c08882890161022c565b945050604086013567ffffffffffffffff8111156104e1576104e06101de565b5b6104ed888289016103a2565b935050606086013567ffffffffffffffff81111561050e5761050d6101de565b5b61051a888289016103a2565b925050608086013567ffffffffffffffff81111561053b5761053a6101de565b5b61054788828901610457565b9150509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61058981610554565b82525050565b60006020820190506105a46000830184610580565b92915050565b600080600080600060a086880312156105c6576105c56101d9565b5b60006105d48882890161022c565b95505060206105e58882890161022c565b94505060406105f688828901610324565b935050606061060788828901610324565b925050608086013567ffffffffffffffff811115610628576106276101de565b5b61063488828901610457565b915050929550929590935056fea164736f6c6343000810000a";

type ERC1155HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Holder__factory extends ContractFactory {
  constructor(...args: ERC1155HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  override connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new utils.Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}
