/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Lazy,
  ERC721LazyInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verify",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verifyVoucher",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016009553480156200001657600080fd5b50604051620032b3380380620032b3833981016040819052620000399162000361565b82888860006200004a8382620004df565b506001620000598282620004df565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35046608052620000b6620001cb565b60a052600f8054610100600160a81b0319166101006001600160a01b03851602179055600e620000e78782620004df565b50600a80546001600160a01b03199081166001600160a01b03888116918217909355600b805483168585161790556001600160601b03871660065560078054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26006546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505062000629565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001ff9190620005ab565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028f57600080fd5b81516001600160401b0380821115620002ac57620002ac62000267565b604051601f8301601f19908116603f01168101908282118183101715620002d757620002d762000267565b81604052838152602092508683858801011115620002f457600080fd5b600091505b83821015620003185785820183015181830184015290820190620002f9565b600093810190920192909252949350505050565b80516001600160a01b03811681146200034457600080fd5b919050565b80516001600160601b03811681146200034457600080fd5b600080600080600080600080610100898b0312156200037f57600080fd5b88516001600160401b03808211156200039757600080fd5b620003a58c838d016200027d565b995060208b0151915080821115620003bc57600080fd5b620003ca8c838d016200027d565b985060408b0151915080821115620003e157600080fd5b50620003f08b828c016200027d565b9650506200040160608a016200032c565b94506200041160808a0162000349565b93506200042160a08a016200032c565b92506200043160c08a016200032c565b91506200044160e08a016200032c565b90509295985092959890939650565b600181811c908216806200046557607f821691505b6020821081036200048657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004da57600081815260208120601f850160051c81016020861015620004b55750805b601f850160051c820191505b81811015620004d657828155600101620004c1565b5050505b505050565b81516001600160401b03811115620004fb57620004fb62000267565b62000513816200050c845462000450565b846200048c565b602080601f8311600181146200054b5760008415620005325750858301515b600019600386901b1c1916600185901b178555620004d6565b600085815260208120601f198616915b828110156200057c578886015182559484019460019091019084016200055b565b50858210156200059b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620005bb8162000450565b60018281168015620005d65760018114620005ec576200061d565b60ff19841687528215158302870194506200061d565b8760005260208060002060005b85811015620006145781548a820152908401908201620005f9565b50505082870194505b50929695505050505050565b60805160a051612c646200064f6000396000610f3101526000610f010152612c646000f3fe6080604052600436106102345760003560e01c80634edd2d49116101385780638fc3b549116100b0578063bfa556e41161007f578063d29bb90711610064578063d29bb90714610300578063e985e9c51461067a578063f4f3b200146106b557600080fd5b8063bfa556e41461062a578063c87b56dd1461065a57600080fd5b80638fc3b549146105c057806395d89b41146105d5578063a22cb465146105ea578063b88d4fde1461060a57600080fd5b80636c19e78311610107578063714c5398116100ec578063714c53981461056b578063785e9e86146105805780638da5cb5b146105a057600080fd5b80636c19e7831461052b57806370a082311461054b57600080fd5b80634edd2d49146104bc57806355f804b3146104d65780636352211e146104f657806366c879a91461051657600080fd5b806318160ddd116101cb578063362c0cb51161019a5780633ccfd60b1161017f5780633ccfd60b146104675780633cd8045e1461047c57806342842e0e1461049c57600080fd5b8063362c0cb51461043f5780633644e5151461045257600080fd5b806318160ddd14610398578063238ac933146103bb57806323b872dd146103e05780632a55205a1461040057600080fd5b80630f16a080116102075780630f16a0801461030057806310251d7f1461032057806313af403514610333578063150b7a021461035357600080fd5b806301ffc9a71461023957806306fdde031461026e578063081812fc14610290578063095ea7b3146102de575b600080fd5b34801561024557600080fd5b506102596102543660046123ca565b6106d5565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b50610283610742565b6040516102659190612412565b34801561029c57600080fd5b506102c66102ab366004612445565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610265565b3480156102ea57600080fd5b506102fe6102f936600461247e565b6107d0565b005b34801561030c57600080fd5b506102c661031b3660046124aa565b6108b7565b6102fe61032e3660046124aa565b610a35565b34801561033f57600080fd5b506102fe61034e366004612514565b610b6b565b34801561035f57600080fd5b5061037f61036e366004612531565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610265565b3480156103a457600080fd5b506103ad610c00565b604051908152602001610265565b3480156103c757600080fd5b50600f546102c69061010090046001600160a01b031681565b3480156103ec57600080fd5b506102fe6103fb3660046125d0565b610c10565b34801561040c57600080fd5b5061042061041b366004612611565b610df6565b604080516001600160a01b039093168352602083019190915201610265565b6102fe61044d36600461267a565b610e2c565b34801561045e57600080fd5b506103ad610efd565b34801561047357600080fd5b506102fe610f53565b34801561048857600080fd5b50600a546102c6906001600160a01b031681565b3480156104a857600080fd5b506102fe6104b73660046125d0565b611255565b3480156104c857600080fd5b50600f546102599060ff1681565b3480156104e257600080fd5b506102fe6104f1366004612732565b61134d565b34801561050257600080fd5b506102c6610511366004612445565b61140c565b34801561052257600080fd5b506102fe611463565b34801561053757600080fd5b506102fe610546366004612514565b6114fa565b34801561055757600080fd5b506103ad610566366004612514565b6115ac565b34801561057757600080fd5b50610283611620565b34801561058c57600080fd5b50600b546102c6906001600160a01b031681565b3480156105ac57600080fd5b506008546102c6906001600160a01b031681565b3480156105cc57600080fd5b50600d546103ad565b3480156105e157600080fd5b506102836116b2565b3480156105f657600080fd5b506102fe6106053660046127c7565b6116bf565b34801561061657600080fd5b506102fe610625366004612531565b61172b565b34801561063657600080fd5b50610259610645366004612445565b60106020526000908152604090205460ff1681565b34801561066657600080fd5b50610283610675366004612445565b611813565b34801561068657600080fd5b50610259610695366004612805565b600560209081526000928352604080842090915290825290205460ff1681565b3480156106c157600080fd5b506102fe6106d0366004612514565b61186a565b60006301ffc9a760e01b6001600160e01b03198316148061070657506380ac58cd60e01b6001600160e01b03198316145b806107215750635b5e139f60e01b6001600160e01b03198316145b8061073c575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461074f90612833565b80601f016020809104026020016040519081016040528092919081815260200182805461077b90612833565b80156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061081957506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61085b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600060016108c3610efd565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c6987356108f360208a018a61286d565b6040516020016109049291906128be565b6040516020818303038152906040528051906020012089806040019061092a919061286d565b60405160200161093b929190612900565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e001604051602081830303815290604052805190602001206040516020016109c392919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610a21573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600954600114610a875760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610852565b60026009556000610a9a858585856108b7565b90506000610aa733611bdf565b9050610ab4828783611c6c565b600b546001600160a01b031615610add57600b54610add906001600160a01b0316333084611d1b565b853560009081526010602090815260408220805460ff19166001179055610b069088018861286d565b9050905060005b81811015610b5c57610b546060890135610b2a60208b018b61286d565b84818110610b3a57610b3a612942565b9050602002016020810190610b4f9190612514565b611da7565b600101610b0d565b50506001600955505050505050565b6008546001600160a01b03163314610bb45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610c0b600c5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610c795760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610852565b6001600160a01b038216610ccf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610852565b336001600160a01b0384161480610d0957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610d2a57506000818152600460205260409020546001600160a01b031633145b610d675760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610852565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610e19908561296e565b610e23919061298d565b90509250929050565b6008546001600160a01b03163314610e755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b610e80816001611dcb565b81516000905b80821015610ec557610e98600c611ee5565b610eba848381518110610ead57610ead612942565b6020026020010151611f02565b816001019150610e86565b80821015610ef7577f4c4f4f505f4f564552464c4f570000000000000000000000000000000000000060005260206000fd5b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610f2e57610c0b611fcf565b507f000000000000000000000000000000000000000000000000000000000000000090565b6008546001600160a01b03163314610f9c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100a91906129af565b905060008167ffffffffffffffff81111561102757611027612633565b604051908082528060200260200182016040528015611050578160200160208202803683370190505b50905060008267ffffffffffffffff81111561106e5761106e612633565b604051908082528060200260200182016040528015611097578160200160208202803683370190505b5090504760005b848110156111fe57600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111491906129c8565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118891906129af565b90508186848151811061119d5761119d612942565b6001600160a01b03909216602092830291909101909101526127106111c382606461296e565b6111cd908661296e565b6111d7919061298d565b8584815181106111e9576111e9612942565b6020908102919091010152505060010161109e565b60005b8581101561124d5761124585828151811061121e5761121e612942565b602002602001015185838151811061123857611238612942565b6020026020010151612069565b600101611201565b505050505050565b611260838383610c10565b6001600160a01b0382163b15806113095750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156112d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fd91906129e5565b6001600160e01b031916145b6113485760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610852565b505050565b6008546001600160a01b031633146113965760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600f5460ff1615156001036113be57604051639619d74760e01b815260040160405180910390fd5b600e6113ca8282612a48565b50806040516113d99190612b08565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b03168061145e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610852565b919050565b6008546001600160a01b031633146114ac5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600f805460ff191660011790556040516114c890600e90612b97565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b6008546001600160a01b031633146115435760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038416908102919091179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b60006001600160a01b0382166116045760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610852565b506001600160a01b031660009081526003602052604090205490565b6060600e805461162f90612833565b80601f016020809104026020016040519081016040528092919081815260200182805461165b90612833565b80156116a85780601f1061167d576101008083540402835291602001916116a8565b820191906000526020600020905b81548152906001019060200180831161168b57829003601f168201915b5050505050905090565b6001805461074f90612833565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611736858585610c10565b6001600160a01b0384163b15806117cd5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a029061177e9033908a90899089908990600401612ba3565b6020604051808303816000875af115801561179d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c191906129e5565b6001600160e01b031916145b61180c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610852565b5050505050565b6060600d5482111561183857604051635d68437560e11b815260040160405180910390fd5b600e611843836120c4565b604051602001611854929190612bf7565b6040516020818303038152906040529050919050565b6008546001600160a01b031633146118b35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610852565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156118fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192191906129af565b905060008167ffffffffffffffff81111561193e5761193e612633565b604051908082528060200260200182016040528015611967578160200160208202803683370190505b50905060008267ffffffffffffffff81111561198557611985612633565b6040519080825280602002602001820160405280156119ae578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156119fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1f91906129af565b90505b84821015611b8657600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9891906129c8565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0c91906129af565b905081868581518110611b2157611b21612942565b6001600160a01b0390921660209283029190910190910152612710611b4782606461296e565b611b51908561296e565b611b5b919061298d565b858581518110611b6d57611b6d612942565b6020026020010181815250508360010193505050611a22565b60005b85811015611bd657611bce87868381518110611ba757611ba7612942565b6020026020010151868481518110611bc157611bc1612942565b6020026020010151612113565b600101611b89565b50505050505050565b600b546000906001600160a01b0316611bf8573461073c565b600b54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611c48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c91906129af565b600f546001600160a01b038481166101009092041614611c9f57604051632057875960e21b815260040160405180910390fd5b813560009081526010602052604090205460ff1615611cd15760405163e647f41360e01b815260040160405180910390fd5b611cde602083018361286d565b9050611cf26060840135608085013561296e565b611cfc919061296e565b81146113485760405163f7760f2560e01b815260040160405180910390fd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061180c5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610852565b60005b8281101561134857611dc382611dbe612199565b6121c4565b600101611daa565b600b546000906001600160a01b0316611de45734611e58565b600b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5891906129af565b9050336001600160a01b0384161480611e7a5750600b546001600160a01b0316155b15611348578160ff16600003611ea057611e9b6340d097c360e01b826122ea565b611ebc565b8160ff16600103611ebc57611ebc63044df8e760e41b826122ea565b600b546001600160a01b03161561134857600b54611348906001600160a01b0316843084611d1b565b805480611efa5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611f545760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610852565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516120019190612b97565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600080600085875af19050806113485760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610852565b604080516080810191829052607f0190826030600a8206018353600a90045b801561210157600183039250600a81066030018353600a90046120e3565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610ef75760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610852565b60006121a361239a565b506001600d60008282546121b79190612c44565b9091555050600d54919050565b6001600160a01b03821661221a5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610852565b6000818152600260205260409020546001600160a01b03161561227f5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610852565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6008546001600160a01b0316803b63ffffffff811660000361230c5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa15801561235f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238391906129af565b905080841461180c5763f7760f256000526004601cfd5b60006123aa600c80546001019055565b50600c5490565b6001600160e01b0319811681146123c757600080fd5b50565b6000602082840312156123dc57600080fd5b81356123e7816123b1565b9392505050565b60005b838110156124095781810151838201526020016123f1565b50506000910152565b60208152600082518060208401526124318160408501602087016123ee565b601f01601f19169190910160400192915050565b60006020828403121561245757600080fd5b5035919050565b6001600160a01b03811681146123c757600080fd5b803561145e8161245e565b6000806040838503121561249157600080fd5b823561249c8161245e565b946020939093013593505050565b600080600080608085870312156124c057600080fd5b843567ffffffffffffffff8111156124d757600080fd5b850160a081880312156124e957600080fd5b9350602085013560ff811681146124ff57600080fd5b93969395505050506040820135916060013590565b60006020828403121561252657600080fd5b81356123e78161245e565b60008060008060006080868803121561254957600080fd5b85356125548161245e565b945060208601356125648161245e565b935060408601359250606086013567ffffffffffffffff8082111561258857600080fd5b818801915088601f83011261259c57600080fd5b8135818111156125ab57600080fd5b8960208285010111156125bd57600080fd5b9699959850939650602001949392505050565b6000806000606084860312156125e557600080fd5b83356125f08161245e565b925060208401356126008161245e565b929592945050506040919091013590565b6000806040838503121561262457600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561267257612672612633565b604052919050565b6000806040838503121561268d57600080fd5b823567ffffffffffffffff808211156126a557600080fd5b818501915085601f8301126126b957600080fd5b81356020828211156126cd576126cd612633565b8160051b92506126de818401612649565b82815292840181019281810190898511156126f857600080fd5b948201945b84861015612716578535825294820194908201906126fd565b96506127259050878201612473565b9450505050509250929050565b6000602080838503121561274557600080fd5b823567ffffffffffffffff8082111561275d57600080fd5b818501915085601f83011261277157600080fd5b81358181111561278357612783612633565b612795601f8201601f19168501612649565b915080825286848285010111156127ab57600080fd5b8084840185840137600090820190930192909252509392505050565b600080604083850312156127da57600080fd5b82356127e58161245e565b9150602083013580151581146127fa57600080fd5b809150509250929050565b6000806040838503121561281857600080fd5b82356128238161245e565b915060208301356127fa8161245e565b600181811c9082168061284757607f821691505b60208210810361286757634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261288457600080fd5b83018035915067ffffffffffffffff82111561289f57600080fd5b6020019150600581901b36038213156128b757600080fd5b9250929050565b60008184825b858110156128f55781356128d78161245e565b6001600160a01b0316835260209283019291909101906001016128c4565b509095945050505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561292f57600080fd5b8260051b80858437919091019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561298857612988612958565b500290565b6000826129aa57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156129c157600080fd5b5051919050565b6000602082840312156129da57600080fd5b81516123e78161245e565b6000602082840312156129f757600080fd5b81516123e7816123b1565b601f82111561134857600081815260208120601f850160051c81016020861015612a295750805b601f850160051c820191505b8181101561124d57828155600101612a35565b815167ffffffffffffffff811115612a6257612a62612633565b612a7681612a708454612833565b84612a02565b602080601f831160018114612aab5760008415612a935750858301515b600019600386901b1c1916600185901b17855561124d565b600085815260208120601f198616915b82811015612ada57888601518255948401946001909101908401612abb565b5085821015612af85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612b1a8184602087016123ee565b9190910192915050565b60008154612b3181612833565b60018281168015612b495760018114612b5e57612b8d565b60ff1984168752821515830287019450612b8d565b8560005260208060002060005b85811015612b845781548a820152908401908201612b6b565b50505082870194505b5050505092915050565b60006123e78284612b24565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000612c038285612b24565b8351612c138183602088016123ee565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b8082018082111561073c5761073c61295856fea164736f6c6343000810000a";

type ERC721LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Lazy__factory extends ContractFactory {
  constructor(...args: ERC721LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Lazy> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Lazy>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Lazy {
    return super.attach(address) as ERC721Lazy;
  }
  override connect(signer: Signer): ERC721Lazy__factory {
    return super.connect(signer) as ERC721Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721LazyInterface {
    return new utils.Interface(_abi) as ERC721LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC721Lazy;
  }
}
