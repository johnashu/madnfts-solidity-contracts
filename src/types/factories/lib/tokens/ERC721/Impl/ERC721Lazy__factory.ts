/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Lazy,
  ERC721LazyInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verify",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verifyVoucher",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016009553480156200001657600080fd5b506040516200355f3803806200355f833981016040819052620000399162000361565b82888860006200004a8382620004df565b506001620000598282620004df565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35046608052620000b6620001cb565b60a05260108054610100600160a81b0319166101006001600160a01b03851602179055600f620000e78782620004df565b50600a80546001600160a01b03199081166001600160a01b03888116918217909355600b805483168585161790556001600160601b03871660065560078054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26006546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505062000629565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001ff9190620005ab565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028f57600080fd5b81516001600160401b0380821115620002ac57620002ac62000267565b604051601f8301601f19908116603f01168101908282118183101715620002d757620002d762000267565b81604052838152602092508683858801011115620002f457600080fd5b600091505b83821015620003185785820183015181830184015290820190620002f9565b600093810190920192909252949350505050565b80516001600160a01b03811681146200034457600080fd5b919050565b80516001600160601b03811681146200034457600080fd5b600080600080600080600080610100898b0312156200037f57600080fd5b88516001600160401b03808211156200039757600080fd5b620003a58c838d016200027d565b995060208b0151915080821115620003bc57600080fd5b620003ca8c838d016200027d565b985060408b0151915080821115620003e157600080fd5b50620003f08b828c016200027d565b9650506200040160608a016200032c565b94506200041160808a0162000349565b93506200042160a08a016200032c565b92506200043160c08a016200032c565b91506200044160e08a016200032c565b90509295985092959890939650565b600181811c908216806200046557607f821691505b6020821081036200048657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004da57600081815260208120601f850160051c81016020861015620004b55750805b601f850160051c820191505b81811015620004d657828155600101620004c1565b5050505b505050565b81516001600160401b03811115620004fb57620004fb62000267565b62000513816200050c845462000450565b846200048c565b602080601f8311600181146200054b5760008415620005325750858301515b600019600386901b1c1916600185901b178555620004d6565b600085815260208120601f198616915b828110156200057c578886015182559484019460019091019084016200055b565b50858210156200059b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620005bb8162000450565b60018281168015620005d65760018114620005ec576200061d565b60ff19841687528215158302870194506200061d565b8760005260208060002060005b85811015620006145781548a820152908401908201620005f9565b50505082870194505b50929695505050505050565b60805160a051612f106200064f6000396000610f6d01526000610f3d0152612f106000f3fe60806040526004361061024f5760003560e01c806355f804b3116101385780639456fbcc116100b0578063bfa556e41161007f578063d29bb90711610064578063d29bb9071461031b578063e1c38ed9146106c0578063e985e9c5146106d657600080fd5b8063bfa556e414610670578063c87b56dd146106a057600080fd5b80639456fbcc146105fb57806395d89b411461061b578063a22cb46514610630578063b88d4fde1461065057600080fd5b806370a0823111610107578063785e9e86116100ec578063785e9e86146105a65780638da5cb5b146105c65780638fc3b549146105e657600080fd5b806370a0823114610571578063714c53981461059157600080fd5b806355f804b3146104fc5780636352211e1461051c57806366c879a91461053c5780636c19e7831461055157600080fd5b8063238ac933116101cb5780633644e5151161019a57806342842e0e1161017f57806342842e0e146104a25780634edd2d49146104c257806351cff8d9146104dc57600080fd5b80633644e5151461046d5780633cd8045e1461048257600080fd5b8063238ac933146103d657806323b872dd146103fb5780632a55205a1461041b578063362c0cb51461045a57600080fd5b80630f16a0801161022257806313af40351161020757806313af40351461034e578063150b7a021461036e57806318160ddd146103b357600080fd5b80630f16a0801461031b57806310251d7f1461033b57600080fd5b806301ffc9a71461025457806306fdde0314610289578063081812fc146102ab578063095ea7b3146102f9575b600080fd5b34801561026057600080fd5b5061027461026f366004612663565b610711565b60405190151581526020015b60405180910390f35b34801561029557600080fd5b5061029e61077e565b60405161028091906126ab565b3480156102b757600080fd5b506102e16102c63660046126de565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610280565b34801561030557600080fd5b50610319610314366004612717565b61080c565b005b34801561032757600080fd5b506102e1610336366004612743565b6108f3565b610319610349366004612743565b610a71565b34801561035a57600080fd5b506103196103693660046127ad565b610ba7565b34801561037a57600080fd5b5061039a6103893660046127ca565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610280565b3480156103bf57600080fd5b506103c8610c3c565b604051908152602001610280565b3480156103e257600080fd5b506010546102e19061010090046001600160a01b031681565b34801561040757600080fd5b50610319610416366004612869565b610c4c565b34801561042757600080fd5b5061043b6104363660046128aa565b610e32565b604080516001600160a01b039093168352602083019190915201610280565b610319610468366004612913565b610e68565b34801561047957600080fd5b506103c8610f39565b34801561048e57600080fd5b50600a546102e1906001600160a01b031681565b3480156104ae57600080fd5b506103196104bd366004612869565b610f8f565b3480156104ce57600080fd5b506010546102749060ff1681565b3480156104e857600080fd5b506103196104f73660046127ad565b611087565b34801561050857600080fd5b506103196105173660046129cb565b6113d1565b34801561052857600080fd5b506102e16105373660046126de565b611490565b34801561054857600080fd5b506103196114e7565b34801561055d57600080fd5b5061031961056c3660046127ad565b61157e565b34801561057d57600080fd5b506103c861058c3660046127ad565b611630565b34801561059d57600080fd5b5061029e6116a4565b3480156105b257600080fd5b50600b546102e1906001600160a01b031681565b3480156105d257600080fd5b506008546102e1906001600160a01b031681565b3480156105f257600080fd5b50600d546103c8565b34801561060757600080fd5b50610319610616366004612a60565b611736565b34801561062757600080fd5b5061029e611b53565b34801561063c57600080fd5b5061031961064b366004612a99565b611b60565b34801561065c57600080fd5b5061031961066b3660046127ca565b611bcc565b34801561067c57600080fd5b5061027461068b3660046126de565b60116020526000908152604090205460ff1681565b3480156106ac57600080fd5b5061029e6106bb3660046126de565b611cb4565b3480156106cc57600080fd5b506103c8600e5481565b3480156106e257600080fd5b506102746106f1366004612a60565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061074257506380ac58cd60e01b6001600160e01b03198316145b8061075d5750635b5e139f60e01b6001600160e01b03198316145b80610778575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461078b90612acc565b80601f01602080910402602001604051908101604052809291908181526020018280546107b790612acc565b80156108045780601f106107d957610100808354040283529160200191610804565b820191906000526020600020905b8154815290600101906020018083116107e757829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061085557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6108975760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600060016108ff610f39565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561092f60208a018a612b06565b604051602001610940929190612b57565b604051602081830303815290604052805190602001208980604001906109669190612b06565b604051602001610977929190612b99565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e001604051602081830303815290604052805190602001206040516020016109ff92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610a5d573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600954600114610ac35760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161088e565b60026009556000610ad6858585856108f3565b90506000610ae333611d0b565b9050610af0828783611d98565b600b546001600160a01b031615610b1957600b54610b19906001600160a01b0316333084611f39565b853560009081526011602090815260408220805460ff19166001179055610b4290880188612b06565b9050905060005b81811015610b9857610b906060890135610b6660208b018b612b06565b84818110610b7657610b76612bdb565b9050602002016020810190610b8b91906127ad565b611fc5565b600101610b49565b50506001600955505050505050565b6008546001600160a01b03163314610bf05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610c47600c5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610cb55760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161088e565b6001600160a01b038216610d0b5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161088e565b336001600160a01b0384161480610d4557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610d6657506000818152600460205260409020546001600160a01b031633145b610da35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161088e565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610e559085612c07565b610e5f9190612c26565b90509250929050565b6008546001600160a01b03163314610eb15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b610ebc816001611fe9565b81516000905b80821015610f0157610ed4600c612103565b610ef6848381518110610ee957610ee9612bdb565b6020026020010151612120565b816001019150610ec2565b80821015610f33577f4c4f4f505f4f564552464c4f570000000000000000000000000000000000000060005260206000fd5b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610f6a57610c476121ed565b507f000000000000000000000000000000000000000000000000000000000000000090565b610f9a838383610c4c565b6001600160a01b0382163b15806110435750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612c48565b6001600160e01b031916145b6110825760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161088e565b505050565b6008546001600160a01b031633146110d05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa15801561111a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113e9190612c65565b905060008167ffffffffffffffff81111561115b5761115b6128cc565b604051908082528060200260200182016040528015611184578160200160208202803683370190505b50905060008267ffffffffffffffff8111156111a2576111a26128cc565b6040519080825280602002602001820160405280156111cb578160200160208202803683370190505b509050600080600e541180156111e957506001600160a01b03851615155b1561121357600e546111fb9047612c7e565b905061120985600e54612287565b6000600e55611216565b50475b60005b8481101561137957600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f9190612c91565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156112df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113039190612c65565b90508186848151811061131857611318612bdb565b6001600160a01b039092166020928302919091019091015261271061133e826064612c07565b6113489086612c07565b6113529190612c26565b85848151811061136457611364612bdb565b60209081029190910101525050600101611219565b60005b858110156113c8576113c085828151811061139957611399612bdb565b60200260200101518583815181106113b3576113b3612bdb565b6020026020010151612287565b60010161137c565b50505050505050565b6008546001600160a01b0316331461141a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b60105460ff16151560010361144257604051639619d74760e01b815260040160405180910390fd5b600f61144e8282612cf4565b508060405161145d9190612db4565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806114e25760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161088e565b919050565b6008546001600160a01b031633146115305760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b6010805460ff1916600117905560405161154c90600f90612e43565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b6008546001600160a01b031633146115c75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b601080547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038416908102919091179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b60006001600160a01b0382166116885760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161088e565b506001600160a01b031660009081526003602052604090205490565b6060600f80546116b390612acc565b80601f01602080910402602001604051908101604052809291908181526020018280546116df90612acc565b801561172c5780601f106117015761010080835404028352916020019161172c565b820191906000526020600020905b81548152906001019060200180831161170f57829003601f168201915b5050505050905090565b6008546001600160a01b0316331461177f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088e565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156117c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ed9190612c65565b905060008167ffffffffffffffff81111561180a5761180a6128cc565b604051908082528060200260200182016040528015611833578160200160208202803683370190505b50905060008267ffffffffffffffff811115611851576118516128cc565b60405190808252806020026020018201604052801561187a578160200160208202803683370190505b509050600080600e5411801561189857506001600160a01b03851615155b1561192b57600e546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156118e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119089190612c65565b6119129190612c7e565b90506119218686600e546122e2565b6000600e55611996565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa15801561196f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119939190612c65565b90505b60005b84811015611af957600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156119eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0f9190612c91565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a839190612c65565b905081868481518110611a9857611a98612bdb565b6001600160a01b0390921660209283029190910190910152612710611abe826064612c07565b611ac89086612c07565b611ad29190612c26565b858481518110611ae457611ae4612bdb565b60209081029190910101525050600101611999565b60005b85811015611b4957611b4188868381518110611b1a57611b1a612bdb565b6020026020010151868481518110611b3457611b34612bdb565b60200260200101516122e2565b600101611afc565b5050505050505050565b6001805461078b90612acc565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611bd7858585610c4c565b6001600160a01b0384163b1580611c6e5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611c1f9033908a90899089908990600401612e4f565b6020604051808303816000875af1158015611c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c629190612c48565b6001600160e01b031916145b611cad5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161088e565b5050505050565b6060600d54821115611cd957604051635d68437560e11b815260040160405180910390fd5b600f611ce483612368565b604051602001611cf5929190612ea3565b6040516020818303038152906040529050919050565b600b546000906001600160a01b0316611d245734610778565b600b54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611d74573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190612c65565b6010546001600160a01b038481166101009092041614611dcb57604051632057875960e21b815260040160405180910390fd5b813560009081526011602052604090205460ff1615611dfd5760405163e647f41360e01b815260040160405180910390fd5b6008546001600160a01b0316803b600063ffffffff821615611e8f57600854604051633b7279e960e21b81526340d097c360e01b60048201526001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8c9190612c65565b90505b611e98816123b7565b611ea1846123b7565b611eae85608001356123b7565b83811180611eef5750611ec46020860186612b06565b9050611ed860608701356080880135612c07565b611ee29190612c07565b611eec8286612c7e565b14155b15611f0d5760405163f7760f2560e01b815260040160405180910390fd5b63ffffffff821615611f315780600e6000828254611f2b9190612ef0565b90915550505b505050505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611cad5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161088e565b60005b8281101561108257611fe182611fdc612414565b61243f565b600101611fc8565b600b546000906001600160a01b03166120025734612076565b600b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120769190612c65565b9050336001600160a01b03841614806120985750600b546001600160a01b0316155b15611082578160ff166000036120be576120b96340d097c360e01b82612565565b6120da565b8160ff166001036120da576120da63044df8e760e41b82612565565b600b546001600160a01b03161561108257600b54611082906001600160a01b0316843084611f39565b8054806121185763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b0316806121725760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161088e565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161221f9190612e43565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600080600085875af19050806110825760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161088e565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610f335760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161088e565b604080516080810191829052607f0190826030600a8206018353600a90045b80156123a557600183039250600a81066030018353600a9004612387565b50819003601f19909101908152919050565b612411816040516024016123cd91815260200190565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663f5b1bba960e01b179052612615565b50565b600061241e612636565b506001600d60008282546124329190612ef0565b9091555050600d54919050565b6001600160a01b0382166124955760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161088e565b6000818152600260205260409020546001600160a01b0316156124fa5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161088e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6008546001600160a01b0316803b63ffffffff81166000036125875750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa1580156125da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125fe9190612c65565b9050808414611cad5763f7760f256000526004601cfd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000612646600c80546001019055565b50600c5490565b6001600160e01b03198116811461241157600080fd5b60006020828403121561267557600080fd5b81356126808161264d565b9392505050565b60005b838110156126a257818101518382015260200161268a565b50506000910152565b60208152600082518060208401526126ca816040850160208701612687565b601f01601f19169190910160400192915050565b6000602082840312156126f057600080fd5b5035919050565b6001600160a01b038116811461241157600080fd5b80356114e2816126f7565b6000806040838503121561272a57600080fd5b8235612735816126f7565b946020939093013593505050565b6000806000806080858703121561275957600080fd5b843567ffffffffffffffff81111561277057600080fd5b850160a0818803121561278257600080fd5b9350602085013560ff8116811461279857600080fd5b93969395505050506040820135916060013590565b6000602082840312156127bf57600080fd5b8135612680816126f7565b6000806000806000608086880312156127e257600080fd5b85356127ed816126f7565b945060208601356127fd816126f7565b935060408601359250606086013567ffffffffffffffff8082111561282157600080fd5b818801915088601f83011261283557600080fd5b81358181111561284457600080fd5b89602082850101111561285657600080fd5b9699959850939650602001949392505050565b60008060006060848603121561287e57600080fd5b8335612889816126f7565b92506020840135612899816126f7565b929592945050506040919091013590565b600080604083850312156128bd57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561290b5761290b6128cc565b604052919050565b6000806040838503121561292657600080fd5b823567ffffffffffffffff8082111561293e57600080fd5b818501915085601f83011261295257600080fd5b8135602082821115612966576129666128cc565b8160051b92506129778184016128e2565b828152928401810192818101908985111561299157600080fd5b948201945b848610156129af57853582529482019490820190612996565b96506129be905087820161270c565b9450505050509250929050565b600060208083850312156129de57600080fd5b823567ffffffffffffffff808211156129f657600080fd5b818501915085601f830112612a0a57600080fd5b813581811115612a1c57612a1c6128cc565b612a2e601f8201601f191685016128e2565b91508082528684828501011115612a4457600080fd5b8084840185840137600090820190930192909252509392505050565b60008060408385031215612a7357600080fd5b8235612a7e816126f7565b91506020830135612a8e816126f7565b809150509250929050565b60008060408385031215612aac57600080fd5b8235612ab7816126f7565b915060208301358015158114612a8e57600080fd5b600181811c90821680612ae057607f821691505b602082108103612b0057634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e19843603018112612b1d57600080fd5b83018035915067ffffffffffffffff821115612b3857600080fd5b6020019150600581901b3603821315612b5057600080fd5b9250929050565b60008184825b85811015612b8e578135612b70816126f7565b6001600160a01b031683526020928301929190910190600101612b5d565b509095945050505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612bc857600080fd5b8260051b80858437919091019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c2157612c21612bf1565b500290565b600082612c4357634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612c5a57600080fd5b81516126808161264d565b600060208284031215612c7757600080fd5b5051919050565b8181038181111561077857610778612bf1565b600060208284031215612ca357600080fd5b8151612680816126f7565b601f82111561108257600081815260208120601f850160051c81016020861015612cd55750805b601f850160051c820191505b81811015611f3157828155600101612ce1565b815167ffffffffffffffff811115612d0e57612d0e6128cc565b612d2281612d1c8454612acc565b84612cae565b602080601f831160018114612d575760008415612d3f5750858301515b600019600386901b1c1916600185901b178555611f31565b600085815260208120601f198616915b82811015612d8657888601518255948401946001909101908401612d67565b5085821015612da45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612dc6818460208701612687565b9190910192915050565b60008154612ddd81612acc565b60018281168015612df55760018114612e0a57612e39565b60ff1984168752821515830287019450612e39565b8560005260208060002060005b85811015612e305781548a820152908401908201612e17565b50505082870194505b5050505092915050565b60006126808284612dd0565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000612eaf8285612dd0565b8351612ebf818360208801612687565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b8082018082111561077857610778612bf156fea164736f6c6343000810000a";

type ERC721LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Lazy__factory extends ContractFactory {
  constructor(...args: ERC721LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Lazy> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Lazy>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Lazy {
    return super.attach(address) as ERC721Lazy;
  }
  override connect(signer: Signer): ERC721Lazy__factory {
    return super.connect(signer) as ERC721Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721LazyInterface {
    return new utils.Interface(_abi) as ERC721LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC721Lazy;
  }
}
