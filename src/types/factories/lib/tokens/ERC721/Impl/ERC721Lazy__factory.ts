/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Lazy,
  ERC721LazyInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verify",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verifyVoucher",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016009553480156200001657600080fd5b50604051620031613803806200316183398101604081905262000039916200035c565b82888860006200004a8382620004da565b506001620000598282620004da565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35046608052620000b6620001c6565b60a052600a80546001600160a01b0319166001600160a01b038416179055600c620000e28782620004da565b50600d80546001600160a01b03199081166001600160a01b038881169182179093556010805483168585161790556001600160601b03871660065560078054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26006546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505062000624565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001fa9190620005a6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028a57600080fd5b81516001600160401b0380821115620002a757620002a762000262565b604051601f8301601f19908116603f01168101908282118183101715620002d257620002d262000262565b81604052838152602092508683858801011115620002ef57600080fd5b600091505b83821015620003135785820183015181830184015290820190620002f4565b600093810190920192909252949350505050565b80516001600160a01b03811681146200033f57600080fd5b919050565b80516001600160601b03811681146200033f57600080fd5b600080600080600080600080610100898b0312156200037a57600080fd5b88516001600160401b03808211156200039257600080fd5b620003a08c838d0162000278565b995060208b0151915080821115620003b757600080fd5b620003c58c838d0162000278565b985060408b0151915080821115620003dc57600080fd5b50620003eb8b828c0162000278565b965050620003fc60608a0162000327565b94506200040c60808a0162000344565b93506200041c60a08a0162000327565b92506200042c60c08a0162000327565b91506200043c60e08a0162000327565b90509295985092959890939650565b600181811c908216806200046057607f821691505b6020821081036200048157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004d557600081815260208120601f850160051c81016020861015620004b05750805b601f850160051c820191505b81811015620004d157828155600101620004bc565b5050505b505050565b81516001600160401b03811115620004f657620004f662000262565b6200050e816200050784546200044b565b8462000487565b602080601f8311600181146200054657600084156200052d5750858301515b600019600386901b1c1916600185901b178555620004d1565b600085815260208120601f198616915b82811015620005775788860151825594840194600190910190840162000556565b5085821015620005965787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620005b6816200044b565b60018281168015620005d15760018114620005e75762000618565b60ff198416875282151583028701945062000618565b8760005260208060002060005b858110156200060f5781548a820152908401908201620005f4565b50505082870194505b50929695505050505050565b60805160a051612b176200064a6000396000610ec701526000610e970152612b176000f3fe6080604052600436106101fe5760003560e01c806342842e0e1161011d5780638fc3b549116100b0578063bfa556e41161007f578063d29bb90711610064578063d29bb907146102ca578063e985e9c514610610578063f4f3b2001461064b57600080fd5b8063bfa556e4146105c0578063c87b56dd146105f057600080fd5b80638fc3b5491461055657806395d89b411461056b578063a22cb46514610580578063b88d4fde146105a057600080fd5b806370a08231116100ec57806370a08231146104e1578063714c539814610501578063785e9e86146105165780638da5cb5b1461053657600080fd5b806342842e0e1461046157806355f804b3146104815780636352211e146104a15780636c19e783146104c157600080fd5b806318160ddd11610195578063362c0cb511610164578063362c0cb5146104045780633644e515146104175780633ccfd60b1461042c5780633cd8045e1461044157600080fd5b806318160ddd14610362578063238ac9331461038557806323b872dd146103a55780632a55205a146103c557600080fd5b80630f16a080116101d15780630f16a080146102ca57806310251d7f146102ea57806313af4035146102fd578063150b7a021461031d57600080fd5b806301ffc9a71461020357806306fdde0314610238578063081812fc1461025a578063095ea7b3146102a8575b600080fd5b34801561020f57600080fd5b5061022361021e36600461227d565b61066b565b60405190151581526020015b60405180910390f35b34801561024457600080fd5b5061024d6106d8565b60405161022f91906122c5565b34801561026657600080fd5b506102906102753660046122f8565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b3480156102b457600080fd5b506102c86102c3366004612331565b610766565b005b3480156102d657600080fd5b506102906102e536600461235d565b61084d565b6102c86102f836600461235d565b6109cb565b34801561030957600080fd5b506102c86103183660046123c7565b610b01565b34801561032957600080fd5b506103496103383660046123e4565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161022f565b34801561036e57600080fd5b50610377610b96565b60405190815260200161022f565b34801561039157600080fd5b50600a54610290906001600160a01b031681565b3480156103b157600080fd5b506102c86103c0366004612483565b610ba6565b3480156103d157600080fd5b506103e56103e03660046124c4565b610d8c565b604080516001600160a01b03909316835260208301919091520161022f565b6102c861041236600461252d565b610dc2565b34801561042357600080fd5b50610377610e93565b34801561043857600080fd5b506102c8610ee9565b34801561044d57600080fd5b50600d54610290906001600160a01b031681565b34801561046d57600080fd5b506102c861047c366004612483565b6111eb565b34801561048d57600080fd5b506102c861049c3660046125e5565b6112e3565b3480156104ad57600080fd5b506102906104bc3660046122f8565b61137a565b3480156104cd57600080fd5b506102c86104dc3660046123c7565b6113d1565b3480156104ed57600080fd5b506103776104fc3660046123c7565b611464565b34801561050d57600080fd5b5061024d6114d8565b34801561052257600080fd5b50601054610290906001600160a01b031681565b34801561054257600080fd5b50600854610290906001600160a01b031681565b34801561056257600080fd5b50600f54610377565b34801561057757600080fd5b5061024d61156a565b34801561058c57600080fd5b506102c861059b36600461267a565b611577565b3480156105ac57600080fd5b506102c86105bb3660046123e4565b6115e3565b3480156105cc57600080fd5b506102236105db3660046122f8565b600e6020526000908152604090205460ff1681565b3480156105fc57600080fd5b5061024d61060b3660046122f8565b6116cb565b34801561061c57600080fd5b5061022361062b3660046126b8565b600560209081526000928352604080842090915290825290205460ff1681565b34801561065757600080fd5b506102c86106663660046123c7565b611722565b60006301ffc9a760e01b6001600160e01b03198316148061069c57506380ac58cd60e01b6001600160e01b03198316145b806106b75750635b5e139f60e01b6001600160e01b03198316145b806106d2575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546106e5906126e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610711906126e6565b801561075e5780601f106107335761010080835404028352916020019161075e565b820191906000526020600020905b81548152906001019060200180831161074157829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806107af57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107f15760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006001610859610e93565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561088960208a018a612720565b60405160200161089a929190612771565b604051602081830303815290604052805190602001208980604001906108c09190612720565b6040516020016108d19291906127b3565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0016040516020818303038152906040528051906020012060405160200161095992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156109b7573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600954600114610a1d5760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016107e8565b60026009556000610a308585858561084d565b90506000610a3d33611a97565b9050610a4a828783611b24565b6010546001600160a01b031615610a7357601054610a73906001600160a01b0316333084611bce565b85356000908152600e602090815260408220805460ff19166001179055610a9c90880188612720565b9050905060005b81811015610af257610aea6060890135610ac060208b018b612720565b84818110610ad057610ad06127f5565b9050602002016020810190610ae591906123c7565b611c5a565b600101610aa3565b50506001600955505050505050565b6008546001600160a01b03163314610b4a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610ba1600b5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610c0f5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107e8565b6001600160a01b038216610c655760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107e8565b336001600160a01b0384161480610c9f57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610cc057506000818152600460205260409020546001600160a01b031633145b610cfd5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016107e8565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610daf9085612821565b610db99190612840565b90509250929050565b6008546001600160a01b03163314610e0b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b610e16816001611c7e565b81516000905b80821015610e5b57610e2e600b611d98565b610e50848381518110610e4357610e436127f5565b6020026020010151611db5565b816001019150610e1c565b80821015610e8d577f4c4f4f505f4f564552464c4f570000000000000000000000000000000000000060005260206000fd5b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610ec457610ba1611e82565b507f000000000000000000000000000000000000000000000000000000000000000090565b6008546001600160a01b03163314610f325760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b600d546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa09190612862565b905060008167ffffffffffffffff811115610fbd57610fbd6124e6565b604051908082528060200260200182016040528015610fe6578160200160208202803683370190505b50905060008267ffffffffffffffff811115611004576110046124e6565b60405190808252806020026020018201604052801561102d578160200160208202803683370190505b5090504760005b8481101561119457600d54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa919061287b565b600d5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190612862565b905081868481518110611133576111336127f5565b6001600160a01b0390921660209283029190910190910152612710611159826064612821565b6111639086612821565b61116d9190612840565b85848151811061117f5761117f6127f5565b60209081029190910101525050600101611034565b60005b858110156111e3576111db8582815181106111b4576111b46127f5565b60200260200101518583815181106111ce576111ce6127f5565b6020026020010151611f1c565b600101611197565b505050505050565b6111f6838383610ba6565b6001600160a01b0382163b158061129f5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190612898565b6001600160e01b031916145b6112de5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107e8565b505050565b6008546001600160a01b0316331461132c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b600c61133882826128fb565b508060405161134791906129bb565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806113cc5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107e8565b919050565b6008546001600160a01b0316331461141a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b600a80546001600160a01b0319166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b60006001600160a01b0382166114bc5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107e8565b506001600160a01b031660009081526003602052604090205490565b6060600c80546114e7906126e6565b80601f0160208091040260200160405190810160405280929190818152602001828054611513906126e6565b80156115605780601f1061153557610100808354040283529160200191611560565b820191906000526020600020905b81548152906001019060200180831161154357829003601f168201915b5050505050905090565b600180546106e5906126e6565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115ee858585610ba6565b6001600160a01b0384163b15806116855750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906116369033908a908990899089906004016129d7565b6020604051808303816000875af1158015611655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116799190612898565b6001600160e01b031916145b6116c45760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107e8565b5050505050565b6060600f548211156116f057604051635d68437560e11b815260040160405180910390fd5b600c6116fb83611f77565b60405160200161170c929190612a9e565b6040516020818303038152906040529050919050565b6008546001600160a01b0316331461176b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107e8565b600d546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190612862565b905060008167ffffffffffffffff8111156117f6576117f66124e6565b60405190808252806020026020018201604052801561181f578160200160208202803683370190505b50905060008267ffffffffffffffff81111561183d5761183d6124e6565b604051908082528060200260200182016040528015611866578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d79190612862565b90505b84821015611a3e57600d54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611950919061287b565b600d5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c49190612862565b9050818685815181106119d9576119d96127f5565b6001600160a01b03909216602092830291909101909101526127106119ff826064612821565b611a099085612821565b611a139190612840565b858581518110611a2557611a256127f5565b60200260200101818152505083600101935050506118da565b60005b85811015611a8e57611a8687868381518110611a5f57611a5f6127f5565b6020026020010151868481518110611a7957611a796127f5565b6020026020010151611fc6565b600101611a41565b50505050505050565b6010546000906001600160a01b0316611ab057346106d2565b601054604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611b00573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190612862565b600a546001600160a01b03848116911614611b5257604051632057875960e21b815260040160405180910390fd5b81356000908152600e602052604090205460ff1615611b845760405163e647f41360e01b815260040160405180910390fd5b611b916020830183612720565b9050611ba560608401356080850135612821565b611baf9190612821565b81146112de5760405163f7760f2560e01b815260040160405180910390fd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116c45760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016107e8565b60005b828110156112de57611c7682611c7161204c565b612077565b600101611c5d565b6010546000906001600160a01b0316611c975734611d0b565b601054604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0b9190612862565b9050336001600160a01b0384161480611d2d57506010546001600160a01b0316155b156112de578160ff16600003611d5357611d4e6340d097c360e01b8261219d565b611d6f565b8160ff16600103611d6f57611d6f63044df8e760e41b8261219d565b6010546001600160a01b0316156112de576010546112de906001600160a01b0316843084611bce565b805480611dad5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611e075760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107e8565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611eb49190612aeb565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600080600085875af19050806112de5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016107e8565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611fb457600183039250600a81066030018353600a9004611f96565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610e8d5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016107e8565b600061205661224d565b506001600f600082825461206a9190612af7565b9091555050600f54919050565b6001600160a01b0382166120cd5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107e8565b6000818152600260205260409020546001600160a01b0316156121325760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107e8565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6008546001600160a01b0316803b63ffffffff81166000036121bf5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015612212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122369190612862565b90508084146116c45763f7760f256000526004601cfd5b600061225d600b80546001019055565b50600b5490565b6001600160e01b03198116811461227a57600080fd5b50565b60006020828403121561228f57600080fd5b813561229a81612264565b9392505050565b60005b838110156122bc5781810151838201526020016122a4565b50506000910152565b60208152600082518060208401526122e48160408501602087016122a1565b601f01601f19169190910160400192915050565b60006020828403121561230a57600080fd5b5035919050565b6001600160a01b038116811461227a57600080fd5b80356113cc81612311565b6000806040838503121561234457600080fd5b823561234f81612311565b946020939093013593505050565b6000806000806080858703121561237357600080fd5b843567ffffffffffffffff81111561238a57600080fd5b850160a0818803121561239c57600080fd5b9350602085013560ff811681146123b257600080fd5b93969395505050506040820135916060013590565b6000602082840312156123d957600080fd5b813561229a81612311565b6000806000806000608086880312156123fc57600080fd5b853561240781612311565b9450602086013561241781612311565b935060408601359250606086013567ffffffffffffffff8082111561243b57600080fd5b818801915088601f83011261244f57600080fd5b81358181111561245e57600080fd5b89602082850101111561247057600080fd5b9699959850939650602001949392505050565b60008060006060848603121561249857600080fd5b83356124a381612311565b925060208401356124b381612311565b929592945050506040919091013590565b600080604083850312156124d757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612525576125256124e6565b604052919050565b6000806040838503121561254057600080fd5b823567ffffffffffffffff8082111561255857600080fd5b818501915085601f83011261256c57600080fd5b8135602082821115612580576125806124e6565b8160051b92506125918184016124fc565b82815292840181019281810190898511156125ab57600080fd5b948201945b848610156125c9578535825294820194908201906125b0565b96506125d89050878201612326565b9450505050509250929050565b600060208083850312156125f857600080fd5b823567ffffffffffffffff8082111561261057600080fd5b818501915085601f83011261262457600080fd5b813581811115612636576126366124e6565b612648601f8201601f191685016124fc565b9150808252868482850101111561265e57600080fd5b8084840185840137600090820190930192909252509392505050565b6000806040838503121561268d57600080fd5b823561269881612311565b9150602083013580151581146126ad57600080fd5b809150509250929050565b600080604083850312156126cb57600080fd5b82356126d681612311565b915060208301356126ad81612311565b600181811c908216806126fa57607f821691505b60208210810361271a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261273757600080fd5b83018035915067ffffffffffffffff82111561275257600080fd5b6020019150600581901b360382131561276a57600080fd5b9250929050565b60008184825b858110156127a857813561278a81612311565b6001600160a01b031683526020928301929190910190600101612777565b509095945050505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156127e257600080fd5b8260051b80858437919091019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561283b5761283b61280b565b500290565b60008261285d57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561287457600080fd5b5051919050565b60006020828403121561288d57600080fd5b815161229a81612311565b6000602082840312156128aa57600080fd5b815161229a81612264565b601f8211156112de57600081815260208120601f850160051c810160208610156128dc5750805b601f850160051c820191505b818110156111e3578281556001016128e8565b815167ffffffffffffffff811115612915576129156124e6565b6129298161292384546126e6565b846128b5565b602080601f83116001811461295e57600084156129465750858301515b600019600386901b1c1916600185901b1785556111e3565b600085815260208120601f198616915b8281101561298d5788860151825594840194600190910190840161296e565b50858210156129ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516129cd8184602087016122a1565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008154612a38816126e6565b60018281168015612a505760018114612a6557612a94565b60ff1984168752821515830287019450612a94565b8560005260208060002060005b85811015612a8b5781548a820152908401908201612a72565b50505082870194505b5050505092915050565b6000612aaa8285612a2b565b8351612aba8183602088016122a1565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b600061229a8284612a2b565b808201808211156106d2576106d261280b56fea164736f6c6343000810000a";

type ERC721LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Lazy__factory extends ContractFactory {
  constructor(...args: ERC721LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Lazy> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Lazy>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Lazy {
    return super.attach(address) as ERC721Lazy;
  }
  override connect(signer: Signer): ERC721Lazy__factory {
    return super.connect(signer) as ERC721Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721LazyInterface {
    return new utils.Interface(_abi) as ERC721LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC721Lazy;
  }
}
