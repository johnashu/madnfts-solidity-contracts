/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Lazy,
  ERC721LazyInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verify",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "_voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "_verifyVoucher",
    outputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016009553480156200001657600080fd5b5060405162002e8c38038062002e8c833981016040819052620000399162000345565b81878760006200004a8382620004c0565b506001620000598282620004c0565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35046608052620000b6620001b9565b60a052600a80546001600160a01b0319166001600160a01b038316179055600c620000e28682620004c0565b50600d80546001600160a01b03199081166001600160a01b038781169182179093556001600160601b03861660065560078054909216179055604051908216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26006546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050506200060a565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001ed91906200058c565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027d57600080fd5b81516001600160401b03808211156200029a576200029a62000255565b604051601f8301601f19908116603f01168101908282118183101715620002c557620002c562000255565b81604052838152602092508683858801011115620002e257600080fd5b600091505b83821015620003065785820183015181830184015290820190620002e7565b600093810190920192909252949350505050565b6001600160a01b03811681146200033057600080fd5b50565b805162000340816200031a565b919050565b600080600080600080600060e0888a0312156200036157600080fd5b87516001600160401b03808211156200037957600080fd5b620003878b838c016200026b565b985060208a01519150808211156200039e57600080fd5b620003ac8b838c016200026b565b975060408a0151915080821115620003c357600080fd5b50620003d28a828b016200026b565b9550506060880151620003e5816200031a565b60808901519094506001600160601b03811681146200040357600080fd5b92506200041360a0890162000333565b91506200042360c0890162000333565b905092959891949750929550565b600181811c908216806200044657607f821691505b6020821081036200046757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004bb57600081815260208120601f850160051c81016020861015620004965750805b601f850160051c820191505b81811015620004b757828155600101620004a2565b5050505b505050565b81516001600160401b03811115620004dc57620004dc62000255565b620004f481620004ed845462000431565b846200046d565b602080601f8311600181146200052c5760008415620005135750858301515b600019600386901b1c1916600185901b178555620004b7565b600085815260208120601f198616915b828110156200055d578886015182559484019460019091019084016200053c565b50858210156200057c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200059c8162000431565b60018281168015620005b75760018114620005cd57620005fe565b60ff1984168752821515830287019450620005fe565b8760005260208060002060005b85811015620005f55781548a820152908401908201620005da565b50505082870194505b50929695505050505050565b60805160a05161285c620006306000396000610d8301526000610d53015261285c6000f3fe6080604052600436106101e35760003560e01c806355f804b311610102578063a22cb46511610095578063c87b56dd11610064578063c87b56dd146105b5578063d29bb907146102af578063e985e9c5146105d5578063f4f3b2001461061057600080fd5b8063a22cb46514610532578063b80f55c914610552578063b88d4fde14610565578063bfa556e41461058557600080fd5b8063714c5398116100d1578063714c5398146104d35780638da5cb5b146104e85780638fc3b5491461050857806395d89b411461051d57600080fd5b806355f804b3146104535780636352211e146104735780636c19e7831461049357806370a08231146104b357600080fd5b806318160ddd1161017a5780633644e515116101495780633644e515146103e95780633ccfd60b146103fe5780633cd8045e1461041357806342842e0e1461043357600080fd5b806318160ddd14610347578063238ac9331461036a57806323b872dd1461038a5780632a55205a146103aa57600080fd5b80630f16a080116101b65780630f16a080146102af57806310251d7f146102cf57806313af4035146102e2578063150b7a021461030257600080fd5b806301ffc9a7146101e857806306fdde031461021d578063081812fc1461023f578063095ea7b31461028d575b600080fd5b3480156101f457600080fd5b50610208610203366004611fdf565b610630565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b5061023261069d565b6040516102149190612027565b34801561024b57600080fd5b5061027561025a36600461205a565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610214565b34801561029957600080fd5b506102ad6102a8366004612088565b61072b565b005b3480156102bb57600080fd5b506102756102ca3660046120b4565b610812565b6102ad6102dd3660046120b4565b610990565b3480156102ee57600080fd5b506102ad6102fd36600461211e565b610a8e565b34801561030e57600080fd5b5061032e61031d36600461213b565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610214565b34801561035357600080fd5b5061035c610b23565b604051908152602001610214565b34801561037657600080fd5b50600a54610275906001600160a01b031681565b34801561039657600080fd5b506102ad6103a53660046121da565b610b33565b3480156103b657600080fd5b506103ca6103c536600461221b565b610d19565b604080516001600160a01b039093168352602083019190915201610214565b3480156103f557600080fd5b5061035c610d4f565b34801561040a57600080fd5b506102ad610da5565b34801561041f57600080fd5b50600d54610275906001600160a01b031681565b34801561043f57600080fd5b506102ad61044e3660046121da565b6110a7565b34801561045f57600080fd5b506102ad61046e366004612284565b61119f565b34801561047f57600080fd5b5061027561048e36600461205a565b611236565b34801561049f57600080fd5b506102ad6104ae36600461211e565b61128d565b3480156104bf57600080fd5b5061035c6104ce36600461211e565b611320565b3480156104df57600080fd5b50610232611394565b3480156104f457600080fd5b50600854610275906001600160a01b031681565b34801561051457600080fd5b50600f5461035c565b34801561052957600080fd5b50610232611426565b34801561053e57600080fd5b506102ad61054d366004612319565b611433565b6102ad610560366004612357565b61149f565b34801561057157600080fd5b506102ad61058036600461213b565b61156f565b34801561059157600080fd5b506102086105a036600461205a565b600e6020526000908152604090205460ff1681565b3480156105c157600080fd5b506102326105d036600461205a565b611657565b3480156105e157600080fd5b506102086105f03660046123fd565b600560209081526000928352604080842090915290825290205460ff1681565b34801561061c57600080fd5b506102ad61062b36600461211e565b6116ae565b60006301ffc9a760e01b6001600160e01b03198316148061066157506380ac58cd60e01b6001600160e01b03198316145b8061067c5750635b5e139f60e01b6001600160e01b03198316145b80610697575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546106aa9061242b565b80601f01602080910402602001604051908101604052809291908181526020018280546106d69061242b565b80156107235780601f106106f857610100808354040283529160200191610723565b820191906000526020600020905b81548152906001019060200180831161070657829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061077457506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107b65760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000600161081e610d4f565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561084e60208a018a612465565b60405160200161085f9291906124b6565b604051602081830303815290604052805190602001208980604001906108859190612465565b6040516020016108969291906124f8565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0016040516020818303038152906040528051906020012060405160200161091e92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561097c573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6009546001146109e25760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016107ad565b600260095560006109f585858585610812565b9050610a018186611a23565b84356000908152600e602090815260408220805460ff19166001179055610a2a90870187612465565b9050905060005b81811015610a8057610a786060880135610a4e60208a018a612465565b84818110610a5e57610a5e61253a565b9050602002016020810190610a73919061211e565b611ad1565b600101610a31565b505060016009555050505050565b6008546001600160a01b03163314610ad75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610b2e600b5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610b9c5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107ad565b6001600160a01b038216610bf25760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107ad565b336001600160a01b0384161480610c2c57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610c4d57506000818152600460205260409020546001600160a01b031633145b610c8a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016107ad565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610d3c9085612566565b610d469190612585565b90509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610d8057610b2e611af5565b507f000000000000000000000000000000000000000000000000000000000000000090565b6008546001600160a01b03163314610dee5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b600d546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c91906125a7565b905060008167ffffffffffffffff811115610e7957610e7961223d565b604051908082528060200260200182016040528015610ea2578160200160208202803683370190505b50905060008267ffffffffffffffff811115610ec057610ec061223d565b604051908082528060200260200182016040528015610ee9578160200160208202803683370190505b5090504760005b8481101561105057600d54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6691906125c0565b600d5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda91906125a7565b905081868481518110610fef57610fef61253a565b6001600160a01b0390921660209283029190910190910152612710611015826064612566565b61101f9086612566565b6110299190612585565b85848151811061103b5761103b61253a565b60209081029190910101525050600101610ef0565b60005b8581101561109f576110978582815181106110705761107061253a565b602002602001015185838151811061108a5761108a61253a565b6020026020010151611b8f565b600101611053565b505050505050565b6110b2838383610b33565b6001600160a01b0382163b158061115b5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f91906125dd565b6001600160e01b031916145b61119a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107ad565b505050565b6008546001600160a01b031633146111e85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b600c6111f48282612640565b50806040516112039190612700565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806112885760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107ad565b919050565b6008546001600160a01b031633146112d65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b600a80546001600160a01b0319166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b60006001600160a01b0382166113785760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107ad565b506001600160a01b031660009081526003602052604090205490565b6060600c80546113a39061242b565b80601f01602080910402602001604051908101604052809291908181526020018280546113cf9061242b565b801561141c5780601f106113f15761010080835404028352916020019161141c565b820191906000526020600020905b8154815290600101906020018083116113ff57829003601f168201915b5050505050905090565b600180546106aa9061242b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146114e85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b6114f863044df8e760e41b611bea565b80516000905b8082101561153d57611510600b611c9f565b6115328383815181106115255761152561253a565b6020026020010151611cbc565b8160010191506114fe565b8082101561119a577f4c4f4f505f4f564552464c4f570000000000000000000000000000000000000060005260206000fd5b61157a858585610b33565b6001600160a01b0384163b15806116115750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906115c29033908a9089908990899060040161271c565b6020604051808303816000875af11580156115e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160591906125dd565b6001600160e01b031916145b6116505760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107ad565b5050505050565b6060600f5482111561167c57604051635d68437560e11b815260040160405180910390fd5b600c61168783611d89565b6040516020016116989291906127e3565b6040516020818303038152906040529050919050565b6008546001600160a01b031633146116f75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107ad565b600d546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611741573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176591906125a7565b905060008167ffffffffffffffff8111156117825761178261223d565b6040519080825280602002602001820160405280156117ab578160200160208202803683370190505b50905060008267ffffffffffffffff8111156117c9576117c961223d565b6040519080825280602002602001820160405280156117f2578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186391906125a7565b90505b848210156119ca57600d54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156118b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118dc91906125c0565b600d5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195091906125a7565b9050818685815181106119655761196561253a565b6001600160a01b039092166020928302919091019091015261271061198b826064612566565b6119959085612566565b61199f9190612585565b8585815181106119b1576119b161253a565b6020026020010181815250508360010193505050611866565b60005b85811015611a1a57611a12878683815181106119eb576119eb61253a565b6020026020010151868481518110611a0557611a0561253a565b6020026020010151611dd8565b6001016119cd565b50505050505050565b600a546001600160a01b03838116911614611a5157604051632057875960e21b815260040160405180910390fd5b80356000908152600e602052604090205460ff1615611a835760405163e647f41360e01b815260040160405180910390fd5b611a906020820182612465565b9050611aa460608301356080840135612566565b611aae9190612566565b3414611acd5760405163f7760f2560e01b815260040160405180910390fd5b5050565b60005b8281101561119a57611aed82611ae8611e5e565b611e89565b600101611ad4565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611b279190612830565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600080600085875af190508061119a5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016107ad565b6008546001600160a01b0316803b63ffffffff8116600003611c0b57505050565b600854604051633b7279e960e21b81526001600160e01b0319851660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8291906125a7565b9050803414611c995763f7760f256000526004601cfd5b50505050565b805480611cb45763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611d0e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107ad565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611dc657600183039250600a81066030018353600a9004611da8565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611c995760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016107ad565b6000611e68611faf565b506001600f6000828254611e7c919061283c565b9091555050600f54919050565b6001600160a01b038216611edf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107ad565b6000818152600260205260409020546001600160a01b031615611f445760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107ad565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611fbf600b80546001019055565b50600b5490565b6001600160e01b031981168114611fdc57600080fd5b50565b600060208284031215611ff157600080fd5b8135611ffc81611fc6565b9392505050565b60005b8381101561201e578181015183820152602001612006565b50506000910152565b6020815260008251806020840152612046816040850160208701612003565b601f01601f19169190910160400192915050565b60006020828403121561206c57600080fd5b5035919050565b6001600160a01b0381168114611fdc57600080fd5b6000806040838503121561209b57600080fd5b82356120a681612073565b946020939093013593505050565b600080600080608085870312156120ca57600080fd5b843567ffffffffffffffff8111156120e157600080fd5b850160a081880312156120f357600080fd5b9350602085013560ff8116811461210957600080fd5b93969395505050506040820135916060013590565b60006020828403121561213057600080fd5b8135611ffc81612073565b60008060008060006080868803121561215357600080fd5b853561215e81612073565b9450602086013561216e81612073565b935060408601359250606086013567ffffffffffffffff8082111561219257600080fd5b818801915088601f8301126121a657600080fd5b8135818111156121b557600080fd5b8960208285010111156121c757600080fd5b9699959850939650602001949392505050565b6000806000606084860312156121ef57600080fd5b83356121fa81612073565b9250602084013561220a81612073565b929592945050506040919091013590565b6000806040838503121561222e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561227c5761227c61223d565b604052919050565b6000602080838503121561229757600080fd5b823567ffffffffffffffff808211156122af57600080fd5b818501915085601f8301126122c357600080fd5b8135818111156122d5576122d561223d565b6122e7601f8201601f19168501612253565b915080825286848285010111156122fd57600080fd5b8084840185840137600090820190930192909252509392505050565b6000806040838503121561232c57600080fd5b823561233781612073565b91506020830135801515811461234c57600080fd5b809150509250929050565b6000602080838503121561236a57600080fd5b823567ffffffffffffffff8082111561238257600080fd5b818501915085601f83011261239657600080fd5b8135818111156123a8576123a861223d565b8060051b91506123b9848301612253565b81815291830184019184810190888411156123d357600080fd5b938501935b838510156123f1578435825293850193908501906123d8565b98975050505050505050565b6000806040838503121561241057600080fd5b823561241b81612073565b9150602083013561234c81612073565b600181811c9082168061243f57607f821691505b60208210810361245f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e1984360301811261247c57600080fd5b83018035915067ffffffffffffffff82111561249757600080fd5b6020019150600581901b36038213156124af57600080fd5b9250929050565b60008184825b858110156124ed5781356124cf81612073565b6001600160a01b0316835260209283019291909101906001016124bc565b509095945050505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561252757600080fd5b8260051b80858437919091019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561258057612580612550565b500290565b6000826125a257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156125b957600080fd5b5051919050565b6000602082840312156125d257600080fd5b8151611ffc81612073565b6000602082840312156125ef57600080fd5b8151611ffc81611fc6565b601f82111561119a57600081815260208120601f850160051c810160208610156126215750805b601f850160051c820191505b8181101561109f5782815560010161262d565b815167ffffffffffffffff81111561265a5761265a61223d565b61266e81612668845461242b565b846125fa565b602080601f8311600181146126a3576000841561268b5750858301515b600019600386901b1c1916600185901b17855561109f565b600085815260208120601f198616915b828110156126d2578886015182559484019460019091019084016126b3565b50858210156126f05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612712818460208701612003565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000815461277d8161242b565b6001828116801561279557600181146127aa576127d9565b60ff19841687528215158302870194506127d9565b8560005260208060002060005b858110156127d05781548a8201529084019082016127b7565b50505082870194505b5050505092915050565b60006127ef8285612770565b83516127ff818360208801612003565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000611ffc8284612770565b808201808211156106975761069761255056fea164736f6c6343000810000a";

type ERC721LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Lazy__factory extends ContractFactory {
  constructor(...args: ERC721LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Lazy> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    ) as Promise<ERC721Lazy>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Lazy {
    return super.attach(address) as ERC721Lazy;
  }
  override connect(signer: Signer): ERC721Lazy__factory {
    return super.connect(signer) as ERC721Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721LazyInterface {
    return new utils.Interface(_abi) as ERC721LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC721Lazy;
  }
}
