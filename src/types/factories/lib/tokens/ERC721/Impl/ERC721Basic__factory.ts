/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002e2738038062002e27833981016040819052620000399162000274565b81898960006200004a8382620003f3565b506001620000598282620003f3565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600e620000b68882620003f3565b5060108690556011859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b0386166006819055600780548416909417909355600b8054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004bf565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a257600080fd5b81516001600160401b0380821115620001bf57620001bf6200017a565b604051601f8301601f19908116603f01168101908282118183101715620001ea57620001ea6200017a565b816040528381526020925086838588010111156200020757600080fd5b600091505b838210156200022b57858201830151818301840152908201906200020c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025757600080fd5b919050565b80516001600160601b03811681146200025757600080fd5b60008060008060008060008060006101208a8c0312156200029457600080fd5b89516001600160401b0380821115620002ac57600080fd5b620002ba8d838e0162000190565b9a5060208c0151915080821115620002d157600080fd5b620002df8d838e0162000190565b995060408c0151915080821115620002f657600080fd5b50620003058c828d0162000190565b97505060608a0151955060808a015194506200032460a08b016200023f565b93506200033460c08b016200025c565b92506200034460e08b016200023f565b9150620003556101008b016200023f565b90509295985092959850929598565b600181811c908216806200037957607f821691505b6020821081036200039a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ee57600081815260208120601f850160051c81016020861015620003c95750805b601f850160051c820191505b81811015620003ea57828155600101620003d5565b5050505b505050565b81516001600160401b038111156200040f576200040f6200017a565b620004278162000420845462000364565b84620003a0565b602080601f8311600181146200045f5760008415620004465750858301515b600019600386901b1c1916600185901b178555620003ea565b600085815260208120601f198616915b8281101562000490578886015182559484019460019091019084016200046f565b5085821015620004af5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61295880620004cf6000396000f3fe6080604052600436106102195760003560e01c80636352211e1161011d57806395d89b41116100b0578063b88d4fde1161007f578063d5abeb0111610064578063d5abeb0114610618578063e985e9c51461062e578063f4f3b2001461066957600080fd5b8063b88d4fde146105d8578063c87b56dd146105f857600080fd5b806395d89b411461057a578063a035b1fe1461058f578063a0712d68146105a5578063a22cb465146105b857600080fd5b8063785e9e86116100ec578063785e9e8614610505578063879fbedf146105255780638da5cb5b146105455780638fc3b5491461056557600080fd5b80636352211e1461049b57806366c879a9146104bb57806370a08231146104d0578063714c5398146104f057600080fd5b806323b872dd116101b05780633cd8045e1161017f578063438b1b4b11610164578063438b1b4b1461044e5780634edd2d491461046157806355f804b31461047b57600080fd5b80633cd8045e1461040e57806342842e0e1461042e57600080fd5b806323b872dd146103875780632a55205a146103a7578063362c0cb5146103e65780633ccfd60b146103f957600080fd5b806313af4035116101ec57806313af4035146102e5578063150b7a021461030557806318160ddd1461034a57806322ab47a11461036d57600080fd5b806301ffc9a71461021e57806306fdde0314610253578063081812fc14610275578063095ea7b3146102c3575b600080fd5b34801561022a57600080fd5b5061023e610239366004612197565b610689565b60405190151581526020015b60405180910390f35b34801561025f57600080fd5b506102686106f6565b60405161024a91906121df565b34801561028157600080fd5b506102ab610290366004612212565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161024a565b3480156102cf57600080fd5b506102e36102de36600461224b565b610784565b005b3480156102f157600080fd5b506102e3610300366004612277565b61086b565b34801561031157600080fd5b50610331610320366004612294565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161024a565b34801561035657600080fd5b5061035f610900565b60405190815260200161024a565b34801561037957600080fd5b5060125461023e9060ff1681565b34801561039357600080fd5b506102e36103a2366004612333565b610910565b3480156103b357600080fd5b506103c76103c2366004612374565b610af6565b604080516001600160a01b03909316835260208301919091520161024a565b6102e36103f43660046123dd565b610b2c565b34801561040557600080fd5b506102e3610be1565b34801561041a57600080fd5b50600a546102ab906001600160a01b031681565b34801561043a57600080fd5b506102e3610449366004612333565b610ee3565b6102e361045c366004612495565b610fdb565b34801561046d57600080fd5b50600f5461023e9060ff1681565b34801561048757600080fd5b506102e36104963660046124d7565b6110a1565b3480156104a757600080fd5b506102ab6104b6366004612212565b611160565b3480156104c757600080fd5b506102e36111b7565b3480156104dc57600080fd5b5061035f6104eb366004612277565b61124e565b3480156104fc57600080fd5b506102686112c2565b34801561051157600080fd5b50600b546102ab906001600160a01b031681565b34801561053157600080fd5b506102e361054036600461257c565b611354565b34801561055157600080fd5b506008546102ab906001600160a01b031681565b34801561057157600080fd5b50600d5461035f565b34801561058657600080fd5b506102686113da565b34801561059b57600080fd5b5061035f60105481565b6102e36105b3366004612212565b6113e7565b3480156105c457600080fd5b506102e36105d3366004612597565b61159a565b3480156105e457600080fd5b506102e36105f3366004612294565b611606565b34801561060457600080fd5b50610268610613366004612212565b6116e7565b34801561062457600080fd5b5061035f60115481565b34801561063a57600080fd5b5061023e6106493660046125c3565b600560209081526000928352604080842090915290825290205460ff1681565b34801561067557600080fd5b506102e3610684366004612277565b61173e565b60006301ffc9a760e01b6001600160e01b0319831614806106ba57506380ac58cd60e01b6001600160e01b03198316145b806106d55750635b5e139f60e01b6001600160e01b03198316145b806106f0575063152a902d60e11b6001600160e01b03198316145b92915050565b60008054610703906125fc565b80601f016020809104026020016040519081016040528092919081815260200182805461072f906125fc565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806107cd57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61080f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108b45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061090b600c5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146109795760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610806565b6001600160a01b0382166109cf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610806565b336001600160a01b0384161480610a0957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610a2a57506000818152600460205260409020546001600160a01b031633145b610a675760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610806565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610b19908561264c565b610b23919061266b565b90509250929050565b6008546001600160a01b03163314610b755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b610b80816001611ab3565b81516000905b80821015610bc557610b98600c611bcd565b610bba848381518110610bad57610bad61268d565b6020026020010151611bea565b816001019150610b86565b80821015610bdb5763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b03163314610c2a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9891906126a3565b905060008167ffffffffffffffff811115610cb557610cb5612396565b604051908082528060200260200182016040528015610cde578160200160208202803683370190505b50905060008267ffffffffffffffff811115610cfc57610cfc612396565b604051908082528060200260200182016040528015610d25578160200160208202803683370190505b5090504760005b84811015610e8c57600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da291906126bc565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1691906126a3565b905081868481518110610e2b57610e2b61268d565b6001600160a01b0390921660209283029190910190910152612710610e5182606461264c565b610e5b908661264c565b610e65919061266b565b858481518110610e7757610e7761268d565b60209081029190910101525050600101610d2c565b60005b85811015610edb57610ed3858281518110610eac57610eac61268d565b6020026020010151858381518110610ec657610ec661268d565b6020026020010151611cb7565b600101610e8f565b505050505050565b610eee838383610910565b6001600160a01b0382163b1580610f975750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b91906126d9565b6001600160e01b031916145b610fd65760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610806565b505050565b6008546001600160a01b031633146110245760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b8160115481600d5461103691906126f6565b11156110555760405163d05cb60960e01b815260040160405180910390fd5b611060826000611ab3565b60005b838110156110845761107c85611077611d12565b611d3d565b600101611063565b8381101561109a5763dfb035c96000526004601cfd5b5050505050565b6008546001600160a01b031633146110ea5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b600f5460ff16151560010361111257604051639619d74760e01b815260040160405180910390fd5b600e61111e828261274f565b508060405161112d919061280f565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806111b25760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610806565b919050565b6008546001600160a01b031633146112005760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b600f805460ff1916600117905560405161121c90600e9061289e565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b60006001600160a01b0382166112a65760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610806565b506001600160a01b031660009081526003602052604090205490565b6060600e80546112d1906125fc565b80601f01602080910402602001604051908101604052809291908181526020018280546112fd906125fc565b801561134a5780601f1061131f5761010080835404028352916020019161134a565b820191906000526020600020905b81548152906001019060200180831161132d57829003601f168201915b5050505050905090565b6008546001600160a01b0316331461139d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b6012805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b60018054610703906125fc565b6009546001146114395760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610806565b600260095560125460ff16611461576040516316851fc760e11b815260040160405180910390fd5b8060115481600d5461147391906126f6565b11156114925760405163d05cb60960e01b815260040160405180910390fd5b601054600b5483906000906001600160a01b03166114b05734611522565b600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156114fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152291906126a3565b90508061152f838561264c565b1461154d5760405163f7760f2560e01b815260040160405180910390fd5b611558336002611ab3565b60005b858110156115775761156f33611077611d12565b60010161155b565b8581101561158d5763dfb035c96000526004601cfd5b5050600160095550505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611611858585610910565b6001600160a01b0384163b15806116a85750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906116599033908a908990899089906004016128aa565b6020604051808303816000875af1158015611678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169c91906126d9565b6001600160e01b031916145b61109a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610806565b6060600d5482111561170c57604051635d68437560e11b815260040160405180910390fd5b600e61171783611e30565b6040516020016117289291906128fe565b6040516020818303038152906040529050919050565b6008546001600160a01b031633146117875760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610806565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156117d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f591906126a3565b905060008167ffffffffffffffff81111561181257611812612396565b60405190808252806020026020018201604052801561183b578160200160208202803683370190505b50905060008267ffffffffffffffff81111561185957611859612396565b604051908082528060200260200182016040528015611882578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156118cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f391906126a3565b90505b84821015611a5a57600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196c91906126bc565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e091906126a3565b9050818685815181106119f5576119f561268d565b6001600160a01b0390921660209283029190910190910152612710611a1b82606461264c565b611a25908561264c565b611a2f919061266b565b858581518110611a4157611a4161268d565b60200260200101818152505083600101935050506118f6565b60005b85811015611aaa57611aa287868381518110611a7b57611a7b61268d565b6020026020010151868481518110611a9557611a9561268d565b6020026020010151611e7f565b600101611a5d565b50505050505050565b600b546000906001600160a01b0316611acc5734611b40565b600b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4091906126a3565b9050336001600160a01b0384161480611b625750600b546001600160a01b0316155b15610fd6578160ff16600003611b8857611b836340d097c360e01b82611f05565b611ba4565b8160ff16600103611ba457611ba463044df8e760e41b82611f05565b600b546001600160a01b031615610fd657600b54610fd6906001600160a01b0316843084611fb5565b805480611be25763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611c3c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610806565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af1905080610fd65760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610806565b6000611d1c612041565b506001600d6000828254611d3091906126f6565b9091555050600d54919050565b611d478282612058565b6001600160a01b0382163b1580611ded5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de191906126d9565b6001600160e01b031916145b611e2c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610806565b5050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611e6d57600183039250600a81066030018353600a9004611e4f565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610bdb5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610806565b6008546001600160a01b0316803b63ffffffff8116600003611f275750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e91906126a3565b905080841461109a5763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061109a5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610806565b6000612051600c80546001019055565b50600c5490565b6001600160a01b0382166120ae5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610806565b6000818152600260205260409020546001600160a01b0316156121135760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610806565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461219457600080fd5b50565b6000602082840312156121a957600080fd5b81356121b48161217e565b9392505050565b60005b838110156121d65781810151838201526020016121be565b50506000910152565b60208152600082518060208401526121fe8160408501602087016121bb565b601f01601f19169190910160400192915050565b60006020828403121561222457600080fd5b5035919050565b6001600160a01b038116811461219457600080fd5b80356111b28161222b565b6000806040838503121561225e57600080fd5b82356122698161222b565b946020939093013593505050565b60006020828403121561228957600080fd5b81356121b48161222b565b6000806000806000608086880312156122ac57600080fd5b85356122b78161222b565b945060208601356122c78161222b565b935060408601359250606086013567ffffffffffffffff808211156122eb57600080fd5b818801915088601f8301126122ff57600080fd5b81358181111561230e57600080fd5b89602082850101111561232057600080fd5b9699959850939650602001949392505050565b60008060006060848603121561234857600080fd5b83356123538161222b565b925060208401356123638161222b565b929592945050506040919091013590565b6000806040838503121561238757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156123d5576123d5612396565b604052919050565b600080604083850312156123f057600080fd5b823567ffffffffffffffff8082111561240857600080fd5b818501915085601f83011261241c57600080fd5b813560208282111561243057612430612396565b8160051b92506124418184016123ac565b828152928401810192818101908985111561245b57600080fd5b948201945b8486101561247957853582529482019490820190612460565b96506124889050878201612240565b9450505050509250929050565b6000806000606084860312156124aa57600080fd5b83356124b58161222b565b92506020840135915060408401356124cc8161222b565b809150509250925092565b600060208083850312156124ea57600080fd5b823567ffffffffffffffff8082111561250257600080fd5b818501915085601f83011261251657600080fd5b81358181111561252857612528612396565b61253a601f8201601f191685016123ac565b9150808252868482850101111561255057600080fd5b8084840185840137600090820190930192909252509392505050565b803580151581146111b257600080fd5b60006020828403121561258e57600080fd5b6121b48261256c565b600080604083850312156125aa57600080fd5b82356125b58161222b565b9150610b236020840161256c565b600080604083850312156125d657600080fd5b82356125e18161222b565b915060208301356125f18161222b565b809150509250929050565b600181811c9082168061261057607f821691505b60208210810361263057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561266657612666612636565b500290565b60008261268857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156126b557600080fd5b5051919050565b6000602082840312156126ce57600080fd5b81516121b48161222b565b6000602082840312156126eb57600080fd5b81516121b48161217e565b808201808211156106f0576106f0612636565b601f821115610fd657600081815260208120601f850160051c810160208610156127305750805b601f850160051c820191505b81811015610edb5782815560010161273c565b815167ffffffffffffffff81111561276957612769612396565b61277d8161277784546125fc565b84612709565b602080601f8311600181146127b2576000841561279a5750858301515b600019600386901b1c1916600185901b178555610edb565b600085815260208120601f198616915b828110156127e1578886015182559484019460019091019084016127c2565b50858210156127ff5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516128218184602087016121bb565b9190910192915050565b60008154612838816125fc565b60018281168015612850576001811461286557612894565b60ff1984168752821515830287019450612894565b8560005260208060002060005b8581101561288b5781548a820152908401908201612872565b50505082870194505b5050505092915050565b60006121b4828461282b565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600061290a828561282b565b835161291a8183602088016121bb565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
