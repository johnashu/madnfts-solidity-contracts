/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620032ab380380620032ab83398101604081905262000039916200028b565b81898960006200004a83826200040a565b5060016200005982826200040a565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b688826200040a565b50600c869055600d859055600e8054610100600160a81b0319166101006001600160a01b03878116820292909217928390556001600160601b0386166006819055600780549290940483166001600160a01b031992831617909355601080549091169184169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004d6565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b957600080fd5b81516001600160401b0380821115620001d657620001d662000191565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000191565b816040528381526020925086838588010111156200021e57600080fd5b600091505b8382101562000242578582018301518183018401529082019062000223565b600093810190920192909252949350505050565b80516001600160a01b03811681146200026e57600080fd5b919050565b80516001600160601b03811681146200026e57600080fd5b60008060008060008060008060006101208a8c031215620002ab57600080fd5b89516001600160401b0380821115620002c357600080fd5b620002d18d838e01620001a7565b9a5060208c0151915080821115620002e857600080fd5b620002f68d838e01620001a7565b995060408c01519150808211156200030d57600080fd5b506200031c8c828d01620001a7565b97505060608a0151955060808a015194506200033b60a08b0162000256565b93506200034b60c08b0162000273565b92506200035b60e08b0162000256565b91506200036c6101008b0162000256565b90509295985092959850929598565b600181811c908216806200039057607f821691505b602082108103620003b157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040557600081815260208120601f850160051c81016020861015620003e05750805b601f850160051c820191505b818110156200040157828155600101620003ec565b5050505b505050565b81516001600160401b0381111562000426576200042662000191565b6200043e816200043784546200037b565b84620003b7565b602080601f8311600181146200047657600084156200045d5750858301515b600019600386901b1c1916600185901b17855562000401565b600085815260208120601f198616915b82811015620004a75788860151825594840194600190910190840162000486565b5085821015620004c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612dc580620004e66000396000f3fe6080604052600436106102345760003560e01c80636352211e11610138578063a035b1fe116100b0578063b88d4fde1161007f578063d5abeb0111610064578063d5abeb0114610642578063e985e9c514610658578063f4f3b2001461069357600080fd5b8063b88d4fde14610602578063c87b56dd1461062257600080fd5b8063a035b1fe146105a6578063a0712d68146105bc578063a22cb465146105cf578063b80f55c9146105ef57600080fd5b8063879fbedf116101075780638fc3b549116100ec5780638fc3b5491461056957806394bf804d1461057e57806395d89b411461059157600080fd5b8063879fbedf146105295780638da5cb5b1461054957600080fd5b80636352211e146104b457806370a08231146104d4578063714c5398146104f4578063785e9e861461050957600080fd5b806323b872dd116101cb5780633cd8045e1161019a578063438b1b4b1161017f578063438b1b4b1461046e578063449a52f81461048157806355f804b31461049457600080fd5b80633cd8045e1461042957806342842e0e1461044e57600080fd5b806323b872dd146103a25780632a55205a146103c2578063362c0cb5146104015780633ccfd60b1461041457600080fd5b806313af40351161020757806313af403514610300578063150b7a021461032057806318160ddd1461036557806322ab47a11461038857600080fd5b806301ffc9a71461023957806306fdde031461026e578063081812fc14610290578063095ea7b3146102de575b600080fd5b34801561024557600080fd5b506102596102543660046125bb565b6106b3565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b50610283610720565b6040516102659190612603565b34801561029c57600080fd5b506102c66102ab366004612636565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610265565b3480156102ea57600080fd5b506102fe6102f9366004612664565b6107ae565b005b34801561030c57600080fd5b506102fe61031b366004612690565b610895565b34801561032c57600080fd5b5061034c61033b3660046126ad565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610265565b34801561037157600080fd5b5061037a61092a565b604051908152602001610265565b34801561039457600080fd5b50600e546102599060ff1681565b3480156103ae57600080fd5b506102fe6103bd36600461274c565b61093a565b3480156103ce57600080fd5b506103e26103dd36600461278d565b610b20565b604080516001600160a01b039093168352602083019190915201610265565b6102fe61040f366004612876565b610b56565b34801561042057600080fd5b506102fe610ce8565b34801561043557600080fd5b50600e546102c69061010090046001600160a01b031681565b34801561045a57600080fd5b506102fe61046936600461274c565b611000565b6102fe61047c3660046128c8565b6110f8565b6102fe61048f366004612664565b611293565b3480156104a057600080fd5b506102fe6104af36600461290a565b6113a0565b3480156104c057600080fd5b506102c66104cf366004612636565b611437565b3480156104e057600080fd5b5061037a6104ef366004612690565b61148e565b34801561050057600080fd5b50610283611502565b34801561051557600080fd5b506010546102c6906001600160a01b031681565b34801561053557600080fd5b506102fe6105443660046129af565b611594565b34801561055557600080fd5b506008546102c6906001600160a01b031681565b34801561057557600080fd5b50600f5461037a565b6102fe61058c3660046129ca565b61161a565b34801561059d57600080fd5b50610283611877565b3480156105b257600080fd5b5061037a600c5481565b6102fe6105ca366004612636565b611884565b3480156105db57600080fd5b506102fe6105ea3660046129ef565b6119d2565b6102fe6105fd366004612a1b565b611a3e565b34801561060e57600080fd5b506102fe61061d3660046126ad565b611b2e565b34801561062e57600080fd5b5061028361063d366004612636565b611c0f565b34801561064e57600080fd5b5061037a600d5481565b34801561066457600080fd5b50610259610673366004612a58565b600560209081526000928352604080842090915290825290205460ff1681565b34801561069f57600080fd5b506102fe6106ae366004612690565b611c66565b60006301ffc9a760e01b6001600160e01b0319831614806106e457506380ac58cd60e01b6001600160e01b03198316145b806106ff5750635b5e139f60e01b6001600160e01b03198316145b8061071a575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461072d90612a86565b80601f016020809104026020016040519081016040528092919081815260200182805461075990612a86565b80156107a65780601f1061077b576101008083540402835291602001916107a6565b820191906000526020600020905b81548152906001019060200180831161078957829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806107f757506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6108395760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108de5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610935600a5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146109a35760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610830565b6001600160a01b0382166109f95760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610830565b336001600160a01b0384161480610a3357506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610a5457506000818152600460205260409020546001600160a01b031633145b610a915760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610830565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610b439085612ad6565b610b4d9190612af5565b90509250929050565b6008546001600160a01b03163314610b9f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b6010546001600160a01b0316610be65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b601054604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e90604401602060405180830381865afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b9190612b17565b9050610c6e63044df8e760e41b82611ff1565b601054610c86906001600160a01b03163330846120a1565b82516000905b80821015610ccb57610c9e600a61212d565b610cc0858381518110610cb357610cb3612b30565b602002602001015161214a565b816001019150610c8c565b80821015610ce15763dfb035c96000526004601cfd5b5050505050565b6008546001600160a01b03163314610d315760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daa9190612b17565b905060008167ffffffffffffffff811115610dc757610dc76127af565b604051908082528060200260200182016040528015610df0578160200160208202803683370190505b50905060008267ffffffffffffffff811115610e0e57610e0e6127af565b604051908082528060200260200182016040528015610e37578160200160208202803683370190505b5090504760005b84811015610fa957600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015610e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb99190612b46565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190612b17565b905081868481518110610f4857610f48612b30565b6001600160a01b0390921660209283029190910190910152612710610f6e826064612ad6565b610f789086612ad6565b610f829190612af5565b858481518110610f9457610f94612b30565b60209081029190910101525050600101610e3e565b60005b85811015610ff857610ff0858281518110610fc957610fc9612b30565b6020026020010151858381518110610fe357610fe3612b30565b6020026020010151612217565b600101610fac565b505050505050565b61100b83838361093a565b6001600160a01b0382163b15806110b45750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015611084573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a89190612b63565b6001600160e01b031916145b6110f35760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610830565b505050565b6008546001600160a01b031633146111415760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b81600d5481600f546111539190612b80565b11156111725760405163d05cb60960e01b815260040160405180910390fd5b6010546001600160a01b03166111b95760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b601054604051636eb1769f60e11b81526001600160a01b038481166004830152306024830152600092169063dd62ed3e90604401602060405180830381865afa15801561120a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122e9190612b17565b90506112416340d097c360e01b82611ff1565b601054611259906001600160a01b03163330846120a1565b60005b8481101561127d5761127586611270612272565b61229d565b60010161125c565b84811015610ff85763dfb035c96000526004601cfd5b6008546001600160a01b031633146112dc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b80600d5481600f546112ee9190612b80565b111561130d5760405163d05cb60960e01b815260040160405180910390fd5b6010546001600160a01b03166113545760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b6113656340d097c360e01b34611ff1565b60005b828110156113845761137c84611270612272565b600101611368565b8281101561139a5763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b031633146113e95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b600b6113f58282612bd9565b50806040516114049190612c99565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806114895760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610830565b919050565b60006001600160a01b0382166114e65760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610830565b506001600160a01b031660009081526003602052604090205490565b6060600b805461151190612a86565b80601f016020809104026020016040519081016040528092919081815260200182805461153d90612a86565b801561158a5780601f1061155f5761010080835404028352916020019161158a565b820191906000526020600020905b81548152906001019060200180831161156d57829003601f168201915b5050505050905090565b6008546001600160a01b031633146115dd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6009546001146116595760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610830565b6002600955600e5460ff16611681576040516316851fc760e11b815260040160405180910390fd5b81600d5481600f546116939190612b80565b11156116b25760405163d05cb60960e01b815260040160405180910390fd5b600c54601054604051636eb1769f60e11b81526001600160a01b038086166004830152306024830152869286926000929091169063dd62ed3e90604401602060405180830381865afa15801561170c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117309190612b17565b90508061173d8486612ad6565b1461175b5760405163f7760f2560e01b815260040160405180910390fd5b6010546001600160a01b03166117a25760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b601054604051636eb1769f60e11b81526001600160a01b038881166004830152306024830152600092169063dd62ed3e90604401602060405180830381865afa1580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118179190612b17565b601054909150611832906001600160a01b03168830846120a1565b60005b888110156118515761184933611270612272565b600101611835565b888110156118675763dfb035c96000526004601cfd5b5050600160095550505050505050565b6001805461072d90612a86565b6009546001146118c35760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610830565b6002600955600e5460ff166118eb576040516316851fc760e11b815260040160405180910390fd5b80600d5481600f546118fd9190612b80565b111561191c5760405163d05cb60960e01b815260040160405180910390fd5b600c54823461192b8284612ad6565b146119495760405163f7760f2560e01b815260040160405180910390fd5b6010546001600160a01b0316156119915760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b60005b848110156119b0576119a833611270612272565b600101611994565b848110156119c65763dfb035c96000526004601cfd5b50506001600955505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314611a875760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b6010546001600160a01b031615611acf5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610830565b611ae063044df8e760e41b34611ff1565b80516000905b80821015611b1857611af8600a61212d565b611b0d838381518110610cb357610cb3612b30565b816001019150611ae6565b808210156110f35763dfb035c96000526004601cfd5b611b3985858561093a565b6001600160a01b0384163b1580611bd05750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611b819033908a90899089908990600401612cb5565b6020604051808303816000875af1158015611ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc49190612b63565b6001600160e01b031916145b610ce15760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610830565b6060600f54821115611c3457604051635d68437560e11b815260040160405180910390fd5b600b611c3f83612390565b604051602001611c50929190612d09565b6040516020818303038152906040529050919050565b6008546001600160a01b03163314611caf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610830565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d289190612b17565b905060008167ffffffffffffffff811115611d4557611d456127af565b604051908082528060200260200182016040528015611d6e578160200160208202803683370190505b50905060008267ffffffffffffffff811115611d8c57611d8c6127af565b604051908082528060200260200182016040528015611db5578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e269190612b17565b90505b84821015611f9857600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea49190612b46565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1e9190612b17565b905081868581518110611f3357611f33612b30565b6001600160a01b0390921660209283029190910190910152612710611f59826064612ad6565b611f639085612ad6565b611f6d9190612af5565b858581518110611f7f57611f7f612b30565b6020026020010181815250508360010193505050611e29565b60005b85811015611fe857611fe087868381518110611fb957611fb9612b30565b6020026020010151868481518110611fd357611fd3612b30565b60200260200101516123df565b600101611f9b565b50505050505050565b6008546001600160a01b0316803b63ffffffff81166000036120135750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015612066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208a9190612b17565b9050808414610ce15763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610ce15760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610830565b8054806121425763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b03168061219c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610830565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af19050806110f35760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610830565b600061227c612465565b506001600f60008282546122909190612b80565b9091555050600f54919050565b6122a7828261247c565b6001600160a01b0382163b158061234d5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af115801561231d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123419190612b63565b6001600160e01b031916145b61238c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610830565b5050565b604080516080810191829052607f0190826030600a8206018353600a90045b80156123cd57600183039250600a81066030018353600a90046123af565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061139a5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610830565b6000612475600a80546001019055565b50600a5490565b6001600160a01b0382166124d25760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610830565b6000818152600260205260409020546001600160a01b0316156125375760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610830565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146125b857600080fd5b50565b6000602082840312156125cd57600080fd5b81356125d8816125a2565b9392505050565b60005b838110156125fa5781810151838201526020016125e2565b50506000910152565b60208152600082518060208401526126228160408501602087016125df565b601f01601f19169190910160400192915050565b60006020828403121561264857600080fd5b5035919050565b6001600160a01b03811681146125b857600080fd5b6000806040838503121561267757600080fd5b82356126828161264f565b946020939093013593505050565b6000602082840312156126a257600080fd5b81356125d88161264f565b6000806000806000608086880312156126c557600080fd5b85356126d08161264f565b945060208601356126e08161264f565b935060408601359250606086013567ffffffffffffffff8082111561270457600080fd5b818801915088601f83011261271857600080fd5b81358181111561272757600080fd5b89602082850101111561273957600080fd5b9699959850939650602001949392505050565b60008060006060848603121561276157600080fd5b833561276c8161264f565b9250602084013561277c8161264f565b929592945050506040919091013590565b600080604083850312156127a057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156127ee576127ee6127af565b604052919050565b600082601f83011261280757600080fd5b8135602067ffffffffffffffff821115612823576128236127af565b8160051b6128328282016127c5565b928352848101820192828101908785111561284c57600080fd5b83870192505b8483101561286b57823582529183019190830190612852565b979650505050505050565b6000806040838503121561288957600080fd5b823567ffffffffffffffff8111156128a057600080fd5b6128ac858286016127f6565b92505060208301356128bd8161264f565b809150509250929050565b6000806000606084860312156128dd57600080fd5b83356128e88161264f565b92506020840135915060408401356128ff8161264f565b809150509250925092565b6000602080838503121561291d57600080fd5b823567ffffffffffffffff8082111561293557600080fd5b818501915085601f83011261294957600080fd5b81358181111561295b5761295b6127af565b61296d601f8201601f191685016127c5565b9150808252868482850101111561298357600080fd5b8084840185840137600090820190930192909252509392505050565b8035801515811461148957600080fd5b6000602082840312156129c157600080fd5b6125d88261299f565b600080604083850312156129dd57600080fd5b8235915060208301356128bd8161264f565b60008060408385031215612a0257600080fd5b8235612a0d8161264f565b9150610b4d6020840161299f565b600060208284031215612a2d57600080fd5b813567ffffffffffffffff811115612a4457600080fd5b612a50848285016127f6565b949350505050565b60008060408385031215612a6b57600080fd5b8235612a768161264f565b915060208301356128bd8161264f565b600181811c90821680612a9a57607f821691505b602082108103612aba57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612af057612af0612ac0565b500290565b600082612b1257634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612b2957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612b5857600080fd5b81516125d88161264f565b600060208284031215612b7557600080fd5b81516125d8816125a2565b8082018082111561071a5761071a612ac0565b601f8211156110f357600081815260208120601f850160051c81016020861015612bba5750805b601f850160051c820191505b81811015610ff857828155600101612bc6565b815167ffffffffffffffff811115612bf357612bf36127af565b612c0781612c018454612a86565b84612b93565b602080601f831160018114612c3c5760008415612c245750858301515b600019600386901b1c1916600185901b178555610ff8565b600085815260208120601f198616915b82811015612c6b57888601518255948401946001909101908401612c4c565b5085821015612c895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612cab8184602087016125df565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000808454612d1781612a86565b60018281168015612d2f5760018114612d4457612d73565b60ff1984168752821515830287019450612d73565b8860005260208060002060005b85811015612d6a5781548a820152908401908201612d51565b50505082870194505b505050508351612d878183602088016125df565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
