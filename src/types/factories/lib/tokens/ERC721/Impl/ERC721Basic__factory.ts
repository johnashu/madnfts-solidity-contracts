/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002d3438038062002d3483398101604081905262000039916200028b565b81898960006200004a83826200040a565b5060016200005982826200040a565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b688826200040a565b50600c869055600d859055600e8054610100600160a81b0319166101006001600160a01b03878116820292909217928390556001600160601b0386166006819055600780549290940483166001600160a01b031992831617909355601080549091169184169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004d6565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b957600080fd5b81516001600160401b0380821115620001d657620001d662000191565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000191565b816040528381526020925086838588010111156200021e57600080fd5b600091505b8382101562000242578582018301518183018401529082019062000223565b600093810190920192909252949350505050565b80516001600160a01b03811681146200026e57600080fd5b919050565b80516001600160601b03811681146200026e57600080fd5b60008060008060008060008060006101208a8c031215620002ab57600080fd5b89516001600160401b0380821115620002c357600080fd5b620002d18d838e01620001a7565b9a5060208c0151915080821115620002e857600080fd5b620002f68d838e01620001a7565b995060408c01519150808211156200030d57600080fd5b506200031c8c828d01620001a7565b97505060608a0151955060808a015194506200033b60a08b0162000256565b93506200034b60c08b0162000273565b92506200035b60e08b0162000256565b91506200036c6101008b0162000256565b90509295985092959850929598565b600181811c908216806200039057607f821691505b602082108103620003b157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040557600081815260208120601f850160051c81016020861015620003e05750805b601f850160051c820191505b818110156200040157828155600101620003ec565b5050505b505050565b81516001600160401b0381111562000426576200042662000191565b6200043e816200043784546200037b565b84620003b7565b602080601f8311600181146200047657600084156200045d5750858301515b600019600386901b1c1916600185901b17855562000401565b600085815260208120601f198616915b82811015620004a75788860151825594840194600190910190840162000486565b5085821015620004c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61284e80620004e66000396000f3fe6080604052600436106101e35760003560e01c80636352211e1161010257806395d89b4111610095578063c87b56dd11610064578063c87b56dd14610598578063d5abeb01146105b8578063e985e9c5146105ce578063f4f3b2001461060957600080fd5b806395d89b411461052d578063a035b1fe14610542578063a22cb46514610558578063b88d4fde1461057857600080fd5b8063879fbedf116100d1578063879fbedf146104c55780638da5cb5b146104e55780638fc3b5491461050557806394bf804d1461051a57600080fd5b80636352211e1461045057806370a0823114610470578063714c539814610490578063785e9e86146104a557600080fd5b806323b872dd1161017a5780633cd8045e116101495780633cd8045e146103d857806342842e0e146103fd578063438b1b4b1461041d57806355f804b31461043057600080fd5b806323b872dd146103515780632a55205a14610371578063362c0cb5146103b05780633ccfd60b146103c357600080fd5b806313af4035116101b657806313af4035146102af578063150b7a02146102cf57806318160ddd1461031457806322ab47a11461033757600080fd5b806301ffc9a7146101e857806306fdde031461021d578063081812fc1461023f578063095ea7b31461028d575b600080fd5b3480156101f457600080fd5b50610208610203366004612085565b610629565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b50610232610696565b60405161021491906120cd565b34801561024b57600080fd5b5061027561025a366004612100565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610214565b34801561029957600080fd5b506102ad6102a8366004612139565b610724565b005b3480156102bb57600080fd5b506102ad6102ca366004612165565b61080b565b3480156102db57600080fd5b506102fb6102ea366004612182565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610214565b34801561032057600080fd5b506103296108a0565b604051908152602001610214565b34801561034357600080fd5b50600e546102089060ff1681565b34801561035d57600080fd5b506102ad61036c366004612221565b6108b0565b34801561037d57600080fd5b5061039161038c366004612262565b610a96565b604080516001600160a01b039093168352602083019190915201610214565b6102ad6103be3660046122cb565b610acc565b3480156103cf57600080fd5b506102ad610b81565b3480156103e457600080fd5b50600e546102759061010090046001600160a01b031681565b34801561040957600080fd5b506102ad610418366004612221565b610e99565b6102ad61042b366004612383565b610f91565b34801561043c57600080fd5b506102ad61044b3660046123c5565b611057565b34801561045c57600080fd5b5061027561046b366004612100565b6110ee565b34801561047c57600080fd5b5061032961048b366004612165565b611145565b34801561049c57600080fd5b506102326111b9565b3480156104b157600080fd5b50601054610275906001600160a01b031681565b3480156104d157600080fd5b506102ad6104e036600461246a565b61124b565b3480156104f157600080fd5b50600854610275906001600160a01b031681565b34801561051157600080fd5b50600f54610329565b6102ad610528366004612485565b6112d1565b34801561053957600080fd5b5061023261148a565b34801561054e57600080fd5b50610329600c5481565b34801561056457600080fd5b506102ad6105733660046124b5565b611497565b34801561058457600080fd5b506102ad610593366004612182565b611503565b3480156105a457600080fd5b506102326105b3366004612100565b6115e4565b3480156105c457600080fd5b50610329600d5481565b3480156105da57600080fd5b506102086105e93660046124e1565b600560209081526000928352604080842090915290825290205460ff1681565b34801561061557600080fd5b506102ad610624366004612165565b61163b565b60006301ffc9a760e01b6001600160e01b03198316148061065a57506380ac58cd60e01b6001600160e01b03198316145b806106755750635b5e139f60e01b6001600160e01b03198316145b80610690575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546106a39061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf9061250f565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061076d57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107af5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108545760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006108ab600a5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146109195760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107a6565b6001600160a01b03821661096f5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107a6565b336001600160a01b03841614806109a957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806109ca57506000818152600460205260409020546001600160a01b031633145b610a075760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016107a6565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610ab9908561255f565b610ac3919061257e565b90509250929050565b6008546001600160a01b03163314610b155760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b610b208160016119c6565b81516000905b80821015610b6557610b38600a611abb565b610b5a848381518110610b4d57610b4d6125a0565b6020026020010151611ad8565b816001019150610b26565b80821015610b7b5763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b03163314610bca5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4391906125b6565b905060008167ffffffffffffffff811115610c6057610c60612284565b604051908082528060200260200182016040528015610c89578160200160208202803683370190505b50905060008267ffffffffffffffff811115610ca757610ca7612284565b604051908082528060200260200182016040528015610cd0578160200160208202803683370190505b5090504760005b84811015610e4257600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5291906125cf565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc91906125b6565b905081868481518110610de157610de16125a0565b6001600160a01b0390921660209283029190910190910152612710610e0782606461255f565b610e11908661255f565b610e1b919061257e565b858481518110610e2d57610e2d6125a0565b60209081029190910101525050600101610cd7565b60005b85811015610e9157610e89858281518110610e6257610e626125a0565b6020026020010151858381518110610e7c57610e7c6125a0565b6020026020010151611ba5565b600101610e45565b505050505050565b610ea48383836108b0565b6001600160a01b0382163b1580610f4d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4191906125ec565b6001600160e01b031916145b610f8c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107a6565b505050565b6008546001600160a01b03163314610fda5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b81600d5481600f54610fec9190612609565b111561100b5760405163d05cb60960e01b815260040160405180910390fd5b6110168260006119c6565b60005b8381101561103a576110328561102d611c00565b611c2b565b600101611019565b838110156110505763dfb035c96000526004601cfd5b5050505050565b6008546001600160a01b031633146110a05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b600b6110ac8282612662565b50806040516110bb9190612722565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806111405760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107a6565b919050565b60006001600160a01b03821661119d5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107a6565b506001600160a01b031660009081526003602052604090205490565b6060600b80546111c89061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546111f49061250f565b80156112415780601f1061121657610100808354040283529160200191611241565b820191906000526020600020905b81548152906001019060200180831161122457829003601f168201915b5050505050905090565b6008546001600160a01b031633146112945760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6009546001146113235760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016107a6565b6002600955600e5460ff1661134b576040516316851fc760e11b815260040160405180910390fd5b81600d5481600f5461135d9190612609565b111561137c5760405163d05cb60960e01b815260040160405180910390fd5b600c54601054849084906000906001600160a01b031661139c5734611410565b601054604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141091906125b6565b90508061141d848661255f565b1461143b5760405163f7760f2560e01b815260040160405180910390fd5b6114468660006119c6565b60005b878110156114655761145d3361102d611c00565b600101611449565b8781101561147b5763dfb035c96000526004601cfd5b50506001600955505050505050565b600180546106a39061250f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61150e8585856108b0565b6001600160a01b0384163b15806115a55750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906115569033908a9089908990899060040161273e565b6020604051808303816000875af1158015611575573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159991906125ec565b6001600160e01b031916145b6110505760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107a6565b6060600f5482111561160957604051635d68437560e11b815260040160405180910390fd5b600b61161483611d1e565b604051602001611625929190612792565b6040516020818303038152906040529050919050565b6008546001600160a01b031633146116845760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107a6565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fd91906125b6565b905060008167ffffffffffffffff81111561171a5761171a612284565b604051908082528060200260200182016040528015611743578160200160208202803683370190505b50905060008267ffffffffffffffff81111561176157611761612284565b60405190808252806020026020018201604052801561178a578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156117d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fb91906125b6565b90505b8482101561196d57600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187991906125cf565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa1580156118cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f391906125b6565b905081868581518110611908576119086125a0565b6001600160a01b039092166020928302919091019091015261271061192e82606461255f565b611938908561255f565b611942919061257e565b858581518110611954576119546125a0565b60200260200101818152505083600101935050506117fe565b60005b858110156119bd576119b58786838151811061198e5761198e6125a0565b60200260200101518684815181106119a8576119a86125a0565b6020026020010151611d6d565b600101611970565b50505050505050565b6010546000906001600160a01b03166119df5734611a53565b601054604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5391906125b6565b90508160ff16600003611a7657611a716340d097c360e01b82611df3565b611a92565b8160ff16600103611a9257611a9263044df8e760e41b82611df3565b6010546001600160a01b031615610f8c57601054610f8c906001600160a01b0316843084611ea3565b805480611ad05763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611b2a5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107a6565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af1905080610f8c5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016107a6565b6000611c0a611f2f565b506001600f6000828254611c1e9190612609565b9091555050600f54919050565b611c358282611f46565b6001600160a01b0382163b1580611cdb5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccf91906125ec565b6001600160e01b031916145b611d1a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107a6565b5050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611d5b57600183039250600a81066030018353600a9004611d3d565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610b7b5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016107a6565b6008546001600160a01b0316803b63ffffffff8116600003611e155750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8c91906125b6565b90508084146110505763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806110505760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016107a6565b6000611f3f600a80546001019055565b50600a5490565b6001600160a01b038216611f9c5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107a6565b6000818152600260205260409020546001600160a01b0316156120015760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107a6565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461208257600080fd5b50565b60006020828403121561209757600080fd5b81356120a28161206c565b9392505050565b60005b838110156120c45781810151838201526020016120ac565b50506000910152565b60208152600082518060208401526120ec8160408501602087016120a9565b601f01601f19169190910160400192915050565b60006020828403121561211257600080fd5b5035919050565b6001600160a01b038116811461208257600080fd5b803561114081612119565b6000806040838503121561214c57600080fd5b823561215781612119565b946020939093013593505050565b60006020828403121561217757600080fd5b81356120a281612119565b60008060008060006080868803121561219a57600080fd5b85356121a581612119565b945060208601356121b581612119565b935060408601359250606086013567ffffffffffffffff808211156121d957600080fd5b818801915088601f8301126121ed57600080fd5b8135818111156121fc57600080fd5b89602082850101111561220e57600080fd5b9699959850939650602001949392505050565b60008060006060848603121561223657600080fd5b833561224181612119565b9250602084013561225181612119565b929592945050506040919091013590565b6000806040838503121561227557600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122c3576122c3612284565b604052919050565b600080604083850312156122de57600080fd5b823567ffffffffffffffff808211156122f657600080fd5b818501915085601f83011261230a57600080fd5b813560208282111561231e5761231e612284565b8160051b925061232f81840161229a565b828152928401810192818101908985111561234957600080fd5b948201945b848610156123675785358252948201949082019061234e565b9650612376905087820161212e565b9450505050509250929050565b60008060006060848603121561239857600080fd5b83356123a381612119565b92506020840135915060408401356123ba81612119565b809150509250925092565b600060208083850312156123d857600080fd5b823567ffffffffffffffff808211156123f057600080fd5b818501915085601f83011261240457600080fd5b81358181111561241657612416612284565b612428601f8201601f1916850161229a565b9150808252868482850101111561243e57600080fd5b8084840185840137600090820190930192909252509392505050565b8035801515811461114057600080fd5b60006020828403121561247c57600080fd5b6120a28261245a565b6000806040838503121561249857600080fd5b8235915060208301356124aa81612119565b809150509250929050565b600080604083850312156124c857600080fd5b82356124d381612119565b9150610ac36020840161245a565b600080604083850312156124f457600080fd5b82356124ff81612119565b915060208301356124aa81612119565b600181811c9082168061252357607f821691505b60208210810361254357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561257957612579612549565b500290565b60008261259b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156125c857600080fd5b5051919050565b6000602082840312156125e157600080fd5b81516120a281612119565b6000602082840312156125fe57600080fd5b81516120a28161206c565b8082018082111561069057610690612549565b601f821115610f8c57600081815260208120601f850160051c810160208610156126435750805b601f850160051c820191505b81811015610e915782815560010161264f565b815167ffffffffffffffff81111561267c5761267c612284565b6126908161268a845461250f565b8461261c565b602080601f8311600181146126c557600084156126ad5750858301515b600019600386901b1c1916600185901b178555610e91565b600085815260208120601f198616915b828110156126f4578886015182559484019460019091019084016126d5565b50858210156127125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516127348184602087016120a9565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008084546127a08161250f565b600182811680156127b857600181146127cd576127fc565b60ff19841687528215158302870194506127fc565b8860005260208060002060005b858110156127f35781548a8201529084019082016127da565b50505082870194505b5050505083516128108183602088016120a9565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
