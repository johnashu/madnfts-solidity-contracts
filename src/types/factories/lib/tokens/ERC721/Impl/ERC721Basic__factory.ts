/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "burnERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "mintToERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002e5f38038062002e5f83398101604081905262000039916200027b565b80888860006200004a8382620003e7565b506001620000598282620003e7565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b68782620003e7565b50600c859055600d849055600e8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600681905560078054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004b3565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a957600080fd5b81516001600160401b0380821115620001c657620001c662000181565b604051601f8301601f19908116603f01168101908282118183101715620001f157620001f162000181565b816040528381526020925086838588010111156200020e57600080fd5b600091505b8382101562000232578582018301518183018401529082019062000213565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025e57600080fd5b919050565b80516001600160601b03811681146200025e57600080fd5b600080600080600080600080610100898b0312156200029957600080fd5b88516001600160401b0380821115620002b157600080fd5b620002bf8c838d0162000197565b995060208b0151915080821115620002d657600080fd5b620002e48c838d0162000197565b985060408b0151915080821115620002fb57600080fd5b506200030a8b828c0162000197565b96505060608901519450608089015193506200032960a08a0162000246565b92506200033960c08a0162000263565b91506200034960e08a0162000246565b90509295985092959890939650565b600181811c908216806200036d57607f821691505b6020821081036200038e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e257600081815260208120601f850160051c81016020861015620003bd5750805b601f850160051c820191505b81811015620003de57828155600101620003c9565b5050505b505050565b81516001600160401b0381111562000403576200040362000181565b6200041b8162000414845462000358565b8462000394565b602080601f8311600181146200045357600084156200043a5750858301515b600019600386901b1c1916600185901b178555620003de565b600085815260208120601f198616915b82811015620004845788860151825594840194600190910190840162000463565b5085821015620004a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61299c80620004c36000396000f3fe6080604052600436106101fe5760003560e01c806370a082311161011d578063a22cb465116100b0578063d2eff2601161007f578063e985e9c511610064578063e985e9c5146105dc578063f411026b14610617578063f4f3b2001461062a57600080fd5b8063d2eff260146105b3578063d5abeb01146105c657600080fd5b8063a22cb46514610540578063b80f55c914610560578063b88d4fde14610573578063c87b56dd1461059357600080fd5b80638fc3b549116100ec5780638fc3b549146104ed57806395d89b4114610502578063a035b1fe14610517578063a0712d681461052d57600080fd5b806370a0823114610478578063714c539814610498578063879fbedf146104ad5780638da5cb5b146104cd57600080fd5b806323b872dd1161019557806342842e0e1161016457806342842e0e14610405578063449a52f81461042557806355f804b3146104385780636352211e1461045857600080fd5b806323b872dd1461036c5780632a55205a1461038c5780633ccfd60b146103cb5780633cd8045e146103e057600080fd5b806313af4035116101d157806313af4035146102ca578063150b7a02146102ea57806318160ddd1461032f57806322ab47a11461035257600080fd5b806301ffc9a71461020357806306fdde0314610238578063081812fc1461025a578063095ea7b3146102a8575b600080fd5b34801561020f57600080fd5b5061022361021e366004612189565b61064a565b60405190151581526020015b60405180910390f35b34801561024457600080fd5b5061024d6106b7565b60405161022f91906121d1565b34801561026657600080fd5b50610290610275366004612204565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b3480156102b457600080fd5b506102c86102c3366004612232565b610745565b005b3480156102d657600080fd5b506102c86102e536600461225e565b61082c565b3480156102f657600080fd5b5061031661030536600461227b565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161022f565b34801561033b57600080fd5b506103446108c1565b60405190815260200161022f565b34801561035e57600080fd5b50600e546102239060ff1681565b34801561037857600080fd5b506102c861038736600461231a565b6108d1565b34801561039857600080fd5b506103ac6103a736600461235b565b610ab7565b604080516001600160a01b03909316835260208301919091520161022f565b3480156103d757600080fd5b506102c8610aed565b3480156103ec57600080fd5b50600e546102909061010090046001600160a01b031681565b34801561041157600080fd5b506102c861042036600461231a565b610e05565b6102c8610433366004612232565b610efd565b34801561044457600080fd5b506102c86104533660046123c4565b610fc8565b34801561046457600080fd5b50610290610473366004612204565b61105f565b34801561048457600080fd5b5061034461049336600461225e565b6110b6565b3480156104a457600080fd5b5061024d61112a565b3480156104b957600080fd5b506102c86104c8366004612469565b6111bc565b3480156104d957600080fd5b50600854610290906001600160a01b031681565b3480156104f957600080fd5b50600f54610344565b34801561050e57600080fd5b5061024d611242565b34801561052357600080fd5b50610344600c5481565b6102c861053b366004612204565b61124f565b34801561054c57600080fd5b506102c861055b366004612484565b611368565b6102c861056e366004612530565b6113d4565b34801561057f57600080fd5b506102c861058e36600461227b565b611489565b34801561059f57600080fd5b5061024d6105ae366004612204565b611571565b6102c86105c136600461256d565b6115c8565b3480156105d257600080fd5b50610344600d5481565b3480156105e857600080fd5b506102236105f73660046125d1565b600560209081526000928352604080842090915290825290205460ff1681565b6102c861062536600461260a565b6116f2565b34801561063657600080fd5b506102c861064536600461225e565b61183d565b60006301ffc9a760e01b6001600160e01b03198316148061067b57506380ac58cd60e01b6001600160e01b03198316145b806106965750635b5e139f60e01b6001600160e01b03198316145b806106b1575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546106c49061265d565b80601f01602080910402602001604051908101604052809291908181526020018280546106f09061265d565b801561073d5780601f106107125761010080835404028352916020019161073d565b820191906000526020600020905b81548152906001019060200180831161072057829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061078e57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107d05760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006108cc600a5490565b905090565b6000818152600260205260409020546001600160a01b0384811691161461093a5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107c7565b6001600160a01b0382166109905760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107c7565b336001600160a01b03841614806109ca57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806109eb57506000818152600460205260409020546001600160a01b031633145b610a285760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016107c7565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610ada90856126ad565b610ae491906126cc565b90509250929050565b6008546001600160a01b03163314610b365760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf91906126ee565b905060008167ffffffffffffffff811115610bcc57610bcc61237d565b604051908082528060200260200182016040528015610bf5578160200160208202803683370190505b50905060008267ffffffffffffffff811115610c1357610c1361237d565b604051908082528060200260200182016040528015610c3c578160200160208202803683370190505b5090504760005b84811015610dae57600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015610c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbe9190612707565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3891906126ee565b905081868481518110610d4d57610d4d612724565b6001600160a01b0390921660209283029190910190910152612710610d738260646126ad565b610d7d90866126ad565b610d8791906126cc565b858481518110610d9957610d99612724565b60209081029190910101525050600101610c43565b60005b85811015610dfd57610df5858281518110610dce57610dce612724565b6020026020010151858381518110610de857610de8612724565b6020026020010151611bbf565b600101610db1565b505050505050565b610e108383836108d1565b6001600160a01b0382163b1580610eb95750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead919061273a565b6001600160e01b031916145b610ef85760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107c7565b505050565b6008546001600160a01b03163314610f465760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b80600d5481600f54610f589190612757565b1115610f775760405163d05cb60960e01b815260040160405180910390fd5b610f886340d097c360e01b34611c1a565b60005b82811015610fac57610fa484610f9f611cca565b611cf5565b600101610f8b565b82811015610fc25763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b031633146110115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b600b61101d82826127b0565b508060405161102c9190612870565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806110b15760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107c7565b919050565b60006001600160a01b03821661110e5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107c7565b506001600160a01b031660009081526003602052604090205490565b6060600b80546111399061265d565b80601f01602080910402602001604051908101604052809291908181526020018280546111659061265d565b80156111b25780601f10611187576101008083540402835291602001916111b2565b820191906000526020600020905b81548152906001019060200180831161119557829003601f168201915b5050505050905090565b6008546001600160a01b031633146112055760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b600180546106c49061265d565b6009546001146112a15760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016107c7565b6002600955600e5460ff166112c9576040516316851fc760e11b815260040160405180910390fd5b80600d5481600f546112db9190612757565b11156112fa5760405163d05cb60960e01b815260040160405180910390fd5b600c54823461130982846126ad565b146113275760405163f7760f2560e01b815260040160405180910390fd5b60005b848110156113465761133e33610f9f611cca565b60010161132a565b8481101561135c5763dfb035c96000526004601cfd5b50506001600955505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b0316331461141d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b61142e63044df8e760e41b34611c1a565b80516000905b8082101561147357611446600a611de8565b61146883838151811061145b5761145b612724565b6020026020010151611e05565b816001019150611434565b80821015610ef85763dfb035c96000526004601cfd5b6114948585856108d1565b6001600160a01b0384163b158061152b5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906114dc9033908a9089908990899060040161288c565b6020604051808303816000875af11580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f919061273a565b6001600160e01b031916145b61156a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107c7565b5050505050565b6060600f5482111561159657604051635d68437560e11b815260040160405180910390fd5b600b6115a183611ed2565b6040516020016115b29291906128e0565b6040516020818303038152906040529050919050565b6008546001600160a01b031633146116115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301526000919083169063dd62ed3e90604401602060405180830381865afa158015611661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168591906126ee565b905061169863044df8e760e41b82611c1a565b6116a482333084611f21565b83516000905b808210156116dc576116bc600a611de8565b6116d186838151811061145b5761145b612724565b8160010191506116aa565b80821015610dfd5763dfb035c96000526004601cfd5b6008546001600160a01b0316331461173b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b82600d5481600f5461174d9190612757565b111561176c5760405163d05cb60960e01b815260040160405180910390fd5b604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa1580156117bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e091906126ee565b90506117f36340d097c360e01b82611c1a565b6117ff83333084611f21565b60005b8581101561181e5761181687610f9f611cca565b600101611802565b858110156118345763dfb035c96000526004601cfd5b50505050505050565b6008546001600160a01b031633146118865760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016107c7565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ff91906126ee565b905060008167ffffffffffffffff81111561191c5761191c61237d565b604051908082528060200260200182016040528015611945578160200160208202803683370190505b50905060008267ffffffffffffffff8111156119635761196361237d565b60405190808252806020026020018201604052801561198c578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fd91906126ee565b90505b84821015611b6f57600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7b9190612707565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015611ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af591906126ee565b905081868581518110611b0a57611b0a612724565b6001600160a01b0390921660209283029190910190910152612710611b308260646126ad565b611b3a90856126ad565b611b4491906126cc565b858581518110611b5657611b56612724565b6020026020010181815250508360010193505050611a00565b60005b8581101561183457611bb787868381518110611b9057611b90612724565b6020026020010151868481518110611baa57611baa612724565b6020026020010151611fad565b600101611b72565b600080600080600085875af1905080610ef85760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016107c7565b6008546001600160a01b0316803b63ffffffff8116600003611c3c5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb391906126ee565b905080841461156a5763f7760f256000526004601cfd5b6000611cd4612033565b506001600f6000828254611ce89190612757565b9091555050600f54919050565b611cff828261204a565b6001600160a01b0382163b1580611da55750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d99919061273a565b6001600160e01b031916145b611de45760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016107c7565b5050565b805480611dfd5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611e575760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107c7565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015611f0f57600183039250600a81066030018353600a9004611ef1565b50819003601f19909101908152919050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061156a5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016107c7565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610fc25760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016107c7565b6000612043600a80546001019055565b50600a5490565b6001600160a01b0382166120a05760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107c7565b6000818152600260205260409020546001600160a01b0316156121055760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107c7565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461218657600080fd5b50565b60006020828403121561219b57600080fd5b81356121a681612170565b9392505050565b60005b838110156121c85781810151838201526020016121b0565b50506000910152565b60208152600082518060208401526121f08160408501602087016121ad565b601f01601f19169190910160400192915050565b60006020828403121561221657600080fd5b5035919050565b6001600160a01b038116811461218657600080fd5b6000806040838503121561224557600080fd5b82356122508161221d565b946020939093013593505050565b60006020828403121561227057600080fd5b81356121a68161221d565b60008060008060006080868803121561229357600080fd5b853561229e8161221d565b945060208601356122ae8161221d565b935060408601359250606086013567ffffffffffffffff808211156122d257600080fd5b818801915088601f8301126122e657600080fd5b8135818111156122f557600080fd5b89602082850101111561230757600080fd5b9699959850939650602001949392505050565b60008060006060848603121561232f57600080fd5b833561233a8161221d565b9250602084013561234a8161221d565b929592945050506040919091013590565b6000806040838503121561236e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156123bc576123bc61237d565b604052919050565b600060208083850312156123d757600080fd5b823567ffffffffffffffff808211156123ef57600080fd5b818501915085601f83011261240357600080fd5b8135818111156124155761241561237d565b612427601f8201601f19168501612393565b9150808252868482850101111561243d57600080fd5b8084840185840137600090820190930192909252509392505050565b803580151581146110b157600080fd5b60006020828403121561247b57600080fd5b6121a682612459565b6000806040838503121561249757600080fd5b82356124a28161221d565b9150610ae460208401612459565b600082601f8301126124c157600080fd5b8135602067ffffffffffffffff8211156124dd576124dd61237d565b8160051b6124ec828201612393565b928352848101820192828101908785111561250657600080fd5b83870192505b848310156125255782358252918301919083019061250c565b979650505050505050565b60006020828403121561254257600080fd5b813567ffffffffffffffff81111561255957600080fd5b612565848285016124b0565b949350505050565b60008060006060848603121561258257600080fd5b833567ffffffffffffffff81111561259957600080fd5b6125a5868287016124b0565b93505060208401356125b68161221d565b915060408401356125c68161221d565b809150509250925092565b600080604083850312156125e457600080fd5b82356125ef8161221d565b915060208301356125ff8161221d565b809150509250929050565b6000806000806080858703121561262057600080fd5b843561262b8161221d565b93506020850135925060408501356126428161221d565b915060608501356126528161221d565b939692955090935050565b600181811c9082168061267157607f821691505b60208210810361269157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126c7576126c7612697565b500290565b6000826126e957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561270057600080fd5b5051919050565b60006020828403121561271957600080fd5b81516121a68161221d565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561274c57600080fd5b81516121a681612170565b808201808211156106b1576106b1612697565b601f821115610ef857600081815260208120601f850160051c810160208610156127915750805b601f850160051c820191505b81811015610dfd5782815560010161279d565b815167ffffffffffffffff8111156127ca576127ca61237d565b6127de816127d8845461265d565b8461276a565b602080601f83116001811461281357600084156127fb5750858301515b600019600386901b1c1916600185901b178555610dfd565b600085815260208120601f198616915b8281101561284257888601518255948401946001909101908401612823565b50858210156128605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516128828184602087016121ad565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008084546128ee8161265d565b60018281168015612906576001811461291b5761294a565b60ff198416875282151583028701945061294a565b8860005260208060002060005b858110156129415781548a820152908401908201612928565b50505082870194505b50505050835161295e8183602088016121ad565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
