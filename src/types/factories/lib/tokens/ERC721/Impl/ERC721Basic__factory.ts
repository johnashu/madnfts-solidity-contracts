/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002ff438038062002ff4833981016040819052620000399162000274565b81898960006200004a8382620003f3565b506001620000598282620003f3565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600f620000b68882620003f3565b5060118690556012859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b0386166006819055600780548416909417909355600b8054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004bf565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a257600080fd5b81516001600160401b0380821115620001bf57620001bf6200017a565b604051601f8301601f19908116603f01168101908282118183101715620001ea57620001ea6200017a565b816040528381526020925086838588010111156200020757600080fd5b600091505b838210156200022b57858201830151818301840152908201906200020c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025757600080fd5b919050565b80516001600160601b03811681146200025757600080fd5b60008060008060008060008060006101208a8c0312156200029457600080fd5b89516001600160401b0380821115620002ac57600080fd5b620002ba8d838e0162000190565b9a5060208c0151915080821115620002d157600080fd5b620002df8d838e0162000190565b995060408c0151915080821115620002f657600080fd5b50620003058c828d0162000190565b97505060608a0151955060808a015194506200032460a08b016200023f565b93506200033460c08b016200025c565b92506200034460e08b016200023f565b9150620003556101008b016200023f565b90509295985092959850929598565b600181811c908216806200037957607f821691505b6020821081036200039a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ee57600081815260208120601f850160051c81016020861015620003c95750805b601f850160051c820191505b81811015620003ea57828155600101620003d5565b5050505b505050565b81516001600160401b038111156200040f576200040f6200017a565b620004278162000420845462000364565b84620003a0565b602080601f8311600181146200045f5760008415620004465750858301515b600019600386901b1c1916600185901b178555620003ea565b600085815260208120601f198616915b8281101562000490578886015182559484019460019091019084016200046f565b5085821015620004af5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612b2580620004cf6000396000f3fe6080604052600436106102195760003560e01c80636352211e1161011d5780639456fbcc116100b0578063a22cb4651161007f578063c87b56dd11610064578063c87b56dd14610623578063d5abeb0114610643578063e985e9c51461065957600080fd5b8063a22cb465146105e3578063b88d4fde1461060357600080fd5b80639456fbcc1461058557806395d89b41146105a5578063a035b1fe146105ba578063a0712d68146105d057600080fd5b8063785e9e86116100ec578063785e9e8614610510578063879fbedf146105305780638da5cb5b146105505780638fc3b5491461057057600080fd5b80636352211e146104a657806366c879a9146104c657806370a08231146104db578063714c5398146104fb57600080fd5b806323b872dd116101b057806342842e0e1161017f5780634edd2d49116101645780634edd2d491461044c57806351cff8d91461046657806355f804b31461048657600080fd5b806342842e0e14610419578063438b1b4b1461043957600080fd5b806323b872dd146103875780632a55205a146103a7578063362c0cb5146103e65780633cd8045e146103f957600080fd5b806313af4035116101ec57806313af4035146102e5578063150b7a021461030557806318160ddd1461034a57806322ab47a11461036d57600080fd5b806301ffc9a71461021e57806306fdde0314610253578063081812fc14610275578063095ea7b3146102c3575b600080fd5b34801561022a57600080fd5b5061023e610239366004612349565b610694565b60405190151581526020015b60405180910390f35b34801561025f57600080fd5b50610268610701565b60405161024a9190612391565b34801561028157600080fd5b506102ab6102903660046123c4565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161024a565b3480156102cf57600080fd5b506102e36102de3660046123fd565b61078f565b005b3480156102f157600080fd5b506102e3610300366004612429565b610876565b34801561031157600080fd5b50610331610320366004612446565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161024a565b34801561035657600080fd5b5061035f61090b565b60405190815260200161024a565b34801561037957600080fd5b5060135461023e9060ff1681565b34801561039357600080fd5b506102e36103a23660046124e5565b61091b565b3480156103b357600080fd5b506103c76103c2366004612526565b610b01565b604080516001600160a01b03909316835260208301919091520161024a565b6102e36103f436600461258f565b610b37565b34801561040557600080fd5b50600a546102ab906001600160a01b031681565b34801561042557600080fd5b506102e36104343660046124e5565b610bec565b6102e3610447366004612647565b610ce4565b34801561045857600080fd5b5060105461023e9060ff1681565b34801561047257600080fd5b506102e3610481366004612429565b610daa565b34801561049257600080fd5b506102e36104a1366004612689565b6110f4565b3480156104b257600080fd5b506102ab6104c13660046123c4565b6111b3565b3480156104d257600080fd5b506102e361120a565b3480156104e757600080fd5b5061035f6104f6366004612429565b6112a1565b34801561050757600080fd5b50610268611315565b34801561051c57600080fd5b50600b546102ab906001600160a01b031681565b34801561053c57600080fd5b506102e361054b36600461272e565b6113a7565b34801561055c57600080fd5b506008546102ab906001600160a01b031681565b34801561057c57600080fd5b50600d5461035f565b34801561059157600080fd5b506102e36105a0366004612749565b61142d565b3480156105b157600080fd5b5061026861184a565b3480156105c657600080fd5b5061035f60115481565b6102e36105de3660046123c4565b611857565b3480156105ef57600080fd5b506102e36105fe366004612782565b611ac1565b34801561060f57600080fd5b506102e361061e366004612446565b611b2d565b34801561062f57600080fd5b5061026861063e3660046123c4565b611c0e565b34801561064f57600080fd5b5061035f60125481565b34801561066557600080fd5b5061023e610674366004612749565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806106c557506380ac58cd60e01b6001600160e01b03198316145b806106e05750635b5e139f60e01b6001600160e01b03198316145b806106fb575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461070e906127ae565b80601f016020809104026020016040519081016040528092919081815260200182805461073a906127ae565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806107d857506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61081a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108bf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610916600c5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146109845760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610811565b6001600160a01b0382166109da5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610811565b336001600160a01b0384161480610a1457506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610a3557506000818152600460205260409020546001600160a01b031633145b610a725760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610811565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610b2490856127fe565b610b2e919061281d565b90509250929050565b6008546001600160a01b03163314610b805760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b610b8b816001611c65565b81516000905b80821015610bd057610ba3600c611d7f565b610bc5848381518110610bb857610bb861283f565b6020026020010151611d9c565b816001019150610b91565b80821015610be65763dfb035c96000526004601cfd5b50505050565b610bf783838361091b565b6001600160a01b0382163b1580610ca05750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c949190612855565b6001600160e01b031916145b610cdf5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610811565b505050565b6008546001600160a01b03163314610d2d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b8160125481600d54610d3f9190612872565b1115610d5e5760405163d05cb60960e01b815260040160405180910390fd5b610d69826000611c65565b60005b83811015610d8d57610d8585610d80611e69565b611e94565b600101610d6c565b83811015610da35763dfb035c96000526004601cfd5b5050505050565b6008546001600160a01b03163314610df35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e619190612885565b905060008167ffffffffffffffff811115610e7e57610e7e612548565b604051908082528060200260200182016040528015610ea7578160200160208202803683370190505b50905060008267ffffffffffffffff811115610ec557610ec5612548565b604051908082528060200260200182016040528015610eee578160200160208202803683370190505b509050600080600e54118015610f0c57506001600160a01b03851615155b15610f3657600e54610f1e904761289e565b9050610f2c85600e54611f87565b6000600e55610f39565b50475b60005b8481101561109c57600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb291906128b1565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611002573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110269190612885565b90508186848151811061103b5761103b61283f565b6001600160a01b03909216602092830291909101909101526127106110618260646127fe565b61106b90866127fe565b611075919061281d565b8584815181106110875761108761283f565b60209081029190910101525050600101610f3c565b60005b858110156110eb576110e38582815181106110bc576110bc61283f565b60200260200101518583815181106110d6576110d661283f565b6020026020010151611f87565b60010161109f565b50505050505050565b6008546001600160a01b0316331461113d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b60105460ff16151560010361116557604051639619d74760e01b815260040160405180910390fd5b600f611171828261291c565b508060405161118091906129dc565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b0316806112055760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610811565b919050565b6008546001600160a01b031633146112535760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b6010805460ff1916600117905560405161126f90600f90612a6b565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b60006001600160a01b0382166112f95760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610811565b506001600160a01b031660009081526003602052604090205490565b6060600f8054611324906127ae565b80601f0160208091040260200160405190810160405280929190818152602001828054611350906127ae565b801561139d5780601f106113725761010080835404028352916020019161139d565b820191906000526020600020905b81548152906001019060200180831161138057829003601f168201915b5050505050905090565b6008546001600160a01b031633146113f05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b6013805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b031633146114765760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610811565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e49190612885565b905060008167ffffffffffffffff81111561150157611501612548565b60405190808252806020026020018201604052801561152a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561154857611548612548565b604051908082528060200260200182016040528015611571578160200160208202803683370190505b509050600080600e5411801561158f57506001600160a01b03851615155b1561162257600e546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa1580156115db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ff9190612885565b611609919061289e565b90506116188686600e54611fe2565b6000600e5561168d565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa158015611666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168a9190612885565b90505b60005b848110156117f057600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170691906128b1565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177a9190612885565b90508186848151811061178f5761178f61283f565b6001600160a01b03909216602092830291909101909101526127106117b58260646127fe565b6117bf90866127fe565b6117c9919061281d565b8584815181106117db576117db61283f565b60209081029190910101525050600101611690565b60005b8581101561184057611838888683815181106118115761181161283f565b602002602001015186848151811061182b5761182b61283f565b6020026020010151611fe2565b6001016117f3565b5050505050505050565b6001805461070e906127ae565b6009546001146118a95760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610811565b600260095560135460ff166118d1576040516316851fc760e11b815260040160405180910390fd5b8060125481600d546118e39190612872565b11156119025760405163d05cb60960e01b815260040160405180910390fd5b60115460085483906001600160a01b0316803b600063ffffffff8216156119b057600854604051633b7279e960e21b81526340d097c360e01b60048201526001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119969190612885565b905080600e60008282546119aa9190612872565b90915550505b600b546000906001600160a01b03166119c95734611a3b565b600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3b9190612885565b90508082611a4987896127fe565b611a539190612872565b14611a715760405163f7760f2560e01b815260040160405180910390fd5b611a7c336002611c65565b60005b88811015611a9b57611a9333610d80611e69565b600101611a7f565b88811015611ab15763dfb035c96000526004601cfd5b5050600160095550505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611b3885858561091b565b6001600160a01b0384163b1580611bcf5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611b809033908a90899089908990600401612a77565b6020604051808303816000875af1158015611b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc39190612855565b6001600160e01b031916145b610da35760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610811565b6060600d54821115611c3357604051635d68437560e11b815260040160405180910390fd5b600f611c3e83612068565b604051602001611c4f929190612acb565b6040516020818303038152906040529050919050565b600b546000906001600160a01b0316611c7e5734611cf2565b600b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf29190612885565b9050336001600160a01b0384161480611d145750600b546001600160a01b0316155b15610cdf578160ff16600003611d3a57611d356340d097c360e01b826120b7565b611d56565b8160ff16600103611d5657611d5663044df8e760e41b826120b7565b600b546001600160a01b031615610cdf57600b54610cdf906001600160a01b0316843084612167565b805480611d945763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611dee5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610811565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000611e736121f3565b506001600d6000828254611e879190612872565b9091555050600d54919050565b611e9e828261220a565b6001600160a01b0382163b1580611f445750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f389190612855565b6001600160e01b031916145b611f835760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610811565b5050565b600080600080600085875af1905080610cdf5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610811565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610be65760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610811565b604080516080810191829052607f0190826030600a8206018353600a90045b80156120a557600183039250600a81066030018353600a9004612087565b50819003601f19909101908152919050565b6008546001600160a01b0316803b63ffffffff81166000036120d95750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa15801561212c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121509190612885565b9050808414610da35763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610da35760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610811565b6000612203600c80546001019055565b50600c5490565b6001600160a01b0382166122605760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610811565b6000818152600260205260409020546001600160a01b0316156122c55760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610811565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461234657600080fd5b50565b60006020828403121561235b57600080fd5b813561236681612330565b9392505050565b60005b83811015612388578181015183820152602001612370565b50506000910152565b60208152600082518060208401526123b081604085016020870161236d565b601f01601f19169190910160400192915050565b6000602082840312156123d657600080fd5b5035919050565b6001600160a01b038116811461234657600080fd5b8035611205816123dd565b6000806040838503121561241057600080fd5b823561241b816123dd565b946020939093013593505050565b60006020828403121561243b57600080fd5b8135612366816123dd565b60008060008060006080868803121561245e57600080fd5b8535612469816123dd565b94506020860135612479816123dd565b935060408601359250606086013567ffffffffffffffff8082111561249d57600080fd5b818801915088601f8301126124b157600080fd5b8135818111156124c057600080fd5b8960208285010111156124d257600080fd5b9699959850939650602001949392505050565b6000806000606084860312156124fa57600080fd5b8335612505816123dd565b92506020840135612515816123dd565b929592945050506040919091013590565b6000806040838503121561253957600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561258757612587612548565b604052919050565b600080604083850312156125a257600080fd5b823567ffffffffffffffff808211156125ba57600080fd5b818501915085601f8301126125ce57600080fd5b81356020828211156125e2576125e2612548565b8160051b92506125f381840161255e565b828152928401810192818101908985111561260d57600080fd5b948201945b8486101561262b57853582529482019490820190612612565b965061263a90508782016123f2565b9450505050509250929050565b60008060006060848603121561265c57600080fd5b8335612667816123dd565b925060208401359150604084013561267e816123dd565b809150509250925092565b6000602080838503121561269c57600080fd5b823567ffffffffffffffff808211156126b457600080fd5b818501915085601f8301126126c857600080fd5b8135818111156126da576126da612548565b6126ec601f8201601f1916850161255e565b9150808252868482850101111561270257600080fd5b8084840185840137600090820190930192909252509392505050565b8035801515811461120557600080fd5b60006020828403121561274057600080fd5b6123668261271e565b6000806040838503121561275c57600080fd5b8235612767816123dd565b91506020830135612777816123dd565b809150509250929050565b6000806040838503121561279557600080fd5b82356127a0816123dd565b9150610b2e6020840161271e565b600181811c908216806127c257607f821691505b6020821081036127e257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612818576128186127e8565b500290565b60008261283a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561286757600080fd5b815161236681612330565b808201808211156106fb576106fb6127e8565b60006020828403121561289757600080fd5b5051919050565b818103818111156106fb576106fb6127e8565b6000602082840312156128c357600080fd5b8151612366816123dd565b601f821115610cdf57600081815260208120601f850160051c810160208610156128f55750805b601f850160051c820191505b8181101561291457828155600101612901565b505050505050565b815167ffffffffffffffff81111561293657612936612548565b61294a8161294484546127ae565b846128ce565b602080601f83116001811461297f57600084156129675750858301515b600019600386901b1c1916600185901b178555612914565b600085815260208120601f198616915b828110156129ae5788860151825594840194600190910190840161298f565b50858210156129cc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516129ee81846020870161236d565b9190910192915050565b60008154612a05816127ae565b60018281168015612a1d5760018114612a3257612a61565b60ff1984168752821515830287019450612a61565b8560005260208060002060005b85811015612a585781548a820152908401908201612a3f565b50505082870194505b5050505092915050565b600061236682846129f8565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000612ad782856129f8565b8351612ae781836020880161236d565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
