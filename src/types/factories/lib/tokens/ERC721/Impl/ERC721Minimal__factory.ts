/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Minimal,
  ERC721MinimalInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b506040516200269a3803806200269a833981016040819052620000399162000281565b81888860006200004a8382620003f6565b506001620000598282620003f6565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600c620000b68782620003f6565b50600b859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b038616600681905560078054909316909317909155600d8054918416620100000262010000600160b01b03199092169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004c2565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001af57600080fd5b81516001600160401b0380821115620001cc57620001cc62000187565b604051601f8301601f19908116603f01168101908282118183101715620001f757620001f762000187565b816040528381526020925086838588010111156200021457600080fd5b600091505b8382101562000238578582018301518183018401529082019062000219565b600093810190920192909252949350505050565b80516001600160a01b03811681146200026457600080fd5b919050565b80516001600160601b03811681146200026457600080fd5b600080600080600080600080610100898b0312156200029f57600080fd5b88516001600160401b0380821115620002b757600080fd5b620002c58c838d016200019d565b995060208b0151915080821115620002dc57600080fd5b620002ea8c838d016200019d565b985060408b01519150808211156200030157600080fd5b50620003108b828c016200019d565b965050606089015194506200032860808a016200024c565b93506200033860a08a0162000269565b92506200034860c08a016200024c565b91506200035860e08a016200024c565b90509295985092959890939650565b600181811c908216806200037c57607f821691505b6020821081036200039d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003f157600081815260208120601f850160051c81016020861015620003cc5750805b601f850160051c820191505b81811015620003ed57828155600101620003d8565b5050505b505050565b81516001600160401b0381111562000412576200041262000187565b6200042a8162000423845462000367565b84620003a3565b602080601f831160018114620004625760008415620004495750858301515b600019600386901b1c1916600185901b178555620003ed565b600085815260208120601f198616915b82811015620004935788860151825594840194600190910190840162000472565b5085821015620004b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6121c880620004d26000396000f3fe6080604052600436106101ac5760003560e01c80636352211e116100ec578063a035b1fe1161008a578063c87b56dd11610064578063c87b56dd146104ea578063e59aee0c1461050a578063e985e9c51461051d578063f4f3b2001461055857600080fd5b8063a035b1fe14610494578063a22cb465146104aa578063b88d4fde146104ca57600080fd5b8063879fbedf116100c6578063879fbedf1461042c57806389afcb441461044c5780638da5cb5b1461045f57806395d89b411461047f57600080fd5b80636352211e146103b857806370a08231146103d8578063785e9e861461040657600080fd5b806322ab47a1116101595780632a55205a116101335780632a55205a146103245780633ccfd60b146103635780633cd8045e1461037857806342842e0e1461039857600080fd5b806322ab47a1146102dd57806323b872dd146102fc57806326092b831461031c57600080fd5b8063095ea7b31161018a578063095ea7b31461025657806313af403514610278578063150b7a021461029857600080fd5b806301ffc9a7146101b157806306fdde03146101e6578063081812fc14610208575b600080fd5b3480156101bd57600080fd5b506101d16101cc366004611de4565b610578565b60405190151581526020015b60405180910390f35b3480156101f257600080fd5b506101fb6105e5565b6040516101dd9190611e08565b34801561021457600080fd5b5061023e610223366004611e56565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101dd565b34801561026257600080fd5b50610276610271366004611e84565b610673565b005b34801561028457600080fd5b50610276610293366004611eb0565b61075a565b3480156102a457600080fd5b506102c46102b3366004611ecd565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101dd565b3480156102e957600080fd5b50600d546101d190610100900460ff1681565b34801561030857600080fd5b50610276610317366004611f6c565b6107ef565b6102766109d5565b34801561033057600080fd5b5061034461033f366004611fad565b610b61565b604080516001600160a01b0390931683526020830191909152016101dd565b34801561036f57600080fd5b50610276610b97565b34801561038457600080fd5b50600a5461023e906001600160a01b031681565b3480156103a457600080fd5b506102766103b3366004611f6c565b610e99565b3480156103c457600080fd5b5061023e6103d3366004611e56565b610f91565b3480156103e457600080fd5b506103f86103f3366004611eb0565b610fe8565b6040519081526020016101dd565b34801561041257600080fd5b50600d5461023e906201000090046001600160a01b031681565b34801561043857600080fd5b50610276610447366004611fdf565b61105c565b61027661045a366004611eb0565b6110ea565b34801561046b57600080fd5b5060085461023e906001600160a01b031681565b34801561048b57600080fd5b506101fb61114b565b3480156104a057600080fd5b506103f8600b5481565b3480156104b657600080fd5b506102766104c5366004611ffa565b611158565b3480156104d657600080fd5b506102766104e5366004611ecd565b6111c4565b3480156104f657600080fd5b506101fb610505366004611e56565b6112ac565b610276610518366004612026565b611384565b34801561052957600080fd5b506101d1610538366004612026565b600560209081526000928352604080842090915290825290205460ff1681565b34801561056457600080fd5b50610276610573366004611eb0565b61141b565b60006301ffc9a760e01b6001600160e01b0319831614806105a957506380ac58cd60e01b6001600160e01b03198316145b806105c45750635b5e139f60e01b6001600160e01b03198316145b806105df575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546105f29061205f565b80601f016020809104026020016040519081016040528092919081815260200182805461061e9061205f565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806106bc57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106fe5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146107a35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146108585760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016106f5565b6001600160a01b0382166108ae5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016106f5565b336001600160a01b03841614806108e857506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061090957506000818152600460205260409020546001600160a01b031633145b6109465760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106f5565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600954600114610a275760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064016106f5565b6002600955600d546000906201000090046001600160a01b0316610a4b5734610ac2565b600d54604051636eb1769f60e11b8152336004820152306024820152620100009091046001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190612099565b600d54909150610100900460ff16610aed5760405163287588a160e11b815260040160405180910390fd5b600b548114610b0f5760405163f7760f2560e01b815260040160405180910390fd5b600d5460ff1615610b3357604051631bbdf5c560e31b815260040160405180910390fd5b610b3e336002611790565b600d805460ff19166001908117909155610b599033906118c9565b506001600955565b6007546006546001600160a01b039091169060009061271090610b8490856120b2565b610b8e91906120df565b90509250929050565b6008546001600160a01b03163314610be05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4e9190612099565b905060008167ffffffffffffffff811115610c6b57610c6b612101565b604051908082528060200260200182016040528015610c94578160200160208202803683370190505b50905060008267ffffffffffffffff811115610cb257610cb2612101565b604051908082528060200260200182016040528015610cdb578160200160208202803683370190505b5090504760005b84811015610e4257600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d589190612117565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190612099565b905081868481518110610de157610de1612134565b6001600160a01b0390921660209283029190910190910152612710610e078260646120b2565b610e1190866120b2565b610e1b91906120df565b858481518110610e2d57610e2d612134565b60209081029190910101525050600101610ce2565b60005b85811015610e9157610e89858281518110610e6257610e62612134565b6020026020010151858381518110610e7c57610e7c612134565b60200260200101516119b8565b600101610e45565b505050505050565b610ea48383836107ef565b6001600160a01b0382163b1580610f4d5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f41919061214a565b6001600160e01b031916145b610f8c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106f5565b505050565b6000818152600260205260409020546001600160a01b031680610fe35760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016106f5565b919050565b60006001600160a01b0382166110405760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016106f5565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146110a55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b600d805461ff001916610100831515908102919091179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b031633146111335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b61113e816001611790565b6111486001611a13565b50565b600180546105f29061205f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6111cf8585856107ef565b6001600160a01b0384163b15806112665750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906112179033908a90899089908990600401612167565b6020604051808303816000875af1158015611236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125a919061214a565b6001600160e01b031916145b6112a55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106f5565b5050505050565b6060816001146112cf57604051631bf4348160e31b815260040160405180910390fd5b600d5460ff166112f257604051634d5e5fb360e01b815260040160405180910390fd5b600c80546112ff9061205f565b80601f016020809104026020016040519081016040528092919081815260200182805461132b9061205f565b80156113785780601f1061134d57610100808354040283529160200191611378565b820191906000526020600020905b81548152906001019060200180831161135b57829003601f168201915b50505050509050919050565b6008546001600160a01b031633146113cd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b600d5460ff16156113f157604051631bbdf5c560e31b815260040160405180910390fd5b6113fc816000611790565b600d805460ff191660019081179091556114179083906118c9565b5050565b6008546001600160a01b031633146114645760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106f5565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190612099565b905060008167ffffffffffffffff8111156114ef576114ef612101565b604051908082528060200260200182016040528015611518578160200160208202803683370190505b50905060008267ffffffffffffffff81111561153657611536612101565b60405190808252806020026020018201604052801561155f578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa1580156115ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d09190612099565b90505b8482101561173757600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116499190612117565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bd9190612099565b9050818685815181106116d2576116d2612134565b6001600160a01b03909216602092830291909101909101526127106116f88260646120b2565b61170290856120b2565b61170c91906120df565b85858151811061171e5761171e612134565b60200260200101818152505083600101935050506115d3565b60005b858110156117875761177f8786838151811061175857611758612134565b602002602001015186848151811061177257611772612134565b6020026020010151611ae0565b60010161173a565b50505050505050565b600d546000906201000090046001600160a01b03166117af573461182a565b600d54604051636eb1769f60e11b81526001600160a01b038581166004830152306024830152620100009092049091169063dd62ed3e90604401602060405180830381865afa158015611806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182a9190612099565b9050336001600160a01b03841614806118525750600d546201000090046001600160a01b0316155b15610f8c578160ff16600003611878576118736340d097c360e01b82611b6c565b611894565b8160ff166001036118945761189463044df8e760e41b82611b6c565b600d546201000090046001600160a01b031615610f8c57600d54610f8c906201000090046001600160a01b0316843084611c1c565b6118d38282611ca8565b6001600160a01b0382163b15806119795750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196d919061214a565b6001600160e01b031916145b6114175760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106f5565b600080600080600085875af1905080610f8c5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106f5565b6000818152600260205260409020546001600160a01b031680611a655760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016106f5565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611b665760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106f5565b50505050565b6008546001600160a01b0316803b63ffffffff8116600003611b8e5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c059190612099565b90508084146112a55763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806112a55760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016106f5565b6001600160a01b038216611cfe5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016106f5565b6000818152600260205260409020546001600160a01b031615611d635760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016106f5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461114857600080fd5b600060208284031215611df657600080fd5b8135611e0181611dce565b9392505050565b600060208083528351808285015260005b81811015611e3557858101830151858201604001528201611e19565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215611e6857600080fd5b5035919050565b6001600160a01b038116811461114857600080fd5b60008060408385031215611e9757600080fd5b8235611ea281611e6f565b946020939093013593505050565b600060208284031215611ec257600080fd5b8135611e0181611e6f565b600080600080600060808688031215611ee557600080fd5b8535611ef081611e6f565b94506020860135611f0081611e6f565b935060408601359250606086013567ffffffffffffffff80821115611f2457600080fd5b818801915088601f830112611f3857600080fd5b813581811115611f4757600080fd5b896020828501011115611f5957600080fd5b9699959850939650602001949392505050565b600080600060608486031215611f8157600080fd5b8335611f8c81611e6f565b92506020840135611f9c81611e6f565b929592945050506040919091013590565b60008060408385031215611fc057600080fd5b50508035926020909101359150565b80358015158114610fe357600080fd5b600060208284031215611ff157600080fd5b611e0182611fcf565b6000806040838503121561200d57600080fd5b823561201881611e6f565b9150610b8e60208401611fcf565b6000806040838503121561203957600080fd5b823561204481611e6f565b9150602083013561205481611e6f565b809150509250929050565b600181811c9082168061207357607f821691505b60208210810361209357634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156120ab57600080fd5b5051919050565b60008160001904831182151516156120da57634e487b7160e01b600052601160045260246000fd5b500290565b6000826120fc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561212957600080fd5b8151611e0181611e6f565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561215c57600080fd5b8151611e0181611dce565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea164736f6c6343000810000a";

type ERC721MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Minimal__factory extends ContractFactory {
  constructor(...args: ERC721MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Minimal> {
    return super.deploy(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Minimal>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Minimal {
    return super.attach(address) as ERC721Minimal;
  }
  override connect(signer: Signer): ERC721Minimal__factory {
    return super.connect(signer) as ERC721Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MinimalInterface {
    return new utils.Interface(_abi) as ERC721MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC721Minimal;
  }
}
