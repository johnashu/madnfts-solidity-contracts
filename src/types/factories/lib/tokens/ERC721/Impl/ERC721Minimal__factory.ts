/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Minimal,
  ERC721MinimalInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002a7c38038062002a7c833981016040819052620000399162000281565b81888860006200004a8382620003f6565b506001620000598282620003f6565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600c620000b68782620003f6565b50600b859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b038616600681905560078054909316909317909155600d8054918416620100000262010000600160b01b03199092169190911790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004c2565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001af57600080fd5b81516001600160401b0380821115620001cc57620001cc62000187565b604051601f8301601f19908116603f01168101908282118183101715620001f757620001f762000187565b816040528381526020925086838588010111156200021457600080fd5b600091505b8382101562000238578582018301518183018401529082019062000219565b600093810190920192909252949350505050565b80516001600160a01b03811681146200026457600080fd5b919050565b80516001600160601b03811681146200026457600080fd5b600080600080600080600080610100898b0312156200029f57600080fd5b88516001600160401b0380821115620002b757600080fd5b620002c58c838d016200019d565b995060208b0151915080821115620002dc57600080fd5b620002ea8c838d016200019d565b985060408b01519150808211156200030157600080fd5b50620003108b828c016200019d565b965050606089015194506200032860808a016200024c565b93506200033860a08a0162000269565b92506200034860c08a016200024c565b91506200035860e08a016200024c565b90509295985092959890939650565b600181811c908216806200037c57607f821691505b6020821081036200039d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003f157600081815260208120601f850160051c81016020861015620003cc5750805b601f850160051c820191505b81811015620003ed57828155600101620003d8565b5050505b505050565b81516001600160401b0381111562000412576200041262000187565b6200042a8162000423845462000367565b84620003a3565b602080601f831160018114620004625760008415620004495750858301515b600019600386901b1c1916600185901b178555620003ed565b600085815260208120601f198616915b82811015620004935788860151825594840194600190910190840162000472565b5085821015620004b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6125aa80620004d26000396000f3fe6080604052600436106101cd5760003560e01c806344df8e70116100f757806395d89b4111610095578063c87b56dd11610064578063c87b56dd14610539578063e59aee0c14610559578063e985e9c51461056c578063f4f3b200146105a757600080fd5b806395d89b41146104ce578063a035b1fe146104e3578063a22cb465146104f9578063b88d4fde1461051957600080fd5b8063785e9e86116100d1578063785e9e8614610455578063879fbedf1461047b57806389afcb441461049b5780638da5cb5b146104ae57600080fd5b806344df8e70146103ff5780636352211e1461040757806370a082311461042757600080fd5b806323b872dd1161016f5780633ccfd60b1161013e5780633ccfd60b146103975780633cd8045e146103ac57806340d097c3146103cc57806342842e0e146103df57600080fd5b806323b872dd1461031d57806326092b831461033d5780632a55205a1461034557806332a93a3a1461038457600080fd5b8063095ea7b3116101ab578063095ea7b31461027757806313af403514610299578063150b7a02146102b957806322ab47a1146102fe57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed3660046121c6565b6105c7565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610634565b6040516101fe91906121ea565b34801561023557600080fd5b5061025f610244366004612238565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b34801561028357600080fd5b50610297610292366004612266565b6106c2565b005b3480156102a557600080fd5b506102976102b4366004612292565b6107a9565b3480156102c557600080fd5b506102e56102d43660046122af565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101fe565b34801561030a57600080fd5b50600d546101f290610100900460ff1681565b34801561032957600080fd5b5061029761033836600461234e565b61083e565b610297610a24565b34801561035157600080fd5b5061036561036036600461238f565b610b46565b604080516001600160a01b0390931683526020830191909152016101fe565b610297610392366004612292565b610b7c565b3480156103a357600080fd5b50610297610d3b565b3480156103b857600080fd5b50600a5461025f906001600160a01b031681565b6102976103da366004612292565b61103d565b3480156103eb57600080fd5b506102976103fa36600461234e565b611127565b61029761121f565b34801561041357600080fd5b5061025f610422366004612238565b6112d3565b34801561043357600080fd5b50610447610442366004612292565b61132a565b6040519081526020016101fe565b34801561046157600080fd5b50600d5461025f906201000090046001600160a01b031681565b34801561048757600080fd5b506102976104963660046123c1565b61139e565b6102976104a9366004612292565b61142c565b3480156104ba57600080fd5b5060085461025f906001600160a01b031681565b3480156104da57600080fd5b5061021c61157c565b3480156104ef57600080fd5b50610447600b5481565b34801561050557600080fd5b506102976105143660046123dc565b611589565b34801561052557600080fd5b506102976105343660046122af565b6115f5565b34801561054557600080fd5b5061021c610554366004612238565b6116dd565b610297610567366004612408565b6117b5565b34801561057857600080fd5b506101f2610587366004612408565b600560209081526000928352604080842090915290825290205460ff1681565b3480156105b357600080fd5b506102976105c2366004612292565b611936565b60006301ffc9a760e01b6001600160e01b0319831614806105f857506380ac58cd60e01b6001600160e01b03198316145b806106135750635b5e139f60e01b6001600160e01b03198316145b8061062e575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461064190612441565b80601f016020809104026020016040519081016040528092919081815260200182805461066d90612441565b80156106ba5780601f1061068f576101008083540402835291602001916106ba565b820191906000526020600020905b81548152906001019060200180831161069d57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061070b57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61074d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146107f25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146108a75760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610744565b6001600160a01b0382166108fd5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610744565b336001600160a01b038416148061093757506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061095857506000818152600460205260409020546001600160a01b031633145b6109955760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610744565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600954600114610a635760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610744565b6002600955600d546201000090046001600160a01b031615610ab65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b600d54610100900460ff16610ade5760405163287588a160e11b815260040160405180910390fd5b600b543414610b005760405163f7760f2560e01b815260040160405180910390fd5b600d5460ff1615610b2457604051631bbdf5c560e31b815260040160405180910390fd5b600d805460ff19166001908117909155610b3f903390611cab565b6001600955565b6007546006546001600160a01b039091169060009061271090610b69908561247b565b610b7391906124a8565b90509250929050565b600954600114610bbb5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610744565b6002600955600d546201000090046001600160a01b0316610c0d5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b600d54604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906124ca565b600d54909150610100900460ff16610cb35760405163287588a160e11b815260040160405180910390fd5b600b548114610cd55760405163f7760f2560e01b815260040160405180910390fd5b600d5460ff1615610cf957604051631bbdf5c560e31b815260040160405180910390fd5b600d54610d17906201000090046001600160a01b0316833084611d9a565b600d805460ff19166001908117909155610d32903390611cab565b50506001600955565b6008546001600160a01b03163314610d845760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df291906124ca565b905060008167ffffffffffffffff811115610e0f57610e0f6124e3565b604051908082528060200260200182016040528015610e38578160200160208202803683370190505b50905060008267ffffffffffffffff811115610e5657610e566124e3565b604051908082528060200260200182016040528015610e7f578160200160208202803683370190505b5090504760005b84811015610fe657600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc91906124f9565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7091906124ca565b905081868481518110610f8557610f85612516565b6001600160a01b0390921660209283029190910190910152612710610fab82606461247b565b610fb5908661247b565b610fbf91906124a8565b858481518110610fd157610fd1612516565b60209081029190910101525050600101610e86565b60005b858110156110355761102d85828151811061100657611006612516565b602002602001015185838151811061102057611020612516565b6020026020010151611e26565b600101610fe9565b505050505050565b6008546001600160a01b031633146110865760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600d546201000090046001600160a01b0316156110d45760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b6110e56340d097c360e01b34611e81565b600d5460ff161561110957604051631bbdf5c560e31b815260040160405180910390fd5b600d805460ff19166001908117909155611124908290611cab565b50565b61113283838361083e565b6001600160a01b0382163b15806111db5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf919061252c565b6001600160e01b031916145b61121a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610744565b505050565b6008546001600160a01b031633146112685760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600d546201000090046001600160a01b0316156112b65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b6112c763044df8e760e41b34611e81565b6112d16001611f31565b565b6000818152600260205260409020546001600160a01b0316806113255760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610744565b919050565b60006001600160a01b0382166113825760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610744565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146113e75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600d805461ff001916610100831515908102919091179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b031633146114755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600d546201000090046001600160a01b03166114c25760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b600d54604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d91906124ca565b905061155063044df8e760e41b82611e81565b600d5461156e906201000090046001600160a01b0316833084611d9a565b6115786001611f31565b5050565b6001805461064190612441565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61160085858561083e565b6001600160a01b0384163b15806116975750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906116489033908a90899089908990600401612549565b6020604051808303816000875af1158015611667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168b919061252c565b6001600160e01b031916145b6116d65760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610744565b5050505050565b60608160011461170057604051631bf4348160e31b815260040160405180910390fd5b600d5460ff1661172357604051634d5e5fb360e01b815260040160405180910390fd5b600c805461173090612441565b80601f016020809104026020016040519081016040528092919081815260200182805461175c90612441565b80156117a95780601f1061177e576101008083540402835291602001916117a9565b820191906000526020600020905b81548152906001019060200180831161178c57829003601f168201915b50505050509050919050565b6008546001600160a01b031633146117fe5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600d546201000090046001600160a01b031661184b5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610744565b600d54604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092620100009004169063dd62ed3e90604401602060405180830381865afa1580156118a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c691906124ca565b90506118d96340d097c360e01b82611e81565b600d5460ff16156118fd57604051631bbdf5c560e31b815260040160405180910390fd5b600d5461191b906201000090046001600160a01b0316833084611d9a565b600d805460ff1916600190811790915561121a908490611cab565b6008546001600160a01b0316331461197f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610744565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156119c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ed91906124ca565b905060008167ffffffffffffffff811115611a0a57611a0a6124e3565b604051908082528060200260200182016040528015611a33578160200160208202803683370190505b50905060008267ffffffffffffffff811115611a5157611a516124e3565b604051908082528060200260200182016040528015611a7a578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb91906124ca565b90505b84821015611c5257600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6491906124f9565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd891906124ca565b905081868581518110611bed57611bed612516565b6001600160a01b0390921660209283029190910190910152612710611c1382606461247b565b611c1d908561247b565b611c2791906124a8565b858581518110611c3957611c39612516565b6020026020010181815250508360010193505050611aee565b60005b85811015611ca257611c9a87868381518110611c7357611c73612516565b6020026020010151868481518110611c8d57611c8d612516565b6020026020010151611ffe565b600101611c55565b50505050505050565b611cb5828261208a565b6001600160a01b0382163b1580611d5b5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4f919061252c565b6001600160e01b031916145b6115785760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610744565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116d65760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610744565b600080600080600085875af190508061121a5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610744565b6008546001600160a01b0316803b63ffffffff8116600003611ea35750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1a91906124ca565b90508084146116d65763f7760f256000526004601cfd5b6000818152600260205260409020546001600160a01b031680611f835760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610744565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806120845760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610744565b50505050565b6001600160a01b0382166120e05760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610744565b6000818152600260205260409020546001600160a01b0316156121455760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610744565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461112457600080fd5b6000602082840312156121d857600080fd5b81356121e3816121b0565b9392505050565b600060208083528351808285015260005b81811015612217578581018301518582016040015282016121fb565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561224a57600080fd5b5035919050565b6001600160a01b038116811461112457600080fd5b6000806040838503121561227957600080fd5b823561228481612251565b946020939093013593505050565b6000602082840312156122a457600080fd5b81356121e381612251565b6000806000806000608086880312156122c757600080fd5b85356122d281612251565b945060208601356122e281612251565b935060408601359250606086013567ffffffffffffffff8082111561230657600080fd5b818801915088601f83011261231a57600080fd5b81358181111561232957600080fd5b89602082850101111561233b57600080fd5b9699959850939650602001949392505050565b60008060006060848603121561236357600080fd5b833561236e81612251565b9250602084013561237e81612251565b929592945050506040919091013590565b600080604083850312156123a257600080fd5b50508035926020909101359150565b8035801515811461132557600080fd5b6000602082840312156123d357600080fd5b6121e3826123b1565b600080604083850312156123ef57600080fd5b82356123fa81612251565b9150610b73602084016123b1565b6000806040838503121561241b57600080fd5b823561242681612251565b9150602083013561243681612251565b809150509250929050565b600181811c9082168061245557607f821691505b60208210810361247557634e487b7160e01b600052602260045260246000fd5b50919050565b60008160001904831182151516156124a357634e487b7160e01b600052601160045260246000fd5b500290565b6000826124c557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156124dc57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561250b57600080fd5b81516121e381612251565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561253e57600080fd5b81516121e3816121b0565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea164736f6c6343000810000a";

type ERC721MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Minimal__factory extends ContractFactory {
  constructor(...args: ERC721MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Minimal> {
    return super.deploy(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Minimal>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Minimal {
    return super.attach(address) as ERC721Minimal;
  }
  override connect(signer: Signer): ERC721Minimal__factory {
    return super.connect(signer) as ERC721Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MinimalInterface {
    return new utils.Interface(_abi) as ERC721MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC721Minimal;
  }
}
