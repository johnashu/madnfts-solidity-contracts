/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Minimal,
  ERC721MinimalInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "burnERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "safeMintERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620026e6380380620026e6833981016040819052620000399162000254565b80878760006200004a8382620003c6565b506001620000598282620003c6565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600c620000b68682620003c6565b50600b849055600a80546001600160a01b0385166001600160a01b031991821681179092556001600160601b03841660068190556007805490921690921790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505062000492565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018c57600080fd5b81516001600160401b0380821115620001a957620001a962000164565b604051601f8301601f19908116603f01168101908282118183101715620001d457620001d462000164565b81604052838152602092508683858801011115620001f157600080fd5b600091505b83821015620002155785820183015181830184015290820190620001f6565b600093810190920192909252949350505050565b6001600160a01b03811681146200023f57600080fd5b50565b80516200024f8162000229565b919050565b600080600080600080600060e0888a0312156200027057600080fd5b87516001600160401b03808211156200028857600080fd5b620002968b838c016200017a565b985060208a0151915080821115620002ad57600080fd5b620002bb8b838c016200017a565b975060408a0151915080821115620002d257600080fd5b50620002e18a828b016200017a565b955050606088015193506080880151620002fb8162000229565b60a08901519093506001600160601b03811681146200031957600080fd5b91506200032960c0890162000242565b905092959891949750929550565b600181811c908216806200034c57607f821691505b6020821081036200036d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c157600081815260208120601f850160051c810160208610156200039c5750805b601f850160051c820191505b81811015620003bd57828155600101620003a8565b5050505b505050565b81516001600160401b03811115620003e257620003e262000164565b620003fa81620003f3845462000337565b8462000373565b602080601f831160018114620004325760008415620004195750858301515b600019600386901b1c1916600185901b178555620003bd565b600085815260208120601f198616915b82811015620004635788860151825594840194600190910190840162000442565b5085821015620004825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61224480620004a26000396000f3fe6080604052600436106101b75760003560e01c806340d097c3116100ec57806395d89b411161008a578063b88d4fde11610064578063b88d4fde146104dd578063c87b56dd146104fd578063e985e9c51461051d578063f4f3b2001461055857600080fd5b806395d89b4114610492578063a035b1fe146104a7578063a22cb465146104bd57600080fd5b80636352211e116100c65780636352211e1461040457806370a0823114610424578063879fbedf146104525780638da5cb5b1461047257600080fd5b806340d097c3146103c957806342842e0e146103dc57806344df8e70146103fc57600080fd5b806322ab47a1116101595780632a55205a116101335780632a55205a1461034257806334b7e31f146103815780633ccfd60b146103945780633cd8045e146103a957600080fd5b806322ab47a1146102fb57806323b872dd1461031a57806326092b831461033a57600080fd5b8063081812fc11610195578063081812fc14610228578063095ea7b31461027657806313af403514610296578063150b7a02146102b657600080fd5b806301ffc9a7146101bc57806304eac12d146101f157806306fdde0314610206575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611e15565b610578565b60405190151581526020015b60405180910390f35b6102046101ff366004611e4e565b6105e5565b005b34801561021257600080fd5b5061021b61070b565b6040516101e89190611e99565b34801561023457600080fd5b5061025e610243366004611ee7565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b34801561028257600080fd5b50610204610291366004611f00565b610799565b3480156102a257600080fd5b506102046102b1366004611f2c565b61087b565b3480156102c257600080fd5b506102e26102d1366004611f49565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101e8565b34801561030757600080fd5b50600d546101dc90610100900460ff1681565b34801561032657600080fd5b50610204610335366004611fe8565b610910565b610204610af6565b34801561034e57600080fd5b5061036261035d366004612029565b610bdd565b604080516001600160a01b0390931683526020830191909152016101e8565b61020461038f36600461204b565b610c13565b3480156103a057600080fd5b50610204610cfe565b3480156103b557600080fd5b50600a5461025e906001600160a01b031681565b6102046103d7366004611f2c565b611000565b3480156103e857600080fd5b506102046103f7366004611fe8565b61109c565b61020461118f565b34801561041057600080fd5b5061025e61041f366004611ee7565b6111f5565b34801561043057600080fd5b5061044461043f366004611f2c565b61124c565b6040519081526020016101e8565b34801561045e57600080fd5b5061020461046d366004612094565b6112c0565b34801561047e57600080fd5b5060085461025e906001600160a01b031681565b34801561049e57600080fd5b5061021b61134e565b3480156104b357600080fd5b50610444600b5481565b3480156104c957600080fd5b506102046104d83660046120af565b61135b565b3480156104e957600080fd5b506102046104f8366004611f49565b6113c7565b34801561050957600080fd5b5061021b610518366004611ee7565b6114af565b34801561052957600080fd5b506101dc61053836600461204b565b600560209081526000928352604080842090915290825290205460ff1681565b34801561056457600080fd5b50610204610573366004611f2c565b611587565b60006301ffc9a760e01b6001600160e01b0319831614806105a957506380ac58cd60e01b6001600160e01b03198316145b806105c45750635b5e139f60e01b6001600160e01b03198316145b806105df575063152a902d60e11b6001600160e01b03198316145b92915050565b6008546001600160a01b031633146106335760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301526000919083169063dd62ed3e90604401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906120db565b90506106ba6340d097c360e01b826118fc565b600d5460ff16156106de57604051631bbdf5c560e31b815260040160405180910390fd5b6106ea828430846119ac565b600d805460ff19166001908117909155610705908590611a38565b50505050565b60008054610718906120f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610744906120f4565b80156107915780601f1061076657610100808354040283529160200191610791565b820191906000526020600020905b81548152906001019060200180831161077457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806107e257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61081f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161062a565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108c45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146109795760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161062a565b6001600160a01b0382166109cf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161062a565b336001600160a01b0384161480610a0957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610a2a57506000818152600460205260409020546001600160a01b031633145b610a675760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161062a565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600954600114610b485760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161062a565b6002600955600d54610100900460ff16610b755760405163287588a160e11b815260040160405180910390fd5b600b543414610b975760405163f7760f2560e01b815260040160405180910390fd5b600d5460ff1615610bbb57604051631bbdf5c560e31b815260040160405180910390fd5b600d805460ff19166001908117909155610bd6903390611a38565b6001600955565b6007546006546001600160a01b039091169060009061271090610c00908561212e565b610c0a919061215b565b90509250929050565b6008546001600160a01b03163314610c5c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301526000919083169063dd62ed3e90604401602060405180830381865afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd091906120db565b9050610ce363044df8e760e41b826118fc565b610cef828430846119ac565b610cf96001611b2b565b505050565b6008546001600160a01b03163314610d475760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906120db565b905060008167ffffffffffffffff811115610dd257610dd261217d565b604051908082528060200260200182016040528015610dfb578160200160208202803683370190505b50905060008267ffffffffffffffff811115610e1957610e1961217d565b604051908082528060200260200182016040528015610e42578160200160208202803683370190505b5090504760005b84811015610fa957600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190612193565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3391906120db565b905081868481518110610f4857610f486121b0565b6001600160a01b0390921660209283029190910190910152612710610f6e82606461212e565b610f78908661212e565b610f82919061215b565b858481518110610f9457610f946121b0565b60209081029190910101525050600101610e49565b60005b85811015610ff857610ff0858281518110610fc957610fc96121b0565b6020026020010151858381518110610fe357610fe36121b0565b6020026020010151611bf8565b600101610fac565b505050505050565b6008546001600160a01b031633146110495760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b61105a6340d097c360e01b346118fc565b600d5460ff161561107e57604051631bbdf5c560e31b815260040160405180910390fd5b600d805460ff19166001908117909155611099908290611a38565b50565b6110a7838383610910565b6001600160a01b0382163b15806111505750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015611120573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114491906121c6565b6001600160e01b031916145b610cf95760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161062a565b6008546001600160a01b031633146111d85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b6111e963044df8e760e41b346118fc565b6111f36001611b2b565b565b6000818152600260205260409020546001600160a01b0316806112475760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161062a565b919050565b60006001600160a01b0382166112a45760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161062a565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146113095760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b600d805461ff001916610100831515908102919091179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b60018054610718906120f4565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6113d2858585610910565b6001600160a01b0384163b15806114695750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a029061141a9033908a908990899089906004016121e3565b6020604051808303816000875af1158015611439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145d91906121c6565b6001600160e01b031916145b6114a85760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161062a565b5050505050565b6060816001146114d257604051631bf4348160e31b815260040160405180910390fd5b600d5460ff166114f557604051634d5e5fb360e01b815260040160405180910390fd5b600c8054611502906120f4565b80601f016020809104026020016040519081016040528092919081815260200182805461152e906120f4565b801561157b5780601f106115505761010080835404028352916020019161157b565b820191906000526020600020905b81548152906001019060200180831161155e57829003601f168201915b50505050509050919050565b6008546001600160a01b031633146115d05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161062a565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa15801561161a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163e91906120db565b905060008167ffffffffffffffff81111561165b5761165b61217d565b604051908082528060200260200182016040528015611684578160200160208202803683370190505b50905060008267ffffffffffffffff8111156116a2576116a261217d565b6040519080825280602002602001820160405280156116cb578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015611718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173c91906120db565b90505b848210156118a357600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b59190612193565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182991906120db565b90508186858151811061183e5761183e6121b0565b6001600160a01b039092166020928302919091019091015261271061186482606461212e565b61186e908561212e565b611878919061215b565b85858151811061188a5761188a6121b0565b602002602001018181525050836001019350505061173f565b60005b858110156118f3576118eb878683815181106118c4576118c46121b0565b60200260200101518684815181106118de576118de6121b0565b6020026020010151611c53565b6001016118a6565b50505050505050565b6008546001600160a01b0316803b63ffffffff811660000361191e5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199591906120db565b90508084146114a85763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806114a85760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161062a565b611a428282611cd9565b6001600160a01b0382163b1580611ae85750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adc91906121c6565b6001600160e01b031916145b611b275760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161062a565b5050565b6000818152600260205260409020546001600160a01b031680611b7d5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161062a565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af1905080610cf95760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161062a565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806107055760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161062a565b6001600160a01b038216611d2f5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161062a565b6000818152600260205260409020546001600160a01b031615611d945760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161062a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461109957600080fd5b600060208284031215611e2757600080fd5b8135611e3281611dff565b9392505050565b6001600160a01b038116811461109957600080fd5b600080600060608486031215611e6357600080fd5b8335611e6e81611e39565b92506020840135611e7e81611e39565b91506040840135611e8e81611e39565b809150509250925092565b600060208083528351808285015260005b81811015611ec657858101830151858201604001528201611eaa565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215611ef957600080fd5b5035919050565b60008060408385031215611f1357600080fd5b8235611f1e81611e39565b946020939093013593505050565b600060208284031215611f3e57600080fd5b8135611e3281611e39565b600080600080600060808688031215611f6157600080fd5b8535611f6c81611e39565b94506020860135611f7c81611e39565b935060408601359250606086013567ffffffffffffffff80821115611fa057600080fd5b818801915088601f830112611fb457600080fd5b813581811115611fc357600080fd5b896020828501011115611fd557600080fd5b9699959850939650602001949392505050565b600080600060608486031215611ffd57600080fd5b833561200881611e39565b9250602084013561201881611e39565b929592945050506040919091013590565b6000806040838503121561203c57600080fd5b50508035926020909101359150565b6000806040838503121561205e57600080fd5b823561206981611e39565b9150602083013561207981611e39565b809150509250929050565b8035801515811461124757600080fd5b6000602082840312156120a657600080fd5b611e3282612084565b600080604083850312156120c257600080fd5b82356120cd81611e39565b9150610c0a60208401612084565b6000602082840312156120ed57600080fd5b5051919050565b600181811c9082168061210857607f821691505b60208210810361212857634e487b7160e01b600052602260045260246000fd5b50919050565b600081600019048311821515161561215657634e487b7160e01b600052601160045260246000fd5b500290565b60008261217857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156121a557600080fd5b8151611e3281611e39565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156121d857600080fd5b8151611e3281611dff565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea164736f6c6343000810000a";

type ERC721MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Minimal__factory extends ContractFactory {
  constructor(...args: ERC721MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Minimal> {
    return super.deploy(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC721Minimal>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Minimal {
    return super.attach(address) as ERC721Minimal;
  }
  override connect(signer: Signer): ERC721Minimal__factory {
    return super.connect(signer) as ERC721Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MinimalInterface {
    return new utils.Interface(_abi) as ERC721MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC721Minimal;
  }
}
