/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Minimal,
  ERC721MinimalInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620027773803806200277783398101604081905262000039916200026e565b81888860006200004a8382620003e3565b506001620000598282620003e3565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600d620000b68782620003e3565b50600c859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b0386166006819055600780548416909417909355600b8054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004af565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019c57600080fd5b81516001600160401b0380821115620001b957620001b962000174565b604051601f8301601f19908116603f01168101908282118183101715620001e457620001e462000174565b816040528381526020925086838588010111156200020157600080fd5b600091505b8382101562000225578582018301518183018401529082019062000206565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025157600080fd5b919050565b80516001600160601b03811681146200025157600080fd5b600080600080600080600080610100898b0312156200028c57600080fd5b88516001600160401b0380821115620002a457600080fd5b620002b28c838d016200018a565b995060208b0151915080821115620002c957600080fd5b620002d78c838d016200018a565b985060408b0151915080821115620002ee57600080fd5b50620002fd8b828c016200018a565b965050606089015194506200031560808a0162000239565b93506200032560a08a0162000256565b92506200033560c08a0162000239565b91506200034560e08a0162000239565b90509295985092959890939650565b600181811c908216806200036957607f821691505b6020821081036200038a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003de57600081815260208120601f850160051c81016020861015620003b95750805b601f850160051c820191505b81811015620003da57828155600101620003c5565b5050505b505050565b81516001600160401b03811115620003ff57620003ff62000174565b620004178162000410845462000354565b8462000390565b602080601f8311600181146200044f5760008415620004365750858301515b600019600386901b1c1916600185901b178555620003da565b600085815260208120601f198616915b8281101562000480578886015182559484019460019091019084016200045f565b50858210156200049f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6122b880620004bf6000396000f3fe6080604052600436106101b75760003560e01c806370a08231116100ec578063a035b1fe1161008a578063c87b56dd11610064578063c87b56dd1461051a578063e1c38ed91461053a578063e59aee0c14610550578063e985e9c51461056357600080fd5b8063a035b1fe146104c4578063a22cb465146104da578063b88d4fde146104fa57600080fd5b806389afcb44116100c657806389afcb441461045c5780638da5cb5b1461046f5780639456fbcc1461048f57806395d89b41146104af57600080fd5b806370a08231146103ee578063785e9e861461041c578063879fbedf1461043c57600080fd5b806323b872dd116101595780633cd8045e116101335780633cd8045e1461036e57806342842e0e1461038e57806351cff8d9146103ae5780636352211e146103ce57600080fd5b806323b872dd1461030757806326092b83146103275780632a55205a1461032f57600080fd5b8063095ea7b311610195578063095ea7b31461026157806313af403514610283578063150b7a02146102a357806322ab47a1146102e857600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611ea6565b61059e565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b5061020661060b565b6040516101e89190611eca565b34801561021f57600080fd5b5061024961022e366004611f18565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b34801561026d57600080fd5b5061028161027c366004611f46565b610699565b005b34801561028f57600080fd5b5061028161029e366004611f72565b610780565b3480156102af57600080fd5b506102cf6102be366004611f8f565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101e8565b3480156102f457600080fd5b50600e546101dc90610100900460ff1681565b34801561031357600080fd5b5061028161032236600461202e565b610815565b6102816109fb565b34801561033b57600080fd5b5061034f61034a36600461206f565b610b32565b604080516001600160a01b0390931683526020830191909152016101e8565b34801561037a57600080fd5b50600a54610249906001600160a01b031681565b34801561039a57600080fd5b506102816103a936600461202e565b610b68565b3480156103ba57600080fd5b506102816103c9366004611f72565b610c60565b3480156103da57600080fd5b506102496103e9366004611f18565b610faa565b3480156103fa57600080fd5b5061040e610409366004611f72565b611001565b6040519081526020016101e8565b34801561042857600080fd5b50600b54610249906001600160a01b031681565b34801561044857600080fd5b506102816104573660046120a1565b611075565b61028161046a366004611f72565b611103565b34801561047b57600080fd5b50600854610249906001600160a01b031681565b34801561049b57600080fd5b506102816104aa3660046120bc565b611164565b3480156104bb57600080fd5b50610206611581565b3480156104d057600080fd5b5061040e600c5481565b3480156104e657600080fd5b506102816104f53660046120f5565b61158e565b34801561050657600080fd5b50610281610515366004611f8f565b6115fa565b34801561052657600080fd5b50610206610535366004611f18565b6116e2565b34801561054657600080fd5b5061040e600f5481565b61028161055e3660046120bc565b6117ba565b34801561056f57600080fd5b506101dc61057e3660046120bc565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806105cf57506380ac58cd60e01b6001600160e01b03198316145b806105ea5750635b5e139f60e01b6001600160e01b03198316145b80610605575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461061890612121565b80601f016020809104026020016040519081016040528092919081815260200182805461064490612121565b80156106915780601f1061066657610100808354040283529160200191610691565b820191906000526020600020905b81548152906001019060200180831161067457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806106e257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107245760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146107c95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b0384811691161461087e5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161071b565b6001600160a01b0382166108d45760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161071b565b336001600160a01b038416148061090e57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061092f57506000818152600460205260409020546001600160a01b031633145b61096c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161071b565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600954600114610a4d5760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161071b565b60026009556000610a5d33611851565b90506000610a716340d097c360e01b6118de565b905080600f6000828254610a859190612171565b9091555050600e54610100900460ff16610ab25760405163287588a160e11b815260040160405180910390fd5b80600c54610ac09190612171565b8214610adf5760405163f7760f2560e01b815260040160405180910390fd5b600e5460ff1615610b0357604051631bbdf5c560e31b815260040160405180910390fd5b610b0e336002611981565b600e805460ff19166001908117909155610b29903390611a19565b50506001600955565b6007546006546001600160a01b039091169060009061271090610b559085612184565b610b5f91906121a3565b90509250929050565b610b73838383610815565b6001600160a01b0382163b1580610c1c5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610bec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1091906121c5565b6001600160e01b031916145b610c5b5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b505050565b6008546001600160a01b03163314610ca95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1791906121e2565b905060008167ffffffffffffffff811115610d3457610d346121fb565b604051908082528060200260200182016040528015610d5d578160200160208202803683370190505b50905060008267ffffffffffffffff811115610d7b57610d7b6121fb565b604051908082528060200260200182016040528015610da4578160200160208202803683370190505b509050600080600f54118015610dc257506001600160a01b03851615155b15610dec57600f54610dd49047612211565b9050610de285600f54611b08565b6000600f55610def565b50475b60005b84811015610f5257600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190612224565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc91906121e2565b905081868481518110610ef157610ef1612241565b6001600160a01b0390921660209283029190910190910152612710610f17826064612184565b610f219086612184565b610f2b91906121a3565b858481518110610f3d57610f3d612241565b60209081029190910101525050600101610df2565b60005b85811015610fa157610f99858281518110610f7257610f72612241565b6020026020010151858381518110610f8c57610f8c612241565b6020026020010151611b08565b600101610f55565b50505050505050565b6000818152600260205260409020546001600160a01b031680610ffc5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161071b565b919050565b60006001600160a01b0382166110595760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161071b565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146110be5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600e805461ff001916610100831515908102919091179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b0316331461114c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b611157816001611981565b6111616001611b63565b50565b6008546001600160a01b031633146111ad5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b91906121e2565b905060008167ffffffffffffffff811115611238576112386121fb565b604051908082528060200260200182016040528015611261578160200160208202803683370190505b50905060008267ffffffffffffffff81111561127f5761127f6121fb565b6040519080825280602002602001820160405280156112a8578160200160208202803683370190505b509050600080600f541180156112c657506001600160a01b03851615155b1561135957600f546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133691906121e2565b6113409190612211565b905061134f8686600f54611c30565b6000600f556113c4565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906121e2565b90505b60005b8481101561152757600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190612224565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b191906121e2565b9050818684815181106114c6576114c6612241565b6001600160a01b03909216602092830291909101909101526127106114ec826064612184565b6114f69086612184565b61150091906121a3565b85848151811061151257611512612241565b602090810291909101015250506001016113c7565b60005b858110156115775761156f8886838151811061154857611548612241565b602002602001015186848151811061156257611562612241565b6020026020010151611c30565b60010161152a565b5050505050505050565b6001805461061890612121565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611605858585610815565b6001600160a01b0384163b158061169c5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a029061164d9033908a90899089908990600401612257565b6020604051808303816000875af115801561166c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169091906121c5565b6001600160e01b031916145b6116db5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b5050505050565b60608160011461170557604051631bf4348160e31b815260040160405180910390fd5b600e5460ff1661172857604051634d5e5fb360e01b815260040160405180910390fd5b600d805461173590612121565b80601f016020809104026020016040519081016040528092919081815260200182805461176190612121565b80156117ae5780601f10611783576101008083540402835291602001916117ae565b820191906000526020600020905b81548152906001019060200180831161179157829003601f168201915b50505050509050919050565b6008546001600160a01b031633146118035760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600e5460ff161561182757604051631bbdf5c560e31b815260040160405180910390fd5b611832816000611981565b600e805460ff1916600190811790915561184d908390611a19565b5050565b600b546000906001600160a01b031661186a5734610605565b600b54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156118ba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060591906121e2565b6008546000906001600160a01b0316803b63ffffffff81161561197657600854604051633b7279e960e21b81526001600160e01b0319861660048201526001600160a01b039091169063edc9e7a490602401602060405180830381865afa15801561194d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197191906121e2565b611979565b60005b949350505050565b600061198c83611851565b9050336001600160a01b03841614806119ae5750600b546001600160a01b0316155b15610c5b578160ff166000036119d4576119cf6340d097c360e01b82611cbc565b6119f0565b8160ff166001036119f0576119f063044df8e760e41b82611cbc565b600b546001600160a01b031615610c5b57600b54610c5b906001600160a01b0316843084611cde565b611a238282611d6a565b6001600160a01b0382163b1580611ac95750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abd91906121c5565b6001600160e01b031916145b61184d5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b600080600080600085875af1905080610c5b5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161071b565b6000818152600260205260409020546001600160a01b031680611bb55760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161071b565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611cb65760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161071b565b50505050565b6000611cc7836118de565b9050808214610c5b5763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806116db5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161071b565b6001600160a01b038216611dc05760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161071b565b6000818152600260205260409020546001600160a01b031615611e255760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161071b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461116157600080fd5b600060208284031215611eb857600080fd5b8135611ec381611e90565b9392505050565b600060208083528351808285015260005b81811015611ef757858101830151858201604001528201611edb565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215611f2a57600080fd5b5035919050565b6001600160a01b038116811461116157600080fd5b60008060408385031215611f5957600080fd5b8235611f6481611f31565b946020939093013593505050565b600060208284031215611f8457600080fd5b8135611ec381611f31565b600080600080600060808688031215611fa757600080fd5b8535611fb281611f31565b94506020860135611fc281611f31565b935060408601359250606086013567ffffffffffffffff80821115611fe657600080fd5b818801915088601f830112611ffa57600080fd5b81358181111561200957600080fd5b89602082850101111561201b57600080fd5b9699959850939650602001949392505050565b60008060006060848603121561204357600080fd5b833561204e81611f31565b9250602084013561205e81611f31565b929592945050506040919091013590565b6000806040838503121561208257600080fd5b50508035926020909101359150565b80358015158114610ffc57600080fd5b6000602082840312156120b357600080fd5b611ec382612091565b600080604083850312156120cf57600080fd5b82356120da81611f31565b915060208301356120ea81611f31565b809150509250929050565b6000806040838503121561210857600080fd5b823561211381611f31565b9150610b5f60208401612091565b600181811c9082168061213557607f821691505b60208210810361215557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106055761060561215b565b600081600019048311821515161561219e5761219e61215b565b500290565b6000826121c057634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156121d757600080fd5b8151611ec381611e90565b6000602082840312156121f457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b818103818111156106055761060561215b565b60006020828403121561223657600080fd5b8151611ec381611f31565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea164736f6c6343000810000a";

type ERC721MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Minimal__factory extends ContractFactory {
  constructor(...args: ERC721MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Minimal> {
    return super.deploy(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Minimal>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Minimal {
    return super.attach(address) as ERC721Minimal;
  }
  override connect(signer: Signer): ERC721Minimal__factory {
    return super.connect(signer) as ERC721Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MinimalInterface {
    return new utils.Interface(_abi) as ERC721MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC721Minimal;
  }
}
