/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Whitelist,
  ERC721WhitelistInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "FreeClaimClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxFreeReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxWhitelistReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WhitelistMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620035ee380380620035ee83398101604081905262000039916200027b565b80888860006200004a8382620003e7565b506001620000598282620003e7565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b68782620003e7565b50600c859055600d849055600e8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600681905560078054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004b3565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a957600080fd5b81516001600160401b0380821115620001c657620001c662000181565b604051601f8301601f19908116603f01168101908282118183101715620001f157620001f162000181565b816040528381526020925086838588010111156200020e57600080fd5b600091505b8382101562000232578582018301518183018401529082019062000213565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025e57600080fd5b919050565b80516001600160601b03811681146200025e57600080fd5b600080600080600080600080610100898b0312156200029957600080fd5b88516001600160401b0380821115620002b157600080fd5b620002bf8c838d0162000197565b995060208b0151915080821115620002d657600080fd5b620002e48c838d0162000197565b985060408b0151915080821115620002fb57600080fd5b506200030a8b828c0162000197565b96505060608901519450608089015193506200032960a08a0162000246565b92506200033960c08a0162000263565b91506200034960e08a0162000246565b90509295985092959890939650565b600181811c908216806200036d57607f821691505b6020821081036200038e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e257600081815260208120601f850160051c81016020861015620003bd5750805b601f850160051c820191505b81811015620003de57828155600101620003c9565b5050505b505050565b81516001600160401b0381111562000403576200040362000181565b6200041b8162000414845462000358565b8462000394565b602080601f8311600181146200045357600084156200043a5750858301515b600019600386901b1c1916600185901b178555620003de565b600085815260208120601f198616915b82811015620004845788860151825594840194600190910190840162000463565b5085821015620004a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61312b80620004c36000396000f3fe60806040526004361061031e5760003560e01c8063714c5398116101a5578063a945bf80116100ec578063c884ef8311610095578063e985e9c51161006f578063e985e9c51461089a578063ef4eb030146108d5578063f4f3b200146108e8578063fc1a1c361461090857600080fd5b8063c884ef8314610834578063c890476714610864578063d5abeb011461088457600080fd5b8063b88d4fde116100c6578063b88d4fde146107d4578063c6a768f4146107f4578063c87b56dd1461081457600080fd5b8063a945bf8014610795578063aa98e0c6146107ab578063b80f55c9146107c157600080fd5b80638fc3b5491161014e57806395d89b411161012857806395d89b411461074d578063a0712d6814610762578063a22cb4651461077557600080fd5b80638fc3b54914610708578063922400ff1461071d578063953f049d1461073757600080fd5b8063879fbedf1161017f578063879fbedf146106b25780638990694f146106d25780638da5cb5b146106e857600080fd5b8063714c53981461065d5780637e62f3b31461067257806386997e7d1461069257600080fd5b806327c1918611610269578063440754d81161021257806358381669116101ec578063583816691461060a5780636352211e1461061d57806370a082311461063d57600080fd5b8063440754d8146105c1578063485a68a3146105d457806355f804b3146105ea57600080fd5b80633ccfd60b116102435780633ccfd60b146105675780633cd8045e1461057c57806342842e0e146105a157600080fd5b806327c19186146104f25780632a55205a14610512578063326f9ad31461055157600080fd5b806313af4035116102cb57806322ab47a1116102a557806322ab47a1146104a257806323b872dd146104bc57806324a6ab0c146104dc57600080fd5b806313af403514610428578063150b7a021461044857806318160ddd1461048d57600080fd5b8063081812fc116102fc578063081812fc1461039e578063095ea7b3146103ec578063121c87811461040e57600080fd5b806301ffc9a7146103235780630451a9f11461035857806306fdde031461037c575b600080fd5b34801561032f57600080fd5b5061034361033e3660046128be565b61091e565b60405190151581526020015b60405180910390f35b34801561036457600080fd5b5061036e60185481565b60405190815260200161034f565b34801561038857600080fd5b5061039161098b565b60405161034f9190612906565b3480156103aa57600080fd5b506103d46103b9366004612939565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161034f565b3480156103f857600080fd5b5061040c610407366004612967565b610a19565b005b34801561041a57600080fd5b506017546103439060ff1681565b34801561043457600080fd5b5061040c610443366004612993565b610b00565b34801561045457600080fd5b506104746104633660046129b0565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161034f565b34801561049957600080fd5b5061036e610b95565b3480156104ae57600080fd5b50600e546103439060ff1681565b3480156104c857600080fd5b5061040c6104d7366004612a4f565b610ba5565b3480156104e857600080fd5b5061036e60155481565b3480156104fe57600080fd5b5061040c61050d366004612a90565b610d8b565b34801561051e57600080fd5b5061053261052d366004612abc565b610e1f565b604080516001600160a01b03909316835260208301919091520161034f565b34801561055d57600080fd5b5061036e60165481565b34801561057357600080fd5b5061040c610e55565b34801561058857600080fd5b50600e546103d49061010090046001600160a01b031681565b3480156105ad57600080fd5b5061040c6105bc366004612a4f565b61116d565b61040c6105cf366004612b2a565b611265565b3480156105e057600080fd5b5061036e60145481565b3480156105f657600080fd5b5061040c610605366004612bb3565b6113f3565b61040c610618366004612c48565b61148a565b34801561062957600080fd5b506103d4610638366004612939565b611612565b34801561064957600080fd5b5061036e610658366004612993565b611669565b34801561066957600080fd5b506103916116dd565b34801561067e57600080fd5b5061040c61068d366004612cb3565b61176f565b34801561069e57600080fd5b5061040c6106ad366004612a90565b6117f5565b3480156106be57600080fd5b5061040c6106cd366004612cb3565b611881565b3480156106de57600080fd5b5061036e60135481565b3480156106f457600080fd5b506008546103d4906001600160a01b031681565b34801561071457600080fd5b50601a5461036e565b34801561072957600080fd5b506012546103439060ff1681565b34801561074357600080fd5b5061036e60105481565b34801561075957600080fd5b50610391611907565b61040c610770366004612939565b611914565b34801561078157600080fd5b5061040c610790366004612cce565b611a2e565b3480156107a157600080fd5b5061036e600c5481565b3480156107b757600080fd5b5061036e60115481565b61040c6107cf366004612cfa565b611a9a565b3480156107e057600080fd5b5061040c6107ef3660046129b0565b611b4e565b34801561080057600080fd5b5061040c61080f366004612cb3565b611c36565b34801561082057600080fd5b5061039161082f366004612939565b611cbc565b34801561084057600080fd5b5061034361084f366004612993565b60196020526000908152604090205460ff1681565b34801561087057600080fd5b5061040c61087f366004612b2a565b611d13565b34801561089057600080fd5b5061036e600d5481565b3480156108a657600080fd5b506103436108b5366004612da0565b600560209081526000928352604080842090915290825290205460ff1681565b61040c6108e3366004612939565b611e66565b3480156108f457600080fd5b5061040c610903366004612993565b611fc1565b34801561091457600080fd5b5061036e600f5481565b60006301ffc9a760e01b6001600160e01b03198316148061094f57506380ac58cd60e01b6001600160e01b03198316145b8061096a5750635b5e139f60e01b6001600160e01b03198316145b80610985575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461099890612dd9565b80601f01602080910402602001604051908101604052809291908181526020018280546109c490612dd9565b8015610a115780601f106109e657610100808354040283529160200191610a11565b820191906000526020600020905b8154815290600101906020018083116109f457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b031633811480610a6257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b610aa45760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b03163314610b495760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610ba0600a5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610c0e5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610a9b565b6001600160a01b038216610c645760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610a9b565b336001600160a01b0384161480610c9e57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610cbf57506000818152600460205260409020546001600160a01b031633145b610cfc5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a9b565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008546001600160a01b03163314610dd45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b601883905560148290556016819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6007546006546001600160a01b039091169060009061271090610e429085612e29565b610e4c9190612e48565b90509250929050565b6008546001600160a01b03163314610e9e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190612e6a565b905060008167ffffffffffffffff811115610f3457610f34612b6c565b604051908082528060200260200182016040528015610f5d578160200160208202803683370190505b50905060008267ffffffffffffffff811115610f7b57610f7b612b6c565b604051908082528060200260200182016040528015610fa4578160200160208202803683370190505b5090504760005b8481101561111657600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015611002573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110269190612e83565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190612e6a565b9050818684815181106110b5576110b5612ea0565b6001600160a01b03909216602092830291909101909101526127106110db826064612e29565b6110e59086612e29565b6110ef9190612e48565b85848151811061110157611101612ea0565b60209081029190910101525050600101610fab565b60005b858110156111655761115d85828151811061113657611136612ea0565b602002602001015185838151811061115057611150612ea0565b6020026020010151612343565b600101611119565b505050505050565b611178838383610ba5565b6001600160a01b0382163b15806112215750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112159190612eb6565b6001600160e01b031916145b6112605760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a9b565b505050565b6009546001146112a45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a9b565b60026009556008546001600160a01b031633146112f25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b601454601554829190611306908390612ed3565b11156113255760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611332600a5490565b61133c9190612ed3565b111561135b5760405163fc3fc71f60e01b815260040160405180910390fd5b61136b6340d097c360e01b61239e565b6015805483918291600090611381908490612ed3565b90915550600090505b818110156113d1576113c98585838181106113a7576113a7612ea0565b90506020020160208101906113bc9190612993565b6113c4612453565b61247e565b60010161138a565b818110156113e75763dfb035c96000526004601cfd5b50506001600955505050565b6008546001600160a01b0316331461143c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b600b6114488282612f2c565b50806040516114579190612fec565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6009546001146114c95760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a9b565b600260095560125460ff166114f15760405163700a6c1f60e01b815260040160405180910390fd5b600f5460ff8416346115038284612e29565b146115215760405163f7760f2560e01b815260040160405180910390fd5b6011548490849061153483838333612571565b61155157604051631dc23a5f60e11b815260040160405180910390fd5b876010548160ff166013546115669190612ed3565b11156115855760405163a554e6e160e01b815260040160405180910390fd5b600d548160ff16611595600a5490565b61159f9190612ed3565b11156115be5760405163fc3fc71f60e01b815260040160405180910390fd5b6013805460ff8b1601905560005b8960ff168110156115eb576115e3336113c4612453565b6001016115cc565b898110156116015763dfb035c96000526004601cfd5b505060016009555050505050505050565b6000818152600260205260409020546001600160a01b0316806116645760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610a9b565b919050565b60006001600160a01b0382166116c15760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610a9b565b506001600160a01b031660009081526003602052604090205490565b6060600b80546116ec90612dd9565b80601f016020809104026020016040519081016040528092919081815260200182805461171890612dd9565b80156117655780601f1061173a57610100808354040283529160200191611765565b820191906000526020600020905b81548152906001019060200180831161174857829003601f168201915b5050505050905090565b6008546001600160a01b031633146117b85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b6017805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6008546001600160a01b0316331461183e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b600f839055601082905560118190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6008546001600160a01b031633146118ca5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6001805461099890612dd9565b6009546001146119535760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a9b565b6002600955600e5460ff1661197b576040516316851fc760e11b815260040160405180910390fd5b80601454601054600d5461198f9190613008565b6119999190613008565b816119a3600a5490565b6119ad9190612ed3565b11156119cc5760405163fc3fc71f60e01b815260040160405180910390fd5b600c5482346119db8284612e29565b146119f95760405163f7760f2560e01b815260040160405180910390fd5b60005b84811015611a1857611a10336113c4612453565b6001016119fc565b848110156113e75763dfb035c96000526004601cfd5b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314611ae35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b611af363044df8e760e41b61239e565b80516000905b80821015611b3857611b0b600a6125a9565b611b2d838381518110611b2057611b20612ea0565b60200260200101516125c6565b816001019150611af9565b808210156112605763dfb035c96000526004601cfd5b611b59858585610ba5565b6001600160a01b0384163b1580611bf05750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611ba19033908a9089908990899060040161301b565b6020604051808303816000875af1158015611bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be49190612eb6565b6001600160e01b031916145b611c2f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a9b565b5050505050565b6008546001600160a01b03163314611c7f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b6012805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b6060601a54821115611ce157604051635d68437560e11b815260040160405180910390fd5b600b611cec83612693565b604051602001611cfd92919061306f565b6040516020818303038152906040529050919050565b60175460ff16611d365760405163f44170cb60e01b815260040160405180910390fd5b60165482908290611d4983838333612571565b611d6657604051631dc23a5f60e11b815260040160405180910390fd5b60185460145481601554611d7a9190612ed3565b1115611d995760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611da6600a5490565b611db09190612ed3565b1115611dcf5760405163fc3fc71f60e01b815260040160405180910390fd5b3360009081526019602052604090205460ff1615611e0057604051630c8d9eab60e31b815260040160405180910390fd5b336000908152601960205260408120805460ff191660011790556018546015805490910190555b601854811015611e4557611e3d336113c4612453565b600101611e27565b601854811015611e5d5763dfb035c96000526004601cfd5b50505050505050565b600954600114611ea55760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a9b565b60026009556008546001600160a01b03163314611ef35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b8060145481601554611f059190612ed3565b1115611f245760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611f31600a5490565b611f3b9190612ed3565b1115611f5a5760405163fc3fc71f60e01b815260040160405180910390fd5b611f6a6340d097c360e01b61239e565b8160156000828254611f7c9190612ed3565b90915550600090505b82811015611fa157611f99326113c4612453565b600101611f85565b82811015611fb75763dfb035c96000526004601cfd5b5050600160095550565b6008546001600160a01b0316331461200a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a9b565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120839190612e6a565b905060008167ffffffffffffffff8111156120a0576120a0612b6c565b6040519080825280602002602001820160405280156120c9578160200160208202803683370190505b50905060008267ffffffffffffffff8111156120e7576120e7612b6c565b604051908082528060200260200182016040528015612110578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa15801561215d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121819190612e6a565b90505b848210156122f357600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa1580156121db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ff9190612e83565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa158015612255573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122799190612e6a565b90508186858151811061228e5761228e612ea0565b6001600160a01b03909216602092830291909101909101526127106122b4826064612e29565b6122be9085612e29565b6122c89190612e48565b8585815181106122da576122da612ea0565b6020026020010181815250508360010193505050612184565b60005b85811015611e5d5761233b8786838151811061231457612314612ea0565b602002602001015186848151811061232e5761232e612ea0565b60200260200101516126e2565b6001016122f6565b600080600080600085875af19050806112605760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610a9b565b6008546001600160a01b0316803b63ffffffff81166000036123bf57505050565b600854604051633b7279e960e21b81526001600160e01b0319851660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015612412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124369190612e6a565b905080341461244d5763f7760f256000526004601cfd5b50505050565b600061245d612768565b506001601a60008282546124719190612ed3565b9091555050601a54919050565b612488828261277f565b6001600160a01b0382163b158061252e5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156124fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125229190612eb6565b6001600160e01b031916145b61256d5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a9b565b5050565b60008360051b8501855b81811461259f57803580851160051b9485526020948518526040600020930161257b565b5050501492915050565b8054806125be5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b0316806126185760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610a9b565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b604080516080810191829052607f0190826030600a8206018353600a90045b80156126d057600183039250600a81066030018353600a90046126b2565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061244d5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a9b565b6000612778600a80546001019055565b50600a5490565b6001600160a01b0382166127d55760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610a9b565b6000818152600260205260409020546001600160a01b03161561283a5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610a9b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146128bb57600080fd5b50565b6000602082840312156128d057600080fd5b81356128db816128a5565b9392505050565b60005b838110156128fd5781810151838201526020016128e5565b50506000910152565b60208152600082518060208401526129258160408501602087016128e2565b601f01601f19169190910160400192915050565b60006020828403121561294b57600080fd5b5035919050565b6001600160a01b03811681146128bb57600080fd5b6000806040838503121561297a57600080fd5b823561298581612952565b946020939093013593505050565b6000602082840312156129a557600080fd5b81356128db81612952565b6000806000806000608086880312156129c857600080fd5b85356129d381612952565b945060208601356129e381612952565b935060408601359250606086013567ffffffffffffffff80821115612a0757600080fd5b818801915088601f830112612a1b57600080fd5b813581811115612a2a57600080fd5b896020828501011115612a3c57600080fd5b9699959850939650602001949392505050565b600080600060608486031215612a6457600080fd5b8335612a6f81612952565b92506020840135612a7f81612952565b929592945050506040919091013590565b600080600060608486031215612aa557600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612acf57600080fd5b50508035926020909101359150565b60008083601f840112612af057600080fd5b50813567ffffffffffffffff811115612b0857600080fd5b6020830191508360208260051b8501011115612b2357600080fd5b9250929050565b60008060208385031215612b3d57600080fd5b823567ffffffffffffffff811115612b5457600080fd5b612b6085828601612ade565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612bab57612bab612b6c565b604052919050565b60006020808385031215612bc657600080fd5b823567ffffffffffffffff80821115612bde57600080fd5b818501915085601f830112612bf257600080fd5b813581811115612c0457612c04612b6c565b612c16601f8201601f19168501612b82565b91508082528684828501011115612c2c57600080fd5b8084840185840137600090820190930192909252509392505050565b600080600060408486031215612c5d57600080fd5b833560ff81168114612c6e57600080fd5b9250602084013567ffffffffffffffff811115612c8a57600080fd5b612c9686828701612ade565b9497909650939450505050565b8035801515811461166457600080fd5b600060208284031215612cc557600080fd5b6128db82612ca3565b60008060408385031215612ce157600080fd5b8235612cec81612952565b9150610e4c60208401612ca3565b60006020808385031215612d0d57600080fd5b823567ffffffffffffffff80821115612d2557600080fd5b818501915085601f830112612d3957600080fd5b813581811115612d4b57612d4b612b6c565b8060051b9150612d5c848301612b82565b8181529183018401918481019088841115612d7657600080fd5b938501935b83851015612d9457843582529385019390850190612d7b565b98975050505050505050565b60008060408385031215612db357600080fd5b8235612dbe81612952565b91506020830135612dce81612952565b809150509250929050565b600181811c90821680612ded57607f821691505b602082108103612e0d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e4357612e43612e13565b500290565b600082612e6557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612e7c57600080fd5b5051919050565b600060208284031215612e9557600080fd5b81516128db81612952565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ec857600080fd5b81516128db816128a5565b8082018082111561098557610985612e13565b601f82111561126057600081815260208120601f850160051c81016020861015612f0d5750805b601f850160051c820191505b8181101561116557828155600101612f19565b815167ffffffffffffffff811115612f4657612f46612b6c565b612f5a81612f548454612dd9565b84612ee6565b602080601f831160018114612f8f5760008415612f775750858301515b600019600386901b1c1916600185901b178555611165565b600085815260208120601f198616915b82811015612fbe57888601518255948401946001909101908401612f9f565b5085821015612fdc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612ffe8184602087016128e2565b9190910192915050565b8181038181111561098557610985612e13565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080845461307d81612dd9565b6001828116801561309557600181146130aa576130d9565b60ff19841687528215158302870194506130d9565b8860005260208060002060005b858110156130d05781548a8201529084019082016130b7565b50505082870194505b5050505083516130ed8183602088016128e2565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Whitelist__factory extends ContractFactory {
  constructor(...args: ERC721WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Whitelist> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC721Whitelist>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Whitelist {
    return super.attach(address) as ERC721Whitelist;
  }
  override connect(signer: Signer): ERC721Whitelist__factory {
    return super.connect(signer) as ERC721Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WhitelistInterface {
    return new utils.Interface(_abi) as ERC721WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC721Whitelist;
  }
}
