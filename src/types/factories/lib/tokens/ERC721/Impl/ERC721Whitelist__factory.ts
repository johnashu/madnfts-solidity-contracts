/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Whitelist,
  ERC721WhitelistInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "FreeClaimClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxFreeReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxWhitelistReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WhitelistMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b506040516200398238038062003982833981016040819052620000399162000289565b81898960006200004a838262000408565b50600162000059828262000408565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b6888262000408565b50600c869055600d859055600e8054610100600160a81b0319166101006001600160a01b0387811682029290921792839055601b80546001600160a01b0319908116868516179091556001600160601b038716600681905560078054939095049093169116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004d4565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b757600080fd5b81516001600160401b0380821115620001d457620001d46200018f565b604051601f8301601f19908116603f01168101908282118183101715620001ff57620001ff6200018f565b816040528381526020925086838588010111156200021c57600080fd5b600091505b8382101562000240578582018301518183018401529082019062000221565b600093810190920192909252949350505050565b80516001600160a01b03811681146200026c57600080fd5b919050565b80516001600160601b03811681146200026c57600080fd5b60008060008060008060008060006101208a8c031215620002a957600080fd5b89516001600160401b0380821115620002c157600080fd5b620002cf8d838e01620001a5565b9a5060208c0151915080821115620002e657600080fd5b620002f48d838e01620001a5565b995060408c01519150808211156200030b57600080fd5b506200031a8c828d01620001a5565b97505060608a0151955060808a015194506200033960a08b0162000254565b93506200034960c08b0162000271565b92506200035960e08b0162000254565b91506200036a6101008b0162000254565b90509295985092959850929598565b600181811c908216806200038e57607f821691505b602082108103620003af57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040357600081815260208120601f850160051c81016020861015620003de5750805b601f850160051c820191505b81811015620003ff57828155600101620003ea565b5050505b505050565b81516001600160401b038111156200042457620004246200018f565b6200043c8162000435845462000379565b84620003b5565b602080601f8311600181146200047457600084156200045b5750858301515b600019600386901b1c1916600185901b178555620003ff565b600085815260208120601f198616915b82811015620004a55788860151825594840194600190910190840162000484565b5085821015620004c45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61349e80620004e46000396000f3fe6080604052600436106103295760003560e01c806370a08231116101a5578063a0712d68116100ec578063c87b56dd11610095578063d5abeb011161006f578063d5abeb01146108c2578063e985e9c5146108d8578063f4f3b20014610913578063fc1a1c361461093357600080fd5b8063c87b56dd14610852578063c884ef8314610872578063c8904767146108a257600080fd5b8063aa98e0c6116100c6578063aa98e0c6146107fc578063b88d4fde14610812578063c6a768f41461083257600080fd5b8063a0712d68146107b3578063a22cb465146107c6578063a945bf80146107e657600080fd5b80638990694f1161014e578063922400ff11610128578063922400ff1461076e578063953f049d1461078857806395d89b411461079e57600080fd5b80638990694f146107235780638da5cb5b146107395780638fc3b5491461075957600080fd5b80637e62f3b31161017f5780637e62f3b3146106c357806386997e7d146106e3578063879fbedf1461070357600080fd5b806370a082311461066e578063714c53981461068e578063785e9e86146106a357600080fd5b806327c191861161027457806342842e0e1161021d57806358381669116101f757806358381669146106155780636352211e1461062857806369eff0051461064857806369fd0e0b1461065b57600080fd5b806342842e0e146105bf578063485a68a3146105df57806355f804b3146105f557600080fd5b8063362c0cb51161024e578063362c0cb5146105725780633ccfd60b146105855780633cd8045e1461059a57600080fd5b806327c19186146104fd5780632a55205a1461051d578063326f9ad31461055c57600080fd5b806313af4035116102d657806322ab47a1116102b057806322ab47a1146104ad57806323b872dd146104c757806324a6ab0c146104e757600080fd5b806313af403514610433578063150b7a021461045357806318160ddd1461049857600080fd5b8063081812fc11610307578063081812fc146103a9578063095ea7b3146103f7578063121c87811461041957600080fd5b806301ffc9a71461032e5780630451a9f11461036357806306fdde0314610387575b600080fd5b34801561033a57600080fd5b5061034e610349366004612b98565b610949565b60405190151581526020015b60405180910390f35b34801561036f57600080fd5b5061037960185481565b60405190815260200161035a565b34801561039357600080fd5b5061039c6109b6565b60405161035a9190612be0565b3480156103b557600080fd5b506103df6103c4366004612c13565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161035a565b34801561040357600080fd5b50610417610412366004612c4c565b610a44565b005b34801561042557600080fd5b5060175461034e9060ff1681565b34801561043f57600080fd5b5061041761044e366004612c78565b610b2b565b34801561045f57600080fd5b5061047f61046e366004612c95565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161035a565b3480156104a457600080fd5b50610379610bc0565b3480156104b957600080fd5b50600e5461034e9060ff1681565b3480156104d357600080fd5b506104176104e2366004612d34565b610bd0565b3480156104f357600080fd5b5061037960155481565b34801561050957600080fd5b50610417610518366004612d75565b610db6565b34801561052957600080fd5b5061053d610538366004612da1565b610e4a565b604080516001600160a01b03909316835260208301919091520161035a565b34801561056857600080fd5b5061037960165481565b610417610580366004612e0a565b610e80565b34801561059157600080fd5b50610417610f35565b3480156105a657600080fd5b50600e546103df9061010090046001600160a01b031681565b3480156105cb57600080fd5b506104176105da366004612d34565b61124d565b3480156105eb57600080fd5b5061037960145481565b34801561060157600080fd5b50610417610610366004612ec2565b611345565b610417610623366004612fa3565b6113dc565b34801561063457600080fd5b506103df610643366004612c13565b6115fd565b610417610656366004612ffe565b611654565b610417610669366004613055565b6117d3565b34801561067a57600080fd5b50610379610689366004612c78565b611924565b34801561069a57600080fd5b5061039c611998565b3480156106af57600080fd5b50601b546103df906001600160a01b031681565b3480156106cf57600080fd5b506104176106de366004613095565b611a2a565b3480156106ef57600080fd5b506104176106fe366004612d75565b611ab0565b34801561070f57600080fd5b5061041761071e366004613095565b611b3c565b34801561072f57600080fd5b5061037960135481565b34801561074557600080fd5b506008546103df906001600160a01b031681565b34801561076557600080fd5b50601a54610379565b34801561077a57600080fd5b5060125461034e9060ff1681565b34801561079457600080fd5b5061037960105481565b3480156107aa57600080fd5b5061039c611bc2565b6104176107c1366004612c13565b611bcf565b3480156107d257600080fd5b506104176107e13660046130b0565b611d7c565b3480156107f257600080fd5b50610379600c5481565b34801561080857600080fd5b5061037960115481565b34801561081e57600080fd5b5061041761082d366004612c95565b611de8565b34801561083e57600080fd5b5061041761084d366004613095565b611ed0565b34801561085e57600080fd5b5061039c61086d366004612c13565b611f56565b34801561087e57600080fd5b5061034e61088d366004612c78565b60196020526000908152604090205460ff1681565b3480156108ae57600080fd5b506104176108bd3660046130dc565b611fad565b3480156108ce57600080fd5b50610379600d5481565b3480156108e457600080fd5b5061034e6108f336600461311e565b600560209081526000928352604080842090915290825290205460ff1681565b34801561091f57600080fd5b5061041761092e366004612c78565b6120fa565b34801561093f57600080fd5b50610379600f5481565b60006301ffc9a760e01b6001600160e01b03198316148061097a57506380ac58cd60e01b6001600160e01b03198316145b806109955750635b5e139f60e01b6001600160e01b03198316145b806109b0575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546109c39061314c565b80601f01602080910402602001604051908101604052809291908181526020018280546109ef9061314c565b8015610a3c5780601f10610a1157610100808354040283529160200191610a3c565b820191906000526020600020905b815481529060010190602001808311610a1f57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b031633811480610a8d57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b610acf5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b03163314610b745760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610bcb600a5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610c395760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610ac6565b6001600160a01b038216610c8f5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610ac6565b336001600160a01b0384161480610cc957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610cea57506000818152600460205260409020546001600160a01b031633145b610d275760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610ac6565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008546001600160a01b03163314610dff5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b601883905560148290556016819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6007546006546001600160a01b039091169060009061271090610e6d908561319c565b610e7791906131bb565b90509250929050565b6008546001600160a01b03163314610ec95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b610ed481600161247c565b81516000905b80821015610f1957610eec600a612596565b610f0e848381518110610f0157610f016131dd565b60200260200101516125b3565b816001019150610eda565b80821015610f2f5763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b03163314610f7e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff791906131f3565b905060008167ffffffffffffffff81111561101457611014612dc3565b60405190808252806020026020018201604052801561103d578160200160208202803683370190505b50905060008267ffffffffffffffff81111561105b5761105b612dc3565b604051908082528060200260200182016040528015611084578160200160208202803683370190505b5090504760005b848110156111f657600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa1580156110e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611106919061320c565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561115c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118091906131f3565b905081868481518110611195576111956131dd565b6001600160a01b03909216602092830291909101909101526127106111bb82606461319c565b6111c5908661319c565b6111cf91906131bb565b8584815181106111e1576111e16131dd565b6020908102919091010152505060010161108b565b60005b858110156112455761123d858281518110611216576112166131dd565b6020026020010151858381518110611230576112306131dd565b6020026020010151612680565b6001016111f9565b505050505050565b611258838383610bd0565b6001600160a01b0382163b15806113015750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156112d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f59190613229565b6001600160e01b031916145b6113405760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610ac6565b505050565b6008546001600160a01b0316331461138e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b600b61139a828261328c565b50806040516113a9919061334c565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b60095460011461141b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610ac6565b600260095560125460ff166114435760405163700a6c1f60e01b815260040160405180910390fd5b600f54601b5460ff8516906000906001600160a01b031661146457346114d6565b601b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156114b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d691906131f3565b9050806114e3838561319c565b146115015760405163f7760f2560e01b815260040160405180910390fd5b60115485908590611514838383336126db565b61153157604051631dc23a5f60e11b815260040160405180910390fd5b886010548160ff166013546115469190613368565b11156115655760405163a554e6e160e01b815260040160405180910390fd5b600d548160ff16601a546115799190613368565b11156115985760405163fc3fc71f60e01b815260040160405180910390fd5b6115a333600261247c565b6013805460ff8c1601905560005b8a60ff168110156115d5576115cd336115c8612713565b61273e565b6001016115b1565b8a8110156115eb5763dfb035c96000526004601cfd5b50506001600955505050505050505050565b6000818152600260205260409020546001600160a01b03168061164f5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610ac6565b919050565b6009546001146116935760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610ac6565b60026009556008546001600160a01b031633146116e15760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b6014546015548391906116f5908390613368565b11156117145760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481601a546117259190613368565b11156117445760405163fc3fc71f60e01b815260040160405180910390fd5b61174f82600061247c565b6015805484918291600090611765908490613368565b90915550600090505b818110156117b0576117a886868381811061178b5761178b6131dd565b90506020020160208101906117a09190612c78565b6115c8612713565b60010161176e565b818110156117c65763dfb035c96000526004601cfd5b5050600160095550505050565b6009546001146118125760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610ac6565b60026009556008546001600160a01b031633146118605760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b81601454816015546118729190613368565b11156118915760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481601a546118a29190613368565b11156118c15760405163fc3fc71f60e01b815260040160405180910390fd5b6118cc82600061247c565b82601560008282546118de9190613368565b90915550600090505b83811015611903576118fb326115c8612713565b6001016118e7565b838110156119195763dfb035c96000526004601cfd5b505060016009555050565b60006001600160a01b03821661197c5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610ac6565b506001600160a01b031660009081526003602052604090205490565b6060600b80546119a79061314c565b80601f01602080910402602001604051908101604052809291908181526020018280546119d39061314c565b8015611a205780601f106119f557610100808354040283529160200191611a20565b820191906000526020600020905b815481529060010190602001808311611a0357829003601f168201915b5050505050905090565b6008546001600160a01b03163314611a735760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b6017805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6008546001600160a01b03163314611af95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b600f839055601082905560118190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6008546001600160a01b03163314611b855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b600180546109c39061314c565b600954600114611c0e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610ac6565b6002600955600e5460ff16611c36576040516316851fc760e11b815260040160405180910390fd5b80601454601054600d54611c4a919061337b565b611c54919061337b565b81601a54611c629190613368565b1115611c815760405163fc3fc71f60e01b815260040160405180910390fd5b600c54601b5483906000906001600160a01b0316611c9f5734611d11565b601b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015611ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1191906131f3565b905080611d1e838561319c565b14611d3c5760405163f7760f2560e01b815260040160405180910390fd5b611d4733600261247c565b60005b85811015611d6657611d5e336115c8612713565b600101611d4a565b858110156117c65763dfb035c96000526004601cfd5b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611df3858585610bd0565b6001600160a01b0384163b1580611e8a5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611e3b9033908a9089908990899060040161338e565b6020604051808303816000875af1158015611e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190613229565b6001600160e01b031916145b611ec95760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610ac6565b5050505050565b6008546001600160a01b03163314611f195760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b6012805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b6060601a54821115611f7b57604051635d68437560e11b815260040160405180910390fd5b600b611f8683612831565b604051602001611f979291906133e2565b6040516020818303038152906040529050919050565b60175460ff16611fd05760405163f44170cb60e01b815260040160405180910390fd5b60165482908290611fe3838383336126db565b61200057604051631dc23a5f60e11b815260040160405180910390fd5b601854601454816015546120149190613368565b11156120335760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481601a546120449190613368565b11156120635760405163fc3fc71f60e01b815260040160405180910390fd5b3360009081526019602052604090205460ff161561209457604051630c8d9eab60e31b815260040160405180910390fd5b336000908152601960205260408120805460ff191660011790556018546015805490910190555b6018548110156120d9576120d1336115c8612713565b6001016120bb565b6018548110156120f15763dfb035c96000526004601cfd5b50505050505050565b6008546001600160a01b031633146121435760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610ac6565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bc91906131f3565b905060008167ffffffffffffffff8111156121d9576121d9612dc3565b604051908082528060200260200182016040528015612202578160200160208202803683370190505b50905060008267ffffffffffffffff81111561222057612220612dc3565b604051908082528060200260200182016040528015612249578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015612296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ba91906131f3565b90505b8482101561242c57600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015612314573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612338919061320c565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561238e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b291906131f3565b9050818685815181106123c7576123c76131dd565b6001600160a01b03909216602092830291909101909101526127106123ed82606461319c565b6123f7908561319c565b61240191906131bb565b858581518110612413576124136131dd565b60200260200101818152505083600101935050506122bd565b60005b858110156120f1576124748786838151811061244d5761244d6131dd565b6020026020010151868481518110612467576124676131dd565b6020026020010151612880565b60010161242f565b601b546000906001600160a01b03166124955734612509565b601b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156124e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250991906131f3565b9050336001600160a01b038416148061252b5750601b546001600160a01b0316155b15611340578160ff166000036125515761254c6340d097c360e01b82612906565b61256d565b8160ff1660010361256d5761256d63044df8e760e41b82612906565b601b546001600160a01b03161561134057601b54611340906001600160a01b03168430846129b6565b8054806125ab5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b0316806126055760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610ac6565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af19050806113405760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610ac6565b60008360051b8501855b81811461270957803580851160051b948552602094851852604060002093016126e5565b5050501492915050565b600061271d612a42565b506001601a60008282546127319190613368565b9091555050601a54919050565b6127488282612a59565b6001600160a01b0382163b15806127ee5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156127be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e29190613229565b6001600160e01b031916145b61282d5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610ac6565b5050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561286e57600183039250600a81066030018353600a9004612850565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610f2f5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610ac6565b6008546001600160a01b0316803b63ffffffff81166000036129285750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa15801561297b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299f91906131f3565b9050808414611ec95763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611ec95760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610ac6565b6000612a52600a80546001019055565b50600a5490565b6001600160a01b038216612aaf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610ac6565b6000818152600260205260409020546001600160a01b031615612b145760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610ac6565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114612b9557600080fd5b50565b600060208284031215612baa57600080fd5b8135612bb581612b7f565b9392505050565b60005b83811015612bd7578181015183820152602001612bbf565b50506000910152565b6020815260008251806020840152612bff816040850160208701612bbc565b601f01601f19169190910160400192915050565b600060208284031215612c2557600080fd5b5035919050565b6001600160a01b0381168114612b9557600080fd5b803561164f81612c2c565b60008060408385031215612c5f57600080fd5b8235612c6a81612c2c565b946020939093013593505050565b600060208284031215612c8a57600080fd5b8135612bb581612c2c565b600080600080600060808688031215612cad57600080fd5b8535612cb881612c2c565b94506020860135612cc881612c2c565b935060408601359250606086013567ffffffffffffffff80821115612cec57600080fd5b818801915088601f830112612d0057600080fd5b813581811115612d0f57600080fd5b896020828501011115612d2157600080fd5b9699959850939650602001949392505050565b600080600060608486031215612d4957600080fd5b8335612d5481612c2c565b92506020840135612d6481612c2c565b929592945050506040919091013590565b600080600060608486031215612d8a57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612db457600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612e0257612e02612dc3565b604052919050565b60008060408385031215612e1d57600080fd5b823567ffffffffffffffff80821115612e3557600080fd5b818501915085601f830112612e4957600080fd5b8135602082821115612e5d57612e5d612dc3565b8160051b9250612e6e818401612dd9565b8281529284018101928181019089851115612e8857600080fd5b948201945b84861015612ea657853582529482019490820190612e8d565b9650612eb59050878201612c41565b9450505050509250929050565b60006020808385031215612ed557600080fd5b823567ffffffffffffffff80821115612eed57600080fd5b818501915085601f830112612f0157600080fd5b813581811115612f1357612f13612dc3565b612f25601f8201601f19168501612dd9565b91508082528684828501011115612f3b57600080fd5b8084840185840137600090820190930192909252509392505050565b60008083601f840112612f6957600080fd5b50813567ffffffffffffffff811115612f8157600080fd5b6020830191508360208260051b8501011115612f9c57600080fd5b9250929050565b600080600060408486031215612fb857600080fd5b833560ff81168114612fc957600080fd5b9250602084013567ffffffffffffffff811115612fe557600080fd5b612ff186828701612f57565b9497909650939450505050565b60008060006040848603121561301357600080fd5b833567ffffffffffffffff81111561302a57600080fd5b61303686828701612f57565b909450925050602084013561304a81612c2c565b809150509250925092565b6000806040838503121561306857600080fd5b82359150602083013561307a81612c2c565b809150509250929050565b8035801515811461164f57600080fd5b6000602082840312156130a757600080fd5b612bb582613085565b600080604083850312156130c357600080fd5b82356130ce81612c2c565b9150610e7760208401613085565b600080602083850312156130ef57600080fd5b823567ffffffffffffffff81111561310657600080fd5b61311285828601612f57565b90969095509350505050565b6000806040838503121561313157600080fd5b823561313c81612c2c565b9150602083013561307a81612c2c565b600181811c9082168061316057607f821691505b60208210810361318057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156131b6576131b6613186565b500290565b6000826131d857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561320557600080fd5b5051919050565b60006020828403121561321e57600080fd5b8151612bb581612c2c565b60006020828403121561323b57600080fd5b8151612bb581612b7f565b601f82111561134057600081815260208120601f850160051c8101602086101561326d5750805b601f850160051c820191505b8181101561124557828155600101613279565b815167ffffffffffffffff8111156132a6576132a6612dc3565b6132ba816132b4845461314c565b84613246565b602080601f8311600181146132ef57600084156132d75750858301515b600019600386901b1c1916600185901b178555611245565b600085815260208120601f198616915b8281101561331e578886015182559484019460019091019084016132ff565b508582101561333c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161335e818460208701612bbc565b9190910192915050565b808201808211156109b0576109b0613186565b818103818111156109b0576109b0613186565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008084546133f08161314c565b60018281168015613408576001811461341d5761344c565b60ff198416875282151583028701945061344c565b8860005260208060002060005b858110156134435781548a82015290840190820161342a565b50505082870194505b505050508351613460818360208801612bbc565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Whitelist__factory extends ContractFactory {
  constructor(...args: ERC721WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Whitelist> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Whitelist>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Whitelist {
    return super.attach(address) as ERC721Whitelist;
  }
  override connect(signer: Signer): ERC721Whitelist__factory {
    return super.connect(signer) as ERC721Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WhitelistInterface {
    return new utils.Interface(_abi) as ERC721WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC721Whitelist;
  }
}
