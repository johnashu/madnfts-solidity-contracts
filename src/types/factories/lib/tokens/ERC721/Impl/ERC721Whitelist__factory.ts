/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Whitelist,
  ERC721WhitelistInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "FreeClaimClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxFreeReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxWhitelistReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WhitelistMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162003a5f38038062003a5f833981016040819052620000399162000276565b81898960006200004a8382620003f5565b506001620000598282620003f5565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600e620000b68882620003f5565b5060128690556010859055600a80546001600160a01b038087166001600160a01b03199283168117909355600b80549185169183169190911790556001600160601b03851660068190556007805490921690921790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004c1565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a457600080fd5b81516001600160401b0380821115620001c157620001c16200017c565b604051601f8301601f19908116603f01168101908282118183101715620001ec57620001ec6200017c565b816040528381526020925086838588010111156200020957600080fd5b600091505b838210156200022d57858201830151818301840152908201906200020e565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025957600080fd5b919050565b80516001600160601b03811681146200025957600080fd5b60008060008060008060008060006101208a8c0312156200029657600080fd5b89516001600160401b0380821115620002ae57600080fd5b620002bc8d838e0162000192565b9a5060208c0151915080821115620002d357600080fd5b620002e18d838e0162000192565b995060408c0151915080821115620002f857600080fd5b50620003078c828d0162000192565b97505060608a0151955060808a015194506200032660a08b0162000241565b93506200033660c08b016200025e565b92506200034660e08b0162000241565b9150620003576101008b0162000241565b90509295985092959850929598565b600181811c908216806200037b57607f821691505b6020821081036200039c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003f057600081815260208120601f850160051c81016020861015620003cb5750805b601f850160051c820191505b81811015620003ec57828155600101620003d7565b5050505b505050565b81516001600160401b038111156200041157620004116200017c565b620004298162000422845462000366565b84620003a2565b602080601f831160018114620004615760008415620004485750858301515b600019600386901b1c1916600185901b178555620003ec565b600085815260208120601f198616915b82811015620004925788860151825594840194600190910190840162000471565b5085821015620004b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61358e80620004d16000396000f3fe60806040526004361061033f5760003560e01c806369fd0e0b116101b0578063a0712d68116100ec578063c87b56dd11610095578063d5abeb011161006f578063d5abeb0114610902578063e985e9c514610918578063f4f3b20014610953578063fc1a1c361461097357600080fd5b8063c87b56dd14610892578063c884ef83146108b2578063c8904767146108e257600080fd5b8063aa98e0c6116100c6578063aa98e0c61461083c578063b88d4fde14610852578063c6a768f41461087257600080fd5b8063a0712d68146107f3578063a22cb46514610806578063a945bf801461082657600080fd5b8063879fbedf116101595780638fc3b549116101335780638fc3b54914610799578063922400ff146107ae578063953f049d146107c857806395d89b41146107de57600080fd5b8063879fbedf146107435780638990694f146107635780638da5cb5b1461077957600080fd5b8063785e9e861161018a578063785e9e86146106e35780637e62f3b31461070357806386997e7d1461072357600080fd5b806369fd0e0b1461069b57806370a08231146106ae578063714c5398146106ce57600080fd5b80632a55205a1161027f578063485a68a311610228578063583816691161020257806358381669146106405780636352211e1461065357806366c879a91461067357806369eff0051461068857600080fd5b8063485a68a3146105f05780634edd2d491461060657806355f804b31461062057600080fd5b80633ccfd60b116102595780633ccfd60b1461059b5780633cd8045e146105b057806342842e0e146105d057600080fd5b80632a55205a14610533578063326f9ad314610572578063362c0cb51461058857600080fd5b806313af4035116102ec57806322ab47a1116102c657806322ab47a1146104c357806323b872dd146104dd57806324a6ab0c146104fd57806327c191861461051357600080fd5b806313af403514610449578063150b7a021461046957806318160ddd146104ae57600080fd5b8063081812fc1161031d578063081812fc146103bf578063095ea7b31461040d578063121c87811461042f57600080fd5b806301ffc9a7146103445780630451a9f11461037957806306fdde031461039d575b600080fd5b34801561035057600080fd5b5061036461035f366004612c6b565b610989565b60405190151581526020015b60405180910390f35b34801561038557600080fd5b5061038f601c5481565b604051908152602001610370565b3480156103a957600080fd5b506103b26109f6565b6040516103709190612cb3565b3480156103cb57600080fd5b506103f56103da366004612ce6565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610370565b34801561041957600080fd5b5061042d610428366004612d1f565b610a84565b005b34801561043b57600080fd5b50601b546103649060ff1681565b34801561045557600080fd5b5061042d610464366004612d4b565b610b6b565b34801561047557600080fd5b50610495610484366004612d68565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610370565b3480156104ba57600080fd5b5061038f610c00565b3480156104cf57600080fd5b506011546103649060ff1681565b3480156104e957600080fd5b5061042d6104f8366004612e07565b610c10565b34801561050957600080fd5b5061038f60195481565b34801561051f57600080fd5b5061042d61052e366004612e48565b610df6565b34801561053f57600080fd5b5061055361054e366004612e74565b610e8a565b604080516001600160a01b039093168352602083019190915201610370565b34801561057e57600080fd5b5061038f601a5481565b61042d610596366004612edd565b610ec0565b3480156105a757600080fd5b5061042d610f75565b3480156105bc57600080fd5b50600a546103f5906001600160a01b031681565b3480156105dc57600080fd5b5061042d6105eb366004612e07565b611277565b3480156105fc57600080fd5b5061038f60185481565b34801561061257600080fd5b50600f546103649060ff1681565b34801561062c57600080fd5b5061042d61063b366004612f95565b61136f565b61042d61064e366004613076565b61142e565b34801561065f57600080fd5b506103f561066e366004612ce6565b61164f565b34801561067f57600080fd5b5061042d6116a6565b61042d6106963660046130d1565b61173d565b61042d6106a9366004613128565b6118bc565b3480156106ba57600080fd5b5061038f6106c9366004612d4b565b611a0d565b3480156106da57600080fd5b506103b2611a81565b3480156106ef57600080fd5b50600b546103f5906001600160a01b031681565b34801561070f57600080fd5b5061042d61071e366004613168565b611b13565b34801561072f57600080fd5b5061042d61073e366004612e48565b611b99565b34801561074f57600080fd5b5061042d61075e366004613168565b611c25565b34801561076f57600080fd5b5061038f60175481565b34801561078557600080fd5b506008546103f5906001600160a01b031681565b3480156107a557600080fd5b50600d5461038f565b3480156107ba57600080fd5b506016546103649060ff1681565b3480156107d457600080fd5b5061038f60145481565b3480156107ea57600080fd5b506103b2611cab565b61042d610801366004612ce6565b611cb8565b34801561081257600080fd5b5061042d610821366004613183565b611e65565b34801561083257600080fd5b5061038f60125481565b34801561084857600080fd5b5061038f60155481565b34801561085e57600080fd5b5061042d61086d366004612d68565b611ed1565b34801561087e57600080fd5b5061042d61088d366004613168565b611fb9565b34801561089e57600080fd5b506103b26108ad366004612ce6565b61203f565b3480156108be57600080fd5b506103646108cd366004612d4b565b601d6020526000908152604090205460ff1681565b3480156108ee57600080fd5b5061042d6108fd3660046131af565b612096565b34801561090e57600080fd5b5061038f60105481565b34801561092457600080fd5b506103646109333660046131f1565b600560209081526000928352604080842090915290825290205460ff1681565b34801561095f57600080fd5b5061042d61096e366004612d4b565b6121e3565b34801561097f57600080fd5b5061038f60135481565b60006301ffc9a760e01b6001600160e01b0319831614806109ba57506380ac58cd60e01b6001600160e01b03198316145b806109d55750635b5e139f60e01b6001600160e01b03198316145b806109f0575063152a902d60e11b6001600160e01b03198316145b92915050565b60008054610a039061321f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2f9061321f565b8015610a7c5780601f10610a5157610100808354040283529160200191610a7c565b820191906000526020600020905b815481529060010190602001808311610a5f57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b031633811480610acd57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b610b0f5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b03163314610bb45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610c0b600c5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610c795760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610b06565b6001600160a01b038216610ccf5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610b06565b336001600160a01b0384161480610d0957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610d2a57506000818152600460205260409020546001600160a01b031633145b610d675760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610b06565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008546001600160a01b03163314610e3f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b601c8390556018829055601a819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6007546006546001600160a01b039091169060009061271090610ead908561326f565b610eb7919061328e565b90509250929050565b6008546001600160a01b03163314610f095760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b610f1481600161254f565b81516000905b80821015610f5957610f2c600c612669565b610f4e848381518110610f4157610f416132b0565b6020026020010151612686565b816001019150610f1a565b80821015610f6f5763dfb035c96000526004601cfd5b50505050565b6008546001600160a01b03163314610fbe5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102c91906132c6565b905060008167ffffffffffffffff81111561104957611049612e96565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b50905060008267ffffffffffffffff81111561109057611090612e96565b6040519080825280602002602001820160405280156110b9578160200160208202803683370190505b5090504760005b8481101561122057600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113691906132df565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111aa91906132c6565b9050818684815181106111bf576111bf6132b0565b6001600160a01b03909216602092830291909101909101526127106111e582606461326f565b6111ef908661326f565b6111f9919061328e565b85848151811061120b5761120b6132b0565b602090810291909101015250506001016110c0565b60005b8581101561126f57611267858281518110611240576112406132b0565b602002602001015185838151811061125a5761125a6132b0565b6020026020010151612753565b600101611223565b505050505050565b611282838383610c10565b6001600160a01b0382163b158061132b5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f91906132fc565b6001600160e01b031916145b61136a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610b06565b505050565b6008546001600160a01b031633146113b85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b600f5460ff1615156001036113e057604051639619d74760e01b815260040160405180910390fd5b600e6113ec828261335f565b50806040516113fb919061341f565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b60095460011461146d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610b06565b600260095560165460ff166114955760405163700a6c1f60e01b815260040160405180910390fd5b601354600b5460ff8516906000906001600160a01b03166114b65734611528565b600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015611504573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152891906132c6565b905080611535838561326f565b146115535760405163f7760f2560e01b815260040160405180910390fd5b60155485908590611566838383336127ae565b61158357604051631dc23a5f60e11b815260040160405180910390fd5b886014548160ff16601754611598919061343b565b11156115b75760405163a554e6e160e01b815260040160405180910390fd5b6010548160ff16600d546115cb919061343b565b11156115ea5760405163fc3fc71f60e01b815260040160405180910390fd5b6115f533600261254f565b6017805460ff8c1601905560005b8a60ff168110156116275761161f3361161a6127e6565b612811565b600101611603565b8a81101561163d5763dfb035c96000526004601cfd5b50506001600955505050505050505050565b6000818152600260205260409020546001600160a01b0316806116a15760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610b06565b919050565b6008546001600160a01b031633146116ef5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b600f805460ff1916600117905560405161170b90600e906134c1565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b60095460011461177c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610b06565b60026009556008546001600160a01b031633146117ca5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b6018546019548391906117de90839061343b565b11156117fd5760405163f90c1bdb60e01b815260040160405180910390fd5b60105481600d5461180e919061343b565b111561182d5760405163fc3fc71f60e01b815260040160405180910390fd5b61183882600061254f565b601980548491829160009061184e90849061343b565b90915550600090505b8181101561189957611891868683818110611874576118746132b0565b90506020020160208101906118899190612d4b565b61161a6127e6565b600101611857565b818110156118af5763dfb035c96000526004601cfd5b5050600160095550505050565b6009546001146118fb5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610b06565b60026009556008546001600160a01b031633146119495760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b816018548160195461195b919061343b565b111561197a5760405163f90c1bdb60e01b815260040160405180910390fd5b60105481600d5461198b919061343b565b11156119aa5760405163fc3fc71f60e01b815260040160405180910390fd5b6119b582600061254f565b82601960008282546119c7919061343b565b90915550600090505b838110156119ec576119e43261161a6127e6565b6001016119d0565b83811015611a025763dfb035c96000526004601cfd5b505060016009555050565b60006001600160a01b038216611a655760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610b06565b506001600160a01b031660009081526003602052604090205490565b6060600e8054611a909061321f565b80601f0160208091040260200160405190810160405280929190818152602001828054611abc9061321f565b8015611b095780601f10611ade57610100808354040283529160200191611b09565b820191906000526020600020905b815481529060010190602001808311611aec57829003601f168201915b5050505050905090565b6008546001600160a01b03163314611b5c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b601b805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6008546001600160a01b03163314611be25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b6013839055601482905560158190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6008546001600160a01b03163314611c6e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b6011805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b60018054610a039061321f565b600954600114611cf75760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610b06565b600260095560115460ff16611d1f576040516316851fc760e11b815260040160405180910390fd5b80601854601454601054611d3391906134cd565b611d3d91906134cd565b81600d54611d4b919061343b565b1115611d6a5760405163fc3fc71f60e01b815260040160405180910390fd5b601254600b5483906000906001600160a01b0316611d885734611dfa565b600b54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015611dd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfa91906132c6565b905080611e07838561326f565b14611e255760405163f7760f2560e01b815260040160405180910390fd5b611e3033600261254f565b60005b85811015611e4f57611e473361161a6127e6565b600101611e33565b858110156118af5763dfb035c96000526004601cfd5b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611edc858585610c10565b6001600160a01b0384163b1580611f735750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611f249033908a908990899089906004016134e0565b6020604051808303816000875af1158015611f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6791906132fc565b6001600160e01b031916145b611fb25760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610b06565b5050505050565b6008546001600160a01b031633146120025760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b6016805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b6060600d5482111561206457604051635d68437560e11b815260040160405180910390fd5b600e61206f83612904565b604051602001612080929190613534565b6040516020818303038152906040529050919050565b601b5460ff166120b95760405163f44170cb60e01b815260040160405180910390fd5b601a54829082906120cc838383336127ae565b6120e957604051631dc23a5f60e11b815260040160405180910390fd5b601c54601854816019546120fd919061343b565b111561211c5760405163f90c1bdb60e01b815260040160405180910390fd5b60105481600d5461212d919061343b565b111561214c5760405163fc3fc71f60e01b815260040160405180910390fd5b336000908152601d602052604090205460ff161561217d57604051630c8d9eab60e31b815260040160405180910390fd5b336000908152601d60205260408120805460ff19166001179055601c546019805490910190555b601c548110156121c2576121ba3361161a6127e6565b6001016121a4565b601c548110156121da5763dfb035c96000526004601cfd5b50505050505050565b6008546001600160a01b0316331461222c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610b06565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015612276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229a91906132c6565b905060008167ffffffffffffffff8111156122b7576122b7612e96565b6040519080825280602002602001820160405280156122e0578160200160208202803683370190505b50905060008267ffffffffffffffff8111156122fe576122fe612e96565b604051908082528060200260200182016040528015612327578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015612374573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239891906132c6565b90505b848210156124ff57600a54604051631419245f60e11b8152600481018490526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156123ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241191906132df565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015612461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248591906132c6565b90508186858151811061249a5761249a6132b0565b6001600160a01b03909216602092830291909101909101526127106124c082606461326f565b6124ca908561326f565b6124d4919061328e565b8585815181106124e6576124e66132b0565b602002602001018181525050836001019350505061239b565b60005b858110156121da5761254787868381518110612520576125206132b0565b602002602001015186848151811061253a5761253a6132b0565b6020026020010151612953565b600101612502565b600b546000906001600160a01b031661256857346125dc565b600b54604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156125b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125dc91906132c6565b9050336001600160a01b03841614806125fe5750600b546001600160a01b0316155b1561136a578160ff166000036126245761261f6340d097c360e01b826129d9565b612640565b8160ff166001036126405761264063044df8e760e41b826129d9565b600b546001600160a01b03161561136a57600b5461136a906001600160a01b0316843084612a89565b80548061267e5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b0316806126d85760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610b06565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080600080600085875af190508061136a5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610b06565b60008360051b8501855b8181146127dc57803580851160051b948552602094851852604060002093016127b8565b5050501492915050565b60006127f0612b15565b506001600d6000828254612804919061343b565b9091555050600d54919050565b61281b8282612b2c565b6001600160a01b0382163b15806128c15750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015612891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128b591906132fc565b6001600160e01b031916145b6129005760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610b06565b5050565b604080516080810191829052607f0190826030600a8206018353600a90045b801561294157600183039250600a81066030018353600a9004612923565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610f6f5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610b06565b6008546001600160a01b0316803b63ffffffff81166000036129fb5750505050565b600854604051633b7279e960e21b81526001600160e01b0319861660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa158015612a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a7291906132c6565b9050808414611fb25763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611fb25760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610b06565b6000612b25600c80546001019055565b50600c5490565b6001600160a01b038216612b825760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610b06565b6000818152600260205260409020546001600160a01b031615612be75760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610b06565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114612c6857600080fd5b50565b600060208284031215612c7d57600080fd5b8135612c8881612c52565b9392505050565b60005b83811015612caa578181015183820152602001612c92565b50506000910152565b6020815260008251806020840152612cd2816040850160208701612c8f565b601f01601f19169190910160400192915050565b600060208284031215612cf857600080fd5b5035919050565b6001600160a01b0381168114612c6857600080fd5b80356116a181612cff565b60008060408385031215612d3257600080fd5b8235612d3d81612cff565b946020939093013593505050565b600060208284031215612d5d57600080fd5b8135612c8881612cff565b600080600080600060808688031215612d8057600080fd5b8535612d8b81612cff565b94506020860135612d9b81612cff565b935060408601359250606086013567ffffffffffffffff80821115612dbf57600080fd5b818801915088601f830112612dd357600080fd5b813581811115612de257600080fd5b896020828501011115612df457600080fd5b9699959850939650602001949392505050565b600080600060608486031215612e1c57600080fd5b8335612e2781612cff565b92506020840135612e3781612cff565b929592945050506040919091013590565b600080600060608486031215612e5d57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612e8757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ed557612ed5612e96565b604052919050565b60008060408385031215612ef057600080fd5b823567ffffffffffffffff80821115612f0857600080fd5b818501915085601f830112612f1c57600080fd5b8135602082821115612f3057612f30612e96565b8160051b9250612f41818401612eac565b8281529284018101928181019089851115612f5b57600080fd5b948201945b84861015612f7957853582529482019490820190612f60565b9650612f889050878201612d14565b9450505050509250929050565b60006020808385031215612fa857600080fd5b823567ffffffffffffffff80821115612fc057600080fd5b818501915085601f830112612fd457600080fd5b813581811115612fe657612fe6612e96565b612ff8601f8201601f19168501612eac565b9150808252868482850101111561300e57600080fd5b8084840185840137600090820190930192909252509392505050565b60008083601f84011261303c57600080fd5b50813567ffffffffffffffff81111561305457600080fd5b6020830191508360208260051b850101111561306f57600080fd5b9250929050565b60008060006040848603121561308b57600080fd5b833560ff8116811461309c57600080fd5b9250602084013567ffffffffffffffff8111156130b857600080fd5b6130c48682870161302a565b9497909650939450505050565b6000806000604084860312156130e657600080fd5b833567ffffffffffffffff8111156130fd57600080fd5b6131098682870161302a565b909450925050602084013561311d81612cff565b809150509250925092565b6000806040838503121561313b57600080fd5b82359150602083013561314d81612cff565b809150509250929050565b803580151581146116a157600080fd5b60006020828403121561317a57600080fd5b612c8882613158565b6000806040838503121561319657600080fd5b82356131a181612cff565b9150610eb760208401613158565b600080602083850312156131c257600080fd5b823567ffffffffffffffff8111156131d957600080fd5b6131e58582860161302a565b90969095509350505050565b6000806040838503121561320457600080fd5b823561320f81612cff565b9150602083013561314d81612cff565b600181811c9082168061323357607f821691505b60208210810361325357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561328957613289613259565b500290565b6000826132ab57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156132d857600080fd5b5051919050565b6000602082840312156132f157600080fd5b8151612c8881612cff565b60006020828403121561330e57600080fd5b8151612c8881612c52565b601f82111561136a57600081815260208120601f850160051c810160208610156133405750805b601f850160051c820191505b8181101561126f5782815560010161334c565b815167ffffffffffffffff81111561337957613379612e96565b61338d81613387845461321f565b84613319565b602080601f8311600181146133c257600084156133aa5750858301515b600019600386901b1c1916600185901b17855561126f565b600085815260208120601f198616915b828110156133f1578886015182559484019460019091019084016133d2565b508582101561340f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613431818460208701612c8f565b9190910192915050565b808201808211156109f0576109f0613259565b6000815461345b8161321f565b600182811680156134735760018114613488576134b7565b60ff19841687528215158302870194506134b7565b8560005260208060002060005b858110156134ae5781548a820152908401908201613495565b50505082870194505b5050505092915050565b6000612c88828461344e565b818103818111156109f0576109f0613259565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000613540828561344e565b8351613550818360208801612c8f565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Whitelist__factory extends ContractFactory {
  constructor(...args: ERC721WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Whitelist> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Whitelist>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Whitelist {
    return super.attach(address) as ERC721Whitelist;
  }
  override connect(signer: Signer): ERC721Whitelist__factory {
    return super.connect(signer) as ERC721Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WhitelistInterface {
    return new utils.Interface(_abi) as ERC721WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC721Whitelist;
  }
}
