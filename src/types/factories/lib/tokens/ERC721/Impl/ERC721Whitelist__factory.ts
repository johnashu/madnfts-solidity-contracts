/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721Whitelist,
  ERC721WhitelistInterface,
} from "../../../../../lib/tokens/ERC721/Impl/ERC721Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "FreeClaimClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxFreeReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxWhitelistReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WhitelistMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620035d3380380620035d383398101604081905262000039916200027b565b80888860006200004a8382620003e7565b506001620000598282620003e7565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600b620000b68782620003e7565b50600c859055600d849055600e8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600681905560078054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004b3565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a957600080fd5b81516001600160401b0380821115620001c657620001c662000181565b604051601f8301601f19908116603f01168101908282118183101715620001f157620001f162000181565b816040528381526020925086838588010111156200020e57600080fd5b600091505b8382101562000232578582018301518183018401529082019062000213565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025e57600080fd5b919050565b80516001600160601b03811681146200025e57600080fd5b600080600080600080600080610100898b0312156200029957600080fd5b88516001600160401b0380821115620002b157600080fd5b620002bf8c838d0162000197565b995060208b0151915080821115620002d657600080fd5b620002e48c838d0162000197565b985060408b0151915080821115620002fb57600080fd5b506200030a8b828c0162000197565b96505060608901519450608089015193506200032960a08a0162000246565b92506200033960c08a0162000263565b91506200034960e08a0162000246565b90509295985092959890939650565b600181811c908216806200036d57607f821691505b6020821081036200038e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e257600081815260208120601f850160051c81016020861015620003bd5750805b601f850160051c820191505b81811015620003de57828155600101620003c9565b5050505b505050565b81516001600160401b0381111562000403576200040362000181565b6200041b8162000414845462000358565b8462000394565b602080601f8311600181146200045357600084156200043a5750858301515b600019600386901b1c1916600185901b178555620003de565b600085815260208120601f198616915b82811015620004845788860151825594840194600190910190840162000463565b5085821015620004a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61311080620004c36000396000f3fe6080604052600436106103135760003560e01c8063714c53981161019a578063aa98e0c6116100e1578063c89047671161008a578063ef4eb03011610064578063ef4eb030146108b5578063f4f3b200146108c8578063fc1a1c36146108e857600080fd5b8063c890476714610844578063d5abeb0114610864578063e985e9c51461087a57600080fd5b8063c6a768f4116100bb578063c6a768f4146107d4578063c87b56dd146107f4578063c884ef831461081457600080fd5b8063aa98e0c61461078b578063b80f55c9146107a1578063b88d4fde146107b457600080fd5b8063922400ff11610143578063a0712d681161011d578063a0712d6814610742578063a22cb46514610755578063a945bf801461077557600080fd5b8063922400ff146106fd578063953f049d1461071757806395d89b411461072d57600080fd5b8063879fbedf11610174578063879fbedf146106a75780638990694f146106c75780638da5cb5b146106dd57600080fd5b8063714c5398146106525780637e62f3b31461066757806386997e7d1461068757600080fd5b806327c191861161025e578063440754d81161020757806358381669116101e157806358381669146105ff5780636352211e1461061257806370a082311461063257600080fd5b8063440754d8146105b6578063485a68a3146105c957806355f804b3146105df57600080fd5b80633ccfd60b116102385780633ccfd60b1461055c5780633cd8045e1461057157806342842e0e1461059657600080fd5b806327c19186146104e75780632a55205a14610507578063326f9ad31461054657600080fd5b806313af4035116102c057806322ab47a11161029a57806322ab47a11461049757806323b872dd146104b157806324a6ab0c146104d157600080fd5b806313af40351461041d578063150b7a021461043d57806318160ddd1461048257600080fd5b8063081812fc116102f1578063081812fc14610393578063095ea7b3146103e1578063121c87811461040357600080fd5b806301ffc9a7146103185780630451a9f11461034d57806306fdde0314610371575b600080fd5b34801561032457600080fd5b506103386103333660046128a3565b6108fe565b60405190151581526020015b60405180910390f35b34801561035957600080fd5b5061036360185481565b604051908152602001610344565b34801561037d57600080fd5b5061038661096b565b60405161034491906128eb565b34801561039f57600080fd5b506103c96103ae36600461291e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610344565b3480156103ed57600080fd5b506104016103fc36600461294c565b6109f9565b005b34801561040f57600080fd5b506017546103389060ff1681565b34801561042957600080fd5b50610401610438366004612978565b610ae0565b34801561044957600080fd5b50610469610458366004612995565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610344565b34801561048e57600080fd5b50610363610b75565b3480156104a357600080fd5b50600e546103389060ff1681565b3480156104bd57600080fd5b506104016104cc366004612a34565b610b85565b3480156104dd57600080fd5b5061036360155481565b3480156104f357600080fd5b50610401610502366004612a75565b610d6b565b34801561051357600080fd5b50610527610522366004612aa1565b610dff565b604080516001600160a01b039093168352602083019190915201610344565b34801561055257600080fd5b5061036360165481565b34801561056857600080fd5b50610401610e35565b34801561057d57600080fd5b50600e546103c99061010090046001600160a01b031681565b3480156105a257600080fd5b506104016105b1366004612a34565b61114d565b6104016105c4366004612b0f565b611245565b3480156105d557600080fd5b5061036360145481565b3480156105eb57600080fd5b506104016105fa366004612b98565b6113d3565b61040161060d366004612c2d565b61146a565b34801561061e57600080fd5b506103c961062d36600461291e565b6115f2565b34801561063e57600080fd5b5061036361064d366004612978565b611649565b34801561065e57600080fd5b506103866116bd565b34801561067357600080fd5b50610401610682366004612c98565b61174f565b34801561069357600080fd5b506104016106a2366004612a75565b6117d5565b3480156106b357600080fd5b506104016106c2366004612c98565b611861565b3480156106d357600080fd5b5061036360135481565b3480156106e957600080fd5b506008546103c9906001600160a01b031681565b34801561070957600080fd5b506012546103389060ff1681565b34801561072357600080fd5b5061036360105481565b34801561073957600080fd5b506103866118e7565b61040161075036600461291e565b6118f4565b34801561076157600080fd5b50610401610770366004612cb3565b611a0e565b34801561078157600080fd5b50610363600c5481565b34801561079757600080fd5b5061036360115481565b6104016107af366004612cdf565b611a7a565b3480156107c057600080fd5b506104016107cf366004612995565b611b2e565b3480156107e057600080fd5b506104016107ef366004612c98565b611c16565b34801561080057600080fd5b5061038661080f36600461291e565b611c9c565b34801561082057600080fd5b5061033861082f366004612978565b60196020526000908152604090205460ff1681565b34801561085057600080fd5b5061040161085f366004612b0f565b611cf8565b34801561087057600080fd5b50610363600d5481565b34801561088657600080fd5b50610338610895366004612d85565b600560209081526000928352604080842090915290825290205460ff1681565b6104016108c336600461291e565b611e4b565b3480156108d457600080fd5b506104016108e3366004612978565b611fa6565b3480156108f457600080fd5b50610363600f5481565b60006301ffc9a760e01b6001600160e01b03198316148061092f57506380ac58cd60e01b6001600160e01b03198316145b8061094a5750635b5e139f60e01b6001600160e01b03198316145b80610965575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461097890612dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546109a490612dbe565b80156109f15780601f106109c6576101008083540402835291602001916109f1565b820191906000526020600020905b8154815290600101906020018083116109d457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b031633811480610a4257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b610a845760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b03163314610b295760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610b80600a5490565b905090565b6000818152600260205260409020546001600160a01b03848116911614610bee5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610a7b565b6001600160a01b038216610c445760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610a7b565b336001600160a01b0384161480610c7e57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610c9f57506000818152600460205260409020546001600160a01b031633145b610cdc5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a7b565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6008546001600160a01b03163314610db45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b601883905560148290556016819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6007546006546001600160a01b039091169060009061271090610e229085612e0e565b610e2c9190612e2d565b90509250929050565b6008546001600160a01b03163314610e7e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef79190612e4f565b905060008167ffffffffffffffff811115610f1457610f14612b51565b604051908082528060200260200182016040528015610f3d578160200160208202803683370190505b50905060008267ffffffffffffffff811115610f5b57610f5b612b51565b604051908082528060200260200182016040528015610f84578160200160208202803683370190505b5090504760005b848110156110f657600e54604051631419245f60e11b81526004810183905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190612e68565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561105c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110809190612e4f565b90508186848151811061109557611095612e85565b6001600160a01b03909216602092830291909101909101526127106110bb826064612e0e565b6110c59086612e0e565b6110cf9190612e2d565b8584815181106110e1576110e1612e85565b60209081029190910101525050600101610f8b565b60005b858110156111455761113d85828151811061111657611116612e85565b602002602001015185838151811061113057611130612e85565b6020026020010151612328565b6001016110f9565b505050505050565b611158838383610b85565b6001600160a01b0382163b15806112015750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156111d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f59190612e9b565b6001600160e01b031916145b6112405760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a7b565b505050565b6009546001146112845760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a7b565b60026009556008546001600160a01b031633146112d25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b6014546015548291906112e6908390612eb8565b11156113055760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611312600a5490565b61131c9190612eb8565b111561133b5760405163fc3fc71f60e01b815260040160405180910390fd5b61134b6340d097c360e01b612383565b6015805483918291600090611361908490612eb8565b90915550600090505b818110156113b1576113a985858381811061138757611387612e85565b905060200201602081019061139c9190612978565b6113a4612438565b61244f565b60010161136a565b818110156113c75763dfb035c96000526004601cfd5b50506001600955505050565b6008546001600160a01b0316331461141c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b600b6114288282612f11565b50806040516114379190612fd1565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6009546001146114a95760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a7b565b600260095560125460ff166114d15760405163700a6c1f60e01b815260040160405180910390fd5b600f5460ff8416346114e38284612e0e565b146115015760405163f7760f2560e01b815260040160405180910390fd5b6011548490849061151483838333612542565b61153157604051631dc23a5f60e11b815260040160405180910390fd5b876010548160ff166013546115469190612eb8565b11156115655760405163a554e6e160e01b815260040160405180910390fd5b600d548160ff16611575600a5490565b61157f9190612eb8565b111561159e5760405163fc3fc71f60e01b815260040160405180910390fd5b6013805460ff8b1601905560005b8960ff168110156115cb576115c3336113a4612438565b6001016115ac565b898110156115e15763dfb035c96000526004601cfd5b505060016009555050505050505050565b6000818152600260205260409020546001600160a01b0316806116445760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610a7b565b919050565b60006001600160a01b0382166116a15760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610a7b565b506001600160a01b031660009081526003602052604090205490565b6060600b80546116cc90612dbe565b80601f01602080910402602001604051908101604052809291908181526020018280546116f890612dbe565b80156117455780601f1061171a57610100808354040283529160200191611745565b820191906000526020600020905b81548152906001019060200180831161172857829003601f168201915b5050505050905090565b6008546001600160a01b031633146117985760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b6017805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6008546001600160a01b0316331461181e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b600f839055601082905560118190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6008546001600160a01b031633146118aa5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b600e805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6001805461097890612dbe565b6009546001146119335760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a7b565b6002600955600e5460ff1661195b576040516316851fc760e11b815260040160405180910390fd5b80601454601054600d5461196f9190612fed565b6119799190612fed565b81611983600a5490565b61198d9190612eb8565b11156119ac5760405163fc3fc71f60e01b815260040160405180910390fd5b600c5482346119bb8284612e0e565b146119d95760405163f7760f2560e01b815260040160405180910390fd5b60005b848110156119f8576119f0336113a461257a565b6001016119dc565b848110156113c75763dfb035c96000526004601cfd5b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314611ac35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b611ad363044df8e760e41b612383565b80516000905b80821015611b1857611aeb600a6125a5565b611b0d838381518110611b0057611b00612e85565b60200260200101516125c2565b816001019150611ad9565b808210156112405763dfb035c96000526004601cfd5b611b39858585610b85565b6001600160a01b0384163b1580611bd05750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611b819033908a90899089908990600401613000565b6020604051808303816000875af1158015611ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc49190612e9b565b6001600160e01b031916145b611c0f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a7b565b5050505050565b6008546001600160a01b03163314611c5f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b6012805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b6060611ca6610b75565b821115611cc657604051635d68437560e11b815260040160405180910390fd5b600b611cd18361268f565b604051602001611ce2929190613054565b6040516020818303038152906040529050919050565b60175460ff16611d1b5760405163f44170cb60e01b815260040160405180910390fd5b60165482908290611d2e83838333612542565b611d4b57604051631dc23a5f60e11b815260040160405180910390fd5b60185460145481601554611d5f9190612eb8565b1115611d7e5760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611d8b600a5490565b611d959190612eb8565b1115611db45760405163fc3fc71f60e01b815260040160405180910390fd5b3360009081526019602052604090205460ff1615611de557604051630c8d9eab60e31b815260040160405180910390fd5b336000908152601960205260408120805460ff191660011790556018546015805490910190555b601854811015611e2a57611e22336113a4612438565b600101611e0c565b601854811015611e425763dfb035c96000526004601cfd5b50505050505050565b600954600114611e8a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a7b565b60026009556008546001600160a01b03163314611ed85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b8060145481601554611eea9190612eb8565b1115611f095760405163f90c1bdb60e01b815260040160405180910390fd5b600d5481611f16600a5490565b611f209190612eb8565b1115611f3f5760405163fc3fc71f60e01b815260040160405180910390fd5b611f4f6340d097c360e01b612383565b8160156000828254611f619190612eb8565b90915550600090505b82811015611f8657611f7e326113a4612438565b600101611f6a565b82811015611f9c5763dfb035c96000526004601cfd5b5050600160095550565b6008546001600160a01b03163314611fef5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a7b565b6000600e60019054906101000a90046001600160a01b03166001600160a01b031663e919ecad6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120689190612e4f565b905060008167ffffffffffffffff81111561208557612085612b51565b6040519080825280602002602001820160405280156120ae578160200160208202803683370190505b50905060008267ffffffffffffffff8111156120cc576120cc612b51565b6040519080825280602002602001820160405280156120f5578160200160208202803683370190505b506040516370a0823160e01b815230600482015290915060009081906001600160a01b038716906370a0823190602401602060405180830381865afa158015612142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121669190612e4f565b90505b848210156122d857600e54604051631419245f60e11b81526004810184905260009161010090046001600160a01b03169063283248be90602401602060405180830381865afa1580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e49190612e68565b600e5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000926101009092049091169063b34c8caf90602401602060405180830381865afa15801561223a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225e9190612e4f565b90508186858151811061227357612273612e85565b6001600160a01b0390921660209283029190910190910152612710612299826064612e0e565b6122a39085612e0e565b6122ad9190612e2d565b8585815181106122bf576122bf612e85565b6020026020010181815250508360010193505050612169565b60005b85811015611e4257612320878683815181106122f9576122f9612e85565b602002602001015186848151811061231357612313612e85565b60200260200101516126de565b6001016122db565b600080600080600085875af19050806112405760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610a7b565b6008546001600160a01b0316803b63ffffffff81166000036123a457505050565b600854604051633b7279e960e21b81526001600160e01b0319851660048201526000916001600160a01b03169063edc9e7a490602401602060405180830381865afa1580156123f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241b9190612e4f565b90508034146124325763f7760f256000526004601cfd5b50505050565b6000612448600a80546001019055565b50600a5490565b6124598282612764565b6001600160a01b0382163b15806124ff5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156124cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f39190612e9b565b6001600160e01b031916145b61253e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a7b565b5050565b60008360051b8501855b81811461257057803580851160051b9485526020948518526040600020930161254c565b5050501492915050565b6000612584612438565b506001601a60008282546125989190612eb8565b9091555050601a54919050565b8054806125ba5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b0316806126145760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610a7b565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b604080516080810191829052607f0190826030600a8206018353600a90045b80156126cc57600183039250600a81066030018353600a90046126ae565b50819003601f19909101908152919050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806124325760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a7b565b6001600160a01b0382166127ba5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610a7b565b6000818152600260205260409020546001600160a01b03161561281f5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610a7b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146128a057600080fd5b50565b6000602082840312156128b557600080fd5b81356128c08161288a565b9392505050565b60005b838110156128e25781810151838201526020016128ca565b50506000910152565b602081526000825180602084015261290a8160408501602087016128c7565b601f01601f19169190910160400192915050565b60006020828403121561293057600080fd5b5035919050565b6001600160a01b03811681146128a057600080fd5b6000806040838503121561295f57600080fd5b823561296a81612937565b946020939093013593505050565b60006020828403121561298a57600080fd5b81356128c081612937565b6000806000806000608086880312156129ad57600080fd5b85356129b881612937565b945060208601356129c881612937565b935060408601359250606086013567ffffffffffffffff808211156129ec57600080fd5b818801915088601f830112612a0057600080fd5b813581811115612a0f57600080fd5b896020828501011115612a2157600080fd5b9699959850939650602001949392505050565b600080600060608486031215612a4957600080fd5b8335612a5481612937565b92506020840135612a6481612937565b929592945050506040919091013590565b600080600060608486031215612a8a57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215612ab457600080fd5b50508035926020909101359150565b60008083601f840112612ad557600080fd5b50813567ffffffffffffffff811115612aed57600080fd5b6020830191508360208260051b8501011115612b0857600080fd5b9250929050565b60008060208385031215612b2257600080fd5b823567ffffffffffffffff811115612b3957600080fd5b612b4585828601612ac3565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612b9057612b90612b51565b604052919050565b60006020808385031215612bab57600080fd5b823567ffffffffffffffff80821115612bc357600080fd5b818501915085601f830112612bd757600080fd5b813581811115612be957612be9612b51565b612bfb601f8201601f19168501612b67565b91508082528684828501011115612c1157600080fd5b8084840185840137600090820190930192909252509392505050565b600080600060408486031215612c4257600080fd5b833560ff81168114612c5357600080fd5b9250602084013567ffffffffffffffff811115612c6f57600080fd5b612c7b86828701612ac3565b9497909650939450505050565b8035801515811461164457600080fd5b600060208284031215612caa57600080fd5b6128c082612c88565b60008060408385031215612cc657600080fd5b8235612cd181612937565b9150610e2c60208401612c88565b60006020808385031215612cf257600080fd5b823567ffffffffffffffff80821115612d0a57600080fd5b818501915085601f830112612d1e57600080fd5b813581811115612d3057612d30612b51565b8060051b9150612d41848301612b67565b8181529183018401918481019088841115612d5b57600080fd5b938501935b83851015612d7957843582529385019390850190612d60565b98975050505050505050565b60008060408385031215612d9857600080fd5b8235612da381612937565b91506020830135612db381612937565b809150509250929050565b600181811c90821680612dd257607f821691505b602082108103612df257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e2857612e28612df8565b500290565b600082612e4a57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215612e6157600080fd5b5051919050565b600060208284031215612e7a57600080fd5b81516128c081612937565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ead57600080fd5b81516128c08161288a565b8082018082111561096557610965612df8565b601f82111561124057600081815260208120601f850160051c81016020861015612ef25750805b601f850160051c820191505b8181101561114557828155600101612efe565b815167ffffffffffffffff811115612f2b57612f2b612b51565b612f3f81612f398454612dbe565b84612ecb565b602080601f831160018114612f745760008415612f5c5750858301515b600019600386901b1c1916600185901b178555611145565b600085815260208120601f198616915b82811015612fa357888601518255948401946001909101908401612f84565b5085821015612fc15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251612fe38184602087016128c7565b9190910192915050565b8181038181111561096557610965612df8565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080845461306281612dbe565b6001828116801561307a576001811461308f576130be565b60ff19841687528215158302870194506130be565b8860005260208060002060005b858110156130b55781548a82015290840190820161309c565b50505082870194505b5050505083516130d28183602088016128c7565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Whitelist__factory extends ContractFactory {
  constructor(...args: ERC721WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Whitelist> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC721Whitelist>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Whitelist {
    return super.attach(address) as ERC721Whitelist;
  }
  override connect(signer: Signer): ERC721Whitelist__factory {
    return super.connect(signer) as ERC721Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WhitelistInterface {
    return new utils.Interface(_abi) as ERC721WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC721Whitelist;
  }
}
