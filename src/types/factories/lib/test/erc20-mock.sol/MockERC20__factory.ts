/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockERC20,
  MockERC20Interface,
} from "../../../../lib/test/erc20-mock.sol/MockERC20";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amountToMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060409080825234620004a057620013248038038091620000228285620004a5565b8339810190608081830312620004a05780516001600160401b039290838111620004a0578162000054918401620004c9565b916020918282015190858211620004a05762000072918301620004c9565b858201519160ff83168303620004a05760600151918451948686116200048a5760009580620000a288546200053f565b92601f9384811162000439575b508790848311600114620003d1578992620003c5575b50508160011b916000199060031b1c19161786555b825190878211620003b1578190600194620000f686546200053f565b8281116200035c575b5087918311600114620002f8578892620002ec575b5050600019600383901b1c191690831b1782555b6080524660a0528551845491818662000141856200053f565b9283835287830195888282169182600014620002cc5750506001146200028c575b506200017192500382620004a5565b5190208551838101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8352878201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c081019581871090871117620002785785875251902060c0526002548181018091116200026457907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92916002553384526003825285842081815401905584523393a351610da790816200057d823960805181610785015260a05181610b98015260c05181610bbf0152f35b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526041600452602485fd5b8791508880528189209089915b858310620002b35750506200017193508201013862000162565b8054838801850152869450899390920191810162000299565b60ff191688526200017195151560051b8501019250389150620001629050565b01519050388062000114565b8589528789208694509190601f1984168a5b8a8282106200034557505084116200032b575b505050811b01825562000128565b015160001960f88460031b161c191690553880806200031d565b83850151865589979095019493840193016200030a565b909192508589528789208380860160051c8201928a8710620003a7575b91869589929594930160051c01915b82811062000398575050620000ff565b8b815586955088910162000388565b9250819262000379565b634e487b7160e01b87526041600452602487fd5b015190503880620000c5565b898052888a209250601f1984168a5b8a8282106200042257505090846001959493921062000408575b505050811b018655620000da565b015160001960f88460031b161c19169055388080620003fa565b6001859682939686015181550195019301620003e0565b9091508880528789208480850160051c8201928a861062000480575b9085949392910160051c01905b818110620004715750620000af565b8a815584935060010162000462565b9250819262000455565b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200048a57604052565b919080601f84011215620004a05782516001600160401b0381116200048a57602090604051926200050483601f19601f8501160185620004a5565b818452828287010111620004a05760005b8181106200052b57508260009394955001015290565b858101830151848201840152820162000515565b90600182811c9216801562000571575b60208310146200055b57565b634e487b7160e01b600052602260045260246000fd5b91607f16916200054f56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461094057508063095ea7b3146108c457806318160ddd146108a557806323b872dd146107a9578063313ce5671461076b57806340c10f19146106ba57806370a08231146106765780637ecebe001461063257806395d89b411461052e578381639dc29fac146104ac57508063a9059cbb1461041d578063d505accf1461013f578063dc0c81b5146101175763dd62ed3e146100bf57600080fd5b3461011357816003193601126101135760209282916100dc610b0c565b6100e4610b34565b9173ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b8280fd5b50503461013b578160031936011261013b57602090610134610b93565b9051908152f35b5080fd5b5091903461013b5760e060031936011261013b5761015b610b0c565b90610164610b34565b91604435606435926084359260ff8416809403610419574285106103bc5761018a610b93565b9573ffffffffffffffffffffffffffffffffffffffff8092169586895260209560058752848a209889549960018b01905585519285898501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528b89870152169a8b606086015288608086015260a085015260c084015260c0835260e0830167ffffffffffffffff948482108683111761038f57818852845190206101008501927f19010000000000000000000000000000000000000000000000000000000000008452610102860152610122850152604281526101608401948186109086111761036357848752519020835261018082015260a4356101a082015260c4356101c0909101528780528490889060809060015afa15610359578651169687151580610350575b156102f55786977f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259596975283528087208688528352818188205551908152a380f35b8360649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152fd5b508488146102b2565b81513d88823e3d90fd5b60248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5060248c60418f7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648860208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b8680fd5b50503461013b578060031936011261013b5760209161043a610b0c565b8273ffffffffffffffffffffffffffffffffffffffff6024359233855260038752828520610469858254610b57565b90551692838152600386522081815401905582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b80843461052b578060031936011261052b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206104e9610b0c565b73ffffffffffffffffffffffffffffffffffffffff60243591169384865260038352808620610519838254610b57565b9055816002540360025551908152a380f35b50fd5b82843461062f578060031936011261062f57815190806001805490610552826109e3565b80865292602092600181169081156105e4575060011461058c575b610588868861057e82890383610a36565b5191829182610aa6565b0390f35b9350600184527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8385106105d15750505050810160200161057e826105888661056d565b80548686018401529382019381016105b4565b6105889896508794506020935061057e9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010192948661056d565b80fd5b50503461013b57602060031936011261013b578060209273ffffffffffffffffffffffffffffffffffffffff610666610b0c565b1681526005845220549051908152f35b50503461013b57602060031936011261013b578060209273ffffffffffffffffffffffffffffffffffffffff6106aa610b0c565b1681526003845220549051908152f35b50346101135781600319360112610113576106d3610b0c565b602435916002549083820180921161073f5750849273ffffffffffffffffffffffffffffffffffffffff7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9360209360025516948585526003835280852082815401905551908152a380f35b8560116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b50503461013b578160031936011261013b576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50913461062f57606060031936011261062f576107c4610b0c565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6107ed610b34565b946044358573ffffffffffffffffffffffffffffffffffffffff80951694858752602098848a958652838920338a52865283892054857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610882575b50505086885260038552828820610863858254610b57565b9055169586815260038452208181540190558551908152a35160018152f35b61088b91610b57565b90888a528652838920338a5286528389205538808561084b565b50503461013b578160031936011261013b576020906002549051908152f35b50346101135781600319360112610113576020926108e0610b0c565b9183602435928392338252875273ffffffffffffffffffffffffffffffffffffffff8282209516948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8390853461062f578060031936011261062f5780548161095f826109e3565b808552916020916001918281169081156105e4575060011461098c57610588868861057e82890383610a36565b80809550527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8385106109d05750505050810160200161057e826105888661056d565b80548686018401529382019381016109b3565b90600182811c92168015610a2c575b60208310146109fd57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916109f2565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a7757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60208082528251818301819052939260005b858110610af8575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201610ab8565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b2f57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610b2f57565b91908203918211610b6457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000467f000000000000000000000000000000000000000000000000000000000000000003610be157507f000000000000000000000000000000000000000000000000000000000000000090565b60405181548291610bf1826109e3565b808252816020948582019460019087600182169182600014610d35575050600114610cdc575b50610c2492500382610a36565b51902091604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f845260408301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608301524660808301523060a083015260a0825260c082019082821067ffffffffffffffff831117610caf575060405251902090565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b87805286915087907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310610d1d575050610c24935082010138610c17565b80548388018501528694508893909201918101610d06565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168852610c2495151560051b8501019250389150610c17905056fea2646970667358221220e7f5b808ac235b77047f37f3f5e3085f3fda80664bdbb4e4d70bc9b1f24f590764736f6c63430008160033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    amountToMint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      amountToMint,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    amountToMint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      amountToMint,
      overrides || {}
    ) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
