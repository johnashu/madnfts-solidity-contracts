/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../../lib/test/erc1155-mock.sol/MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506118e6806100636000396000f3fe608060405234801561001057600080fd5b50600436106100f35760003560e01c80632eb2c2d611610097578063bc197c8111610066578063bc197c811461025a578063e985e9c514610295578063f23a6e61146102c0578063f242432a146102e057600080fd5b80632eb2c2d6146101e95780634e1273f4146101fc5780638da5cb5b1461021c578063a22cb4651461024757600080fd5b80630ca83480116100d35780630ca834801461018d5780630e89341c146101a257806313af4035146101c3578063156e29f6146101d657600080fd5b8062f74867146100f8578062fdd58e1461013657806301ffc9a71461016a575b600080fd5b61012361010636600461158f565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61012361014436600461147b565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b61017d61017836600461153f565b6102f3565b604051901515815260200161012d565b6101a061019b3660046113d0565b610345565b005b6101b66101b0366004611577565b50606090565b60405161012d9190611852565b6101a06101d1366004611250565b6103b3565b6101a06101e43660046114a4565b610460565b6101a06101f73660046112a3565b6104c4565b61020f61020a3660046114d6565b6108e4565b60405161012d9190611811565b60025461022f906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b6101a0610255366004611441565b610a46565b61027c6102683660046112a3565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161012d565b61017d6102a3366004611271565b600060208181529281526040808220909352908152205460ff1681565b61027c6102ce36600461135a565b63f23a6e6160e01b9695505050505050565b6101a06102ee36600461135a565b610ab0565b60006301ffc9a760e01b6001600160e01b0319831614806103245750636cdb3d1360e11b6001600160e01b03198316145b8061033f57506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001600160a01b031633146103935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6103ae83838360405180602001604052806000815250610dd8565b505050565b6002546001600160a01b031633146103fc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6002546001600160a01b031633146104a95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b6103ae83838360405180602001604052806000815250610f54565b8483146105055760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b336001600160a01b038916148061053d57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b61057a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008060005b87811015610745578888828181106105a857634e487b7160e01b600052603260045260246000fd5b9050602002013592508686828181106105d157634e487b7160e01b600052603260045260246000fd5b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020541161064d5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038f1684529091529020548211156106b05760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610580565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161079994939291906117ea565b60405180910390a46001600160a01b0389163b1561088e5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906107ed9033908f908e908e908e908e908e908e906004016116ac565b602060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f919061155b565b6001600160e01b031916146108895760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b6108d8565b6001600160a01b0389166108d85760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050505050505050565b60608382146109275760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b8367ffffffffffffffff81111561094e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610977578160200160208202803683370190505b50905060005b84811015610a3d57610a0a8686838181106109a857634e487b7160e01b600052603260045260246000fd5b90506020020160208101906109bd9190611250565b8585848181106109dd57634e487b7160e01b600052603260045260246000fd5b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b828281518110610a2a57634e487b7160e01b600052603260045260246000fd5b602090810291909101015260010161097d565b50949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610ae857506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b610b255760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054610b815760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115610be45760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290610c16908490611865565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290610c4d90849061187d565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610d865760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610ce59033908b908a908a908a908a9060040161176e565b602060405180830381600087803b158015610cff57600080fd5b505af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d37919061155b565b6001600160e01b03191614610d815760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b610dd0565b6001600160a01b038516610dd05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b505050505050565b82516000805b82811015610e6a57858181518110610e0657634e487b7160e01b600052603260045260246000fd5b60200260200101519150848181518110610e3057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501610dde565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051610ebb929190611824565b60405180910390a46001600160a01b0386163b15610f0a5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190610ce59033906000908b908b908b90600401611710565b6001600160a01b038616610dd05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290610f86908490611865565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b156110bc5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e619061101b9033906000908990899089906004016117a7565b602060405180830381600087803b15801561103557600080fd5b505af1158015611049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106d919061155b565b6001600160e01b031916146110b75760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b611106565b6001600160a01b0384166111065760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050565b80356001600160a01b038116811461112357600080fd5b919050565b60008083601f840112611139578081fd5b50813567ffffffffffffffff811115611150578182fd5b6020830191508360208260051b850101111561116b57600080fd5b9250929050565b600082601f830112611182578081fd5b8135602067ffffffffffffffff8083111561119f5761119f6118aa565b8260051b604051601f19603f830116810181811084821117156111c4576111c46118aa565b604052848152838101925086840182880185018910156111e2578687fd5b8692505b858310156112045780358452928401926001929092019184016111e6565b50979650505050505050565b60008083601f840112611221578182fd5b50813567ffffffffffffffff811115611238578182fd5b60208301915083602082850101111561116b57600080fd5b600060208284031215611261578081fd5b61126a8261110c565b9392505050565b60008060408385031215611283578081fd5b61128c8361110c565b915061129a6020840161110c565b90509250929050565b60008060008060008060008060a0898b0312156112be578384fd5b6112c78961110c565b97506112d560208a0161110c565b9650604089013567ffffffffffffffff808211156112f1578586fd5b6112fd8c838d01611128565b909850965060608b0135915080821115611315578586fd5b6113218c838d01611128565b909650945060808b0135915080821115611339578384fd5b506113468b828c01611210565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215611372578182fd5b61137b8761110c565b95506113896020880161110c565b94506040870135935060608701359250608087013567ffffffffffffffff8111156113b2578283fd5b6113be89828a01611210565b979a9699509497509295939492505050565b6000806000606084860312156113e4578283fd5b6113ed8461110c565b9250602084013567ffffffffffffffff80821115611409578384fd5b61141587838801611172565b9350604086013591508082111561142a578283fd5b5061143786828701611172565b9150509250925092565b60008060408385031215611453578182fd5b61145c8361110c565b915060208301358015158114611470578182fd5b809150509250929050565b6000806040838503121561148d578182fd5b6114968361110c565b946020939093013593505050565b6000806000606084860312156114b8578283fd5b6114c18461110c565b95602085013595506040909401359392505050565b600080600080604085870312156114eb578384fd5b843567ffffffffffffffff80821115611502578586fd5b61150e88838901611128565b90965094506020870135915080821115611526578384fd5b5061153387828801611128565b95989497509550505050565b600060208284031215611550578081fd5b813561126a816118c0565b60006020828403121561156c578081fd5b815161126a816118c0565b600060208284031215611588578081fd5b5035919050565b600080604083850312156115a1578182fd5b8235915061129a6020840161110c565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156115e2578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561162d57815187529582019590820190600101611611565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452815b818110156116865760208185018101518683018201520161166a565b818111156116975782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808b168352808a1660208401525060a060408301526116d960a08301888a6115b1565b82810360608401526116ec8187896115b1565b90508281036080840152611701818587611638565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261173c60a08301866115fe565b828103606084015261174e81866115fe565b905082810360808401526117628185611661565b98975050505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261176260a083018486611638565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526117df60a0830184611661565b979650505050505050565b6040815260006117fe6040830186886115b1565b82810360208401526117df8185876115b1565b60208152600061126a60208301846115fe565b60408152600061183760408301856115fe565b828103602084015261184981856115fe565b95945050505050565b60208152600061126a6020830184611661565b6000821982111561187857611878611894565b500190565b60008282101561188f5761188f611894565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146118d657600080fd5b5056fea164736f6c6343000804000a";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
