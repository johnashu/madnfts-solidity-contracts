/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../../lib/test/erc1155-mock.sol/MockERC1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461008d57331561005b57600280546001600160a01b031916339081179091556040519060007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a361110f90816100938239f35b62461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162f7486714610b7f57508062fdd58e14610b3d57806301ffc9a714610ad05780630ca834801461090b5780630e89341c146108b157806313af403514610817578063156e29f61461071c5780632eb2c2d6146104f85780634e1273f4146103f65780638da5cb5b146103cd578063a22cb46514610349578063bc197c8114610321578063e985e9c5146102d4578063f23a6e61146102aa5763f242432a146100c657600080fd5b346102a6576100d436610e16565b939491926001600160a01b03929091908316903382148015610289575b6100fa90610ea7565b828a5260209660018852898b20838c52885261011a8a8c20541515610ee4565b838b5260018852898b20838c528852610138868b8d20541015610f1d565b838b5260018852898b2094811694858c528852898b20610159878254610f5a565b9055838b5260018852898b20838c528852898b2080549087820391821161027657848a7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628f979695948f908b95558b8151938b85528401523392a43b1561026157906101fe8896959493928b519889978896879563f23a6e6160e01b9e8f8852339088015260248701526044860152606485015260a0608485015260a4840191610fdd565b03925af1918215610257576102279450859261022a575b50506001600160e01b03191614610ffe565b80f35b6102499250803d10610250575b6102418183610c22565b810190610fbd565b3880610215565b503d610237565b84513d87823e3d90fd5b50505050935050505061022791501515610f7d565b634e487b7160e01b8d5260118b5260248dfd5b50818a5260208a8152898b20338c529052888a205460ff166100f1565b8280fd5b5050346102d0576020906102bd36610e16565b5050505050505163f23a6e6160e01b8152f35b5080fd5b5050346102d057806003193601126102d05760ff816020936102f4610bda565b6102fc610bbf565b6001600160a01b03918216835282875283832091168252855220549151911615158152f35b5050346102d05760209061033436610d59565b50505050505050505163bc197c8160e01b8152f35b5050346102d057806003193601126102d057610363610bda565b90602435908115158092036103c957338452836020528084209260018060a01b03169283855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b5050346102d057816003193601126102d05760025490516001600160a01b039091168152602090f35b5090346102a657806003193601126102a65767ffffffffffffffff9082358281116104f4576104289036908501610cfa565b9290936024359182116104f05761044191369101610cfa565b939061044e85851461103d565b61045784610c44565b9461046484519687610c22565b848652601f1961047386610c44565b01946020953687890137875b81811061049c57855187815280610498818a018b610de2565b0390f35b6104a781838761107b565b356001600160a01b03811691908290036104ec576001916104c982868861107b565b358b52828952878b20908b528852868a20546104e5828b6110c5565b520161047f565b8980fd5b8580fd5b8480fd5b50346102a65761050736610d59565b909261051783869799961461103d565b6001600160a01b03948516946105393387148c8e82156106fe575b5050610ea7565b888c5b8d8d8a80841061066e57505050505087169687868c7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6105858d8c8451948086528501916110a1565b9180830360208201528061059b33948b8a6110a1565b0390a43b15610659578951978896879663bc197c8160e01b9b8c8952339089015260248801526044870160a0905260a48701906105d7926110a1565b60031993848783030160648801526105ee926110a1565b9184830301608485015261060192610fdd565b0381875a94602095f190811561064c576102279350849161062e575b506001600160e01b03191614610ffe565b610646915060203d8111610250576102418183610c22565b3861061d565b50505051903d90823e3d90fd5b50505050505091505061022791501515610f7d565b8361067b9160019661107b565b35918a8d61068a868c8b61107b565b3594808452879160209383855286862081875285526106ad878720541515610ee4565b82865283855286862090865284526106ca87878720541015610f1d565b8185528284528986862091168552835284842086815401905583528152828220908c8352522090815403905501899061053c565b60ff9250898152806020528181203382526020522054168c8e610532565b50346102a65760603660031901126102a657610736610bda565b60243560443560018060a01b039061075382600254163314610e6c565b8686519361076085610bf0565b81855280825260209560018752888320948116948584528752888320610787858254610f5a565b905584838a51848152868a8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b1561080457918593916101fe959389519687958694859363f23a6e6160e01b9c8d865233908601528560248601526044850152606484015260a0608484015260a4830190610cba565b5050509250505061022791501515610f7d565b50346102a65760203660031901126102a657610831610bda565b9060018060a01b0361084881600254163314610e6c565b821692831561087e575050600255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b906020606492519162461bcd60e51b8352820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152fd5b5050346102d0576020806003193601126102a657918151928391818352606051918281850152815b8381106108f6575050828201840152601f01601f19168101030190f35b608081015187820187015286945081016108d9565b50346102a6576003196060368201126103c957610926610bda565b67ffffffffffffffff602435818111610acc576109469036908601610c5c565b90604435908111610acc5790610960879236908701610c5c565b9360018060a01b039361097885600254163314610e6c565b87519061098482610bf0565b848252835185968216965b818110610a865750508585887f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6109d38d6109e2815192828493845283018c610de2565b82810360208401523395610de2565b0390a43b15610a73579260209492610a4c610a2d93610a3d98968b51998a988997889663bc197c8160e01b9e8f8952339089015288602489015260a0604489015260a4880190610de2565b9084878303016064880152610de2565b91848303016084850152610cba565b03925af190811561064c576102279350849161062e57506001600160e01b03191614610ffe565b5050505091505061022791501515610f7d565b859650610a9981600193949596976110c5565b51610aa4828b6110c5565b51908d528c8c8a60209186835283209252528b8d2090815401905501908a959493929161098f565b8680fd5b50346102a65760203660031901126102a657359063ffffffff60e01b82168092036102a657602092506301ffc9a760e01b8214918215610b2c575b8215610b1b575b50519015158152f35b6303a24d0760e21b14915038610b12565b636cdb3d1360e11b81149250610b0b565b5050346102d057806003193601126102d05780602092610b5b610bda565b6024358252600185528282206001600160a01b039091168252845220549051908152f35b92919050346103c957816003193601126103c95792602093610b9f610bbf565b90358252600185528282206001600160a01b039091168252845220548152f35b602435906001600160a01b0382168203610bd557565b600080fd5b600435906001600160a01b0382168203610bd557565b6020810190811067ffffffffffffffff821117610c0c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610c0c57604052565b67ffffffffffffffff8111610c0c5760051b60200190565b81601f82011215610bd557803591610c7383610c44565b92610c816040519485610c22565b808452602092838086019260051b820101928311610bd5578301905b828210610cab575050505090565b81358152908301908301610c9d565b919082519283825260005b848110610ce6575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cc5565b9181601f84011215610bd55782359167ffffffffffffffff8311610bd5576020808501948460051b010111610bd557565b9181601f84011215610bd55782359167ffffffffffffffff8311610bd55760208381860195010111610bd557565b9060a0600319830112610bd5576001600160a01b03916004358381168103610bd557926024359081168103610bd5579167ffffffffffffffff604435818111610bd55783610da991600401610cfa565b93909392606435838111610bd55782610dc491600401610cfa565b93909392608435918211610bd557610dde91600401610d2b565b9091565b90815180825260208080930193019160005b828110610e02575050505090565b835185529381019392810192600101610df4565b60a0600319820112610bd5576001600160a01b03916004358381168103610bd557926024359081168103610bd5579160443591606435916084359067ffffffffffffffff8211610bd557610dde91600401610d2b565b15610e7357565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b15610eae57565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15610eeb57565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b15610f2457565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b91908201809211610f6757565b634e487b7160e01b600052601160045260246000fd5b15610f8457565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b90816020910312610bd557516001600160e01b031981168103610bd55790565b908060209392818452848401376000828201840152601f01601f1916010190565b1561100557565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b1561104457565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b919081101561108b5760051b0190565b634e487b7160e01b600052603260045260246000fd5b81835290916001600160fb1b038311610bd55760209260051b809284830137010190565b805182101561108b5760209160051b01019056fea264697066735822122029bcaf4e4a4d4609890ad988f1c64d5b801b8a21d726748acb85f917c2923e4964736f6c63430008130033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
