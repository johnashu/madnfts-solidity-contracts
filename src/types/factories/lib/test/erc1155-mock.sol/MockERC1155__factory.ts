/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../../lib/test/erc1155-mock.sol/MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35061185c806100636000396000f3fe608060405234801561001057600080fd5b50600436106100f35760003560e01c80632eb2c2d611610097578063bc197c8111610066578063bc197c811461025a578063e985e9c514610295578063f23a6e61146102c0578063f242432a146102e057600080fd5b80632eb2c2d6146101e95780634e1273f4146101fc5780638da5cb5b1461021c578063a22cb4651461024757600080fd5b80630ca83480116100d35780630ca834801461018d5780630e89341c146101a257806313af4035146101c3578063156e29f6146101d657600080fd5b8062f74867146100f8578062fdd58e1461013657806301ffc9a71461016a575b600080fd5b61012361010636600461108b565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101236101443660046110b7565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b61017d6101783660046110fa565b6102f3565b604051901515815260200161012d565b6101a061019b3660046111cf565b610345565b005b6101b66101b0366004611243565b50606090565b60405161012d91906112a2565b6101a06101d13660046112b5565b6103b3565b6101a06101e43660046112d0565b610460565b6101a06101f7366004611391565b6104c4565b61020f61020a36600461144c565b6108b9565b60405161012d91906114f3565b60025461022f906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b6101a0610255366004611506565b6109e3565b61027c610268366004611391565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161012d565b61017d6102a3366004611542565b600060208181529281526040808220909352908152205460ff1681565b61027c6102ce36600461156c565b63f23a6e6160e01b9695505050505050565b6101a06102ee36600461156c565b610a4d565b60006301ffc9a760e01b6001600160e01b0319831614806103245750636cdb3d1360e11b6001600160e01b03198316145b8061033f57506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001600160a01b031633146103935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6103ae83838360405180602001604052806000815250610d66565b505050565b6002546001600160a01b031633146103fc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6002546001600160a01b031633146104a95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b6103ae83838360405180602001604052806000815250610ec6565b8483146105055760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b336001600160a01b038916148061053d57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b61057a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008060005b878110156107295788888281811061059a5761059a6115e4565b9050602002013592508686828181106105b5576105b56115e4565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054116106315760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038f1684529091529020548211156106945760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610580565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161077d9493929190611645565b60405180910390a46001600160a01b0389163b156108635760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906107d19033908f908e908e908e908e908e908e90600401611695565b6020604051808303816000875af11580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081491906116f9565b6001600160e01b0319161461085e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b6108ad565b6001600160a01b0389166108ad5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050505050505050565b60608382146108fc5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b8367ffffffffffffffff8111156109155761091561111e565b60405190808252806020026020018201604052801561093e578160200160208202803683370190505b50905060005b848110156109da576109b5868683818110610961576109616115e4565b905060200201602081019061097691906112b5565b858584818110610988576109886115e4565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106109c7576109c76115e4565b6020908102919091010152600101610944565b50949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610a8557506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b610ac25760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054610b1e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115610b815760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290610bb390849061172c565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290610bea90849061173f565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610d145760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610c829033908b908a908a908a908a90600401611752565b6020604051808303816000875af1158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc591906116f9565b6001600160e01b03191614610d0f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b610d5e565b6001600160a01b038516610d5e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b505050505050565b82516000805b82811015610ddc57858181518110610d8657610d866115e4565b60200260200101519150848181518110610da257610da26115e4565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501610d6c565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051610e2d929190611797565b60405180910390a46001600160a01b0386163b15610e7c5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190610c829033906000908b908b908b906004016117c5565b6001600160a01b038616610d5e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290610ef890849061172c565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b1561101f5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610f8d903390600090899089908990600401611817565b6020604051808303816000875af1158015610fac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd091906116f9565b6001600160e01b0319161461101a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b611069565b6001600160a01b0384166110695760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050565b80356001600160a01b038116811461108657600080fd5b919050565b6000806040838503121561109e57600080fd5b823591506110ae6020840161106f565b90509250929050565b600080604083850312156110ca57600080fd5b6110d38361106f565b946020939093013593505050565b6001600160e01b0319811681146110f757600080fd5b50565b60006020828403121561110c57600080fd5b8135611117816110e1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261114557600080fd5b8135602067ffffffffffffffff808311156111625761116261111e565b8260051b604051601f19603f830116810181811084821117156111875761118761111e565b6040529384528581018301938381019250878511156111a557600080fd5b83870191505b848210156111c4578135835291830191908301906111ab565b979650505050505050565b6000806000606084860312156111e457600080fd5b6111ed8461106f565b9250602084013567ffffffffffffffff8082111561120a57600080fd5b61121687838801611134565b9350604086013591508082111561122c57600080fd5b5061123986828701611134565b9150509250925092565b60006020828403121561125557600080fd5b5035919050565b6000815180845260005b8181101561128257602081850181015186830182015201611266565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611117602083018461125c565b6000602082840312156112c757600080fd5b6111178261106f565b6000806000606084860312156112e557600080fd5b6112ee8461106f565b95602085013595506040909401359392505050565b60008083601f84011261131557600080fd5b50813567ffffffffffffffff81111561132d57600080fd5b6020830191508360208260051b850101111561134857600080fd5b9250929050565b60008083601f84011261136157600080fd5b50813567ffffffffffffffff81111561137957600080fd5b60208301915083602082850101111561134857600080fd5b60008060008060008060008060a0898b0312156113ad57600080fd5b6113b68961106f565b97506113c460208a0161106f565b9650604089013567ffffffffffffffff808211156113e157600080fd5b6113ed8c838d01611303565b909850965060608b013591508082111561140657600080fd5b6114128c838d01611303565b909650945060808b013591508082111561142b57600080fd5b506114388b828c0161134f565b999c989b5096995094979396929594505050565b6000806000806040858703121561146257600080fd5b843567ffffffffffffffff8082111561147a57600080fd5b61148688838901611303565b9096509450602087013591508082111561149f57600080fd5b506114ac87828801611303565b95989497509550505050565b600081518084526020808501945080840160005b838110156114e8578151875295820195908201906001016114cc565b509495945050505050565b60208152600061111760208301846114b8565b6000806040838503121561151957600080fd5b6115228361106f565b91506020830135801515811461153757600080fd5b809150509250929050565b6000806040838503121561155557600080fd5b61155e8361106f565b91506110ae6020840161106f565b60008060008060008060a0878903121561158557600080fd5b61158e8761106f565b955061159c6020880161106f565b94506040870135935060608701359250608087013567ffffffffffffffff8111156115c657600080fd5b6115d289828a0161134f565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561162c57600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006116596040830186886115fa565b82810360208401526111c48185876115fa565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526116c260a08301888a6115fa565b82810360608401526116d58187896115fa565b905082810360808401526116ea81858761166c565b9b9a5050505050505050505050565b60006020828403121561170b57600080fd5b8151611117816110e1565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033f5761033f611716565b8181038181111561033f5761033f611716565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261178b60a08301848661166c565b98975050505050505050565b6040815260006117aa60408301856114b8565b82810360208401526117bc81856114b8565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526117f160a08301866114b8565b828103606084015261180381866114b8565b9050828103608084015261178b818561125c565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526111c460a083018461125c56fea164736f6c6343000810000a";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
