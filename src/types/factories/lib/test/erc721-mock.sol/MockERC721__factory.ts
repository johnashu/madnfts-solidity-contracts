/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../../lib/test/erc721-mock.sol/MockERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200311d3803806200311d833981810160405281019062000037919062000338565b81816200006d7fb86c897c08b13d61788f2516da6390d019fc9c140f2c5e9e454d4e95e924f62c60001b6200019f60201b60201c565b620000a17fc5c73fa50301c870b6b5adb1a74f3e4dd56313e8f54edd484fc9b2bc47a6205560001b6200019f60201b60201c565b620000d57fbd4b900c9f358f6fa12d2590df5a36895653db0c0425d3d67204e2f90261b62e60001b6200019f60201b60201c565b8160009081620000e6919062000608565b506200011b7fd7c018f9b8244c8f1bcfb0d7e004fb1d66965d632e2a046f415a905130ed142160001b6200019f60201b60201c565b6200014f7f5e2225065558eab0ecfebe1d0a34a1e3a687a64335ca86241529e77ade2bc67e60001b6200019f60201b60201c565b806001908162000160919062000608565b505050620001977fa0ebe96f4452fd7a5f9c7cba4cb9b6723b5e8cf8bb2b206a3312d06733a51c0960001b620001a260201b60201c565b5050620006ef565b50565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200020e82620001c3565b810181811067ffffffffffffffff8211171562000230576200022f620001d4565b5b80604052505050565b600062000245620001a5565b905062000253828262000203565b919050565b600067ffffffffffffffff821115620002765762000275620001d4565b5b6200028182620001c3565b9050602081019050919050565b60005b83811015620002ae57808201518184015260208101905062000291565b60008484015250505050565b6000620002d1620002cb8462000258565b62000239565b905082815260208101848484011115620002f057620002ef620001be565b5b620002fd8482856200028e565b509392505050565b600082601f8301126200031d576200031c620001b9565b5b81516200032f848260208601620002ba565b91505092915050565b60008060408385031215620003525762000351620001af565b5b600083015167ffffffffffffffff811115620003735762000372620001b4565b5b620003818582860162000305565b925050602083015167ffffffffffffffff811115620003a557620003a4620001b4565b5b620003b38582860162000305565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200041057607f821691505b602082108103620004265762000425620003c8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000451565b6200049c868362000451565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004e9620004e3620004dd84620004b4565b620004be565b620004b4565b9050919050565b6000819050919050565b6200050583620004c8565b6200051d6200051482620004f0565b8484546200045e565b825550505050565b600090565b6200053462000525565b62000541818484620004fa565b505050565b5b8181101562000569576200055d6000826200052a565b60018101905062000547565b5050565b601f821115620005b85762000582816200042c565b6200058d8462000441565b810160208510156200059d578190505b620005b5620005ac8562000441565b83018262000546565b50505b505050565b600082821c905092915050565b6000620005dd60001984600802620005bd565b1980831691505092915050565b6000620005f88383620005ca565b9150826002028217905092915050565b6200061382620003bd565b67ffffffffffffffff8111156200062f576200062e620001d4565b5b6200063b8254620003f7565b620006488282856200056d565b600060209050601f8311600181146200068057600084156200066b578287015190505b620006778582620005ea565b865550620006e7565b601f19841662000690866200042c565b60005b82811015620006ba5784890151825560018201915060208501945060208101905062000693565b86831015620006da5784890151620006d6601f891682620005ca565b8355505b6001600288020188555050505b505050505050565b612a1e80620006ff6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b80636352211e146101dd57806370a082311461020d57806395d89b411461023d576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806340c10f19146101a557806342842e0e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906120ed565b6102f3565b6040516101169190612135565b60405180910390f35b610127610409565b60405161013491906121e0565b60405180910390f35b61015760048036038101906101529190612238565b610497565b60405161016491906122a6565b60405180910390f35b610187600480360381019061018291906122ed565b6104ca565b005b6101a3600480360381019061019e919061232d565b610897565b005b6101bf60048036038101906101ba91906122ed565b611032565b005b6101db60048036038101906101d6919061232d565b6110c4565b005b6101f760048036038101906101f29190612238565b611330565b60405161020491906122a6565b60405180910390f35b61022760048036038101906102229190612380565b6114b8565b60405161023491906123bc565b60405180910390f35b6102456116a4565b60405161025291906121e0565b60405180910390f35b61027560048036038101906102709190612403565b611732565b005b610291600480360381019061028c91906124a8565b61190b565b005b6102ad60048036038101906102a89190612238565b611b7d565b6040516102ba91906121e0565b60405180910390f35b6102dd60048036038101906102d89190612530565b611bb0565b6040516102ea9190612135565b60405180910390f35b60006103217f84f8572a07ee78d3818ab5251a5d2d7a5e5a38af51b514d365f9057adde0241160001b611bdf565b61034d7fc89a2265fbccc87754f09938fbbc96f0ebc68687ad5bc492e1b027fa62b1eafe60001b611bdf565b6103797f60d86d5c7262104a9128f5763c86c0a0bc34edff390bfdda7c670c9a9f09645e60001b611bdf565b6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104025750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546104169061259f565b80601f01602080910402602001604051908101604052809291908181526020018280546104429061259f565b801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f67f85a438f326bca872d247d342a4ca68adedd792453d589f658d8ba3da39d5784260001b611bdf565b6105227f8b1d5de990a91542936400308aabc05665baac48eaeca1ce4cb71e6d4d40a6af60001b611bdf565b61054e7f3f0cea4683baea505e5bf3e6f3aa6a28c3ec029aca2c99254f192a070c18967460001b611bdf565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506105b27f22c54aea81962f4d273c9fb8772d75c5de04cd6e986c983d039deb8cb1da49f060001b611bdf565b6105de7f80b164854b9fc278396615101efb0d154a08c560d114e34f527addf5a791d2d660001b611bdf565b61060a7f8f6d10c9955e0539336c013ba80f5ce04f2cef779e02601a50defefea54c23ab60001b611bdf565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106ca5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610709576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107009061261c565b60405180910390fd5b6107357fa36c35776c4fef967ea599bf2f94108f71d206f1df05ceaa856844ebbf0434ea60001b611bdf565b6107617ffe624f2fff9a0e6f74ce2833207339dbdf8146752eb0478710affb8ecb26a04b60001b611bdf565b61078d7fdaec3b87da092ad94512634f998aa1fb215cbf52412fe4cd94cb768382217f1960001b611bdf565b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061080b7f2c8445d3fd0a88a71dc1afa0936e5c2a9358212b9fa512e0eb6a1c9137cf874a60001b611bdf565b6108377f73e8f0cd364fe928325e2f62ade401520c9a504c517579e87f9f2b84e709d21660001b611bdf565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108c37f426a4283179b826d989489028eefccabe5e4f41d3f98a168ffdad845990789ce60001b611bdf565b6108ef7f7a8dcda58fb27591aa7a900ce412383e8bde28887f8105ddd4b7ad1c44b9add260001b611bdf565b61091b7f3f56caae4914280603942540f37383265f506da106e3e80106d886d52a9f8d2960001b611bdf565b6109477fe68a35bca24939a881ea7f5b82a954078c377cebb6b0e151ac059c3adcaf64ab60001b611bdf565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df90612688565b60405180910390fd5b610a147fa934a7494814dffbd871c979856d2a8b5ba55f160a33b8b80e39ef24113c150c60001b611bdf565b610a407f0bf27e289fa3cfa3659b55f784ca783b8427dd51e7736b530f9b9515c50219c660001b611bdf565b610a6c7f16b079629b23780de135e44348b57ef61d9217ff639fab32ab8ea32cc5596d6e60001b611bdf565b610a987f8ca11512bdabdcbb44c9bfb03da64362f2b8e7e3f18c53354d58dc63fa35ef3e60001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe906126f4565b60405180910390fd5b610b337fedc9daab188324568d396a8eab760f74ff1623249514766afbfbd4448dd0e18860001b611bdf565b610b5f7ff6a6bf697011813b426fc6d27cb7f9639fa3c2a2eb176e23662e5063f203dfee60001b611bdf565b610b8b7f27b83dfdb54670a2d51c402ec39720c077cede374c7740450de0e3a14e02ca2b60001b611bdf565b610bb77f2b6805779a35a5aa595d8f25b34fd053ac651255f8b21424d70618b88b6c027960001b611bdf565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c775750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610ce057506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d169061261c565b60405180910390fd5b610d4b7ff255b62f8c17409db924a93410c3e56a1bce156cb4d2279df7b03d648b85747e60001b611bdf565b610d777f62e65abbc561570e4d480b625c7b265a4a8fae5e3cdf68c86fee4c37d394e52560001b611bdf565b610da37f262369b1976f6f83c4b01bbc711158fae2a68a67fa1595e8c9971436303deb9d60001b611bdf565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550610e1f7f933e55533b15096ec0bf8f17c735700ea1a1a2a8b02e31849abe3c66b39cdd0460001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550610e9a7f7ba7f393451df134ce992835dd0d5fbff9c1371e4d23450f9e37b03ee9cbbb2060001b611bdf565b610ec67f0770058ceb7b75e3889278c244639ae18655976116e24388e198f4455072ce8a60001b611bdf565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f447fc1580d0f93d7edeeb9f60caed0ef356b015ba21d4a6bdc2d8fc6022efda305a560001b611bdf565b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610fa67fcf8e5b0c9fb52a8936e332293f383ff31e2cd557633dccbb9db171b0e6b1a76960001b611bdf565b610fd27f7eea2767c13b98dd3821a57affa2796d7e6ce5174861a990c5cc9b5ed427b91960001b611bdf565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61105e7f6df4c67ebd44f170fa27d34939e2ef6914ed02d9ab1209238f9e5187b1e399af60001b611be2565b61108a7fb79108d683e7c9c533f2378ae768dd8728fd6b2103a0481c3bbd93999a914ead60001b611be2565b6110b67ffb59e82d9a9f82bfa128139563eb3a7b7ea63dc567252cfa38e2e436a2090e5060001b611be2565b6110c08282611be5565b5050565b6110f07fb0ee4498061e4956a32c54ad1dae66a7b703b4dc250c849b1561f5c2bae1181360001b611bdf565b61111c7f0664e55f8a792e7395e4955e8437a9421946b46d2e642116d1922267342036a960001b611bdf565b6111487f349b8ddf91231b77bcb0a156f54a01191eeb8edb508fdb5397896f9c8c248e8060001b611bdf565b611153838383610897565b61117f7fca79745116bb9f762adf5ff9002d2bd790601595ebc1e0778ff69e06c73b303260001b611bdf565b6111ab7f1dfbd66c1d70b021460576b641241ee4ebb5d9275fd87aff8c7625b7c83fe5b060001b611bdf565b6111d77ffae8b3503c93b75cd294f7002185b1ac738e0bf9bd2e9fc27674e5b380f4501560001b611bdf565b60008273ffffffffffffffffffffffffffffffffffffffff163b14806112c0575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161125c9392919061274b565b6020604051808303816000875af115801561127b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129f91906127aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f690612823565b60405180910390fd5b61132b7f456f991c794cd016e9523a5a1b7ab7b1c73d5f979498087e69364cad18c46ba560001b611bdf565b505050565b600061135e7fa02846b7ef61d88432c7152ca20deac45eefc0104a59bc5a7e69ae465556fabd60001b611bdf565b61138a7f44cfd570c1b62f7e36045a878d5fa0f86dd5b03cd6482cfc2a3f5157c605e24660001b611bdf565b6113b67f708e837af832430d425be5dc23df5aef04b8f334bc7da7063781f51c41a2450360001b611bdf565b6113e27f8bf7f43efdf8096e0f6a55680dcee621fe24eda818338e7e726278e3039fa64860001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1603611487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147e9061288f565b60405180910390fd5b6114b37f682e111c056650d7c4cbf266fa4c632feacac567c9a2890758bc20149371117e60001b611bdf565b919050565b60006114e67fb820eceaed7d94cb852867ee434f79ce315d9f772f089656f310d9951857d07460001b611bdf565b6115127f1957fc78a8bb3cad5111d4a7a62b22bf74af04d9f54086fb8d8562bd5f32625160001b611bdf565b61153e7ffe3ff97e99487430214cc2a8cb6adafd8957c35a5b5c8c903bbffde2f85426ea60001b611bdf565b61156a7f44da6565a384eb73c95cd52a0b04de2d6ffdd557d67b0f80f02ec2b07c3105b560001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d0906128fb565b60405180910390fd5b6116057fcc761b87bcfcd161a69416d45dcfc8187366ca9ce82cfa0e3aafff46f3c1c24360001b611bdf565b6116317ffc54a888c2225798eea049c60cba613eca4151709a31ad768155670fe7bcd74a60001b611bdf565b61165d7fab114f40dd935486fa8ad4c3e792856c6361bbfd1732dce1a04a2a026e61042f60001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546116b19061259f565b80601f01602080910402602001604051908101604052809291908181526020018280546116dd9061259f565b801561172a5780601f106116ff5761010080835404028352916020019161172a565b820191906000526020600020905b81548152906001019060200180831161170d57829003601f168201915b505050505081565b61175e7f0d0d54330e8f94cbe5fbe3ab69fdab3051ef4d83b1a3a4e845e61b037e3abf1660001b611bdf565b61178a7fc25488846841bf78e7cf53c051911db409d029b084a8214f3f16e97e7b093e8160001b611bdf565b6117b67f4b84f21a479fe7970aec38e8822e1b2e6d10007c5ca8723d5158443e4d5ccf2060001b611bdf565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118767fe15a8068f40140c4a6a8fb2b5bbc18f36bebd6173a281166e6d4f8e67509b3cb60001b611bdf565b6118a27fe7c310e2e387daaf49b5e5346e5a75c5562f5f584039b3012bd556939c5850ff60001b611bdf565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118ff9190612135565b60405180910390a35050565b6119377fea13784bdafd07e535e5886f06b0b6815e26cd29fcdcb69cdcac4d44adddd54460001b611bdf565b6119637fb04290ebfe804d6755f57ec5de17d31fcc059584ae24e40618313b36643b4eea60001b611bdf565b61198f7ff4a96feb5c6119283d8fd715aa927682f729a548d554323d007e1ddd36a5500960001b611bdf565b61199a858585610897565b6119c67ff145c73a56f33ac9f767499a4f62934642033631f449dcab23d823043fbc7a3860001b611bdf565b6119f27fb73522165d3dc15d2c481f08c209264855b14f876ca30344a1830a22ec85fb0760001b611bdf565b611a1e7f31beb10eff387e8525b565ab38d0c88fe90bf520acf0799c174368c4e5f8d2bc60001b611bdf565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480611b0b575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401611aa7959493929190612957565b6020604051808303816000875af1158015611ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aea91906127aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4190612823565b60405180910390fd5b611b767f13c034a4e621e1d2be85b9e441b391ce6f055dbd91d208a686bd6ce1b95fa16560001b611bdf565b5050505050565b6060611bab7f97053c9f912cbf36ce8258bcbbec05b538b6c56282a1c4ed3bb108e856a40df760001b611be2565b919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b50565b50565b611c117f5da903732718098a28da7741b23722881e88cff7a58b1130060d9ff2a5d99ae260001b611bdf565b611c3d7f36f4669c1fefeb91909392517a35812a43b8d03b125208c7f8ae68d8a797900c60001b611bdf565b611c697fc423a5b7cc25b371cb6a2cd6c3bc451c7c9f5b92000f172363c6c4be1ed7e2bc60001b611bdf565b611c957f20c73faf7f14567d15cb16fb584b9d1bc2aa1cf2eb7e7d829085989f95f6f46a60001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cfb906126f4565b60405180910390fd5b611d307f61dfb92a02c22af66b7b6435a7bbd562b5fa29aa418ce07a10d5e8691ca6e99360001b611bdf565b611d5c7fe7f0bf3abfab131a77566245f5475dfd74bb0948d14934a73e0c8ed21b9acbe360001b611bdf565b611d887f0b198598ac95a26b9694313dcfe68fa0fbc86a7f8c06cbe390b03175f49bef2e60001b611bdf565b611db47f64f589b32e773251609760f76e0242368a1b159cfc7f2f7561202d630415120d60001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d906129f1565b60405180910390fd5b611e827f8dbbc91ff339999607015ec4a267aa63b65fa288d095a52475587a94779396b160001b611bdf565b611eae7fae4f0f63d5bc4c8669f77f5ccc3c2455b0e66e86cb4662715b9ed8ef3f2bad1f60001b611bdf565b611eda7f654994832bd714d3a26dce16cea73778c4b548ea8c1a63f3224a5ffe851df20760001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550611f557f7ac39a7c365e53507a6784cc9b8a4c3424e7ab0d3220bc3d97de39dbf9ca4c3e60001b611bdf565b611f817fe3b65be2a1b23ac611ce49022daf9282f75b3e42acb67c17bba6884eb595347a60001b611bdf565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fff7f688b90a662142ec3ec28457e5fbcd66c4ffb951039c4e3f2495b400e6c293f9560001b611bdf565b61202b7f0d2930633eb8c7092eee252dc14cec8ef21df60c8de9168aa05424366cb1c3bc60001b611bdf565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120ca81612095565b81146120d557600080fd5b50565b6000813590506120e7816120c1565b92915050565b6000602082840312156121035761210261208b565b5b6000612111848285016120d8565b91505092915050565b60008115159050919050565b61212f8161211a565b82525050565b600060208201905061214a6000830184612126565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561218a57808201518184015260208101905061216f565b60008484015250505050565b6000601f19601f8301169050919050565b60006121b282612150565b6121bc818561215b565b93506121cc81856020860161216c565b6121d581612196565b840191505092915050565b600060208201905081810360008301526121fa81846121a7565b905092915050565b6000819050919050565b61221581612202565b811461222057600080fd5b50565b6000813590506122328161220c565b92915050565b60006020828403121561224e5761224d61208b565b5b600061225c84828501612223565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061229082612265565b9050919050565b6122a081612285565b82525050565b60006020820190506122bb6000830184612297565b92915050565b6122ca81612285565b81146122d557600080fd5b50565b6000813590506122e7816122c1565b92915050565b600080604083850312156123045761230361208b565b5b6000612312858286016122d8565b925050602061232385828601612223565b9150509250929050565b6000806000606084860312156123465761234561208b565b5b6000612354868287016122d8565b9350506020612365868287016122d8565b925050604061237686828701612223565b9150509250925092565b6000602082840312156123965761239561208b565b5b60006123a4848285016122d8565b91505092915050565b6123b681612202565b82525050565b60006020820190506123d160008301846123ad565b92915050565b6123e08161211a565b81146123eb57600080fd5b50565b6000813590506123fd816123d7565b92915050565b6000806040838503121561241a5761241961208b565b5b6000612428858286016122d8565b9250506020612439858286016123ee565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261246857612467612443565b5b8235905067ffffffffffffffff81111561248557612484612448565b5b6020830191508360018202830111156124a1576124a061244d565b5b9250929050565b6000806000806000608086880312156124c4576124c361208b565b5b60006124d2888289016122d8565b95505060206124e3888289016122d8565b94505060406124f488828901612223565b935050606086013567ffffffffffffffff81111561251557612514612090565b5b61252188828901612452565b92509250509295509295909350565b600080604083850312156125475761254661208b565b5b6000612555858286016122d8565b9250506020612566858286016122d8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125b757607f821691505b6020821081036125ca576125c9612570565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b6000612606600e8361215b565b9150612611826125d0565b602082019050919050565b60006020820190508181036000830152612635816125f9565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612672600a8361215b565b915061267d8261263c565b602082019050919050565b600060208201905081810360008301526126a181612665565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b60006126de60118361215b565b91506126e9826126a8565b602082019050919050565b6000602082019050818103600083015261270d816126d1565b9050919050565b600082825260208201905092915050565b50565b6000612735600083612714565b915061274082612725565b600082019050919050565b60006080820190506127606000830186612297565b61276d6020830185612297565b61277a60408301846123ad565b818103606083015261278b81612728565b9050949350505050565b6000815190506127a4816120c1565b92915050565b6000602082840312156127c0576127bf61208b565b5b60006127ce84828501612795565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b600061280d60108361215b565b9150612818826127d7565b602082019050919050565b6000602082019050818103600083015261283c81612800565b9050919050565b7f4e4f545f4d494e54454400000000000000000000000000000000000000000000600082015250565b6000612879600a8361215b565b915061288482612843565b602082019050919050565b600060208201905081810360008301526128a88161286c565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b60006128e5600c8361215b565b91506128f0826128af565b602082019050919050565b60006020820190508181036000830152612914816128d8565b9050919050565b82818337600083830152505050565b60006129368385612714565b935061294383858461291b565b61294c83612196565b840190509392505050565b600060808201905061296c6000830188612297565b6129796020830187612297565b61298660408301866123ad565b818103606083015261299981848661292a565b90509695505050505050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b60006129db600e8361215b565b91506129e6826129a5565b602082019050919050565b60006020820190508181036000830152612a0a816129ce565b905091905056fea164736f6c6343000810000a";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<MockERC721>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  override connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
