/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../../lib/test/erc721-mock.sol/MockERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200311d3803806200311d833981810160405281019062000037919062000338565b81816200006d7f3c4334c6625414e4f4d70a387c2b7cd60a04ea41b4dfb899eb6a48cc03e1ad2460001b6200019f60201b60201c565b620000a17f717688807f6993915a67615904e1f8d00cc777d55fe2d72ef4a38430d8d6664660001b6200019f60201b60201c565b620000d57f163c7a6a79b2c6e9afc25f002385481927c0d0f36be16fb01f7809e3cb60f86b60001b6200019f60201b60201c565b8160009081620000e6919062000608565b506200011b7f937dc7f7d7d2498543a5068232647dbb810324bf8fa9b68e4917778aa1ab129b60001b6200019f60201b60201c565b6200014f7f918358e7e6ffaf0ac081916a7e46bc1df61bf43fde92c085a9a916776c98904a60001b6200019f60201b60201c565b806001908162000160919062000608565b505050620001977fa0ebe96f4452fd7a5f9c7cba4cb9b6723b5e8cf8bb2b206a3312d06733a51c0960001b620001a260201b60201c565b5050620006ef565b50565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200020e82620001c3565b810181811067ffffffffffffffff8211171562000230576200022f620001d4565b5b80604052505050565b600062000245620001a5565b905062000253828262000203565b919050565b600067ffffffffffffffff821115620002765762000275620001d4565b5b6200028182620001c3565b9050602081019050919050565b60005b83811015620002ae57808201518184015260208101905062000291565b60008484015250505050565b6000620002d1620002cb8462000258565b62000239565b905082815260208101848484011115620002f057620002ef620001be565b5b620002fd8482856200028e565b509392505050565b600082601f8301126200031d576200031c620001b9565b5b81516200032f848260208601620002ba565b91505092915050565b60008060408385031215620003525762000351620001af565b5b600083015167ffffffffffffffff811115620003735762000372620001b4565b5b620003818582860162000305565b925050602083015167ffffffffffffffff811115620003a557620003a4620001b4565b5b620003b38582860162000305565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200041057607f821691505b602082108103620004265762000425620003c8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000451565b6200049c868362000451565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004e9620004e3620004dd84620004b4565b620004be565b620004b4565b9050919050565b6000819050919050565b6200050583620004c8565b6200051d6200051482620004f0565b8484546200045e565b825550505050565b600090565b6200053462000525565b62000541818484620004fa565b505050565b5b8181101562000569576200055d6000826200052a565b60018101905062000547565b5050565b601f821115620005b85762000582816200042c565b6200058d8462000441565b810160208510156200059d578190505b620005b5620005ac8562000441565b83018262000546565b50505b505050565b600082821c905092915050565b6000620005dd60001984600802620005bd565b1980831691505092915050565b6000620005f88383620005ca565b9150826002028217905092915050565b6200061382620003bd565b67ffffffffffffffff8111156200062f576200062e620001d4565b5b6200063b8254620003f7565b620006488282856200056d565b600060209050601f8311600181146200068057600084156200066b578287015190505b620006778582620005ea565b865550620006e7565b601f19841662000690866200042c565b60005b82811015620006ba5784890151825560018201915060208501945060208101905062000693565b86831015620006da5784890151620006d6601f891682620005ca565b8355505b6001600288020188555050505b505050505050565b612a1e80620006ff6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b80636352211e146101dd57806370a082311461020d57806395d89b411461023d576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806340c10f19146101a557806342842e0e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906120ed565b6102f3565b6040516101169190612135565b60405180910390f35b610127610409565b60405161013491906121e0565b60405180910390f35b61015760048036038101906101529190612238565b610497565b60405161016491906122a6565b60405180910390f35b610187600480360381019061018291906122ed565b6104ca565b005b6101a3600480360381019061019e919061232d565b610897565b005b6101bf60048036038101906101ba91906122ed565b611032565b005b6101db60048036038101906101d6919061232d565b6110c4565b005b6101f760048036038101906101f29190612238565b611330565b60405161020491906122a6565b60405180910390f35b61022760048036038101906102229190612380565b6114b8565b60405161023491906123bc565b60405180910390f35b6102456116a4565b60405161025291906121e0565b60405180910390f35b61027560048036038101906102709190612403565b611732565b005b610291600480360381019061028c91906124a8565b61190b565b005b6102ad60048036038101906102a89190612238565b611b7d565b6040516102ba91906121e0565b60405180910390f35b6102dd60048036038101906102d89190612530565b611bb0565b6040516102ea9190612135565b60405180910390f35b60006103217f2c1d7166b735b0d608a45efe27dcbf44271034f891a5d3efd8b703664b105ed760001b611bdf565b61034d7ff0c1e1e877d12fb2115245807c32e5867d6912fa762bebf1f5a788581ff849ea60001b611bdf565b6103797f66651eb8886a678077f891c60dbd9cfd3f1478501d2b2a1f9c1ba5e7a6822bb560001b611bdf565b6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103d257506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104025750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600080546104169061259f565b80601f01602080910402602001604051908101604052809291908181526020018280546104429061259f565b801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f67f7dc5a796b7121311fbeccf0e6e22e9ae1745f09da432fe9759a15b15666f8a3160001b611bdf565b6105227f770674e2710ee8f702f413d0d65f7eec336cfc21dc1dba2a3794c0766f8730d360001b611bdf565b61054e7f20e13c28825664bada906c39fb832bda7a19f0ea24495398b6b96441fc2fc0f360001b611bdf565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506105b27f780a0114881cf62286ef0a7ee47d9c0f88b5ff2923ac4e618d1960be6a6b713060001b611bdf565b6105de7fd4cb3074a49559e15c2b9d9cdebeb9528c752cda63e2c6114eb7e6314da53b8660001b611bdf565b61060a7f5b68e4ebdd897d3e02abc1b218e5196bf5ab94d5a3ffbc8e1dc8e29d45fbfae360001b611bdf565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106ca5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610709576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107009061261c565b60405180910390fd5b6107357f978eaead56a5fbca4c194ca6d2f4cbf23a8d92cc9060dfea1cc1bf768344eac960001b611bdf565b6107617f6d3620946b13d770294bbf00cfa8a0c3ade6bd91d63a9e22c4ea0a17030eec2e60001b611bdf565b61078d7f0a9e844332c7abb13c3a9d100fc0bc49f0e01a3d5fe8e4cd0230c600d9d6985960001b611bdf565b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061080b7f3ebbed568bb0959c269d044d9a249d64c7fa5378e31037687c7f19b56b728bbc60001b611bdf565b6108377faf4b52a9ebc539f55128b03d6dbc9e894b388afdc2a8762e9416ac0c92d901b560001b611bdf565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108c37f4dcf2be45975ad50677ffff2a1eeb243856743745cca7aadd2050f6cf33dd68b60001b611bdf565b6108ef7fd521a6db6801fb718ada05fafb13919e9fefb287fb4ba4f96b73c99d95a084f660001b611bdf565b61091b7f13383f251322cede6caa86d5de5007f5e6c183ba42a8a024c75c14c90268552d60001b611bdf565b6109477f6a26f0e9f772e47f259f91d6fb4255b8026611e354ae27dac09bd2aad745895960001b611bdf565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df90612688565b60405180910390fd5b610a147fb8820e6d51f4244c122b09be0addaab6b1901c913f5a5caa6117f5a4dd38651a60001b611bdf565b610a407f147be16b6019ef9286303727bcc72693ee31d6c082f3df3048ac43a8aef0ed1e60001b611bdf565b610a6c7f18ec2e1ab2b4ac43d817fa39c948cdb8d160937eab764d9369902bbadd863c7860001b611bdf565b610a987f74ab8b7cf1f08ed3feec7012debfd8309896606ff865741bdebaf406f852024060001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe906126f4565b60405180910390fd5b610b337f85fd834b477394395c96744618db6c3002234c2ca8f02e0728c798e5e6808e2960001b611bdf565b610b5f7f544f393fc8cbaed918dbd4c783d607548e29c00ff995c10e5eeed9812d62f6d660001b611bdf565b610b8b7fb080da592ff1736143672b300d85ef3ea5180d5a3d307cc2a26883425157fbf260001b611bdf565b610bb77f80a944949d6e6965a0cf9802f2dc29f142618678aa59838dec4788b8174ad06f60001b611bdf565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c775750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610ce057506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d169061261c565b60405180910390fd5b610d4b7fa45b3550dacdba29eda66456aa7781f81c1c3aecdea3e003991582b766879db060001b611bdf565b610d777f5ce7968d77c48cd09a668277de8e5b22ef400ae0985ea519c8900e5ad52ea1b260001b611bdf565b610da37f57fdf28d1b4e3962401fb30a334fbab022456f9d234910ec2f374e12a3dab64660001b611bdf565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550610e1f7fb5e3dec82191037985f1e062982a2e3dc671a873ff2eaff4ef82a34e07e9aae260001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550610e9a7fd89f15de3e1a4b0197e30d085b3b7ccde27836048c56b6d6b7a2fb841962c02e60001b611bdf565b610ec67fe5db1c09b7cd66407a2aa3df3cf20e9a5edcb6bd040722ada4c3b88cdbf2afd760001b611bdf565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f447fac1d4c296026da80309894d6bf222a03ba550ebbbb3b97be64610503d87261fd60001b611bdf565b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610fa67f97752848505b09b643b7dd2ef856fa75ec2b745b3555eefc2173c65f3ef753a560001b611bdf565b610fd27f12f82b454d27dd4baf55acb872bee24f6eea88cf02fe9fa96f604d902e73011a60001b611bdf565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61105e7f6df4c67ebd44f170fa27d34939e2ef6914ed02d9ab1209238f9e5187b1e399af60001b611be2565b61108a7fb79108d683e7c9c533f2378ae768dd8728fd6b2103a0481c3bbd93999a914ead60001b611be2565b6110b67ffb59e82d9a9f82bfa128139563eb3a7b7ea63dc567252cfa38e2e436a2090e5060001b611be2565b6110c08282611be5565b5050565b6110f07f5e130c69da0688dd518fbcd291068a60c92bb0de11373b3bb8bfee70a3b684e860001b611bdf565b61111c7f9e637818f1ffe5082dfb0ce1c5e38726e2b1fe696bf001f7b78771bbfffe449160001b611bdf565b6111487fa13bfb866e5841d83ac76838311a76bbe9de9ee7d422b3b7f1da6c607ee8d8af60001b611bdf565b611153838383610897565b61117f7fff0c87f46461631062e7a67b7024fc40a2d10ec6979b0766103aea5303be2def60001b611bdf565b6111ab7fecf60dd38d1c1cea5ca9240bb54beabd9f142f98a91f4603bafd961bef33290a60001b611bdf565b6111d77f5a0cb76b81349bf1a6add8dac29c55204bf53341773d17dbb6bb66168870eafc60001b611bdf565b60008273ffffffffffffffffffffffffffffffffffffffff163b14806112c0575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161125c9392919061274b565b6020604051808303816000875af115801561127b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129f91906127aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6112ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f690612823565b60405180910390fd5b61132b7fab22ad53c2abe89a88adad6c79eae1cc8fffb9bbd29b68737db307110791e9b960001b611bdf565b505050565b600061135e7fbb65e07b6275490a3cfb90315570cbfc6b7677da0a06b8dd21190afcb16fd5b560001b611bdf565b61138a7fbba76f2a70bb6e4a3b45cac796c733a5209e8d663505ede1c635a2b6dac85a0a60001b611bdf565b6113b67f0a5a9524b92a501761fdc810ab8d1744a2d1c7e0ca3a3935a95b9b32f1b1133360001b611bdf565b6113e27f334889394ed3b29893528a981a21c74613024f633d94affb69ce1be24d38329160001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508173ffffffffffffffffffffffffffffffffffffffff1603611487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147e9061288f565b60405180910390fd5b6114b37f631d91aa49965218acc4283e0fcea4e5359dd66288d6bf184ab16ba56429ffaa60001b611bdf565b919050565b60006114e67f70900e3d6b3d71c3b195d583af133d47c61b578597fdd2f2616219b0bf75093f60001b611bdf565b6115127f605458308ea26b2e7aabc4445e3a7f1065203dfcdb4823e078a368cad648f56560001b611bdf565b61153e7f88c350bf5557a20411956bdc2cf1e65bde6c8288290e6d2c6c96bfe63b09976860001b611bdf565b61156a7f357eb368ce061a0bf39ac0ec70db1edfa4b2040f5d887f408a1f039e29aac13260001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d0906128fb565b60405180910390fd5b6116057f84a694c09f6d8070a56c2fac87eaa54d2f5a29801f4ba38a9a4dbf7cd72114bc60001b611bdf565b6116317f4ab62ea7390acd5bba3e7c9607f6bc981354507b0ed199677099168f21419af660001b611bdf565b61165d7fd5b8fa7218c243a851c75ffe71b09dc75da4b09bc1e4e222ba878da896e11f4d60001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546116b19061259f565b80601f01602080910402602001604051908101604052809291908181526020018280546116dd9061259f565b801561172a5780601f106116ff5761010080835404028352916020019161172a565b820191906000526020600020905b81548152906001019060200180831161170d57829003601f168201915b505050505081565b61175e7fbb375889556f1a8bb0313548a67ae148d0168043cee6db47dee1daaf50c49ff060001b611bdf565b61178a7f2f12bf6e2f951ce72f7ad570f2690bd1bbb25b743172f29e26e4235da8deb8be60001b611bdf565b6117b67f6902ebbbe5ee78000a7ef43696ed1681d8df80dff4ad101130475b3674e3e61e60001b611bdf565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118767fd21e354829f62c9a6f113cdc24816275b07e26898084b73cc6dea2b182efeb6e60001b611bdf565b6118a27ff22f557a08dbdd7634025dce37df4eea688b7483cb841062f73f459efdfe4fd260001b611bdf565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118ff9190612135565b60405180910390a35050565b6119377f243d4acb95705d9a43e42a76d5d131fc72c75a2dca9c880d9d3b5d071b2f3be760001b611bdf565b6119637f6418ed0243f89a195bc5d6948a8da605c745961053349d5bfaf125a4dcdab86560001b611bdf565b61198f7ff220a1aa82ebd12f19c71906f47caf18655d5a7d2f3b773ef76a7dd269e4a50160001b611bdf565b61199a858585610897565b6119c67f3080b624925376374fc03291f1ff16a0a57eea9f536844261640f231e0a3451760001b611bdf565b6119f27f8282e65bdecff622129df87071020b2fdaefc0f4c125bf6041f98cda8360d69160001b611bdf565b611a1e7fc91f3557210985c7cf2d6aade9a663ae18d3db299b96c44fecca3ca9b895cee360001b611bdf565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480611b0b575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401611aa7959493929190612957565b6020604051808303816000875af1158015611ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aea91906127aa565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b611b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4190612823565b60405180910390fd5b611b767f5b730cf8df5450c1208799e617e75e76577eb613fa1be737f71749c98238398460001b611bdf565b5050505050565b6060611bab7f97053c9f912cbf36ce8258bcbbec05b538b6c56282a1c4ed3bb108e856a40df760001b611be2565b919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b50565b50565b611c117f85b510ec7594986dd7d2c914155145f930af4aa64def6e8e332d47f98042bb1160001b611bdf565b611c3d7fd4717802219efbdc285ad4203f5781ea24b2cb5777949e54333c194a4abea64b60001b611bdf565b611c697f01d75d9b50bcd181c40786a23002ce88bc284b8475762f083233a81a761c3f0960001b611bdf565b611c957ff659cfb1597cc2539c4711b6c48e3fa58d2225df44dbc975c493cf9cb0dfab5660001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cfb906126f4565b60405180910390fd5b611d307f36b877c92aa39fd469cd4dcf4d8dc84dcd54213b8f7ca31412f6ee0db878b45660001b611bdf565b611d5c7f0a291f6b5327572e62c24a89e8431911ea63de09e4860e4c88af26a6acd4c13660001b611bdf565b611d887f5e3a1a154a082ec9fd2727a9384f46960e3b3ccb20faeb472b3b9c0a383706e560001b611bdf565b611db47f1939187bd5931916e1ceb3981e56244ace8aeee50b39ede33b0dedec84c11d5460001b611bdf565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d906129f1565b60405180910390fd5b611e827fdb35e83bf0c416502e1ad83fe7e022a6de6c63cfbb571b7373233f0bedb018d160001b611bdf565b611eae7fbfe609aa3dec7498243fcd3c589653323a9c4132c0d3f1ab73889f2eb5b4665860001b611bdf565b611eda7ff9e2bfed622193aa74090031a7bc1ecc21e38c792d3c892faf5868f95df3a80a60001b611bdf565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550611f557f84001718c91aa139007c0c6265013e7c0906098e6e8b6d12a0a926677cb4a29160001b611bdf565b611f817f63e0f045319b85cdd7ce7a9d1b1d1d443c6b6f9f99e3c4a3364b3c734f327d0160001b611bdf565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fff7f1df8d8041bfea8d240d96b9f535218e0e45c3c40639c3a681385b154f395375b60001b611bdf565b61202b7f32b6ab6ef7ff16ee94fb027b2d56192b0dd5ead21eacb6c5d495aea361461b5660001b611bdf565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120ca81612095565b81146120d557600080fd5b50565b6000813590506120e7816120c1565b92915050565b6000602082840312156121035761210261208b565b5b6000612111848285016120d8565b91505092915050565b60008115159050919050565b61212f8161211a565b82525050565b600060208201905061214a6000830184612126565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561218a57808201518184015260208101905061216f565b60008484015250505050565b6000601f19601f8301169050919050565b60006121b282612150565b6121bc818561215b565b93506121cc81856020860161216c565b6121d581612196565b840191505092915050565b600060208201905081810360008301526121fa81846121a7565b905092915050565b6000819050919050565b61221581612202565b811461222057600080fd5b50565b6000813590506122328161220c565b92915050565b60006020828403121561224e5761224d61208b565b5b600061225c84828501612223565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061229082612265565b9050919050565b6122a081612285565b82525050565b60006020820190506122bb6000830184612297565b92915050565b6122ca81612285565b81146122d557600080fd5b50565b6000813590506122e7816122c1565b92915050565b600080604083850312156123045761230361208b565b5b6000612312858286016122d8565b925050602061232385828601612223565b9150509250929050565b6000806000606084860312156123465761234561208b565b5b6000612354868287016122d8565b9350506020612365868287016122d8565b925050604061237686828701612223565b9150509250925092565b6000602082840312156123965761239561208b565b5b60006123a4848285016122d8565b91505092915050565b6123b681612202565b82525050565b60006020820190506123d160008301846123ad565b92915050565b6123e08161211a565b81146123eb57600080fd5b50565b6000813590506123fd816123d7565b92915050565b6000806040838503121561241a5761241961208b565b5b6000612428858286016122d8565b9250506020612439858286016123ee565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261246857612467612443565b5b8235905067ffffffffffffffff81111561248557612484612448565b5b6020830191508360018202830111156124a1576124a061244d565b5b9250929050565b6000806000806000608086880312156124c4576124c361208b565b5b60006124d2888289016122d8565b95505060206124e3888289016122d8565b94505060406124f488828901612223565b935050606086013567ffffffffffffffff81111561251557612514612090565b5b61252188828901612452565b92509250509295509295909350565b600080604083850312156125475761254661208b565b5b6000612555858286016122d8565b9250506020612566858286016122d8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125b757607f821691505b6020821081036125ca576125c9612570565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b6000612606600e8361215b565b9150612611826125d0565b602082019050919050565b60006020820190508181036000830152612635816125f9565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b6000612672600a8361215b565b915061267d8261263c565b602082019050919050565b600060208201905081810360008301526126a181612665565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b60006126de60118361215b565b91506126e9826126a8565b602082019050919050565b6000602082019050818103600083015261270d816126d1565b9050919050565b600082825260208201905092915050565b50565b6000612735600083612714565b915061274082612725565b600082019050919050565b60006080820190506127606000830186612297565b61276d6020830185612297565b61277a60408301846123ad565b818103606083015261278b81612728565b9050949350505050565b6000815190506127a4816120c1565b92915050565b6000602082840312156127c0576127bf61208b565b5b60006127ce84828501612795565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b600061280d60108361215b565b9150612818826127d7565b602082019050919050565b6000602082019050818103600083015261283c81612800565b9050919050565b7f4e4f545f4d494e54454400000000000000000000000000000000000000000000600082015250565b6000612879600a8361215b565b915061288482612843565b602082019050919050565b600060208201905081810360008301526128a88161286c565b9050919050565b7f5a45524f5f414444524553530000000000000000000000000000000000000000600082015250565b60006128e5600c8361215b565b91506128f0826128af565b602082019050919050565b60006020820190508181036000830152612914816128d8565b9050919050565b82818337600083830152505050565b60006129368385612714565b935061294383858461291b565b61294c83612196565b840190509392505050565b600060808201905061296c6000830188612297565b6129796020830187612297565b61298660408301866123ad565b818103606083015261299981848661292a565b90509695505050505050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b60006129db600e8361215b565b91506129e6826129a5565b602082019050919050565b60006020820190508181036000830152612a0a816129ce565b905091905056fea164736f6c6343000810000a";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<MockERC721>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  override connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
