/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  SplitterImpl,
  SplitterImplInterface,
} from "../../../lib/splitter/SplitterImpl";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyPayee",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DeniedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShare",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPayees",
    type: "error",
  },
  {
    inputs: [],
    name: "NoShares",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_payees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payeesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60406080815262000bd7803803806200001881620002b5565b928339810182828203126200028f5781516001600160401b0392908381116200028f5781019180601f840112156200028f57825193620000626200005c86620002db565b620002b5565b928394868552602080950185600598891b830101918583116200028f578601905b8282106200029457505050838101519182116200028f57019080601f830112156200028f578151620000b96200005c82620002db565b928480858481520192881b8201019283116200028f5784809101915b8383106200027e5750505050825192815184036200026a578315620002595760005b8481106200010e5786516108ce9081620003098239f35b6001600160a01b03620001228284620002f3565b511690620001318185620002f3565b51821562000248578015620002375782600052878652886000205462000226576006928354680100000000000000008110156200021057600194858201808255821015620001fa5760005287600020018160018060a01b031982541617905580600052888752818a6000205560005490828201809211620001e4577f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928b92600055825191825288820152a101620000f7565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b885163215a865160e11b8152600490fd5b885163040357dd60e21b8152600490fd5b88516384ff3e1b60e01b8152600490fd5b8551637b21919d60e01b8152600490fd5b85516001621398b960e31b03198152600490fd5b8251815291810191859101620000d5565b600080fd5b81516001600160a01b03811681036200028f57815290860190860162000083565b6040519190601f01601f191682016001600160401b038111838210176200021057604052565b6001600160401b038111620002105760051b60200190565b8051821015620001fa5760209160051b01019056fe60806040526004361015610023575b361561001957600080fd5b6100216104ba565b005b60003560e01c806319165587146100f3578063283248be146100ee5780633a98ef39146100e9578063406072a9146100e457806348b75044146100df5780635be7fde8146100da5780639852595c146100d5578063a3f8eace146100d0578063b34c8caf146100cb578063c45ac050146100c6578063d79779b2146100c1578063e33b7de3146100bc5763e919ecad0361000e5761049c565b61047e565b610441565b610428565b6103eb565b6103bc565b61037f565b610366565b61024d565b610208565b6101c2565b610180565b61010e565b6001600160a01b0381160361010957565b600080fd5b346101095760203660031901126101095761002160043561012e816100f8565b610523565b60065481101561016a5760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b3461010957602036600319011261010957600435600654811015610109576101a9602091610133565b905460405160039290921b1c6001600160a01b03168152f35b34610109576000366003190112610109576020600054604051908152f35b6040906003190112610109576004356101f8816100f8565b90602435610205816100f8565b90565b3461010957602061024461021b366101e0565b6001600160a01b0391821660009081526004855260408082209290931681526020919091522090565b54604051908152f35b346101095761025b366101e0565b6001600160a01b038116600090815260056020526040902090919054156103545761028682826106d2565b801561034257816102e5846102ce7f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a9560018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b6102f0838254610511565b90556001600160a01b0381166000908152600360205260409020610315838254610511565b9055610322828583610827565b604080516001600160a01b039586168152602081019390935293169290a2005b604051635c70873f60e11b8152600490fd5b60405163b317087b60e01b8152600490fd5b34610109576000366003190112610109576100216105d5565b346101095760203660031901126101095760043561039c816100f8565b60018060a01b031660005260026020526020604060002054604051908152f35b346101095760203660031901126101095760206103e36004356103de816100f8565b61063d565b604051908152f35b3461010957602036600319011261010957600435610408816100f8565b60018060a01b031660005260056020526020604060002054604051908152f35b346101095760206103e361043b366101e0565b906106d2565b346101095760203660031901126101095760043561045e816100f8565b60018060a01b031660005260036020526020604060002054604051908152f35b34610109576000366003190112610109576020600154604051908152f35b34610109576000366003190112610109576020600654604051908152f35b6104c26105d5565b604080513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77091819081015b0390a1565b634e487b7160e01b600052601160045260246000fd5b9190820180921161051e57565b6104fb565b60018060a01b038116908160005260056020526001604060002054106103545761054c8261063d565b906001821061034257826000526002602052604060002080549083820180921161051e577fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056946105b2928592556105ad6105a883600154610511565b600155565b6107dc565b604080516001600160a01b039092168252602082019290925290819081016104f6565b60065460005b8181106105e6575050565b806105f2600192610133565b9054906105fe83610133565b929091610619868060a01b03809454600396871b1c1661063d565b610628575b50505050016105db565b610634931b1c16610523565b3880808061061e565b4790600154820180921161051e576001600160a01b0381166000908152600260205260409020546102059290915b6001600160a01b0316600090815260056020526040902054818102918015908304909114171561051e576000549081156106ad570490810390811161051e5790565b634e487b7160e01b600052601260045260246000fd5b90816020910312610109575190565b6040516370a0823160e01b81523060048201529291906020846024816001600160a01b0385165afa9384156107d05760009461075f575b50610758826102ce61073c61020596976107358660018060a01b03166000526003602052604060002090565b5490610511565b6001600160a01b03909416600090815260046020526040902090565b549161066b565b936020903d82116107c8575b601f8201601f191686019067ffffffffffffffff8211878310176107b457506102ce61073c6107a961020597986107589588956040528101906106c3565b979650505050610709565b634e487b7160e01b81526041600452602490fd5b3d915061076b565b6040513d6000823e3d90fd5b600080809381935af1156107ec57565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d116001600051141617161561086157565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfea26469706673582212202d28b5136c741c2f4d2d9231a3c37373093990a00281fc0d4dc7c0feeebff7a864736f6c63430008130033";

type SplitterImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SplitterImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SplitterImpl__factory extends ContractFactory {
  constructor(...args: SplitterImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<SplitterImpl> {
    return super.deploy(
      payees,
      shares_,
      overrides || {}
    ) as Promise<SplitterImpl>;
  }
  override getDeployTransaction(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(payees, shares_, overrides || {});
  }
  override attach(address: string): SplitterImpl {
    return super.attach(address) as SplitterImpl;
  }
  override connect(signer: Signer): SplitterImpl__factory {
    return super.connect(signer) as SplitterImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SplitterImplInterface {
    return new utils.Interface(_abi) as SplitterImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterImpl {
    return new Contract(address, _abi, signerOrProvider) as SplitterImpl;
  }
}
