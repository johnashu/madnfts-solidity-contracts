/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter721, MADRouter721Interface } from "../MADRouter721";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180556703782dace9d9000060035560006004553480156200002657600080fd5b506040516200296938038062002969833981016040819052620000499162000183565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000ca57620000ca81620000d2565b5050620001c2565b6000546001600160a01b03163314620001205760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6001600160a01b03811681146200018057600080fd5b50565b600080604083850312156200019757600080fd5b8251620001a4816200016a565b6020840151909250620001b7816200016a565b809150509250929050565b61279780620001d26000396000f3fe60806040526004361061018b5760003560e01c806367b5a642116100d6578063ab9acd571161007f578063d44619e311610059578063d44619e314610402578063edc9e7a414610422578063f940e3851461044257600080fd5b8063ab9acd57146103af578063ba36b92d146103cf578063cab2e41f146103e257600080fd5b80638456cb59116100b05780638456cb591461035a5780638da5cb5b1461036f578063a123c38d1461038f57600080fd5b806367b5a642146102ef5780636a326ab114610302578063785e9e861461032257600080fd5b806342a4275211610138578063583fef3411610112578063583fef341461028b578063586ba782146102af5780635c975abb146102c557600080fd5b806342a42752146102455780634328bd0014610258578063490f70271461027857600080fd5b806317f9fad11161016957806317f9fad1146101fd578063182ee4851461021d5780633f4ba83a1461023057600080fd5b806306fdde03146101905780630b78f9c0146101bb57806313af4035146101dd575b600080fd5b34801561019c57600080fd5b506101a5610462565b6040516101b2919061220a565b60405180910390f35b3480156101c757600080fd5b506101db6101d636600461223d565b610479565b005b3480156101e957600080fd5b506101db6101f8366004612274565b61057a565b34801561020957600080fd5b506101db610218366004612298565b610647565b6101db61022b3660046122d1565b610737565b34801561023c57600080fd5b506101db61088f565b6101db610253366004612298565b6108e2565b34801561026457600080fd5b506101db610273366004612344565b610a34565b6101db6102863660046123ec565b610bf2565b34801561029757600080fd5b506102a160045481565b6040519081526020016101b2565b3480156102bb57600080fd5b506102a160035481565b3480156102d157600080fd5b50600054600160a01b900460ff1660405190151581526020016101b2565b6101db6102fd36600461242d565b610d4d565b34801561030e57600080fd5b506101db61031d366004612274565b610e6b565b34801561032e57600080fd5b50600554610342906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b34801561036657600080fd5b506101db610f16565b34801561037b57600080fd5b50600054610342906001600160a01b031681565b34801561039b57600080fd5b506101db6103aa3660046124b5565b610f67565b3480156103bb57600080fd5b506101db6103ca36600461250d565b61107c565b6101db6103dd366004612558565b611249565b3480156103ee57600080fd5b506101db6103fd3660046124b5565b6113b0565b34801561040e57600080fd5b50600254610342906001600160a01b031681565b34801561042e57600080fd5b506102a161043d366004612613565b61148b565b34801561044e57600080fd5b506101db61045d366004612298565b6114c1565b6060602080526606726f7574657260465260606020f35b6000546001600160a01b031633146104c75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6802b5e3af16b1880000821080156104e757506802b5e3af16b188000081105b6105335760405162461bcd60e51b815260206004820152600c60248201527f496e76616c69642046656573000000000000000000000000000000000000000060448201526064016104be565b6004819055600382905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146105c35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6001600160a01b03811661060b5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104be565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146106905760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6001600160a01b0381166106d85760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104be565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050505050565b6001546001146107765760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156107be5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60006107c983611c4b565b9150508060ff1660020361084f576107e76340d097c360e01b611da0565b6040516369fd0e0b60e01b8152600481018390523360248201526001600160a01b038416906369fd0e0b9034906044015b6000604051808303818588803b15801561083157600080fd5b505af1158015610845573d6000803e3d6000fd5b5050505050610886565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b50506001805550565b6000546001600160a01b031633146108d85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6108e0611ee0565b565b6001546001146109215760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156109695760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600061097483611c4b565b91505060ff8116156109b75760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b6109c76340d097c360e01b611da0565b604051633966bb8360e21b81526001600160a01b03838116600483015233602483015284169063e59aee0c9034906044015b6000604051808303818588803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b505060018055505050505050565b600154600114610a735760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610abb5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600080610ac784611c4b565b915091508060ff16600103610b79576040516355f804b360e01b81526001600160a01b038516906355f804b390610b0290869060040161220a565b600060405180830381600087803b158015610b1c57600080fd5b505af1158015610b30573d6000803e3d6000fd5b5050505082604051610b429190612655565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a3610be8565b8060ff16600203610bb0576040516355f804b360e01b81526001600160a01b038516906355f804b390610b0290869060040161220a565b60028160ff16111561084f576040516355f804b360e01b81526001600160a01b038516906355f804b390610b0290869060040161220a565b5050600180555050565b600154600114610c315760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610c795760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610c8484611c4b565b9150508060ff16600114610cc95760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b610cd96340d097c360e01b611da0565b60405163438b1b4b60e01b81526001600160a01b0384811660048301526024820184905233604483015285169063438b1b4b9034906064016000604051808303818588803b158015610d2a57600080fd5b505af1158015610d3e573d6000803e3d6000fd5b50506001805550505050505050565b600154600114610d8c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610dd45760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610ddf84611c4b565b9150508060ff1660020361084f57610dfd6340d097c360e01b611da0565b6040516369eff00560e01b81526001600160a01b038516906369eff005903490610e2f90879087903390600401612671565b6000604051808303818588803b158015610e4857600080fd5b505af1158015610e5c573d6000803e3d6000fd5b50505050505050600180555050565b6000546001600160a01b03163314610eb45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314610f5f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6108e0611f7c565b600154600114610fa65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610fee5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610ff985611c4b565b9150508060ff1660020361084f576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050505b505060018055505050565b6001546001146110bb5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156111035760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60038160ff16106111455760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b60008061115185611c4b565b9150915060018360ff1610156111a55761116c818686612002565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4611071565b8260ff166001036111f4576111bb8186866120e1565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4611071565b8260ff166002036110715761120a81868661211a565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b6001546001146112885760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156112d05760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60006112db83611c4b565b91506112ef905063044df8e760e41b611da0565b60018160ff1610611382578060ff16600114611352578060ff166002146113525760028160ff16116113525760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b60405163362c0cb560e01b81526001600160a01b0384169063362c0cb590349061081890869033906004016126d1565b60405163226bf2d160e21b81523360048201526001600160a01b038416906389afcb449034906024016109f9565b6001546001146113ef5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156114375760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600061144285611c4b565b9150508060ff1660020361084f576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c191869060640161103e565b6000816340d097c360e01b036114a357505060035490565b8163044df8e760e41b036114b957505060045490565b506000919050565b6001546001146115005760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156115485760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60008061155484611c4b565b9150915060018160ff161015611713576001600160a01b038316158015906115e457506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e19190612725565b15155b61168557836001600160a01b03163160000361162d5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561166857600080fd5b505af115801561167c573d6000803e3d6000fd5b505050506116e0565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b1580156116c757600080fd5b505af11580156116db573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff166001036118cd576001600160a01b0383161580159061179e57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b9190612725565b15155b61183f57836001600160a01b0316316000036117e75760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561182257600080fd5b505af1158015611836573d6000803e3d6000fd5b5050505061189a565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561188157600080fd5b505af1158015611895573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600203611a87576001600160a01b0383161580159061195857506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190612725565b15155b6119f957836001600160a01b0316316000036119a15760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119dc57600080fd5b505af11580156119f0573d6000803e3d6000fd5b50505050611a54565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611a3b57600080fd5b505af1158015611a4f573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff161115610be8576001600160a01b03831615801590611b1357506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b109190612725565b15155b611bb457836001600160a01b031631600003611b5c5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611b9757600080fd5b505af1158015611bab573d6000803e3d6000fd5b50505050611c0f565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611bf657600080fd5b505af1158015611c0a573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa158015611c99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbd9190612725565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa158015611d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2a919061273e565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015611d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d99919061276d565b9050915091565b6005546001600160a01b031615611edd57600554604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e249190612725565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa158015611e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eab9190612725565b9050808214611ec25763f7760f256000526004601cfd5b600554611eda906001600160a01b0316333085612153565b50505b50565b600054600160a01b900460ff16611f395760405162461bcd60e51b815260206004820152600860248201527f554e50415553454400000000000000000000000000000000000000000000000060448201526064016104be565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff1615611fbf5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611f72565b60018360ff16101561206f5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b15801561205257600080fd5b505af1158015612066573d6000803e3d6000fd5b50505050611eda565b8260ff166001036120a85760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612038565b8260ff1660020361084f5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612038565b8260ff1660020361084f576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f490602401612038565b8260ff1660020361084f57604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b390602401612038565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806121df5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104be565b5050505050565b60005b838110156122015781810151838201526020016121e9565b50506000910152565b60208152600082518060208401526122298160408501602087016121e6565b601f01601f19169190910160400192915050565b6000806040838503121561225057600080fd5b50508035926020909101359150565b6001600160a01b0381168114611edd57600080fd5b60006020828403121561228657600080fd5b81356122918161225f565b9392505050565b600080604083850312156122ab57600080fd5b82356122b68161225f565b915060208301356122c68161225f565b809150509250929050565b600080604083850312156122e457600080fd5b82356122ef8161225f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561233c5761233c6122fd565b604052919050565b6000806040838503121561235757600080fd5b82356123628161225f565b915060208381013567ffffffffffffffff8082111561238057600080fd5b818601915086601f83011261239457600080fd5b8135818111156123a6576123a66122fd565b6123b8601f8201601f19168501612313565b915080825287848285010111156123ce57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060006060848603121561240157600080fd5b833561240c8161225f565b9250602084013561241c8161225f565b929592945050506040919091013590565b60008060006040848603121561244257600080fd5b833561244d8161225f565b9250602084013567ffffffffffffffff8082111561246a57600080fd5b818601915086601f83011261247e57600080fd5b81358181111561248d57600080fd5b8760208260051b85010111156124a257600080fd5b6020830194508093505050509250925092565b600080600080608085870312156124cb57600080fd5b84356124d68161225f565b966020860135965060408601359560600135945092505050565b8015158114611edd57600080fd5b60ff81168114611edd57600080fd5b60008060006060848603121561252257600080fd5b833561252d8161225f565b9250602084013561253d816124f0565b9150604084013561254d816124fe565b809150509250925092565b6000806040838503121561256b57600080fd5b82356125768161225f565b915060208381013567ffffffffffffffff8082111561259457600080fd5b818601915086601f8301126125a857600080fd5b8135818111156125ba576125ba6122fd565b8060051b91506125cb848301612313565b81815291830184019184810190898411156125e557600080fd5b938501935b83851015612603578435825293850193908501906125ea565b8096505050505050509250929050565b60006020828403121561262557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461229157600080fd5b600082516126678184602087016121e6565b9190910192915050565b6040808252810183905260008460608301825b868110156126b45782356126978161225f565b6001600160a01b0316825260209283019290910190600101612684565b5080925050506001600160a01b0383166020830152949350505050565b604080825283519082018190526000906020906060840190828701845b8281101561270a578151845292840192908401906001016126ee565b5050506001600160a01b039490941692019190915250919050565b60006020828403121561273757600080fd5b5051919050565b6000806040838503121561275157600080fd5b825161275c8161225f565b60208401519092506122c6816124f0565b60006020828403121561277f57600080fd5b8151612291816124fe56fea164736f6c6343000810000a";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
