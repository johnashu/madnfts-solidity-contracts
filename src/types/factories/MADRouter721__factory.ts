/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter721, MADRouter721Interface } from "../MADRouter721";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setBaseLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180556703782dace9d9000060045560006005553480156200002657600080fd5b5060405162002d2f38038062002d2f833981016040819052620000499162000261565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0385811691909117909155821615620000ca57620000ca82620000de565b620000d58162000177565b505050620002b5565b6000546001600160a01b031633146200012d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314620001c25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000124565b6001600160a01b0381166200020c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640162000124565b60068190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6001600160a01b03811681146200025e57600080fd5b50565b6000806000606084860312156200027757600080fd5b8351620002848162000248565b6020850151909350620002978162000248565b6040850151909250620002aa8162000248565b809150509250925092565b612a6a80620002c56000396000f3fe6080604052600436106101ac5760003560e01c806366d003ac116100ec578063ab9acd571161008a578063cab2e41f11610064578063cab2e41f14610463578063d44619e314610483578063edc9e7a4146104a3578063f940e385146104c357600080fd5b8063ab9acd5714610410578063ba36b92d14610430578063c5cd1d3c1461044357600080fd5b8063785e9e86116100c6578063785e9e861461039b5780638456cb59146103bb5780638da5cb5b146103d0578063a123c38d146103f057600080fd5b806366d003ac1461033057806367b5a642146103685780636a326ab11461037b57600080fd5b80633f4ba83a11610159578063490f702711610133578063490f7027146102b9578063583fef34146102cc578063586ba782146102f05780635c975abb1461030657600080fd5b80633f4ba83a1461027157806342a42752146102865780634328bd001461029957600080fd5b806317f9fad11161018a57806317f9fad11461021e578063182ee4851461023e5780633bbed4a01461025157600080fd5b806306fdde03146101b15780630b78f9c0146101dc57806313af4035146101fe575b600080fd5b3480156101bd57600080fd5b506101c66104e3565b6040516101d391906124dd565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004612510565b6104fa565b005b34801561020a57600080fd5b506101fc610219366004612547565b61058f565b34801561022a57600080fd5b506101fc61023936600461256b565b61065c565b6101fc61024c3660046125a4565b61074c565b34801561025d57600080fd5b506101fc61026c366004612547565b6108a4565b34801561027d57600080fd5b506101fc610971565b6101fc61029436600461256b565b6109c4565b3480156102a557600080fd5b506101fc6102b4366004612617565b610b16565b6101fc6102c73660046126bf565b610cd4565b3480156102d857600080fd5b506102e260055481565b6040519081526020016101d3565b3480156102fc57600080fd5b506102e260045481565b34801561031257600080fd5b50600054600160a01b900460ff1660405190151581526020016101d3565b34801561033c57600080fd5b50600654610350906001600160a01b031681565b6040516001600160a01b0390911681526020016101d3565b6101fc610376366004612700565b610e2f565b34801561038757600080fd5b506101fc610396366004612547565b610f4d565b3480156103a757600080fd5b50600354610350906001600160a01b031681565b3480156103c757600080fd5b506101fc610ff8565b3480156103dc57600080fd5b50600054610350906001600160a01b031681565b3480156103fc57600080fd5b506101fc61040b366004612788565b611049565b34801561041c57600080fd5b506101fc61042b3660046127e0565b61115e565b6101fc61043e36600461282b565b61132b565b34801561044f57600080fd5b506101fc61045e366004612547565b611492565b34801561046f57600080fd5b506101fc61047e366004612788565b61161f565b34801561048f57600080fd5b50600254610350906001600160a01b031681565b3480156104af57600080fd5b506102e26104be3660046128e6565b6116fa565b3480156104cf57600080fd5b506101fc6104de36600461256b565b611730565b6060602080526606726f7574657260465260606020f35b6000546001600160a01b031633146105485760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6005819055600482905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146105d85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b6001600160a01b0381166106205760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161053f565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146106a55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b6001600160a01b0381166106ed5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161053f565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b15801561073057600080fd5b505af1158015610744573d6000803e3d6000fd5b505050505050565b60015460011461078b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156107d35760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b60006107de83611f1e565b9150508060ff16600203610864576107fc6340d097c360e01b612073565b6040516369fd0e0b60e01b8152600481018390523360248201526001600160a01b038416906369fd0e0b9034906044015b6000604051808303818588803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050505061089b565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161053f565b50506001805550565b6000546001600160a01b031633146108ed5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b6001600160a01b0381166109355760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161053f565b60068190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6000546001600160a01b031633146109ba5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b6109c26121b3565b565b600154600114610a035760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff1615610a4b5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b6000610a5683611f1e565b91505060ff811615610a995760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161053f565b610aa96340d097c360e01b612073565b604051633966bb8360e21b81526001600160a01b03838116600483015233602483015284169063e59aee0c9034906044015b6000604051808303818588803b158015610af457600080fd5b505af1158015610b08573d6000803e3d6000fd5b505060018055505050505050565b600154600114610b555760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff1615610b9d5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b600080610ba984611f1e565b915091508060ff16600103610c5b576040516355f804b360e01b81526001600160a01b038516906355f804b390610be49086906004016124dd565b600060405180830381600087803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b5050505082604051610c249190612928565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a3610cca565b8060ff16600203610c92576040516355f804b360e01b81526001600160a01b038516906355f804b390610be49086906004016124dd565b60028160ff161115610864576040516355f804b360e01b81526001600160a01b038516906355f804b390610be49086906004016124dd565b5050600180555050565b600154600114610d135760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff1615610d5b5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b6000610d6684611f1e565b9150508060ff16600114610dab5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161053f565b610dbb6340d097c360e01b612073565b60405163438b1b4b60e01b81526001600160a01b0384811660048301526024820184905233604483015285169063438b1b4b9034906064016000604051808303818588803b158015610e0c57600080fd5b505af1158015610e20573d6000803e3d6000fd5b50506001805550505050505050565b600154600114610e6e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff1615610eb65760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b6000610ec184611f1e565b9150508060ff1660020361086457610edf6340d097c360e01b612073565b6040516369eff00560e01b81526001600160a01b038516906369eff005903490610f1190879087903390600401612944565b6000604051808303818588803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b50505050505050600180555050565b6000546001600160a01b03163314610f965760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b031633146110415760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161053f565b6109c261224f565b6001546001146110885760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156110d05760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b60006110db85611f1e565b9150508060ff16600203610864576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b15801561113a57600080fd5b505af115801561114e573d6000803e3d6000fd5b505050505b505060018055505050565b60015460011461119d5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156111e55760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b60038160ff16106112275760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161053f565b60008061123385611f1e565b9150915060018360ff1610156112875761124e8186866122d5565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4611153565b8260ff166001036112d65761129d8186866123b4565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4611153565b8260ff16600203611153576112ec8186866123ed565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b60015460011461136a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156113b25760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b60006113bd83611f1e565b91506113d1905063044df8e760e41b612073565b60018160ff1610611464578060ff16600114611434578060ff166002146114345760028160ff16116114345760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b604482015260640161053f565b60405163362c0cb560e01b81526001600160a01b0384169063362c0cb590349061082d90869033906004016129a4565b60405163226bf2d160e21b81523360048201526001600160a01b038416906389afcb44903490602401610adb565b6001546001146114d15760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156115195760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b600061152482611f1e565b9150508060ff1660010361158a57816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561156d57600080fd5b505af1158015611581573d6000803e3d6000fd5b50505050611617565b8060ff166002036115d057816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561156d57600080fd5b60028160ff16111561086457816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561156d57600080fd5b505060018055565b60015460011461165e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156116a65760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b60006116b185611f1e565b9150508060ff16600203610864576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c1918690606401611120565b6000816340d097c360e01b0361171257505060045490565b8163044df8e760e41b0361172857505060055490565b506000919050565b60015460011461176f5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161053f565b6002600155600054600160a01b900460ff16156117b75760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b6000806117c384611f1e565b9150915060018160ff16101561199b576001600160a01b0383161580159061185357506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa15801561182c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185091906129f8565b15155b61190057836001600160a01b03163160000361189c5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161053f565b6006546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b1580156118e357600080fd5b505af11580156118f7573d6000803e3d6000fd5b50505050611968565b600654604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b15801561194f57600080fd5b505af1158015611963573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600103611b6e576001600160a01b03831615801590611a2657506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156119ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2391906129f8565b15155b611ad357836001600160a01b031631600003611a6f5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161053f565b6006546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b158015611ab657600080fd5b505af1158015611aca573d6000803e3d6000fd5b50505050611b3b565b600654604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b158015611b2257600080fd5b505af1158015611b36573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600203611d41576001600160a01b03831615801590611bf957506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf691906129f8565b15155b611ca657836001600160a01b031631600003611c425760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161053f565b6006546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b158015611c8957600080fd5b505af1158015611c9d573d6000803e3d6000fd5b50505050611d0e565b600654604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b158015611cf557600080fd5b505af1158015611d09573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff161115610cca576001600160a01b03831615801590611dcd57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dca91906129f8565b15155b611e7a57836001600160a01b031631600003611e165760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b604482015260640161053f565b6006546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b158015611e5d57600080fd5b505af1158015611e71573d6000803e3d6000fd5b50505050611ee2565b600654604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b158015611ec957600080fd5b505af1158015611edd573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa158015611f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9091906129f8565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa158015611fd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffd9190612a11565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015612048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206c9190612a40565b9050915091565b6003546001600160a01b0316156121b057600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f791906129f8565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa15801561215a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217e91906129f8565b90508082146121955763f7760f256000526004601cfd5b6003546121ad906001600160a01b0316333085612426565b50505b50565b600054600160a01b900460ff1661220c5760405162461bcd60e51b815260206004820152600860248201527f554e504155534544000000000000000000000000000000000000000000000000604482015260640161053f565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff16156122925760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b604482015260640161053f565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001612245565b60018360ff1610156123425760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b15801561232557600080fd5b505af1158015612339573d6000803e3d6000fd5b505050506121ad565b8260ff1660010361237b5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf9060240161230b565b8260ff166002036108645760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf9060240161230b565b8260ff16600203610864576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f49060240161230b565b8260ff1660020361086457604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b39060240161230b565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806124b25760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161053f565b5050505050565b60005b838110156124d45781810151838201526020016124bc565b50506000910152565b60208152600082518060208401526124fc8160408501602087016124b9565b601f01601f19169190910160400192915050565b6000806040838503121561252357600080fd5b50508035926020909101359150565b6001600160a01b03811681146121b057600080fd5b60006020828403121561255957600080fd5b813561256481612532565b9392505050565b6000806040838503121561257e57600080fd5b823561258981612532565b9150602083013561259981612532565b809150509250929050565b600080604083850312156125b757600080fd5b82356125c281612532565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561260f5761260f6125d0565b604052919050565b6000806040838503121561262a57600080fd5b823561263581612532565b915060208381013567ffffffffffffffff8082111561265357600080fd5b818601915086601f83011261266757600080fd5b813581811115612679576126796125d0565b61268b601f8201601f191685016125e6565b915080825287848285010111156126a157600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806000606084860312156126d457600080fd5b83356126df81612532565b925060208401356126ef81612532565b929592945050506040919091013590565b60008060006040848603121561271557600080fd5b833561272081612532565b9250602084013567ffffffffffffffff8082111561273d57600080fd5b818601915086601f83011261275157600080fd5b81358181111561276057600080fd5b8760208260051b850101111561277557600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561279e57600080fd5b84356127a981612532565b966020860135965060408601359560600135945092505050565b80151581146121b057600080fd5b60ff811681146121b057600080fd5b6000806000606084860312156127f557600080fd5b833561280081612532565b92506020840135612810816127c3565b91506040840135612820816127d1565b809150509250925092565b6000806040838503121561283e57600080fd5b823561284981612532565b915060208381013567ffffffffffffffff8082111561286757600080fd5b818601915086601f83011261287b57600080fd5b81358181111561288d5761288d6125d0565b8060051b915061289e8483016125e6565b81815291830184019184810190898411156128b857600080fd5b938501935b838510156128d6578435825293850193908501906128bd565b8096505050505050509250929050565b6000602082840312156128f857600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461256457600080fd5b6000825161293a8184602087016124b9565b9190910192915050565b6040808252810183905260008460608301825b8681101561298757823561296a81612532565b6001600160a01b0316825260209283019290910190600101612957565b5080925050506001600160a01b0383166020830152949350505050565b604080825283519082018190526000906020906060840190828701845b828110156129dd578151845292840192908401906001016129c1565b5050506001600160a01b039490941692019190915250919050565b600060208284031215612a0a57600080fd5b5051919050565b60008060408385031215612a2457600080fd5b8251612a2f81612532565b6020840151909250612599816127c3565b600060208284031215612a5257600080fd5b8151612564816127d156fea164736f6c6343000810000a";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
