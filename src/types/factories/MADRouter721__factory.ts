/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter721, MADRouter721Interface } from "../MADRouter721";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setBaseLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180556703782dace9d9000060045560006005553480156200002657600080fd5b5060405162002ab538038062002ab5833981016040819052620000499162000183565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000ca57620000ca81620000d2565b5050620001c2565b6000546001600160a01b03163314620001205760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6001600160a01b03811681146200018057600080fd5b50565b600080604083850312156200019757600080fd5b8251620001a4816200016a565b6020840151909250620001b7816200016a565b809150509250929050565b6128e380620001d26000396000f3fe6080604052600436106101965760003560e01c806367b5a642116100e1578063ab9acd571161008a578063cab2e41f11610064578063cab2e41f1461040d578063d44619e31461042d578063edc9e7a41461044d578063f940e3851461046d57600080fd5b8063ab9acd57146103ba578063ba36b92d146103da578063c5cd1d3c146103ed57600080fd5b80638456cb59116100bb5780638456cb59146103655780638da5cb5b1461037a578063a123c38d1461039a57600080fd5b806367b5a642146102fa5780636a326ab11461030d578063785e9e861461032d57600080fd5b806342a4275211610143578063583fef341161011d578063583fef3414610296578063586ba782146102ba5780635c975abb146102d057600080fd5b806342a42752146102505780634328bd0014610263578063490f70271461028357600080fd5b806317f9fad11161017457806317f9fad114610208578063182ee485146102285780633f4ba83a1461023b57600080fd5b806306fdde031461019b5780630b78f9c0146101c657806313af4035146101e8575b600080fd5b3480156101a757600080fd5b506101b061048d565b6040516101bd9190612356565b60405180910390f35b3480156101d257600080fd5b506101e66101e1366004612389565b6104a4565b005b3480156101f457600080fd5b506101e66102033660046123c0565b610539565b34801561021457600080fd5b506101e66102233660046123e4565b610606565b6101e661023636600461241d565b6106f6565b34801561024757600080fd5b506101e661084e565b6101e661025e3660046123e4565b6108a1565b34801561026f57600080fd5b506101e661027e366004612490565b6109f3565b6101e6610291366004612538565b610bb1565b3480156102a257600080fd5b506102ac60055481565b6040519081526020016101bd565b3480156102c657600080fd5b506102ac60045481565b3480156102dc57600080fd5b50600054600160a01b900460ff1660405190151581526020016101bd565b6101e6610308366004612579565b610d0c565b34801561031957600080fd5b506101e66103283660046123c0565b610e2a565b34801561033957600080fd5b5060035461034d906001600160a01b031681565b6040516001600160a01b0390911681526020016101bd565b34801561037157600080fd5b506101e6610ed5565b34801561038657600080fd5b5060005461034d906001600160a01b031681565b3480156103a657600080fd5b506101e66103b5366004612601565b610f26565b3480156103c657600080fd5b506101e66103d5366004612659565b61103b565b6101e66103e83660046126a4565b611208565b3480156103f957600080fd5b506101e66104083660046123c0565b61136f565b34801561041957600080fd5b506101e6610428366004612601565b6114fc565b34801561043957600080fd5b5060025461034d906001600160a01b031681565b34801561045957600080fd5b506102ac61046836600461275f565b6115d7565b34801561047957600080fd5b506101e66104883660046123e4565b61160d565b6060602080526606726f7574657260465260606020f35b6000546001600160a01b031633146104f25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6005819055600482905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146105825760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104e9565b6001600160a01b0381166105ca5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104e9565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b0316331461064f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104e9565b6001600160a01b0381166106975760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104e9565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b1580156106da57600080fd5b505af11580156106ee573d6000803e3d6000fd5b505050505050565b6001546001146107355760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff161561077d5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600061078883611d97565b9150508060ff1660020361080e576107a66340d097c360e01b611eec565b6040516369fd0e0b60e01b8152600481018390523360248201526001600160a01b038416906369fd0e0b9034906044015b6000604051808303818588803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b5050505050610845565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104e9565b50506001805550565b6000546001600160a01b031633146108975760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104e9565b61089f61202c565b565b6001546001146108e05760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff16156109285760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600061093383611d97565b91505060ff8116156109765760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104e9565b6109866340d097c360e01b611eec565b604051633966bb8360e21b81526001600160a01b03838116600483015233602483015284169063e59aee0c9034906044015b6000604051808303818588803b1580156109d157600080fd5b505af11580156109e5573d6000803e3d6000fd5b505060018055505050505050565b600154600114610a325760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff1615610a7a5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600080610a8684611d97565b915091508060ff16600103610b38576040516355f804b360e01b81526001600160a01b038516906355f804b390610ac1908690600401612356565b600060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b5050505082604051610b0191906127a1565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a3610ba7565b8060ff16600203610b6f576040516355f804b360e01b81526001600160a01b038516906355f804b390610ac1908690600401612356565b60028160ff16111561080e576040516355f804b360e01b81526001600160a01b038516906355f804b390610ac1908690600401612356565b5050600180555050565b600154600114610bf05760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff1615610c385760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b6000610c4384611d97565b9150508060ff16600114610c885760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104e9565b610c986340d097c360e01b611eec565b60405163438b1b4b60e01b81526001600160a01b0384811660048301526024820184905233604483015285169063438b1b4b9034906064016000604051808303818588803b158015610ce957600080fd5b505af1158015610cfd573d6000803e3d6000fd5b50506001805550505050505050565b600154600114610d4b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff1615610d935760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b6000610d9e84611d97565b9150508060ff1660020361080e57610dbc6340d097c360e01b611eec565b6040516369eff00560e01b81526001600160a01b038516906369eff005903490610dee908790879033906004016127bd565b6000604051808303818588803b158015610e0757600080fd5b505af1158015610e1b573d6000803e3d6000fd5b50505050505050600180555050565b6000546001600160a01b03163314610e735760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104e9565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314610f1e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104e9565b61089f6120c8565b600154600114610f655760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff1615610fad5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b6000610fb885611d97565b9150508060ff1660020361080e576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b15801561101757600080fd5b505af115801561102b573d6000803e3d6000fd5b505050505b505060018055505050565b60015460011461107a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff16156110c25760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b60038160ff16106111045760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104e9565b60008061111085611d97565b9150915060018360ff1610156111645761112b81868661214e565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4611030565b8260ff166001036111b35761117a81868661222d565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4611030565b8260ff16600203611030576111c9818686612266565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b6001546001146112475760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff161561128f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600061129a83611d97565b91506112ae905063044df8e760e41b611eec565b60018160ff1610611341578060ff16600114611311578060ff166002146113115760028160ff16116113115760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104e9565b60405163362c0cb560e01b81526001600160a01b0384169063362c0cb59034906107d7908690339060040161281d565b60405163226bf2d160e21b81523360048201526001600160a01b038416906389afcb449034906024016109b8565b6001546001146113ae5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff16156113f65760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600061140182611d97565b9150508060ff1660010361146757816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561144a57600080fd5b505af115801561145e573d6000803e3d6000fd5b505050506114f4565b8060ff166002036114ad57816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561144a57600080fd5b60028160ff16111561080e57816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561144a57600080fd5b505060018055565b60015460011461153b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff16156115835760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b600061158e85611d97565b9150508060ff1660020361080e576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c1918690606401610ffd565b6000816340d097c360e01b036115ef57505060045490565b8163044df8e760e41b0361160557505060055490565b506000919050565b60015460011461164c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104e9565b6002600155600054600160a01b900460ff16156116945760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b6000806116a084611d97565b9150915060018160ff16101561185f576001600160a01b0383161580159061173057506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d9190612871565b15155b6117d157836001600160a01b0316316000036117795760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104e9565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117b457600080fd5b505af11580156117c8573d6000803e3d6000fd5b5050505061182c565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561181357600080fd5b505af1158015611827573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600103611a19576001600160a01b038316158015906118ea57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156118c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e79190612871565b15155b61198b57836001600160a01b0316316000036119335760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104e9565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561196e57600080fd5b505af1158015611982573d6000803e3d6000fd5b505050506119e6565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b1580156119cd57600080fd5b505af11580156119e1573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600203611bd3576001600160a01b03831615801590611aa457506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa19190612871565b15155b611b4557836001600160a01b031631600003611aed5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104e9565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611b2857600080fd5b505af1158015611b3c573d6000803e3d6000fd5b50505050611ba0565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611b8757600080fd5b505af1158015611b9b573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff161115610ba7576001600160a01b03831615801590611c5f57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5c9190612871565b15155b611d0057836001600160a01b031631600003611ca85760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104e9565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611ce357600080fd5b505af1158015611cf7573d6000803e3d6000fd5b50505050611d5b565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611d4257600080fd5b505af1158015611d56573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa158015611de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e099190612871565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa158015611e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e76919061288a565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015611ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee591906128b9565b9050915091565b6003546001600160a01b03161561202957600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f709190612871565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa158015611fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff79190612871565b905080821461200e5763f7760f256000526004601cfd5b600354612026906001600160a01b031633308561229f565b50505b50565b600054600160a01b900460ff166120855760405162461bcd60e51b815260206004820152600860248201527f554e50415553454400000000000000000000000000000000000000000000000060448201526064016104e9565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff161561210b5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104e9565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016120be565b60018360ff1610156121bb5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b15801561219e57600080fd5b505af11580156121b2573d6000803e3d6000fd5b50505050612026565b8260ff166001036121f45760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612184565b8260ff1660020361080e5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401612184565b8260ff1660020361080e576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f490602401612184565b8260ff1660020361080e57604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b390602401612184565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061232b5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104e9565b5050505050565b60005b8381101561234d578181015183820152602001612335565b50506000910152565b6020815260008251806020840152612375816040850160208701612332565b601f01601f19169190910160400192915050565b6000806040838503121561239c57600080fd5b50508035926020909101359150565b6001600160a01b038116811461202957600080fd5b6000602082840312156123d257600080fd5b81356123dd816123ab565b9392505050565b600080604083850312156123f757600080fd5b8235612402816123ab565b91506020830135612412816123ab565b809150509250929050565b6000806040838503121561243057600080fd5b823561243b816123ab565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561248857612488612449565b604052919050565b600080604083850312156124a357600080fd5b82356124ae816123ab565b915060208381013567ffffffffffffffff808211156124cc57600080fd5b818601915086601f8301126124e057600080fd5b8135818111156124f2576124f2612449565b612504601f8201601f1916850161245f565b9150808252878482850101111561251a57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060006060848603121561254d57600080fd5b8335612558816123ab565b92506020840135612568816123ab565b929592945050506040919091013590565b60008060006040848603121561258e57600080fd5b8335612599816123ab565b9250602084013567ffffffffffffffff808211156125b657600080fd5b818601915086601f8301126125ca57600080fd5b8135818111156125d957600080fd5b8760208260051b85010111156125ee57600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561261757600080fd5b8435612622816123ab565b966020860135965060408601359560600135945092505050565b801515811461202957600080fd5b60ff8116811461202957600080fd5b60008060006060848603121561266e57600080fd5b8335612679816123ab565b925060208401356126898161263c565b915060408401356126998161264a565b809150509250925092565b600080604083850312156126b757600080fd5b82356126c2816123ab565b915060208381013567ffffffffffffffff808211156126e057600080fd5b818601915086601f8301126126f457600080fd5b81358181111561270657612706612449565b8060051b915061271784830161245f565b818152918301840191848101908984111561273157600080fd5b938501935b8385101561274f57843582529385019390850190612736565b8096505050505050509250929050565b60006020828403121561277157600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146123dd57600080fd5b600082516127b3818460208701612332565b9190910192915050565b6040808252810183905260008460608301825b868110156128005782356127e3816123ab565b6001600160a01b03168252602092830192909101906001016127d0565b5080925050506001600160a01b0383166020830152949350505050565b604080825283519082018190526000906020906060840190828701845b828110156128565781518452928401929084019060010161283a565b5050506001600160a01b039490941692019190915250919050565b60006020828403121561288357600080fd5b5051919050565b6000806040838503121561289d57600080fd5b82516128a8816123ab565b60208401519092506124128161263c565b6000602082840312156128cb57600080fd5b81516123dd8161264a56fea164736f6c6343000810000a";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
