/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MADRouter721, MADRouter721Interface } from "../MADRouter721";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "creatorMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimRoot",
        type: "bytes32",
      },
    ],
    name: "freeSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "gift",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "minimalSafeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "_stateType",
        type: "uint8",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180556703782dace9d9000060045560006005553480156200002657600080fd5b50604051620028fd380380620028fd833981016040819052620000499162000183565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b0384811691909117909155811615620000ca57620000ca81620000d2565b5050620001c2565b6000546001600160a01b03163314620001205760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6001600160a01b03811681146200018057600080fd5b50565b600080604083850312156200019757600080fd5b8251620001a4816200016a565b6020840151909250620001b7816200016a565b809150509250929050565b61272b80620001d26000396000f3fe60806040526004361061018b5760003560e01c806367b5a642116100d6578063ab9acd571161007f578063d44619e311610059578063d44619e314610402578063edc9e7a414610422578063f940e3851461044257600080fd5b8063ab9acd57146103af578063ba36b92d146103cf578063cab2e41f146103e257600080fd5b80638456cb59116100b05780638456cb591461035a5780638da5cb5b1461036f578063a123c38d1461038f57600080fd5b806367b5a642146102ef5780636a326ab114610302578063785e9e861461032257600080fd5b806342a4275211610138578063583fef3411610112578063583fef341461028b578063586ba782146102af5780635c975abb146102c557600080fd5b806342a42752146102455780634328bd0014610258578063490f70271461027857600080fd5b806317f9fad11161016957806317f9fad1146101fd578063182ee4851461021d5780633f4ba83a1461023057600080fd5b806306fdde03146101905780630b78f9c0146101bb57806313af4035146101dd575b600080fd5b34801561019c57600080fd5b506101a5610462565b6040516101b2919061219e565b60405180910390f35b3480156101c757600080fd5b506101db6101d63660046121d1565b610479565b005b3480156101e957600080fd5b506101db6101f8366004612208565b61050e565b34801561020957600080fd5b506101db61021836600461222c565b6105db565b6101db61022b366004612265565b6106cb565b34801561023c57600080fd5b506101db610823565b6101db61025336600461222c565b610876565b34801561026457600080fd5b506101db6102733660046122d8565b6109c8565b6101db610286366004612380565b610b86565b34801561029757600080fd5b506102a160055481565b6040519081526020016101b2565b3480156102bb57600080fd5b506102a160045481565b3480156102d157600080fd5b50600054600160a01b900460ff1660405190151581526020016101b2565b6101db6102fd3660046123c1565b610ce1565b34801561030e57600080fd5b506101db61031d366004612208565b610dff565b34801561032e57600080fd5b50600354610342906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b34801561036657600080fd5b506101db610eaa565b34801561037b57600080fd5b50600054610342906001600160a01b031681565b34801561039b57600080fd5b506101db6103aa366004612449565b610efb565b3480156103bb57600080fd5b506101db6103ca3660046124a1565b611010565b6101db6103dd3660046124ec565b6111dd565b3480156103ee57600080fd5b506101db6103fd366004612449565b611344565b34801561040e57600080fd5b50600254610342906001600160a01b031681565b34801561042e57600080fd5b506102a161043d3660046125a7565b61141f565b34801561044e57600080fd5b506101db61045d36600461222c565b611455565b6060602080526606726f7574657260465260606020f35b6000546001600160a01b031633146104c75760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6005819055600482905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146105575760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6001600160a01b03811661059f5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104be565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146106245760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b6001600160a01b03811661066c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016104be565b604051636c19e78360e01b81526001600160a01b038281166004830152831690636c19e78390602401600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b505050505050565b60015460011461070a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156107525760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600061075d83611bdf565b9150508060ff166002036107e35761077b6340d097c360e01b611d34565b6040516369fd0e0b60e01b8152600481018390523360248201526001600160a01b038416906369fd0e0b9034906044015b6000604051808303818588803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b505050505061081a565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b50506001805550565b6000546001600160a01b0316331461086c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b610874611e74565b565b6001546001146108b55760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156108fd5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600061090883611bdf565b91505060ff81161561094b5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b61095b6340d097c360e01b611d34565b604051633966bb8360e21b81526001600160a01b03838116600483015233602483015284169063e59aee0c9034906044015b6000604051808303818588803b1580156109a657600080fd5b505af11580156109ba573d6000803e3d6000fd5b505060018055505050505050565b600154600114610a075760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610a4f5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600080610a5b84611bdf565b915091508060ff16600103610b0d576040516355f804b360e01b81526001600160a01b038516906355f804b390610a9690869060040161219e565b600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b5050505082604051610ad691906125e9565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a3610b7c565b8060ff16600203610b44576040516355f804b360e01b81526001600160a01b038516906355f804b390610a9690869060040161219e565b60028160ff1611156107e3576040516355f804b360e01b81526001600160a01b038516906355f804b390610a9690869060040161219e565b5050600180555050565b600154600114610bc55760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610c0d5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610c1884611bdf565b9150508060ff16600114610c5d5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b610c6d6340d097c360e01b611d34565b60405163438b1b4b60e01b81526001600160a01b0384811660048301526024820184905233604483015285169063438b1b4b9034906064016000604051808303818588803b158015610cbe57600080fd5b505af1158015610cd2573d6000803e3d6000fd5b50506001805550505050505050565b600154600114610d205760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610d685760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610d7384611bdf565b9150508060ff166002036107e357610d916340d097c360e01b611d34565b6040516369eff00560e01b81526001600160a01b038516906369eff005903490610dc390879087903390600401612605565b6000604051808303818588803b158015610ddc57600080fd5b505af1158015610df0573d6000803e3d6000fd5b50505050505050600180555050565b6000546001600160a01b03163314610e485760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314610ef35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016104be565b610874611f10565b600154600114610f3a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff1615610f825760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000610f8d85611bdf565b9150508060ff166002036107e3576040516386997e7d60e01b81526004810185905260248101849052604481018390526001600160a01b038616906386997e7d906064015b600060405180830381600087803b158015610fec57600080fd5b505af1158015611000573d6000803e3d6000fd5b505050505b505060018055505050565b60015460011461104f5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156110975760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60038160ff16106110d95760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b6000806110e585611bdf565b9150915060018360ff16101561113957611100818686611f96565b8315158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a4611005565b8260ff166001036111885761114f818686612075565b8315158160ff16837f8fb26c046352958e1f6b6a24432925f21e52878afea867b4b642e5d07c6abf0f60405160405180910390a4611005565b8260ff166002036110055761119e8186866120ae565b8315158160ff16837fcaca6c2e85f8f4d6f254385762b7a5baec7c68441678ee0a9b1ea8bb4b05bf0b60405160405180910390a4505060018055505050565b60015460011461121c5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156112645760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b600061126f83611bdf565b9150611283905063044df8e760e41b611d34565b60018160ff1610611316578060ff166001146112e6578060ff166002146112e65760028160ff16116112e65760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b60448201526064016104be565b60405163362c0cb560e01b81526001600160a01b0384169063362c0cb59034906107ac9086903390600401612665565b60405163226bf2d160e21b81523360048201526001600160a01b038416906389afcb4490349060240161098d565b6001546001146113835760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156113cb5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b60006113d685611bdf565b9150508060ff166002036107e3576040516313e0c8c360e11b81526004810185905260248101849052604481018390526001600160a01b038616906327c1918690606401610fd2565b6000816340d097c360e01b0361143757505060045490565b8163044df8e760e41b0361144d57505060055490565b506000919050565b6001546001146114945760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064016104be565b6002600155600054600160a01b900460ff16156114dc5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000806114e884611bdf565b9150915060018160ff1610156116a7576001600160a01b0383161580159061157857506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157591906126b9565b15155b61161957836001600160a01b0316316000036115c15760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115fc57600080fd5b505af1158015611610573d6000803e3d6000fd5b50505050611674565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600103611861576001600160a01b0383161580159061173257506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa15801561170b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172f91906126b9565b15155b6117d357836001600160a01b03163160000361177b5760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117b657600080fd5b505af11580156117ca573d6000803e3d6000fd5b5050505061182e565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b15801561181557600080fd5b505af1158015611829573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b8060ff16600203611a1b576001600160a01b038316158015906118ec57506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e991906126b9565b15155b61198d57836001600160a01b0316316000036119355760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561197057600080fd5b505af1158015611984573d6000803e3d6000fd5b505050506119e8565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45b60028160ff161115610b7c576001600160a01b03831615801590611aa757506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa491906126b9565b15155b611b4857836001600160a01b031631600003611af05760405162461bcd60e51b81526020600482015260086024820152674e4f5f46554e445360c01b60448201526064016104be565b836001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611b2b57600080fd5b505af1158015611b3f573d6000803e3d6000fd5b50505050611ba3565b604051627a79d960e91b81526001600160a01b03848116600483015285169063f4f3b20090602401600060405180830381600087803b158015611b8a57600080fd5b505af1158015611b9e573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a45050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa158015611c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5191906126b9565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa158015611c9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbe91906126d2565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015611d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2d9190612701565b9050915091565b6003546001600160a01b031615611e7157600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db891906126b9565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa158015611e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3f91906126b9565b9050808214611e565763f7760f256000526004601cfd5b600354611e6e906001600160a01b03163330856120e7565b50505b50565b600054600160a01b900460ff16611ecd5760405162461bcd60e51b815260206004820152600860248201527f554e50415553454400000000000000000000000000000000000000000000000060448201526064016104be565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600054600160a01b900460ff1615611f535760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b60448201526064016104be565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611f06565b60018360ff1610156120035760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf906024015b600060405180830381600087803b158015611fe657600080fd5b505af1158015611ffa573d6000803e3d6000fd5b50505050611e6e565b8260ff1660010361203c5760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401611fcc565b8260ff166002036107e35760405163879fbedf60e01b815281151560048201526001600160a01b0383169063879fbedf90602401611fcc565b8260ff166002036107e3576040516331a9da3d60e21b815281151560048201526001600160a01b0383169063c6a768f490602401611fcc565b8260ff166002036107e357604051637e62f3b360e01b815281151560048201526001600160a01b03831690637e62f3b390602401611fcc565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806121735760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016104be565b5050505050565b60005b8381101561219557818101518382015260200161217d565b50506000910152565b60208152600082518060208401526121bd81604085016020870161217a565b601f01601f19169190910160400192915050565b600080604083850312156121e457600080fd5b50508035926020909101359150565b6001600160a01b0381168114611e7157600080fd5b60006020828403121561221a57600080fd5b8135612225816121f3565b9392505050565b6000806040838503121561223f57600080fd5b823561224a816121f3565b9150602083013561225a816121f3565b809150509250929050565b6000806040838503121561227857600080fd5b8235612283816121f3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122d0576122d0612291565b604052919050565b600080604083850312156122eb57600080fd5b82356122f6816121f3565b915060208381013567ffffffffffffffff8082111561231457600080fd5b818601915086601f83011261232857600080fd5b81358181111561233a5761233a612291565b61234c601f8201601f191685016122a7565b9150808252878482850101111561236257600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060006060848603121561239557600080fd5b83356123a0816121f3565b925060208401356123b0816121f3565b929592945050506040919091013590565b6000806000604084860312156123d657600080fd5b83356123e1816121f3565b9250602084013567ffffffffffffffff808211156123fe57600080fd5b818601915086601f83011261241257600080fd5b81358181111561242157600080fd5b8760208260051b850101111561243657600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561245f57600080fd5b843561246a816121f3565b966020860135965060408601359560600135945092505050565b8015158114611e7157600080fd5b60ff81168114611e7157600080fd5b6000806000606084860312156124b657600080fd5b83356124c1816121f3565b925060208401356124d181612484565b915060408401356124e181612492565b809150509250925092565b600080604083850312156124ff57600080fd5b823561250a816121f3565b915060208381013567ffffffffffffffff8082111561252857600080fd5b818601915086601f83011261253c57600080fd5b81358181111561254e5761254e612291565b8060051b915061255f8483016122a7565b818152918301840191848101908984111561257957600080fd5b938501935b838510156125975784358252938501939085019061257e565b8096505050505050509250929050565b6000602082840312156125b957600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461222557600080fd5b600082516125fb81846020870161217a565b9190910192915050565b6040808252810183905260008460608301825b8681101561264857823561262b816121f3565b6001600160a01b0316825260209283019290910190600101612618565b5080925050506001600160a01b0383166020830152949350505050565b604080825283519082018190526000906020906060840190828701845b8281101561269e57815184529284019290840190600101612682565b5050506001600160a01b039490941692019190915250919050565b6000602082840312156126cb57600080fd5b5051919050565b600080604083850312156126e557600080fd5b82516126f0816121f3565b602084015190925061225a81612484565b60006020828403121561271357600080fd5b81516122258161249256fea164736f6c6343000810000a";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
