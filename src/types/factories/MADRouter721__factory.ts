/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADRouter721, MADRouter721Interface } from "../MADRouter721";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxFeeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFeeBurnt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintFees",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setBaseLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600180556703782dace9d900006004553480156200002157600080fd5b5060405162001cac38038062001cac83398101604081905262000044916200027b565b600080546001600160a01b031916339081178255604051909182917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506000805460ff60a01b191690558115801590620000a25750600081115b620000f45760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d6178206665652073657474696e6773000000000000000060448201526064015b60405180910390fd5b60068290556007819055600280546001600160a01b0319166001600160a01b03878116919091179091558416156200013157620001318462000147565b6200013c8362000191565b5050505050620002e0565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6000546001600160a01b03163314620001dc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401620000eb565b6001600160a01b038116620002265760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401620000eb565b60088190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6001600160a01b03811681146200027857600080fd5b50565b600080600080600060a086880312156200029457600080fd5b8551620002a18162000262565b6020870151909550620002b48162000262565b6040870151909450620002c78162000262565b6060870151608090970151959894975095949392505050565b6119bc80620002f06000396000f3fe6080604052600436106101755760003560e01c806366d003ac116100cb578063c5cd1d3c1161007f578063e427affe11610059578063e427affe146103c9578063edc9e7a4146103df578063f940e385146103ff57600080fd5b8063c5cd1d3c14610373578063c99aa4e514610393578063d44619e3146103a957600080fd5b80638456cb59116100b05780638456cb591461032b5780638da5cb5b14610340578063ba36b92d1461036057600080fd5b806366d003ac146102d3578063785e9e861461030b57600080fd5b80633f4ba83a1161012d578063583fef3411610107578063583fef341461026f578063586ba782146102935780635c975abb146102a957600080fd5b80633f4ba83a146102275780634328bd001461023c578063490f70271461025c57600080fd5b80630b78f9c01161015e5780630b78f9c0146101c757806313af4035146101e75780633bbed4a01461020757600080fd5b806306fdde031461017a578063089f8b1b146101a5575b600080fd5b34801561018657600080fd5b5061018f61041f565b60405161019c91906115a4565b60405180910390f35b3480156101b157600080fd5b506101c56101c03660046115fa565b610436565b005b3480156101d357600080fd5b506101c56101e2366004611633565b6105ad565b3480156101f357600080fd5b506101c5610202366004611655565b61069d565b34801561021357600080fd5b506101c5610222366004611655565b61076a565b34801561023357600080fd5b506101c5610837565b34801561024857600080fd5b506101c56102573660046116c0565b61088a565b6101c561026a366004611768565b610a0b565b34801561027b57600080fd5b5061028560055481565b60405190815260200161019c565b34801561029f57600080fd5b5061028560045481565b3480156102b557600080fd5b50600054600160a01b900460ff16604051901515815260200161019c565b3480156102df57600080fd5b506008546102f3906001600160a01b031681565b6040516001600160a01b03909116815260200161019c565b34801561031757600080fd5b506003546102f3906001600160a01b031681565b34801561033757600080fd5b506101c5610b66565b34801561034c57600080fd5b506000546102f3906001600160a01b031681565b6101c561036e3660046117a9565b610bb7565b34801561037f57600080fd5b506101c561038e366004611655565b610d0a565b34801561039f57600080fd5b5061028560065481565b3480156103b557600080fd5b506002546102f3906001600160a01b031681565b3480156103d557600080fd5b5061028560075481565b3480156103eb57600080fd5b506102856103fa366004611864565b610e3c565b34801561040b57600080fd5b506101c561041a3660046118a6565b610e72565b6060602080526606726f7574657260465260606020f35b60015460011461047a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b60448201526064015b60405180910390fd5b6002600155600054600160a01b900460ff16156104c25760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b6000806104ce84611136565b915091508060ff166001146105145760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b60405163879fbedf60e01b815283151560048201526001600160a01b0385169063879fbedf90602401600060405180830381600087803b15801561055757600080fd5b505af115801561056b573d6000803e3d6000fd5b505050508215158160ff16837f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d60405160405180910390a45050600180555050565b6000546001600160a01b031633146105f65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610471565b600654821115801561060a57506007548111155b6106565760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d61786044820152606401610471565b6005819055600482905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910160405180910390a15050565b6000546001600160a01b031633146106e65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610471565b6001600160a01b03811661072e5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610471565b60008181556040516001600160a01b0383169133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000546001600160a01b031633146107b35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610471565b6001600160a01b0381166107fb5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610471565b60088190556040516001600160a01b038216907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646690600090a250565b6000546001600160a01b031633146108805760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610471565b61088861128b565b565b6001546001146108c95760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610471565b6002600155600054600160a01b900460ff16156109115760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b60008061091d84611136565b915091508060ff166001146109635760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b6040516355f804b360e01b81526001600160a01b038516906355f804b39061098f9086906004016115a4565b600060405180830381600087803b1580156109a957600080fd5b505af11580156109bd573d6000803e3d6000fd5b50505050826040516109cf91906118d4565b6040519081900381209083907f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb790600090a35050600180555050565b600154600114610a4a5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610471565b6002600155600054600160a01b900460ff1615610a925760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b6000610a9d84611136565b9150508060ff16600114610ae25760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b610af26340d097c360e01b611327565b60405163438b1b4b60e01b81526001600160a01b0384811660048301526024820184905233604483015285169063438b1b4b9034906064016000604051808303818588803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b50506001805550505050505050565b6000546001600160a01b03163314610baf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610471565b610888611467565b600154600114610bf65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610471565b6002600155600054600160a01b900460ff1615610c3e5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b6000610c4983611136565b9150610c5d905063044df8e760e41b611327565b8060ff16600114610c9f5760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b60405163362c0cb560e01b81526001600160a01b0384169063362c0cb5903490610ccf90869033906004016118f0565b6000604051808303818588803b158015610ce857600080fd5b505af1158015610cfc573d6000803e3d6000fd5b505050505050506001805550565b600154600114610d495760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610471565b6002600155600054600160a01b900460ff1615610d915760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b6000610d9c82611136565b9150508060ff16600114610de15760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b816001600160a01b03166366c879a96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e1c57600080fd5b505af1158015610e30573d6000803e3d6000fd5b50505050505060018055565b6000816340d097c360e01b03610e5457505060045490565b8163044df8e760e41b03610e6a57505060055490565b506000919050565b600154600114610eb15760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610471565b6002600155600054600160a01b900460ff1615610ef95760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b600080610f0584611136565b915091508060ff166001036110f5576001600160a01b03831615801590610f9457506040516370a0823160e01b81526001600160a01b0385811660048301528416906370a0823190602401602060405180830381865afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f919190611944565b15155b61105657836001600160a01b031631600003610ff25760405162461bcd60e51b815260206004820152600860248201527f4e4f5f46554e44530000000000000000000000000000000000000000000000006044820152606401610471565b6008546040516351cff8d960e01b81526001600160a01b039182166004820152908516906351cff8d990602401600060405180830381600087803b15801561103957600080fd5b505af115801561104d573d6000803e3d6000fd5b505050506110be565b600854604051632515bef360e21b81526001600160a01b038581166004830152918216602482015290851690639456fbcc90604401600060405180830381600087803b1580156110a557600080fd5b505af11580156110b9573d6000803e3d6000fd5b505050505b604051339060ff83169084907ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a190600090a461112c565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606401610471565b5050600180555050565b60025460405163617d1d3b60e01b81526001600160a01b038381166004830152600092839291169063617d1d3b90602401602060405180830381865afa158015611184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a89190611944565b60025460405163b64bd5eb60e01b8152600481018390529193506001600160a01b03169063b64bd5eb906024016040805180830381865afa1580156111f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611215919061195d565b505060025460405163d93cb8fd60e01b8152600481018490526001600160a01b039091169063d93cb8fd90602401602060405180830381865afa158015611260573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611284919061198c565b9050915091565b600054600160a01b900460ff166112e45760405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152606401610471565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b6003546001600160a01b03161561146457600354604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab9190611944565b604051633b7279e960e21b81527fffffffff0000000000000000000000000000000000000000000000000000000084166004820152909150600090309063edc9e7a490602401602060405180830381865afa15801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190611944565b90508082146114495763f7760f256000526004601cfd5b600354611461906001600160a01b03163330856114ed565b50505b50565b600054600160a01b900460ff16156114aa5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610471565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589060200161131d565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115795760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610471565b5050505050565b60005b8381101561159b578181015183820152602001611583565b50506000910152565b60208152600082518060208401526115c3816040850160208701611580565b601f01601f19169190910160400192915050565b6001600160a01b038116811461146457600080fd5b801515811461146457600080fd5b6000806040838503121561160d57600080fd5b8235611618816115d7565b91506020830135611628816115ec565b809150509250929050565b6000806040838503121561164657600080fd5b50508035926020909101359150565b60006020828403121561166757600080fd5b8135611672816115d7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116b8576116b8611679565b604052919050565b600080604083850312156116d357600080fd5b82356116de816115d7565b915060208381013567ffffffffffffffff808211156116fc57600080fd5b818601915086601f83011261171057600080fd5b81358181111561172257611722611679565b611734601f8201601f1916850161168f565b9150808252878482850101111561174a57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060006060848603121561177d57600080fd5b8335611788816115d7565b92506020840135611798816115d7565b929592945050506040919091013590565b600080604083850312156117bc57600080fd5b82356117c7816115d7565b915060208381013567ffffffffffffffff808211156117e557600080fd5b818601915086601f8301126117f957600080fd5b81358181111561180b5761180b611679565b8060051b915061181c84830161168f565b818152918301840191848101908984111561183657600080fd5b938501935b838510156118545784358252938501939085019061183b565b8096505050505050509250929050565b60006020828403121561187657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461167257600080fd5b600080604083850312156118b957600080fd5b82356118c4816115d7565b91506020830135611628816115d7565b600082516118e6818460208701611580565b9190910192915050565b604080825283519082018190526000906020906060840190828701845b828110156119295781518452928401929084019060010161190d565b5050506001600160a01b039490941692019190915250919050565b60006020828403121561195657600080fd5b5051919050565b6000806040838503121561197057600080fd5b825161197b816115d7565b6020840151909250611628816115ec565b60006020828403121561199e57600080fd5b815160ff8116811461167257600080fdfea164736f6c6343000810000a";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _maxFeeMint: PromiseOrValue<BigNumberish>,
    _maxFeeBurnt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      _maxFeeMint,
      _maxFeeBurnt,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _maxFeeMint: PromiseOrValue<BigNumberish>,
    _maxFeeBurnt: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      _maxFeeMint,
      _maxFeeBurnt,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
