/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MADFactory1155,
  MADFactory1155Interface,
} from "../MADFactory1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC1155BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC1155LazyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC1155MinimalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC1155WhitelistCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC1155Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "_project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405260016000553480156200001657600080fd5b5060405162002d8638038062002d86833981016040819052620000399162000367565b30608052600180546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001805460ff60a01b1916905562000098846200010f565b620000a382620001e4565b6001600160a01b03811615620000be57620000be81620002b5565b600580546001600160a01b0319166001600160a01b0385169081179091556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090600090a250505050620003c4565b6001546001600160a01b031633146200015e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6001600160a01b038116620001a85760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640162000155565b60068190556040516001600160a01b038216907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc90600090a250565b6001546001600160a01b031633146200022f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000155565b6001600160a01b038116620002795760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640162000155565b60078190556040516001600160a01b038216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6001546001600160a01b03163314620003005760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000155565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b80516001600160a01b03811681146200036257600080fd5b919050565b600080600080608085870312156200037e57600080fd5b62000389856200034a565b935062000399602086016200034a565b9250620003a9604086016200034a565b9150620003b9606086016200034a565b905092959194509250565b6080516129a6620003e06000396000611ee601526129a66000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80638691fe46116100e3578063bc8b58381161008c578063f887ea4011610066578063f887ea4014610447578063f9f411d81461045a578063fa2405171461046d57600080fd5b8063bc8b5838146103fc578063c0d786551461040f578063d93cb8fd1461042257600080fd5b80639750f2e0116100bd5780639750f2e014610308578063b64bd5eb146103b7578063b7762c6d146103e957600080fd5b80638691fe46146102b95780638da5cb5b146102e257806395cd5193146102f557600080fd5b80636c19e78311610145578063785e9e861161011f578063785e9e861461027357806380f556051461029e5780638456cb59146102b157600080fd5b80636c19e7831461023a5780636dcea85f1461024d57806376de0f3d1461026057600080fd5b80635c975abb116101765780635c975abb146101d8578063617d1d3b146101f65780636a326ab11461022757600080fd5b806306fdde031461019d57806313af4035146101bb5780633f4ba83a146101d0575b600080fd5b6101a56104cb565b6040516101b291906122fe565b60405180910390f35b6101ce6101c9366004612336565b6104e3565b005b6101ce6105b7565b600154600160a01b900460ff165b60405190151581526020016101b2565b610219610204366004612336565b60601b6bffffffffffffffffffffffff191690565b6040519081526020016101b2565b6101ce610235366004612336565b61060a565b6101ce610248366004612336565b61069d565b6101ce61025b366004612336565b61076a565b6101e661026e366004612353565b610837565b600854610286906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b600654610286906001600160a01b031681565b6101ce61092c565b6102196102c7366004612336565b6001600160a01b031660009081526003602052604090205490565b600154610286906001600160a01b031681565b6101ce610303366004612440565b61097d565b61036e610316366004612353565b6004602081815260009384526040808520909152918352912080546001820154600283015460038401549484015460058501546006909501546001600160a01b03948516969395928516949093169290919060ff1687565b604080516001600160a01b039889168152602081019790975294871694860194909452949091166060840152608083015260a082019290925290151560c082015260e0016101b2565b6103ca6103c536600461252c565b611268565b604080516001600160a01b0390931683529015156020830152016101b2565b6101ce6103f7366004612545565b6112b3565b61028661040a3660046125b9565b611c25565b6101ce61041d366004612336565b611c3f565b61043561043036600461252c565b611d0c565b60405160ff90911681526020016101b2565b600554610286906001600160a01b031681565b6102196104683660046125f6565b611d2c565b6104ba61047b36600461252c565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0380831694600160a01b90930460ff1693911685565b6040516101b2959493929190612638565b6060602080526707666163746f727960475260606020f35b6001546001600160a01b031633146105315760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6001600160a01b0381166105795760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610528565b60018190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6001546001600160a01b031633146106005760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b610608611d5d565b565b6001546001600160a01b031633146106535760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b6001546001600160a01b031633146106e65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b6001600160a01b03811661072e5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610528565b60078190556040516001600160a01b038216907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6001546001600160a01b031633146107b35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b6001600160a01b0381166107fb5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610528565b60068190556040516001600160a01b038216907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc90600090a250565b6000610841611df9565b61084a82611e2c565b610852575060005b6001600160a01b0382166000908152600360205260408120546bffffffffffffffffffffffff19606086901b16919067ffffffffffffffff8111156108995761089961239d565b6040519080825280602002602001820160405280156108c2578160200160208202803683370190505b50805190915060009060035b81831015610921576001600160a01b03871660009081526020829052604090208054849081106109005761090061268d565b9060005260206000200154850361091657600195505b8260010192506108ce565b505050505092915050565b6001546001600160a01b031633146109755760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b610608611e55565b6000546001146109bc5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610528565b60026000556109c9611edb565b600154600160a01b900460ff1615610a0c5760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610528565b610a168983611f53565b610a1f81611f9f565b60018960ff161015610c20576005546008546040516394e581bb60e01b8152600092839273__$81eac6ad64409f164e0ded5e5f4fd77c1b$__926394e581bb92610a83928f928b928e928c926001600160a01b03928316928d9216906004016126a3565b6040805180830381865af4158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac39190612701565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a0810182529485528482018481528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b908490811115610b8057610b80612622565b0217905550604082015181600101556060820151816002015560808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050816001600160a01b0316856001600160a01b03167f17d6d11e93f02cc5e1d53da970e78d7576940e59c2502064620a908aaa851dbf8c8c888c8e604051610c14959493929190612726565b60405180910390a35050505b8860ff16600103610e24576005546008546040516355d253b560e01b8152600092839273__$fcf875cc5906322e911192ca0ce957b541$__926355d253b592610c86928f928b928e928e928d926001600160a01b03908116928e92911690600401612769565b6040805180830381865af4158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190612701565b90925090506000606082901b6bffffffffffffffffffffffff191632600081815260036020818152604080842080546001808201835591865283862001879055815160a0810183529586528583019081528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b908490811115610d8457610d84612622565b0217905550604082015181600101556060820151816002015560808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050816001600160a01b0316856001600160a01b03167fb43c8475aa9c4cf4da7fc44af5e7f20a6c524658de0c04167eb16162eecc1b228c8c888c8e604051610e18959493929190612726565b60405180910390a35050505b8860ff1660020361102a576005546008546040516319b8444360e01b8152600092839273__$1ff96cff56c59196c728166ea91a201dbc$__926319b8444392610e8a928f928b928e928e928d926001600160a01b03908116928e92911690600401612769565b6040805180830381865af4158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca9190612701565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a08101825294855260028583018181528683018b90524360608801526001600160a01b038d81166080890152888752919093529320845181546001600160a01b03198116919095169081178255915195965093949284926001600160a81b031990911690911790600160a01b908490811115610f8a57610f8a612622565b0217905550604082015181600101556060820151816002015560808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050816001600160a01b0316856001600160a01b03167f678e0da2e54f7845853e7eb79f69ce7a8733c3130938c29d2d8c4e6ea7db71b68c8c888c8e60405161101e959493929190612726565b60405180910390a35050505b60028960ff1611156112585760008073__$c2351f5b298e4c3e8bff54cee5f2f72abf$__632a67b08f8b8787600560009054906101000a90046001600160a01b0316600760009054906101000a90046001600160a01b031689600860009054906101000a90046001600160a01b03166040518863ffffffff1660e01b81526004016110bb97969594939291906127cd565b6040805180830381865af41580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb9190612701565b90925090506000606082901b6bffffffffffffffffffffffff1916326000818152600360208181526040808420805460018101825590855282852001869055805160a0810182529485528482018381528582018a90524360608701526001600160a01b038c8116608088015287865260029093529320845181546001600160a01b03198116919093169081178255935195965093949284926001600160a81b03199092161790600160a01b9084908111156111b8576111b8612622565b0217905550604082015181600101556060820151816002015560808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050816001600160a01b0316856001600160a01b03167fa7616a793dfd4c85823dc11fa42ff96f463e7c7b403f524a0b31c5d843a10b2f8c8c888c8e60405161124c959493929190612726565b60405180910390a35050505b5050600160005550505050505050565b600080611273611fc1565b600083815260026020526040902080546001600160a01b0316925032830361129a57600191505b816112ad57634ca888676000526004601cfd5b50915091565b6000546001146112f25760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610528565b60026000556112ff611edb565b600154600160a01b900460ff16156113425760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610528565b845160208601206001600160a01b03851615801561136757506001600160a01b038416155b1561151c576000611379600080611ff4565b905060006113886000806120cf565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158a85856040518463ffffffff1660e01b81526004016113c79392919061282e565b602060405180830381865af41580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140891906128c6565b6040805160e0810182526001600160a01b0383811680835260208084018a81526000858701818152606087018281526080880183815260a08901848152600160c08b01818152328088526004808b528e89209b89529a9099528c87209b518c546001600160a01b0319908116918d16919091178d559751918c0191909155935160028b0180548816918b16919091179055915160038a01805490961698169790971790935594519386019390935551600585015591516006909301805460ff191693151593909317909255915192935090917fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9161150c9186918891879190612957565b60405180910390a2505050611c18565b6001600160a01b0385161580159061153b57506001600160a01b038416155b801561154657508215155b80156115525750601583105b15611798576000611564866000611ff4565b905060006115738560006120cf565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158a85856040518463ffffffff1660e01b81526004016115b29392919061282e565b602060405180830381865af41580156115cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f391906128c6565b90506040518060e00160405280826001600160a01b03168152602001858152602001896001600160a01b0316815260200160006001600160a01b03168152602001878152602001600081526020016001151581525060046000326001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550905050326001600160a01b03167fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f838584600160405161150c9493929190612957565b6001600160a01b038416158015906117b757506001600160a01b038516155b80156117c257508115155b80156117ce5750605b82105b15611a145760006117e0600086611ff4565b905060006117ef6000856120cf565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158a85856040518463ffffffff1660e01b815260040161182e9392919061282e565b602060405180830381865af415801561184b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186f91906128c6565b90506040518060e00160405280826001600160a01b0316815260200185815260200160006001600160a01b03168152602001886001600160a01b03168152602001600081526020018681526020016001151581525060046000326001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550905050326001600160a01b03167fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f838584600260405161150c9493929190612957565b6001600160a01b03851615801590611a3457506001600160a01b03841615155b8015611a3f57508215155b8015611a4b5750601583105b8015611a5657508115155b8015611a625750604782105b15611c0b576000611a738686611ff4565b90506000611a8185856120cf565b9050600073__$e0b3dea100c37e1c0d530933159e390817$__636ec6cf158a85856040518463ffffffff1660e01b8152600401611ac09392919061282e565b602060405180830381865af4158015611add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0191906128c6565b6040805160e0810182526001600160a01b0383811680835260208084018a81528e84168587019081528e851660608701908152608087018f815260a088018f8152600160c08a018181523260008181526004808b528e82209b82529a909952978c90209a518b546001600160a01b0319908116918c16919091178c559651918b0191909155935160028a0180548716918a1691909117905591516003808a018054909616919098161790935591519386019390935551600585015590516006909301805460ff1916931515939093179092559151929350917fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9161150c9186918891879190612957565b62adecf06000526004601cfd5b5050600160005550505050565b80516020820120600090611c38816121af565b9392505050565b6001546001600160a01b03163314611c885760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610528565b6001600160a01b038116611cd05760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610528565b60058190556040516001600160a01b038216907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090600090a250565b6000611d16611fc1565b5060009081526002602052604090205460a01c90565b60036020528160005260406000208181548110611d4857600080fd5b90600052602060002001600091509150505481565b600154600160a01b900460ff16611db65760405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152606401610528565b6001805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b6006543314610608577f4ca88867ffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005260046000fd5b6000604051600360208201528260408201526040812090508054611e4f57600091505b50919050565b600154600160a01b900460ff1615611e985760405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606401610528565b6001805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001611def565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106085760405162461bcd60e51b815260206004820152600860248201527f4241445f43414c4c0000000000000000000000000000000000000000000000006044820152606401610528565b3260009081526004602090815260408083206001600160a01b038516845290915290206006015460ff166003831181151715611f9a57634ca8886760e01b60005260046000fd5b505050565b6019810615156103e882111715611fbe5763e0e54ced6000526004601cfd5b50565b6005543314610608577f4ca88867ffffffffffffffffffffffffffffffffffffffffffffffffffffffff60005260046000fd5b606081158315166001811461200e57801561202c576120c8565b604051915060016000830152326020830152604082016040526120c8565b821560018114612041578015612065576120c6565b604051925060026000840152846020840152326040840152606083016040526120c6565b84156001811461207a57801561209e576120c4565b604051935060026000850152846020850152326040850152606084016040526120c4565b604051935060036000850152856020850152846040850152326060850152608084016040525b505b505b5092915050565b60608115831516600181146120e9578015612108576120c8565b60405191506001600083015260646020830152604082016040526120c8565b82156001811461211d578015612144576120c6565b604051925060026000840152846020840152846064036040840152606083016040526120c6565b841560018114612159578015612180576120c4565b604051935060026000850152846020850152846064036040850152606084016040526120c4565b505060408051600381526020810186905280820185905293909401606403606084015250506080810190915290565b604080518082018252601081527f67363d3d37363d34f03d5260086018f30000000000000000000000000000000060209182015290517fff00000000000000000000000000000000000000000000000000000000000000918101919091526bffffffffffffffffffffffff193060601b166021820152603581018290527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f60558201526000908190612278906075015b6040516020818303038152906040528051906020012090565b6040516135a560f21b60208201526bffffffffffffffffffffffff19606083901b166022820152600160f81b6036820152909150611c389060370161225f565b6000815180845260005b818110156122de576020818501810151868301820152016122c2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611c3860208301846122b8565b6001600160a01b0381168114611fbe57600080fd5b803561233181612311565b919050565b60006020828403121561234857600080fd5b8135611c3881612311565b6000806040838503121561236657600080fd5b823561237181612311565b9150602083013561238181612311565b809150509250929050565b803560ff8116811461233157600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126123c457600080fd5b813567ffffffffffffffff808211156123df576123df61239d565b604051601f8301601f19908116603f011681019082821181831017156124075761240761239d565b8160405283815286602085880101111561242057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006101208a8c03121561245f57600080fd5b6124688a61238c565b985060208a013567ffffffffffffffff8082111561248557600080fd5b6124918d838e016123b3565b995060408c01359150808211156124a757600080fd5b6124b38d838e016123b3565b985060608c01359150808211156124c957600080fd5b6124d58d838e016123b3565b975060808c0135965060a08c0135955060c08c01359150808211156124f957600080fd5b506125068c828d016123b3565b93505061251560e08b01612326565b91506101008a013590509295985092959850929598565b60006020828403121561253e57600080fd5b5035919050565b600080600080600060a0868803121561255d57600080fd5b853567ffffffffffffffff81111561257457600080fd5b612580888289016123b3565b955050602086013561259181612311565b935060408601356125a181612311565b94979396509394606081013594506080013592915050565b6000602082840312156125cb57600080fd5b813567ffffffffffffffff8111156125e257600080fd5b6125ee848285016123b3565b949350505050565b6000806040838503121561260957600080fd5b823561261481612311565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03868116825260a08201906004871061266857634e487b7160e01b600052602160045260246000fd5b8660208401528560408401528460608401528084166080840152509695505050505050565b634e487b7160e01b600052603260045260246000fd5b60e0815260006126b660e083018a6122b8565b82810360208401526126c8818a6122b8565b604084019890985250506001600160a01b039485166060820152928416608084015260a083019190915290911660c09091015292915050565b6000806040838503121561271457600080fd5b82519150602083015161238181612311565b60a08152600061273960a08301886122b8565b828103602084015261274b81886122b8565b60408401969096525050606081019290925260809091015292915050565b600061010080835261277d8184018c6122b8565b90508281036020840152612791818b6122b8565b6040840199909952505060608101959095526001600160a01b03938416608086015291831660a085015260c08401521660e09091015292915050565b60e0815260006127e060e083018a6122b8565b82810360208401526127f2818a6122b8565b6001600160a01b03988916604085015296881660608401525050928516608084015260a083019190915290921660c09092019190915292915050565b60608152600061284160608301866122b8565b82810360208481019190915285518083528682019282019060005b818110156128815784516001600160a01b03168352938301939183019160010161285c565b50508481036040860152855180825290820192508186019060005b818110156128b85782518552938301939183019160010161289c565b509298975050505050505050565b6000602082840312156128d857600080fd5b8151611c3881612311565b600081518084526020808501945080840160005b83811015612913578151875295820195908201906001016128f7565b509495945050505050565b600081518084526020808501945080840160005b838110156129135781516001600160a01b031687529582019590820190600101612932565b60808152600061296a60808301876128e3565b828103602084015261297c818761291e565b6001600160a01b039590951660408401525050606001529291505056fea164736f6c6343000810000a";

type MADFactory1155ConstructorParams =
  | [linkLibraryAddresses: MADFactory1155LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory1155__factory extends ContractFactory {
  constructor(...args: MADFactory1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory1155__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory1155LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$81eac6ad64409f164e0ded5e5f4fd77c1b\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC1155Deployer.sol:ERC1155MinimalDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fcf875cc5906322e911192ca0ce957b541\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC1155Deployer.sol:ERC1155BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1ff96cff56c59196c728166ea91a201dbc\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC1155Deployer.sol:ERC1155WhitelistDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c2351f5b298e4c3e8bff54cee5f2f72abf\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC1155Deployer.sol:ERC1155LazyDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory1155> {
    return super.deploy(
      _marketplace,
      _router,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADFactory1155>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _router,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory1155 {
    return super.attach(address) as MADFactory1155;
  }
  override connect(signer: Signer): MADFactory1155__factory {
    return super.connect(signer) as MADFactory1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory1155Interface {
    return new utils.Interface(_abi) as MADFactory1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory1155 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory1155;
  }
}

export interface MADFactory1155LibraryAddresses {
  ["contracts/lib/deployers/ERC1155Deployer.sol:ERC1155MinimalDeployer"]: string;
  ["contracts/lib/deployers/ERC1155Deployer.sol:ERC1155BasicDeployer"]: string;
  ["contracts/lib/deployers/ERC1155Deployer.sol:ERC1155WhitelistDeployer"]: string;
  ["contracts/lib/deployers/ERC1155Deployer.sol:ERC1155LazyDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
