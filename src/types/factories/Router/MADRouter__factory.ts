/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADRouter, MADRouterInterface } from "../../Router/MADRouter";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidType",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallersCollection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract FactoryVerifier",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "FactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "_amount",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeBurnErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeMintErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "madFactory",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_balance",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Address",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x34620000835762001505388190036080601f8201601f19168101906001600160401b03821190821017620000885760609282916040526080391262000083576200007360805162000050816200009e565b60a0516200005e816200009e565b60c051916200006d836200009e565b620000b0565b6040516113399081620001cc8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116036200008357565b913315620001bd5760008054336001600160a01b031991821681178355919491857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3670de0b6b3a76400008060035560045560018060a01b03809416809160015416176001557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138580a28015620001b057808391600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368480a28015620001a35790817f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646692600255169180a2565b63d92e233d83526004601cfd5b63d92e233d84526004601cfd5b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101775780630b78f9c01461017257806313af40351461016d57806321d501b914610168578063292af4be146101635780633bbed4a01461015e57806342b4d2fa1461015957806349fa55ad14610154578063583fef341461014f578063586ba7821461014a5780635bb478081461014557806366431b2d1461014057806366d003ac1461013b5780636a3a2c1b14610136578063785e9e86146101315780637f82d7e51461012c5780638da5cb5b14610127578063be29184f14610122578063bfa33dd81461011d578063e4d73e5914610118578063f12bd09e146101135763fde3704e1461010e57600080fd5b610f70565b610eb9565b610d2a565b610ca4565b610bea565b610bb6565b610b30565b610a9b565b610a32565b6109fe565b61091a565b6108a9565b61088b565b61086d565b610768565b6106fb565b61068a565b6105a0565b61047a565b61027b565b6101b2565b61018c565b600091031261018757565b600080fd5b3461018757600060031936011261018757602080526606726f7574657260465260606020f35b346101875760406003193601126101875760043560243573ffffffffffffffffffffffffffffffffffffffff600054163303610233577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191816004558060035561022e6040519283928360209093929193604081019481520152565b0390a1005b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff81160361018757565b34610187576020600319360112610187576004356102988161025d565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036102335780156102ec5780835516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b63d92e233d83526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161033c57604052565b6102f9565b6040810190811067ffffffffffffffff82111761033c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761033c57604052565b604051906103ab82610341565b565b67ffffffffffffffff811161033c5760051b60200190565b604435906fffffffffffffffffffffffffffffffff8216820361018757565b602435906fffffffffffffffffffffffffffffffff8216820361018757565b81601f820112156101875780359161041a836103ad565b92610428604051948561035d565b808452602092838086019260051b820101928311610187578301905b828210610452575050505090565b81356fffffffffffffffffffffffffffffffff81168103610187578152908301908301610444565b6080600319360112610187576004356104928161025d565b67ffffffffffffffff90602435828111610187576104b4903690600401610403565b6044359083821161018757366023830112156101875781600401356104d8816103ad565b926104e6604051948561035d565b81845260209160248386019160051b8301019136831161018757602401905b82821061053357505050506064359384116101875761052b610531943690600401610403565b92611126565b005b83809183356105418161025d565b815201910190610505565b6003196080910112610187576004356105648161025d565b906024356105718161025d565b906fffffffffffffffffffffffffffffffff906044358281168103610187579160643590811681036101875790565b6105a93661054c565b906105b384611229565b6105ce6fffffffffffffffffffffffffffffffff8216610fdf565b3403933485116106855773ffffffffffffffffffffffffffffffffffffffff1690813b15610187576040517ff204ed5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9490941660048501526fffffffffffffffffffffffffffffffff9081166024850152919091166044830152909160009183916064918391905af180156106805761067757005b61053190610328565b610fd3565b610fa4565b34610187576020600319360112610187576004356106a78161025d565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036102335780156102ec5780600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668280a280f35b346101875760206003193601126101875773ffffffffffffffffffffffffffffffffffffffff60043561072d8161025d565b166000526005602052604060002060ff60018254920154169061076460405192839283909291602090604083019483521515910152565b0390f35b6060600319360112610187576004356107808161025d565b6024359061078d8261025d565b6107956103c5565b61079e82611229565b6107b96fffffffffffffffffffffffffffffffff8216610fdf565b3403913483116106855773ffffffffffffffffffffffffffffffffffffffff16803b15610187576040517fa7fcf7b500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526fffffffffffffffffffffffffffffffff9091166024840152600091839190829081604481015b03925af180156106805761085a57005b8061086761053192610328565b8061017c565b34610187576000600319360112610187576020600454604051908152f35b34610187576000600319360112610187576020600354604051908152f35b34610187576020600319360112610187576004356108c68161025d565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036102335780156102ec5780600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368280a280f35b6109233661054c565b6109416fffffffffffffffffffffffffffffffff8295939516610fdf565b936000943403903482116106855773ffffffffffffffffffffffffffffffffffffffff86941691823b156109fa576040517f9762287000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90961660048701526fffffffffffffffffffffffffffffffff9182166024870152921660448501528391829081606481015b03925af18015610680576109ee575080f35b6109f790610328565b80f35b8480fd5b3461018757600060031936011261018757602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346101875760206003193601126101875773ffffffffffffffffffffffffffffffffffffffff600435610a648161025d565b166000526006602052604060002060ff60018254920154169061076460405192839283909291602090604083019483521515910152565b3461018757600060031936011261018757602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b90608060031983011261018757600435610ae88161025d565b91602435610af58161025d565b9167ffffffffffffffff6044358181116101875783610b1691600401610403565b9260643591821161018757610b2d91600401610403565b90565b610b3936610acf565b610b44849294611229565b610b4e845161105b565b936000943403903482116106855773ffffffffffffffffffffffffffffffffffffffff86941691823b156109fa576109dc95604051968795869485937f7cc22f70000000000000000000000000000000000000000000000000000000008552600485016110e5565b3461018757600060031936011261018757602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b604060031936011261018757600435610c028161025d565b610c0a6103e4565b610c256fffffffffffffffffffffffffffffffff8216610fdf565b3403913483116106855773ffffffffffffffffffffffffffffffffffffffff1690813b15610187576040517fbe29184f0000000000000000000000000000000000000000000000000000000081523360048201526fffffffffffffffffffffffffffffffff90911660248201529160009183918290816044810161084a565b610cad36610acf565b610cb8849294611229565b610cc28451610fdf565b936000943403903482116106855773ffffffffffffffffffffffffffffffffffffffff86941691823b156109fa576109dc95604051968795869485937f685d2ca5000000000000000000000000000000000000000000000000000000008552600485016110e5565b3461018757606060031936011261018757604435602435600435610d4d8361025d565b73ffffffffffffffffffffffffffffffffffffffff806000541633036102335783168015610e8f577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a193610dfe610e769260405190610dab82610341565b858252600160208301526000526005602052604060002060016020918351815501910151151560ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b610e3a610e0961039e565b858152600160208201529173ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b60016020918351815501910151151560ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b604080519182526020820192909252908190810161022e565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b604060031936011261018757600435610ed18161025d565b60243567ffffffffffffffff811161018757610ef1903690600401610403565b610efa82611229565b610f04815161105b565b3403913483116106855773ffffffffffffffffffffffffffffffffffffffff1690813b156101875760009161084a916040519485809481937f40475c1600000000000000000000000000000000000000000000000000000000835260206004840152602483019061109f565b3461018757600060031936011261018757602073ffffffffffffffffffffffffffffffffffffffff60075416604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040513d6000823e3d90fd5b9060035482810292818404149015171561068557818034106110315760008080809373ffffffffffffffffffffffffffffffffffffffff600254165af11561102357565b63b12d13eb6000526004601cfd5b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b9060045482810292818404149015171561068557818034106110315760008080809373ffffffffffffffffffffffffffffffffffffffff600254165af11561102357565b90815180825260208080930193019160005b8281106110bf575050505090565b83516fffffffffffffffffffffffffffffffff16855293810193928101926001016110b1565b916111189073ffffffffffffffffffffffffffffffffffffffff610b2d959316845260606020850152606084019061109f565b91604081840391015261109f565b91929061113283611229565b61113c815161105b565b3403913483116106855773ffffffffffffffffffffffffffffffffffffffff80941693843b15610187579291906040519586947fa4ddb2a30000000000000000000000000000000000000000000000000000000086526064860160606004880152825180915260848701926020809101926000905b83821061120c5750505050506111ee859360009795936111df8694600319938487830301602488015261109f565b9184830301604485015261109f565b03925af18015610680576111ff5750565b806108676103ab92610328565b8451811686528b99509482019493820193600191909101906111b1565b602073ffffffffffffffffffffffffffffffffffffffff604481600754169360405194859384927f53ce963f0000000000000000000000000000000000000000000000000000000084521660048301523360248301525afa908115610680576000916112c2575b501561129857565b60046040517f18fda3e7000000000000000000000000000000000000000000000000000000008152fd5b6020813d82116112fb575b816112da6020938361035d565b810103126112f757519081151582036112f4575038611290565b80fd5b5080fd5b3d91506112cd56fea26469706673582212200324bda16f8f94f2749e7043f047a65798e54903251ac082f7341a908068418f64736f6c63430008130033";

type MADRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter__factory extends ContractFactory {
  constructor(...args: MADRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter {
    return super.attach(address) as MADRouter;
  }
  override connect(signer: Signer): MADRouter__factory {
    return super.connect(signer) as MADRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouterInterface {
    return new utils.Interface(_abi) as MADRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter {
    return new Contract(address, _abi, signerOrProvider) as MADRouter;
  }
}
