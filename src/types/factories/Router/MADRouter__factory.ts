/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADRouter, MADRouterInterface } from "../../Router/MADRouter";
import type { NonPayableOverrides } from "../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidType",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallersCollection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract FactoryVerifier",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "FactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "_amount",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "_amount",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeBurnErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeMintErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "madFactory",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_balance",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_balance",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Address",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x34620000835762001d9e388190036080601f8201601f19168101906001600160401b03821190821017620000885760609282916040526080391262000083576200007360805162000050816200009e565b60a0516200005e816200009e565b60c051916200006d836200009e565b620000b0565b604051611bd29081620001cc8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116036200008357565b913315620001bd5760008054336001600160a01b031991821681178355919491857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3670de0b6b3a76400008060035560045560018060a01b03809416809160015416176001557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138580a28015620001b057808391600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368480a28015620001a35790817f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646692600255169180a2565b63d92e233d83526004601cfd5b63d92e233d84526004601cfd5b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101f75780630a7309b2146101f25780630b78f9c0146101ed5780630d9bd2aa146101e857806313af4035146101e357806318c9fb16146101de57806321d501b9146101d9578063292af4be146101d4578063395e37ec146101cf5780633bbed4a0146101ca57806342b4d2fa146101c557806349fa55ad146101c05780634a6e87a8146101bb578063583fef34146101b6578063586ba782146101b15780635bb47808146101ac57806366431b2d146101a757806366d003ac146101a25780636a3a2c1b1461019d578063785e9e86146101985780637f82d7e5146101935780638da5cb5b1461018e5780639a255db614610189578063b553384514610184578063bb05d8ef1461017f578063be29184f1461017a578063bfa33dd814610175578063e4d73e5914610170578063f12bd09e1461016b5763fde3704e1461016657600080fd5b6116dc565b61162c565b61149d565b611417565b61135d565b6112af565b6111c8565b61111d565b6110e9565b611063565b610fd1565b610f68565b610f34565b610e6e565b610dfd565b610ddf565b610dc1565b610d41565b610c3c565b610bcf565b610b5e565b610a89565b6109a5565b61085c565b610772565b610544565b610483565b6103d8565b6102ef565b61020c565b600091031261020757565b600080fd5b3461020757600060031936011261020757602080526606726f7574657260465260606020f35b73ffffffffffffffffffffffffffffffffffffffff81160361020757565b604435906fffffffffffffffffffffffffffffffff8216820361020757565b602435906fffffffffffffffffffffffffffffffff8216820361020757565b60031960a0910112610207576004356102a681610232565b906024356102b381610232565b906fffffffffffffffffffffffffffffffff9060443582811681036102075791606435908116810361020757906084356102ec81610232565b90565b73ffffffffffffffffffffffffffffffffffffffff6103386103103661028e565b610320859395979496929761184f565b6fffffffffffffffffffffffffffffffff8516611949565b501691823b15610207576040517ff204ed5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526fffffffffffffffffffffffffffffffff9182166024820152921660448301526000919082908290818381606481015b03925af180156103d3576103c7575080f35b6103d0906105f1565b80f35b611710565b346102075760406003193601126102075760043560243573ffffffffffffffffffffffffffffffffffffffff600054163303610459577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a19181600455806003556104546040519283928360209093929193604081019481520152565b0390a1005b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff6104c36104a43661028e565b6fffffffffffffffffffffffffffffffff829794969295939516611949565b501691823b15610207576040517f9762287000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526fffffffffffffffffffffffffffffffff9182166024820152921660448301526000919082908290818381606481016103b5565b346102075760206003193601126102075760043561056181610232565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036104595780156105b55780835516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b63d92e233d83526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161060557604052565b6105c2565b6040810190811067ffffffffffffffff82111761060557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761060557604052565b604051906106748261060a565b565b67ffffffffffffffff81116106055760051b60200190565b9080601f830112156102075760209082356106a881610676565b936106b66040519586610626565b81855260208086019260051b82010192831161020757602001905b8282106106df575050505090565b81356fffffffffffffffffffffffffffffffff811681036102075781529083019083016106d1565b9060a06003198301126102075760043561072081610232565b9160243561072d81610232565b9167ffffffffffffffff604435818111610207578361074e9160040161068e565b92606435918211610207576107659160040161068e565b906084356102ec81610232565b73ffffffffffffffffffffffffffffffffffffffff6107aa61079336610707565b6107a3859395979496929761184f565b8451611949565b501691823b1561020757604051928380927f685d2ca5000000000000000000000000000000000000000000000000000000008252816103b56000988997889460048501611762565b9080601f8301121561020757602090823561080c81610676565b9361081a6040519586610626565b81855260208086019260051b82010192831161020757602001905b828210610843575050505090565b838091833561085181610232565b815201910190610835565b6000608060031936011261094e5760043561087681610232565b67ffffffffffffffff9060243582811161094a5761089890369060040161068e565b604435838111610941576108b09036906004016107f2565b92606435908111610941576108c990369060040161068e565b906108d38361184f565b6108dd8151611aed565b3403903482116109455773ffffffffffffffffffffffffffffffffffffffff86941691823b15610941576103b595604051968795869485937fa4ddb2a3000000000000000000000000000000000000000000000000000000008552600485016117d2565b8480fd5b6117a3565b8380fd5b80fd5b60031960809101126102075760043561096981610232565b9060243561097681610232565b906fffffffffffffffffffffffffffffffff906044358281168103610207579160643590811681036102075790565b6109ae36610951565b906109b88461184f565b6109d36fffffffffffffffffffffffffffffffff8216611b37565b3403933485116109455773ffffffffffffffffffffffffffffffffffffffff1690813b15610207576040517ff204ed5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526fffffffffffffffffffffffffffffffff9081166024850152909116604483015290916000918391829081606481015b03925af180156103d357610a7e57005b610a87906105f1565b005b6000608060031936011261094e57600435610aa381610232565b8160243591610ab183610232565b73ffffffffffffffffffffffffffffffffffffffff610ace610250565b91610ae7606435610ade81610232565b6103208361184f565b5016803b15610b5a576040517fa7fcf7b500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526fffffffffffffffffffffffffffffffff90911660248401528290818381604481016103b5565b8280fd5b3461020757602060031936011261020757600435610b7b81610232565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036104595780156105b55780600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668280a280f35b346102075760206003193601126102075773ffffffffffffffffffffffffffffffffffffffff600435610c0181610232565b166000526005602052604060002060ff600182549201541690610c3860405192839283909291602090604083019483521515910152565b0390f35b606060031936011261020757600435610c5481610232565b60243590610c6182610232565b610c69610250565b610c728261184f565b610c8d6fffffffffffffffffffffffffffffffff8216611b37565b3403913483116109455773ffffffffffffffffffffffffffffffffffffffff16803b15610207576040517fa7fcf7b500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526fffffffffffffffffffffffffffffffff9091166024840152600091839190829081604481015b03925af180156103d357610d2e57005b80610d3b610a87926105f1565b806101fc565b73ffffffffffffffffffffffffffffffffffffffff610d79610d6236610707565b610d72859395979496929761184f565b8451611a86565b501691823b1561020757604051928380927f7cc22f70000000000000000000000000000000000000000000000000000000008252816103b56000988997889460048501611762565b34610207576000600319360112610207576020600454604051908152f35b34610207576000600319360112610207576020600354604051908152f35b3461020757602060031936011261020757600435610e1a81610232565b73ffffffffffffffffffffffffffffffffffffffff6000918183541633036104595780156105b55780600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368280a280f35b610e7736610951565b610e956fffffffffffffffffffffffffffffffff8295939516611b37565b936000943403903482116109455773ffffffffffffffffffffffffffffffffffffffff86941691823b15610941576040517f9762287000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90961660048701526fffffffffffffffffffffffffffffffff9182166024870152921660448501528391829081606481016103b5565b3461020757600060031936011261020757602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346102075760206003193601126102075773ffffffffffffffffffffffffffffffffffffffff600435610f9a81610232565b166000526006602052604060002060ff600182549201541690610c3860405192839283909291602090604083019483521515910152565b3461020757600060031936011261020757602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b9060806003198301126102075760043561101e81610232565b9160243561102b81610232565b9167ffffffffffffffff604435818111610207578361104c9160040161068e565b92606435918211610207576102ec9160040161068e565b61106c36611005565b61107784929461184f565b6110818451611aed565b936000943403903482116109455773ffffffffffffffffffffffffffffffffffffffff86941691823b15610941576103b595604051968795869485937f7cc22f7000000000000000000000000000000000000000000000000000000000855260048501611762565b3461020757600060031936011261020757602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b6000606060031936011261094e578060043561113881610232565b73ffffffffffffffffffffffffffffffffffffffff61115561026f565b9161116560443561032081610232565b501690813b156111c4576040517fbe29184f0000000000000000000000000000000000000000000000000000000081523360048201526fffffffffffffffffffffffffffffffff909116602482015291908290818381604481016103b5565b5050fd5b60a0600319360112610207576004356111e081610232565b67ffffffffffffffff6024358181116102075761120190369060040161068e565b916044358281116102075761121a9036906004016107f2565b916064359081116102075761124873ffffffffffffffffffffffffffffffffffffffff91369060040161068e565b9161126860843561125881610232565b6112618361184f565b8651611a86565b5016803b1561020757610a6e9360008094604051968795869485937fa4ddb2a3000000000000000000000000000000000000000000000000000000008552600485016117d2565b6000606060031936011261094e57806004356112ca81610232565b60243567ffffffffffffffff81116111c4576112ff73ffffffffffffffffffffffffffffffffffffffff91369060040161068e565b9161131860443561130f81610232565b610d728361184f565b501690813b156111c45782916103b5916040519485809481937f40475c160000000000000000000000000000000000000000000000000000000083526004830161183e565b60406003193601126102075760043561137581610232565b61137d61026f565b6113986fffffffffffffffffffffffffffffffff8216611b37565b3403913483116109455773ffffffffffffffffffffffffffffffffffffffff1690813b15610207576040517fbe29184f0000000000000000000000000000000000000000000000000000000081523360048201526fffffffffffffffffffffffffffffffff909116602482015291600091839182908160448101610d1e565b61142036611005565b61142b84929461184f565b6114358451611b37565b936000943403903482116109455773ffffffffffffffffffffffffffffffffffffffff86941691823b15610941576103b595604051968795869485937f685d2ca500000000000000000000000000000000000000000000000000000000855260048501611762565b34610207576060600319360112610207576044356024356004356114c083610232565b73ffffffffffffffffffffffffffffffffffffffff806000541633036104595783168015611602577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1936115716115e9926040519061151e8261060a565b858252600160208301526000526005602052604060002060016020918351815501910151151560ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b6115ad61157c610667565b858152600160208201529173ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b60016020918351815501910151151560ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b6040805191825260208201929092529081908101610454565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b6000604060031936011261094e5760043561164681610232565b60243567ffffffffffffffff8111610b5a5761166690369060040161068e565b906116708161184f565b61167a8251611aed565b3403913483116109455773ffffffffffffffffffffffffffffffffffffffff849216803b15610b5a576103b5916040519485809481937f40475c160000000000000000000000000000000000000000000000000000000083526004830161183e565b3461020757600060031936011261020757602073ffffffffffffffffffffffffffffffffffffffff60075416604051908152f35b6040513d6000823e3d90fd5b90815180825260208080930193019160005b82811061173c575050505090565b83516fffffffffffffffffffffffffffffffff168552938101939281019260010161172e565b916117959073ffffffffffffffffffffffffffffffffffffffff6102ec959316845260606020850152606084019061171c565b91604081840391015261171c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91939290936060830194606084528051809652608084019560208092019160005b82811061181457505050508461179591846102ec969703602086015261171c565b835173ffffffffffffffffffffffffffffffffffffffff16895297810197928101926001016117f3565b9060206102ec92818152019061171c565b602073ffffffffffffffffffffffffffffffffffffffff604481600754169360405194859384927f53ce963f0000000000000000000000000000000000000000000000000000000084521660048301523360248301525afa9081156103d3576000916118e8575b50156118be57565b60046040517f18fda3e7000000000000000000000000000000000000000000000000000000008152fd5b6020813d60201161191f575b8161190160209383610626565b8101031261191b575190811515820361094e5750386118b6565b5080fd5b3d91506118f4565b8181029291811591840414171561094557565b90816020910312610207575190565b91909160ff600161197a8573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b01541615611602576119b6906119b08473ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b54611927565b9173ffffffffffffffffffffffffffffffffffffffff809116906040517f70a08231000000000000000000000000000000000000000000000000000000008152336004820152602081602481865afa80156103d3578591600091611a57575b5010611a2d5761067491849160025416903390611b43565b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b611a79915060203d602011611a7f575b611a718183610626565b81019061193a565b38611a15565b503d611a67565b91909160ff6001611ab78573ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b01541615611602576119b6906119b08473ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b611af990600454611927565b90813410611a2d5760008080808573ffffffffffffffffffffffffffffffffffffffff600254165af115611b2957565b63b12d13eb6000526004601cfd5b611af990600354611927565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615611b8e576000606052604052565b637939f4246000526004601cfdfea264697066735822122021deeb0b36fbbd486e3fa3fa94626c123031075cd23f2ae65ee126760feba38e64736f6c63430008160033";

type MADRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter__factory extends ContractFactory {
  constructor(...args: MADRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _paymentTokenAddress: AddressLike,
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override deploy(
    _factory: AddressLike,
    _paymentTokenAddress: AddressLike,
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<
      MADRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MADRouter__factory {
    return super.connect(runner) as MADRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouterInterface {
    return new Interface(_abi) as MADRouterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MADRouter {
    return new Contract(address, _abi, runner) as unknown as MADRouter;
  }
}
