/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADRouter, MADRouterInterface } from "../../Router/MADRouter";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidType",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallersCollection",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract FactoryVerifier",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "FactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "_amount",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeBurnErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "burnPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeMintErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "madFactory",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "_balances",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_balance",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Address",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x3462000083576200143b388190036080601f8201601f19168101906001600160401b03821190821017620000885760609282916040526080391262000083576200007360805162000050816200009e565b60a0516200005e816200009e565b60c051916200006d836200009e565b620000b0565b6040516112739081620001c88239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116036200008357565b913315620001b95760008054336001600160a01b031991821681178355919491857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a36703782dace9d9000060035560018060a01b03809416809160015416176001557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138580a28015620001ac57808391600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368480a280156200019f5790817f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da646692600255169180a2565b63d92e233d83526004601cfd5b63d92e233d84526004601cfd5b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101975780630b78f9c01461019257806313af40351461018d57806321d501b914610188578063292af4be146101835780633bbed4a01461017e57806342b4d2fa1461017957806349fa55ad14610174578063583fef341461016f578063586ba7821461016a5780635bb478081461016557806366431b2d1461016057806366d003ac1461015b5780636a3a2c1b14610156578063785e9e86146101515780637f82d7e51461014c5780638da5cb5b14610147578063be29184f14610142578063bfa33dd81461013d578063c99aa4e514610138578063e427affe14610133578063e4d73e591461012e578063f12bd09e146101295763fde3704e1461012457600080fd5b610ea8565b610df1565b610d4e565b610d2b565b610d08565b610c82565b610bc8565b610b94565b610b0e565b610a79565b610a2e565b6109fa565b610916565b6108a5565b610887565b610869565b610764565b610719565b6106a8565b6105be565b610498565b6102c4565b6101d2565b6101ac565b60009103126101a757565b600080fd5b346101a75760006003193601126101a757602080526606726f7574657260465260606020f35b346101a75760406003193601126101a75760043560243573ffffffffffffffffffffffffffffffffffffffff60005416330361027c576706f05b59d3b2000081116722b1c8c1227a000083111761026e577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a19181600455806003556102696040519283928360209093929193604081019481520152565b0390a1005b632d8768f96000526004601cfd5b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff8116036101a757565b346101a75760206003193601126101a7576004356102e1816102a6565b73ffffffffffffffffffffffffffffffffffffffff60009181835416330361027c5780156103355780835516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b63d92e233d83526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161038557604052565b610342565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761038557604052565b67ffffffffffffffff81116103855760051b60200190565b604435906fffffffffffffffffffffffffffffffff821682036101a757565b602435906fffffffffffffffffffffffffffffffff821682036101a757565b81601f820112156101a757803591610438836103cb565b92610446604051948561038a565b808452602092838086019260051b8201019283116101a7578301905b828210610470575050505090565b81356fffffffffffffffffffffffffffffffff811681036101a7578152908301908301610462565b60806003193601126101a7576004356104b0816102a6565b67ffffffffffffffff906024358281116101a7576104d2903690600401610421565b604435908382116101a757366023830112156101a75781600401356104f6816103cb565b92610504604051948561038a565b81845260209160248386019160051b830101913683116101a757602401905b82821061055157505050506064359384116101a75761054961054f943690600401610421565b9261105e565b005b838091833561055f816102a6565b815201910190610523565b60031960809101126101a757600435610582816102a6565b9060243561058f816102a6565b906fffffffffffffffffffffffffffffffff9060443582811681036101a7579160643590811681036101a75790565b6105c73661056a565b906105d184611163565b6105ec6fffffffffffffffffffffffffffffffff8216610f17565b3403933485116106a35773ffffffffffffffffffffffffffffffffffffffff1690813b156101a7576040517ff204ed5900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9490941660048501526fffffffffffffffffffffffffffffffff9081166024850152919091166044830152909160009183916064918391905af1801561069e5761069557005b61054f90610371565b610f0b565b610edc565b346101a75760206003193601126101a7576004356106c5816102a6565b73ffffffffffffffffffffffffffffffffffffffff60009181835416330361027c5780156103355780600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668280a280f35b346101a75760206003193601126101a75773ffffffffffffffffffffffffffffffffffffffff60043561074b816102a6565b1660005260056020526020604060002054604051908152f35b60606003193601126101a75760043561077c816102a6565b60243590610789826102a6565b6107916103e3565b61079a82611163565b6107b56fffffffffffffffffffffffffffffffff8216610f17565b3403913483116106a35773ffffffffffffffffffffffffffffffffffffffff16803b156101a7576040517fa7fcf7b500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526fffffffffffffffffffffffffffffffff9091166024840152600091839190829081604481015b03925af1801561069e5761085657005b8061086361054f92610371565b8061019c565b346101a75760006003193601126101a7576020600454604051908152f35b346101a75760006003193601126101a7576020600354604051908152f35b346101a75760206003193601126101a7576004356108c2816102a6565b73ffffffffffffffffffffffffffffffffffffffff60009181835416330361027c5780156103355780600755167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368280a280f35b61091f3661056a565b61093d6fffffffffffffffffffffffffffffffff8295939516610f17565b936000943403903482116106a35773ffffffffffffffffffffffffffffffffffffffff86941691823b156109f6576040517f9762287000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90961660048701526fffffffffffffffffffffffffffffffff9182166024870152921660448501528391829081606481015b03925af1801561069e576109ea575080f35b6109f390610371565b80f35b8480fd5b346101a75760006003193601126101a757602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346101a75760206003193601126101a75773ffffffffffffffffffffffffffffffffffffffff600435610a60816102a6565b1660005260066020526020604060002054604051908152f35b346101a75760006003193601126101a757602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b9060806003198301126101a757600435610ac6816102a6565b91602435610ad3816102a6565b9167ffffffffffffffff6044358181116101a75783610af491600401610421565b926064359182116101a757610b0b91600401610421565b90565b610b1736610aad565b610b22849294611163565b610b2c8451610f93565b936000943403903482116106a35773ffffffffffffffffffffffffffffffffffffffff86941691823b156109f6576109d895604051968795869485937f7cc22f700000000000000000000000000000000000000000000000000000000085526004850161101d565b346101a75760006003193601126101a757602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b60406003193601126101a757600435610be0816102a6565b610be8610402565b610c036fffffffffffffffffffffffffffffffff8216610f17565b3403913483116106a35773ffffffffffffffffffffffffffffffffffffffff1690813b156101a7576040517fbe29184f0000000000000000000000000000000000000000000000000000000081523360048201526fffffffffffffffffffffffffffffffff909116602482015291600091839182908160448101610846565b610c8b36610aad565b610c96849294611163565b610ca08451610f17565b936000943403903482116106a35773ffffffffffffffffffffffffffffffffffffffff86941691823b156109f6576109d895604051968795869485937f685d2ca50000000000000000000000000000000000000000000000000000000085526004850161101d565b346101a75760006003193601126101a75760206040516722b1c8c1227a00008152f35b346101a75760006003193601126101a75760206040516706f05b59d3b200008152f35b346101a75760606003193601126101a757600435604435602435610d71826102a6565b73ffffffffffffffffffffffffffffffffffffffff9260009380855416330361027c577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a19316845260056020528060408520556006602052816040852055610deb6040519283928360209093929193604081019481520152565b0390a180f35b60406003193601126101a757600435610e09816102a6565b60243567ffffffffffffffff81116101a757610e29903690600401610421565b610e3282611163565b610e3c8151610f93565b3403913483116106a35773ffffffffffffffffffffffffffffffffffffffff1690813b156101a757600091610846916040519485809481937f40475c16000000000000000000000000000000000000000000000000000000008352602060048401526024830190610fd7565b346101a75760006003193601126101a757602073ffffffffffffffffffffffffffffffffffffffff60075416604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040513d6000823e3d90fd5b906003548281029281840414901517156106a35781803410610f695760008080809373ffffffffffffffffffffffffffffffffffffffff600254165af115610f5b57565b63b12d13eb6000526004601cfd5b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b906004548281029281840414901517156106a35781803410610f695760008080809373ffffffffffffffffffffffffffffffffffffffff600254165af115610f5b57565b90815180825260208080930193019160005b828110610ff7575050505090565b83516fffffffffffffffffffffffffffffffff1685529381019392810192600101610fe9565b916110509073ffffffffffffffffffffffffffffffffffffffff610b0b9593168452606060208501526060840190610fd7565b916040818403910152610fd7565b91929061106a83611163565b6110748151610f93565b3403913483116106a35773ffffffffffffffffffffffffffffffffffffffff80941693843b156101a7579291906040519586947fa4ddb2a30000000000000000000000000000000000000000000000000000000086526064860160606004880152825180915260848701926020809101926000905b8382106111465750505050506111268593600097959361111786946003199384878303016024880152610fd7565b91848303016044850152610fd7565b03925af1801561069e576111375750565b8061086361114492610371565b565b8451811686528b99509482019493820193600191909101906110e9565b602073ffffffffffffffffffffffffffffffffffffffff604481600754169360405194859384927f53ce963f0000000000000000000000000000000000000000000000000000000084521660048301523360248301525afa90811561069e576000916111fc575b50156111d257565b60046040517f18fda3e7000000000000000000000000000000000000000000000000000000008152fd5b6020813d8211611235575b816112146020938361038a565b81010312611231575190811515820361122e5750386111ca565b80fd5b5080fd5b3d915061120756fea2646970667358221220282ca345cf0e7ee4a0bb777e61b9939b89776140bcd5cf215a91c5aec80bf15764736f6c63430008130033";

type MADRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter__factory extends ContractFactory {
  constructor(...args: MADRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter {
    return super.attach(address) as MADRouter;
  }
  override connect(signer: Signer): MADRouter__factory {
    return super.connect(signer) as MADRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouterInterface {
    return new utils.Interface(_abi) as MADRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter {
    return new Contract(address, _abi, signerOrProvider) as MADRouter;
  }
}
