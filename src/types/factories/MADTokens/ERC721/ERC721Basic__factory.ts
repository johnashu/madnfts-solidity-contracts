/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  ContractTypes,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { NonPayableOverrides } from "../../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct ContractTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001b3576200249b803803806200001f81620001f5565b928339810190602081830312620001b35780516001600160401b0391828211620001b357019261014084840312620001b3576200005b620001ce565b918451818111620001b35784620000749187016200021b565b83526020850151818111620001b35784620000919187016200021b565b60208401526040850151908111620001b3576200013293620000b59186016200021b565b60408301526060840151606083015260808401516080830152620000dc60a085016200028d565b60a0830152620000ef60c08501620002a2565b60c08301526200010260e085016200028d565b60e08301526200012881610100956200011d8782016200028d565b87860152016200028d565b90820152620002b7565b604051611f3d91826200055e83396080518281816107a50152610d32015260a051828181610f600152611d64015260c0518281816107e701528181610849015281816108ae0152818161159401528181611b3b0152611bb7015260e051828181610d8201528181611b5e0152611e4c0152518181816114590152611c280152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001ef57604052565b620001b8565b6040519190601f01601f191682016001600160401b03811183821017620001ef57604052565b919080601f84011215620001b35782516001600160401b038111620001ef5760209062000251601f8201601f19168301620001f5565b92818452828287010111620001b35760005b8181106200027957508260009394955001015290565b858101830151848201840152820162000263565b51906001600160a01b0382168203620001b357565b51906001600160601b0382168203620001b357565b60a08101805161010080840151606085015160e086015161012087015160c0880180519098966200031b956001600160a01b0391821695938216948216939291169062000314906001600160601b03165b6001600160601b031690565b94620003fe565b60808201640100000000815111620003ec5751620003ea94602094620003b193620003a5938493620003739262000308926001600160801b03169052620003666040890151620004b0565b516001600160601b031690565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2620003e28151620004eb565b015162000524565b565b604051636ad9efbd60e11b8152600490fd5b93909291946080528115620004a2578015620004a25781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e0819052620004905760a052565b600160ff19600554161760055560a052565b63d92e233d6000526004601cfd5b805180601f10620004e95760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfe5b805180601f10620004e95760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565b805180601f10620004e95760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146102b257806305e39833146102ad57806306fdde03146102a8578063081812fc146102a3578063095ea7b31461029e57806318160ddd1461020857806322ab47a11461029957806323b872dd146102945780632a55205a1461028f5780633ccfd60b1461028a5780633cd8045e1461028557806340475c161461028057806342842e0e1461027b57806355f804b3146102765780636352211e1461027157806366c879a91461026c57806369d3e20e146102675780636c0360eb1461026257806370a082311461025d578063769da94314610258578063785e9e8614610253578063879fbedf1461024e578063893d20e8146102495780638c01d30814610244578063911f51f91461023f57806395d89b411461023a5780639659867e14610235578063a035b1fe14610230578063a22cb4651461022b578063a701602314610226578063a7fcf7b514610221578063b0f479a11461021c578063b88d4fde14610217578063be29184f14610212578063c87b56dd1461020d578063cb4f1c1814610208578063d139e61214610203578063d5abeb01146101fe578063d6ed2663146101f9578063e1c38ed9146101f4578063e985e9c5146101ef5763f4f3b200146101ea57600080fd5b611503565b6114be565b6114a0565b61147d565b611430565b611406565b6106de565b611279565b611229565b611171565b611153565b611098565b611008565b610f83565b610f48565b610f27565b610e97565b610e74565b610e56565b610e36565b610db5565b610d55565b610d1a565b610cb0565b610c2e565b610bd6565b610b4b565b610b0f565b610a1d565b6109a2565b6108d2565b610881565b610810565b61078a565b610776565b61070e565b610606565b61053f565b6104aa565b6103ba565b346103b55760206003193601126103b5576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103b557807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561038b575b8115610361575b8115610337575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150143861032c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610325565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061031e565b600080fd5b346103b55760006003193601126103b557602060ff60055460081c166040519015158152f35b60005b8381106103f35750506000910152565b81810151838201526020016103e3565b60208060a052606051908160c05260005b82811061044f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f82600060e09485015201160190565b608081015160e08201528101610414565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104a381518092816020880152602088880191016103e0565b0116010190565b346103b55760006003193601126103b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061053a610403565b0160a0f35b346103b55760206003193601126103b557600435806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010173ffffffffffffffffffffffffffffffffffffffff80825416156105b257602091600101549060405191168152f35b63ceea21b66000526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103b557565b60406003193601126103b55761061a6105c0565b60243573ffffffffffffffffffffffffffffffffffffffff918216600092828452337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c526020842083018301908154169081156106d1578290823314331517156106ad575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b90508185526030600c2054156106c4578290610682565b634b6e7f1885526004601cfd5b63ceea21b685526004601cfd5b346103b55760006003193601126103b55760206006546fffffffffffffffffffffffffffffffff16604051908152f35b346103b55760006003193601126103b557602060ff60055460101c166040519015158152f35b60031960609101126103b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103b5579160243590811681036103b5579060443590565b61078861078236610734565b91611622565b005b346103b55760406003193601126103b55760406127106107cc7f00000000000000000000000000000000000000000000000000000000000000006024356117a5565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b346103b55760008060031936011261087e5760015433600c1b036108715761086e4773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611d44565b80f35b631648fd0190526004601cfd5b80fd5b346103b55760006003193601126103b557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103b55760043567ffffffffffffffff8082116103b557366023830112156103b55781600401359081116103b55760246005923660248460051b830101116103b557600654806fffffffffffffffffffffffffffffffff1680858103119015176109945783810390811161098f5760065560005b83811061095757005b8061098961098461096f866001958a1b8701016117b8565b6fffffffffffffffffffffffffffffffff1690565b61189d565b0161094e565b611776565b63ce3a3d376000526004601cfd5b6109ab36610734565b6109b6818385611622565b813b6109be57005b60405191602083019383851067ffffffffffffffff8611176109ea5761078894604052600084526119a7565b6117c5565b9181601f840112156103b55782359167ffffffffffffffff83116103b557602083818601950101116103b557565b346103b55760206003193601126103b55760043567ffffffffffffffff81116103b557610a4e9036906004016109ef565b9060015433600c1b03610b015760ff60055460081c16610ad75781601f10610ad55760243560011b604435177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc558160405192839283378101600081520390207ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346103b55760206003193601126103b5576020610b2d600435611835565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103b55760008060031936011261087e5760015433600c1b03610871576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b6fffffffffffffffffffffffffffffffff8116036103b557565b60206003193601126103b557600435610bee81610bbc565b60ff60025416610c045761078890339033611a6b565b60046040517ff56dc29c000000000000000000000000000000000000000000000000000000008152fd5b346103b55760006003193601126103b557610cac610ca06060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c166060521660805260a0604052565b60405191829182610460565b0390f35b346103b55760206003193601126103b557610cc96105c0565b8015610d0c577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52600052602063ffffffff601c600c205416604051908152f35b638f4eb6046000526004601cfd5b346103b55760006003193601126103b55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103b55760006003193601126103b557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103b557565b346103b55760206003193601126103b557610dce610da6565b60015433600c1b03610b01576005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff62ff000083151560101b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346103b55760006003193601126103b557600154600c1c60005260206000f35b346103b55760006003193601126103b5576020600454604051908152f35b346103b55760006003193601126103b557602060ff600254166040519015158152f35b346103b55760006003193601126103b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061053a610403565b346103b55760006003193601126103b557602060065460801c604051908152f35b346103b55760006003193601126103b55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103b55760406003193601126103b557610f9c6105c0565b602435908115158092036103b55773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a0000000060085233600052806030600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346103b55760206003193601126103b5576110216105c0565b611029611c0b565b33600c1b9060009182546001548032600c1b1480928414169214161461108b57801561107e5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63d92e233d82526004601cfd5b631648fd0182526004601cfd5b60406003193601126103b5576110ac6105c0565b602435906110b982610bbc565b6110c1611c0b565b33600c1b91600054926001936001548032600c1b14809284141692141614610b01576fffffffffffffffffffffffffffffffff611135911661110281611c15565b906001600654928360801c93818386019501918260801b916fffffffffffffffffffffffffffffffff1601176006550190565b91905b82811061114157005b8061114d859284611c65565b01611138565b346103b55760008060031936011261087e578060209154600c1c8152f35b60806003193601126103b5576111856105c0565b61118d6105e3565b906044356064359267ffffffffffffffff938481116103b5576111b49036906004016109ef565b9390946111c2848484611622565b823b6111ca57005b84116109ea576040519361120660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601866117f4565b80855236818701116103b5576020816000926107889883890137860101526119a7565b60406003193601126103b55761123d6105c0565b6024359061124a82610bbc565b611252611c0b565b33600c1b6000546001548032600c1b14809284141692141614610b01576107889181611a6b565b346103b55760206003193601126103b55760043560065460801c81116113dc576112f76060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c166060521660805260a0604052565b60405160808101604052607f810192600a8060309281810660300187530491825b6113a557610cac61136a610ca088886113996113708a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09586810192030181526040519687946020860190611886565b90611886565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826117f4565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939601958181068301875304919082611318565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103b55760206003193601126103b55761141f610da6565b60015433600c1b03610b0157600255005b346103b55760006003193601126103b55760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103b55760006003193601126103b557602060ff600554166040519015158152f35b346103b55760006003193601126103b5576020600354604051908152f35b346103b55760406003193601126103b5576114d76105c0565b6114df6105e3565b601c52670a5a2e7a0000000060085260005260206030600c20546040519015158152f35b346103b55760206003193601126103b55761151c6105c0565b60015433600c1b03610b015773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa90811561161d576000809360449360109360209784926115ee575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d156001600051141716156115e057005b6390b8ec186000526004601cfd5b61160f919250883d8a11611616575b61160781836117f4565b810190611d29565b9038611591565b503d6115fd565b611d38565b60008381527f7d8825530a5a2e7a0000000000000000000000000000000000000000000000003317601c9081526020822085018501805473ffffffffffffffffffffffffffffffffffffffff9586169594851694811680861481021561175a5750851561174e5784845283826001018054803314883314171561172c575b611724575b505085851818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815401905583825280600c2060018154019163ffffffff8316156117185750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b6004906301336cea8552fd5b5583386116a5565b9091506030600c205415611742579085916116a0565b600485634b6e7f188852fd5b60048363ea553b348652fd5b83856004921561176d5763a11481009052fd5b63ceea21b69052fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181029291811591840414171561098f57565b356117c281610bbc565b90565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109ea57604052565b73ffffffffffffffffffffffffffffffffffffffff90806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010154169081156105b257565b90611899602092828151948592016103e0565b0190565b6118a681611835565b5060008181527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208201820180549073ffffffffffffffffffffffffffffffffffffffff821691821561199a57829081855284836001018054801560011715611973575b61196b575b5050189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b558438611915565b91509192506030600c20541561198d578492918691611910565b634b6e7f1886526004601cfd5b63ceea21b684526004601cfd5b60209173ffffffffffffffffffffffffffffffffffffffff9360405194859363150b7a0285523386860152166040840152606083015260808083015284518095818060a0860152611a57575b505060a4600095019085601c8401915af115611a41575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611a345750565b63d1a57ed690526004601cfd5b3d611a4e57818152611a0a565b503d81803e3d90fd5b818560c08601920160045afa5084386119f3565b91906fffffffffffffffffffffffffffffffff16611a8881611c15565b6005549160ff8360101c1615611be157611aa29082611d62565b9182611b04575b50611ae29150906001600654928360801c93818386019501918260801b916fffffffffffffffffffffffffffffffff1601176006550190565b91905b828110611af157505050565b80611afe60019284611c65565b01611ae5565b60ff1615611b885760045482810180911161098f57611ae292611b829160045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000611eae565b38611aa9565b60035482810180911161098f57611ae292611bdc9160035573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611d44565b611b82565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b60025415610b0157565b6fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169060065460801c0111611c5757565b63d05cb6096000526004601cfd5b73ffffffffffffffffffffffffffffffffffffffff168015611d1b5760008281527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208301830180548060601b611d0e5783179055818152601c600c2060018154019063ffffffff821615611d0157557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea83526004601cfd5b63c991cbb183526004601cfd5b63ea553b346000526004601cfd5b908160209103126103b5575190565b6040513d6000823e3d90fd5b600080809381935af115611d5457565b63b12d13eb6000526004601cfd5b7f000000000000000000000000000000000000000000000000000000000000000092918315611ea657611d9e611d9a60055460ff1690565b1590565b15611de25750611db134915b82946117a5565b03611db857565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201523060248201526020818060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa801561161d57611db191600091611e87575b5091611daa565b611ea0915060203d6020116116165761160781836117f4565b38611e80565b506000925050565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615611ef9576000606052604052565b637939f4246000526004601cfdfea264697066735822122003ecd300fe7f1210aa09394b63fec5ac16d7edccca5f6feb360a5e7b0bc2f4b764736f6c63430008160033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: ContractTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: ContractTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC721Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Basic__factory {
    return super.connect(runner) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new Interface(_abi) as ERC721BasicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Basic {
    return new Contract(address, _abi, runner) as unknown as ERC721Basic;
  }
}
