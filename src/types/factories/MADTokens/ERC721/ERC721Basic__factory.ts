/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  Types,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct Types.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001b357620024f3803803806200001f81620001f5565b928339810190602081830312620001b35780516001600160401b0391828211620001b357019261014084840312620001b3576200005b620001ce565b918451818111620001b35784620000749187016200021b565b83526020850151818111620001b35784620000919187016200021b565b60208401526040850151908111620001b3576200013293620000b59186016200021b565b60408301526060840151606083015260808401516080830152620000dc60a085016200028d565b60a0830152620000ef60c08501620002a2565b60c08301526200010260e085016200028d565b60e08301526200012881610100956200011d8782016200028d565b87860152016200028d565b90820152620002b7565b604051611f9591826200055e83396080518281816107a50152610d40015260a051828181610f6e015261195b015260c0518281816107e701528181610849015281816108ae015281816115bf0152818161173301526117af015260e051828181610d90015281816117560152611a4701525181818161148401526118230152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001ef57604052565b620001b8565b6040519190601f01601f191682016001600160401b03811183821017620001ef57604052565b919080601f84011215620001b35782516001600160401b038111620001ef5760209062000251601f8201601f19168301620001f5565b92818452828287010111620001b35760005b8181106200027957508260009394955001015290565b858101830151848201840152820162000263565b51906001600160a01b0382168203620001b357565b51906001600160601b0382168203620001b357565b60a08101805161010080840151606085015160e086015161012087015160c0880180519098966200031b956001600160a01b0391821695938216948216939291169062000314906001600160601b03165b6001600160601b031690565b94620003fe565b60808201640100000000815111620003ec5751620003ea94602094620003b193620003a5938493620003739262000308926001600160801b03169052620003666040890151620004b0565b516001600160601b031690565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2620003e28151620004eb565b015162000524565b565b604051636ad9efbd60e11b8152600490fd5b93909291946080528115620004a2578015620004a25781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e0819052620004905760a052565b600160ff19600554161760055560a052565b63d92e233d6000526004601cfd5b805180601f10620004e95760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfe5b805180601f10620004e95760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565b805180601f10620004e95760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146102b257806305e39833146102ad57806306fdde03146102a8578063081812fc146102a3578063095ea7b31461029e57806318160ddd1461020857806322ab47a11461029957806323b872dd146102945780632a55205a1461028f5780633ccfd60b1461028a5780633cd8045e1461028557806340475c161461028057806342842e0e1461027b57806355f804b3146102765780636352211e1461027157806366c879a91461026c57806369d3e20e146102675780636c0360eb1461026257806370a082311461025d578063769da94314610258578063785e9e8614610253578063879fbedf1461024e578063893d20e8146102495780638c01d30814610244578063911f51f91461023f57806395d89b411461023a5780639659867e14610235578063a035b1fe14610230578063a22cb4651461022b578063a701602314610226578063a7fcf7b514610221578063b0f479a11461021c578063b88d4fde14610217578063be29184f14610212578063c87b56dd1461020d578063cb4f1c1814610208578063d139e61214610203578063d5abeb01146101fe578063d6ed2663146101f9578063e1c38ed9146101f4578063e985e9c5146101ef5763f4f3b200146101ea57600080fd5b61152e565b6114e9565b6114cb565b6114a8565b61145b565b611431565b6106de565b6112a6565b611256565b61119e565b611180565b6110a6565b611016565b610f91565b610f56565b610f35565b610ea5565b610e82565b610e64565b610e44565b610dc3565b610d63565b610d28565b610cbe565b610c3d565b610be5565b610b5a565b610b1e565b610a2c565b6109b1565b6108d2565b610881565b610810565b61078a565b610776565b61070e565b610606565b61053f565b6104aa565b6103ba565b346103b55760206003193601126103b5576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103b557807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561038b575b8115610361575b8115610337575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150143861032c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610325565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061031e565b600080fd5b346103b55760006003193601126103b557602060ff60055460081c166040519015158152f35b60005b8381106103f35750506000910152565b81810151838201526020016103e3565b60208060a052606051908160c05260005b82811061044f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f82600060e09485015201160190565b608081015160e08201528101610414565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104a381518092816020880152602088880191016103e0565b0116010190565b346103b55760006003193601126103b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061053a610403565b0160a0f35b346103b55760206003193601126103b557600435806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010173ffffffffffffffffffffffffffffffffffffffff80825416156105b257602091600101549060405191168152f35b63ceea21b66000526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103b557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103b557565b60406003193601126103b55761061a6105c0565b60243573ffffffffffffffffffffffffffffffffffffffff918216600092828452337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c526020842083018301908154169081156106d1578290823314331517156106ad575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b90508185526030600c2054156106c4578290610682565b634b6e7f1885526004601cfd5b63ceea21b685526004601cfd5b346103b55760006003193601126103b55760206006546fffffffffffffffffffffffffffffffff16604051908152f35b346103b55760006003193601126103b557602060ff60055460101c166040519015158152f35b60031960609101126103b55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103b5579160243590811681036103b5579060443590565b61078861078236610734565b91611b02565b005b346103b55760406003193601126103b55760406127106107cc7f0000000000000000000000000000000000000000000000000000000000000000602435611916565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b346103b55760008060031936011261087e5760015433600c1b036108715761086e4773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ee8565b80f35b631648fd0190526004601cfd5b80fd5b346103b55760006003193601126103b557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103b55767ffffffffffffffff6004358181116103b557366023820112156103b55780600401359182116103b5576024600591368285851b830101116103b557600654806fffffffffffffffffffffffffffffffff1680868103119015176109a35784810390811161099e5760065560009291905b848410610960576107888585611929565b9091928061099561099061097b86600195891b870101611803565b6fffffffffffffffffffffffffffffffff1690565b611d1a565b0192919061094f565b611860565b63ce3a3d376000526004601cfd5b6109ba36610734565b6109c5818385611b02565b813b6109cd57005b60405191602083019383851067ffffffffffffffff8611176109f9576107889460405260008452611e24565b6118a6565b9181601f840112156103b55782359167ffffffffffffffff83116103b557602083818601950101116103b557565b346103b55760206003193601126103b55760043567ffffffffffffffff81116103b557610a5d9036906004016109fe565b9060015433600c1b03610b105760ff60055460081c16610ae65781601f10610ae45760243560011b604435177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc558160405192839283378101600081520390207ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346103b55760206003193601126103b5576020610b3c600435611ab1565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103b55760008060031936011261087e5760015433600c1b03610871576101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b6fffffffffffffffffffffffffffffffff8116036103b557565b60206003193601126103b557600435610bfd81610bcb565b60ff60025416610c13576107889033903361164d565b60046040517ff56dc29c000000000000000000000000000000000000000000000000000000008152fd5b346103b55760006003193601126103b557610cba610cae6060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405191829182610460565b0390f35b346103b55760206003193601126103b557610cd76105c0565b8015610d1a577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52600052602063ffffffff601c600c205416604051908152f35b638f4eb6046000526004601cfd5b346103b55760006003193601126103b55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103b55760006003193601126103b557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103b557565b346103b55760206003193601126103b557610ddc610db4565b60015433600c1b03610b10576005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff62ff000083151560101b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346103b55760006003193601126103b557600154600c1c60005260206000f35b346103b55760006003193601126103b5576020600454604051908152f35b346103b55760006003193601126103b557602060ff600254166040519015158152f35b346103b55760006003193601126103b5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061053a610403565b346103b55760006003193601126103b557602060065460801c604051908152f35b346103b55760006003193601126103b55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103b55760406003193601126103b557610faa6105c0565b602435908115158092036103b55773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a0000000060085233600052806030600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346103b55760206003193601126103b55761102f6105c0565b611037611aa7565b33600c1b9060009182546001548032600c1b1480928414169214161461109957801561108c5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63d92e233d82526004601cfd5b631648fd0182526004601cfd5b60406003193601126103b5576110ba6105c0565b602435906110c782610bcb565b6110cf611aa7565b33600c1b9060009283549260019384548032600c1b14809284141692141614611173576fffffffffffffffffffffffffffffffff611140911661111181611810565b600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b909280805b61114d578580f35b15611164575b848161115f8686611c56565b611145565b81818501940361115357808580f35b631648fd0184526004601cfd5b346103b55760008060031936011261087e578060209154600c1c8152f35b60806003193601126103b5576111b26105c0565b6111ba6105e3565b906044356064359267ffffffffffffffff938481116103b5576111e19036906004016109fe565b9390946111ef848484611b02565b823b6111f757005b84116109f9576040519361123360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601866118d5565b80855236818701116103b557602081600092610788988389013786010152611e24565b60406003193601126103b55761126a6105c0565b6024359061127782610bcb565b61127f611aa7565b33600c1b6000546001548032600c1b14809284141692141614610b1057610788918161164d565b346103b55760206003193601126103b55760043560065460801c8111611407576113236060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405160808101604052607f810192600a80603092818106840187530491825b6113d057610cba611395610cae88886113c461139b8a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0958681019203018152604051968794602086019061188f565b9061188f565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826118d5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939601958181068301875304919082611343565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103b55760206003193601126103b55761144a610db4565b60015433600c1b03610b1057600255005b346103b55760006003193601126103b55760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103b55760006003193601126103b557602060ff600554166040519015158152f35b346103b55760006003193601126103b5576020600354604051908152f35b346103b55760406003193601126103b5576115026105c0565b61150a6105e3565b601c52670a5a2e7a0000000060085260005260206030600c20546040519015158152f35b346103b55760206003193601126103b5576115476105c0565b60015433600c1b03610b105773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa90811561164857600080936044936010936020978492611619575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560016000511417161561160b57005b6390b8ec186000526004601cfd5b61163a919250883d8111611641575b61163281836118d5565b81019061193e565b90386115bc565b503d611628565b61194d565b91906fffffffffffffffffffffffffffffffff1661166a81611810565b6005549160ff8360101c16156117d9576116849082611959565b91826116fc575b506116c09150600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b919091600180805b6116d4575b5050505050565b156116ec575b6000816116e78686611c56565b6116c8565b8181850194036116da57806116cd565b60ff16156117805760045482810180911161099e576116c09261177a9160045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000611f06565b3861168b565b60035482810180911161099e576116c0926117d49160035573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ee8565b61177a565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b3561180d81610bcb565b90565b6fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169060065460801c011161185257565b63d05cb6096000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906118a2602092828151948592016103e0565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109f957604052565b8181029291811591840414171561099e57565b1061193057565b63dfb035c96000526004601cfd5b908160209103126103b5575190565b6040513d6000823e3d90fd5b7f000000000000000000000000000000000000000000000000000000000000000092918315611a9f5760009061199861199460055460ff1690565b1590565b156119dd5750506119ac34915b8294611916565b036119b357565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201523060248201526020818060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115611648576119ac9291611a81575b50916119a5565b611a99915060203d81116116415761163281836118d5565b38611a7a565b506000925050565b60025415610b1057565b73ffffffffffffffffffffffffffffffffffffffff90806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010154169081156105b257565b60008381527f7d8825530a5a2e7a0000000000000000000000000000000000000000000000003317601c9081526020822085018501805473ffffffffffffffffffffffffffffffffffffffff95861695948516948116808614810215611c3a57508515611c2e57848452838260010180548033148833141715611c0c575b611c04575b505085851818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815401905583825280600c2060018154019163ffffffff831615611bf85750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b6004906301336cea8552fd5b558338611b85565b9091506030600c205415611c2257908591611b80565b600485634b6e7f188852fd5b60048363ea553b348652fd5b838560049215611c4d5763a11481009052fd5b63ceea21b69052fd5b73ffffffffffffffffffffffffffffffffffffffff168015611d0c5760008281527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208301830180548060601b611cff5783179055818152601c600c2060018154019063ffffffff821615611cf257557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea83526004601cfd5b63c991cbb183526004601cfd5b63ea553b346000526004601cfd5b611d2381611ab1565b5060008181527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208201820180549073ffffffffffffffffffffffffffffffffffffffff8216918215611e1757829081855284836001018054801560011715611df0575b611de8575b5050189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b558438611d92565b91509192506030600c205415611e0a578492918691611d8d565b634b6e7f1886526004601cfd5b63ceea21b684526004601cfd5b60209173ffffffffffffffffffffffffffffffffffffffff9360405194859363150b7a0285523386860152166040840152606083015260808083015284518095818060a0860152611ed4575b505060a4600095019085601c8401915af115611ebe575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611eb15750565b63d1a57ed690526004601cfd5b3d611ecb57818152611e87565b503d81803e3d90fd5b818560c08601920160045afa508438611e70565b600080809381935af115611ef857565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615611f51576000606052604052565b637939f4246000526004601cfdfea2646970667358221220d876429d417c7c4dd7f7e6e6a646463975afcaa83902fe25d144087b5c3e13f764736f6c63430008130033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(args, overrides || {}) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, overrides || {});
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
