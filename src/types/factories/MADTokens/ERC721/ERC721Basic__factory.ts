/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC721/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxLoopAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPublicMintLimit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "PublicMintLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "mintedByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setPublicMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001b357620029c6803803806200001f81620001f2565b928339810190602081830312620001b35780516001600160401b0391828211620001b357019261014084840312620001b3576200005b620001cb565b918451818111620001b357846200007491870162000218565b83526020850151818111620001b357846200009191870162000218565b60208401526040850151908111620001b3576200013293620000b591860162000218565b60408301526060840151606083015260808401516080830152620000dc60a0850162000288565b60a0830152620000ef60c085016200029d565b60c08301526200010260e0850162000288565b60e08301526200012881610100956200011d87820162000288565b878601520162000288565b90820152620002b2565b6040516123079182620006bf83396080518281816107cc0152610fa9015260a05182818161087c015281816108da0152818161181d0152818161207d0152612136015260c051828181610ff8015281816120c4015261225f015260e0518281816116800152818161202b01526121920152518181816116450152611eae0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061014082016001600160401b03811183821017620001ec57604052565b620001b7565b6040519190601f01601f191682016001600160401b03811183821017620001ec57604052565b919080601f84011215620001b35782516001600160401b038111620001ec576020906200024e601f8201601f19168301620001f2565b92818452828287010111620001b3575f5b818110620002745750825f9394955001015290565b85810183015184820184015282016200025f565b51906001600160a01b0382168203620001b357565b51906001600160601b0382168203620001b357565b60a081019062000371620003656200036560018060a01b0394620003346200032887835116976200030c61010099828b8b0151168360e08c015116936101208c01511660c08c019460018060601b03865116928462000597565b6200031b6040890151620004a1565b516001600160601b031690565b6001600160601b031690565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c5f80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b15f80a2620003a0600a600855565b620003ac81516200064a565b620003bb602082015162000685565b6080810190815115620003ff57640100000000825111620003ed5790516001600160801b031690915260600151600b55565b604051636ad9efbd60e11b8152600490fd5b6040516331c9364360e01b8152600490fd5b90600182811c9216801562000441575b60208310146200042d57565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000421565b601f811162000459575050565b60065f5260205f20906020601f840160051c8301931062000496575b601f0160051c01905b8181106200048a575050565b5f81556001016200047e565b909150819062000475565b80519091906001600160401b038111620001ec57620004cd81620004c760065462000411565b6200044c565b602080601f831160011462000512575081906200050193945f9262000506575b50508160011b915f199060031b1c19161790565b600655565b015190505f80620004ed565b60065f52601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f925f905b8782106200057e57505083600195961062000565575b505050811b01600655565b01515f1960f88460031b161c191690555f80806200055a565b8060018596829496860151815501950193019062000544565b6080949094525f80546001600160a01b0319166001600160a01b03968716179055929080156200063d5782156200063d57849281600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d155f80a21660a052168060c0526200063657565b600160e052565b63d92e233d5f526004601cfd5b805180601f10620006835760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565bfe5b805180601f10620006835760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a7146102df57806305e39833146102da57806306fdde03146102d5578063081812fc146102d0578063095ea7b3146102cb57806318160ddd1461022b57806322ab47a1146102c657806323b872dd146102c15780632a55205a146102bc5780633ca63f2c146102b75780633ccfd60b146102b25780633cd8045e146102ad57806340475c16146102a857806342842e0e146102a357806355f804b31461029e5780636352211e1461029957806366c879a91461029457806369d3e20e1461028f5780636c0360eb1461028a57806370a0823114610285578063769da94314610280578063785e9e861461027b578063879fbedf14610276578063893d20e8146102715780638c01d3081461026c578063911f51f91461026757806395d89b41146102625780639659867e1461025d578063a035b1fe14610258578063a22cb46514610253578063a70160231461024e578063a7fcf7b514610249578063b0f479a114610244578063b88d4fde1461023f578063bb485b881461023a578063be29184f14610235578063c87b56dd14610230578063cb4f1c181461022b578063d139e61214610226578063d5abeb0114610221578063d6ed26631461021c578063e1c38ed914610217578063e985e9c514610212578063ef3e067c1461020d5763f4f3b20014610208575f80fd5b611787565b611706565b6116c2565b6116a5565b611669565b61161d565b6115f3565b6106ef565b6114c4565b611477565b61145a565b6113a3565b611386565b6112cb565b611254565b6111d2565b6111b5565b611195565b611106565b6110e4565b6110c7565b6110aa565b61102b565b610fcc565b610f92565b610f2a565b610e2c565b610d27565b610c90565b610c54565b610a7d565b610a03565b6108fe565b6108ae565b610845565b610800565b610799565b610785565b61071e565b610626565b610562565b6104ce565b6103e6565b346103e25760206003193601126103e2576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103e257807f01ffc9a700000000000000000000000000000000000000000000000000000000602092149081156103b8575b811561038e575b8115610364575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150145f610359565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610352565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061034b565b5f80fd5b346103e2575f6003193601126103e257602060ff600754166040519015158152f35b5f5b8381106104195750505f910152565b818101518382015260200161040a565b60208060a052606051908160c0525f5b8281106104735750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f825f60e09485015201160190565b608081015160e08201528101610439565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104c78151809281602088015260208888019101610408565b0116010190565b346103e2575f6003193601126103e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061055d610429565b0160a0f35b346103e25760206003193601126103e257600435805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f2081010173ffffffffffffffffffffffffffffffffffffffff80825416156105d357602091600101549060405191168152f35b63ceea21b65f526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103e257565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103e257565b60406003193601126103e25761063a6105e0565b6024359073ffffffffffffffffffffffffffffffffffffffff90811690825f52337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c5260205f2083018301908154169081156105d3578290823314331517156106cb575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a4005b9050815f526030600c2054156106e25782906106a1565b634b6e7f185f526004601cfd5b346103e2575f6003193601126103e2576020600a546fffffffffffffffffffffffffffffffff16604051908152f35b346103e2575f6003193601126103e257602060ff60075460081c166040519015158152f35b60031960609101126103e25773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103e2579160243590811681036103e2579060443590565b61079761079136610743565b916118a9565b005b346103e25760406003193601126103e257604073ffffffffffffffffffffffffffffffffffffffff5f54166127106107f37f0000000000000000000000000000000000000000000000000000000000000000602435611a1c565b0482519182526020820152f35b346103e25760206003193601126103e25773ffffffffffffffffffffffffffffffffffffffff61082e6105e0565b165f526009602052602060405f2054604051908152f35b346103e2575f6003193601126103e25760025433600c1b036108a1576107974773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ff0565b631648fd015f526004601cfd5b346103e2575f6003193601126103e257602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103e25767ffffffffffffffff6004358181116103e257366023820112156103e25780600401359182116103e2576024810190602436918460051b0101116103e25761271082116109d957600a54806fffffffffffffffffffffffffffffffff1680848103119015176109cc578281039081116109c757600a555f5b82811061098b57005b806109c16109bc6109a76109a26001958888611a2f565b611a6c565b6fffffffffffffffffffffffffffffffff1690565b611c0a565b01610982565b6119ef565b63ce3a3d375f526004601cfd5b60046040517ffe37c8dc000000000000000000000000000000000000000000000000000000008152fd5b610a0c36610743565b610a178183856118a9565b813b610a1f57005b60405191602083019383851067ffffffffffffffff861117610a4a57610797946040525f8452611cf3565b610dbe565b9181601f840112156103e25782359167ffffffffffffffff83116103e257602083818601950101116103e257565b346103e2576020806003193601126103e25767ffffffffffffffff6004358181116103e257610ab0903690600401610a4f565b9160025433600c1b036108a15760ff60075416610c2a578211610a4a57610ae182610adc600654610d6d565b611a79565b5f92601f8311600114610b695750610b308280610b38955f91610b5e575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b600655611ae6565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f65f80a2005b90508301355f610aff565b60065f527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915f905b868210610c1257505083610b389510610bda575b5050600182811b01600655611ae6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690555f80610bca565b80600184958294958801358155019401920190610bb6565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e2576020610c72600435611afa565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103e2575f6003193601126103e25760025433600c1b036108a15760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600754161760075560405180610ce481611b49565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca05f80a2005b6fffffffffffffffffffffffffffffffff8116036103e257565b60206003193601126103e257600435610d3f81610d0d565b60ff60035416610d54575b6107979033611db3565b60015433600c1b14610d4a57631648fd015f526004601cfd5b90600182811c92168015610db4575b6020831014610d8757565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610d7c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a4a57604052565b346103e2575f6003193601126103e2576040515f600654610e4c81610d6d565b80845290602090600190818116908115610ee25750600114610e89575b610e8585610e7981870382610deb565b60405191829182610484565b0390f35b60065f90815293507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b838510610ecf57505050508101602001610e7982610e85610e69565b8054868601840152938201938101610eb3565b869550610e8596935060209250610e799491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b8201019293610e69565b346103e25760206003193601126103e257610f436105e0565b8015610f85577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c525f52602063ffffffff601c600c205416604051908152f35b638f4eb6045f526004601cfd5b346103e2575f6003193601126103e25760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103e2575f6003193601126103e257602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103e257565b346103e25760206003193601126103e25761104461101c565b60025433600c1b036108a1576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e65f80a2005b346103e2575f6003193601126103e257600254600c1c5f5260205ff35b346103e2575f6003193601126103e2576020600554604051908152f35b346103e2575f6003193601126103e257602060ff600354166040519015158152f35b346103e2575f6003193601126103e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061055d610429565b346103e2575f6003193601126103e2576020600a5460801c604051908152f35b346103e2575f6003193601126103e2576020600b54604051908152f35b346103e25760406003193601126103e2576111eb6105e0565b602435908115158092036103e25773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a00000000600852335f52806030600c20555f5216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa3005b346103e25760206003193601126103e25761126d6105e0565b33600c1b6001546002548032600c1b148092841416921416146108a15780156112be5780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a3005b63d92e233d5f526004601cfd5b60406003193601126103e2576112df6105e0565b602435906112ec82610d0d565b33600c1b916001926001546002548032600c1b148092841416921416146108a1576fffffffffffffffffffffffffffffffff1661271081116109d9578061133561136892611e95565b906001600a54928360801c93818386019501918260801b916fffffffffffffffffffffffffffffffff160117600a550190565b91905b82811061137457005b80611380859284611f14565b0161136b565b346103e2575f6003193601126103e257600154600c1c5f5260205ff35b60806003193601126103e2576113b76105e0565b6113bf610603565b906044356064359267ffffffffffffffff938481116103e2576113e6903690600401610a4f565b9390946113f48484846118a9565b823b6113fc57005b8411610a4a576040519361143860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160186610deb565b80855236818701116103e2576020815f92610797988389013786010152611cf3565b346103e2575f6003193601126103e2576020600854604051908152f35b60406003193601126103e25761148b6105e0565b60243561149781610d0d565b60ff600354166114ab575b61079791611db3565b60015433600c1b146114a257631648fd015f526004601cfd5b346103e25760206003193601126103e257600435600a805460801c82116115c957906040519060808201604052607f820192600a60309281810660300186530491825b61159257610e8561155d610e79878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261158660405194859261155760208501611b49565b90611bf3565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610deb565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939501948181068301865304919082611507565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e25761160c61101c565b60025433600c1b036108a157600355005b346103e2575f6003193601126103e25760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103e2575f6003193601126103e25760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346103e2575f6003193601126103e2576020600454604051908152f35b346103e25760406003193601126103e2576116db6105e0565b6116e3610603565b601c52670a5a2e7a000000006008525f5260206030600c20546040519015158152f35b346103e25760206003193601126103e25760043560025433600c1b036108a157801561175d576020817f4de366374f8ef0a62246f5f9dc35e9463a14db6065d42d12d946079c615420cb92600855604051908152a1005b60046040517fa3f7d515000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e2576117a06105e0565b60025433600c1b036108a15780156112be5773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa9081156118a4575f80936044936010936020978492611875575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560015f511417161561186857005b6390b8ec185f526004601cfd5b611896919250883d8a1161189d575b61188e8183610deb565b810190611fd6565b905f61181a565b503d611884565b611fe5565b9073ffffffffffffffffffffffffffffffffffffffff91821690821691835f52601c90337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017825260205f20850185019081548091168481148102156119d4575084156119c857835f5281600101805480331486331417156119b2575b6119a9575b5084841818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8154019055825f5280600c2060018154019163ffffffff83161561199d5750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4565b6004906301336cea5f52fd5b5f90555f61192b565b6030600c205461192657600485634b6e7f185f52fd5b60048363ea553b345f52fd5b83600491156119e65763a11481005f52fd5b63ceea21b65f52fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818102929181159184041417156109c757565b9190811015611a3f5760051b0190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b35611a7681610d0d565b90565b601f8111611a85575050565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f840160051c83019310611adc575b601f0160051c01905b818110611ad1575050565b5f8155600101611ac6565b9091508190611abd565b81604051928392833781015f815203902090565b73ffffffffffffffffffffffffffffffffffffffff90805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f2081010154169081156105d357565b6006545f9291611b5882610d6d565b91600190818116908115611bc25750600114611b7357505050565b909192935060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f915b848310611baf575050500190565b8181602092548587015201920191611ba1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90611c0660209282815194859201610408565b0190565b611c1381611afa565b50805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f208101810180549073ffffffffffffffffffffffffffffffffffffffff82169081156105d357815f5280600101928354801560011715611ce1575b905f948492611cd8575b50189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b8590555f611c83565b906030600c2054156106e25790611c79565b9060a473ffffffffffffffffffffffffffffffffffffffff9460209460405196879563150b7a0287523388880152166040860152606085015260808085015280518091818060a0880152611d9f575b505001905f601c8401915af115611d8a575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611d7d57565b63d1a57ed65f526004601cfd5b3d611d97575f8152611d54565b3d5f803e3d5ffd5b818760c08801920160045afa50805f611d42565b906fffffffffffffffffffffffffffffffff1661271081116109d957611dd881611e95565b73ffffffffffffffffffffffffffffffffffffffff8216805f52600960205260405f20548281018091116109c75760085410611e6b575f52600960205260405f209081548181018091116109c757611e499255611335611e3e60075460ff9060081c1690565b600b5490858461200c565b91905b828110611e5857505050565b80611e6560019284611f14565b01611e4c565b60046040517f303b682f000000000000000000000000000000000000000000000000000000008152fd5b8015611eea576fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690600a5460801c0111611edd57565b63d05cb6095f526004601cfd5b60046040517f1f2a2005000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff168015611fc957815f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f208201820180548060601b611fbc5782179055805f52601c600c2060018154019063ffffffff821615611faf57555f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea5f526004601cfd5b63c991cbb15f526004601cfd5b63ea553b345f526004601cfd5b908160209103126103e2575190565b6040513d5f823e3d90fd5b5f80809381935af115611fff57565b63b12d13eb5f526004601cfd5b919290921561215d578261201f92612187565b9081612029575050565b7f000000000000000000000000000000000000000000000000000000000000000015612109576005548281018091116109c7576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c5260205f6064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d1560015f51141716156120fc575f606052604052565b637939f4245f526004601cfd5b50600454908082018092116109c75761215b9160045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ff0565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b92919081156122ca577f00000000000000000000000000000000000000000000000000000000000000006121f357506121c234933492611a1c565b036121c957565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9384156118a4575f946122a3575b509061229a91611a1c565b8092106121c957565b61229a929194506122c29060203d60201161189d5761188e8183610deb565b93909161228f565b505f92505056fea2646970667358221220716092cb018f9d2f8ec5c2ffc5e13194602f3254553623de4cf849050e0e13cb64736f6c63430008160033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC721Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Basic__factory {
    return super.connect(runner) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new Interface(_abi) as ERC721BasicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Basic {
    return new Contract(address, _abi, runner) as unknown as ERC721Basic;
  }
}
