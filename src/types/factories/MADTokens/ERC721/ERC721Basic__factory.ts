/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620005d15762002a11803803806200001d81620005d6565b928339810161012082820312620005d15781516001600160401b039290838111620005d1578262000050918301620005fc565b9060209182820151858111620005d157846200006e918401620005fc565b93604083015190868211620005d1576200008a918401620005fc565b93606083015160808401519060a08501519360018060a01b0396878616809603620005d15760c08701516001600160601b03811699908a9003620005d15760e088015197898916809903620005d1576101000151988916809903620005d1578251918b8311620005bb576000968754936001958686811c96168015620005b0575b84871014620004ba578190601f968781116200055d575b508490878311600114620004f9578b92620004ed575b5050600019600383901b1c191690861b1788555b8051908d8211620004d95785548681811c91168015620004ce575b84821014620004ba5790818684931162000467575b50839086831160011462000403578a92620003f7575b5050600019600383901b1c191690851b1784555b8815620003c357600880546001600160a01b03199081168b1790915598877f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a38360095581519b8c11620003af57600f548481811c91168015620003a4575b82821014620003905780848e921162000345575b505080928c11600114620002c857509980928192600080516020620029f183398151915298999a9b9c8894620002bc575b50501b916000199060031b1c191617600f555b6011556012558284600a541617600a558560065582846007541617600755604051957fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a280a2600b541617600b5561238290816200066f8239f35b0151925038806200024c565b909a91601f1983169b600f88528c8389209389915b82106200032c57505083600080516020620029f1833981519152999a9b9c9d1062000312575b505050811b01600f556200025f565b015160001960f88460031b161c1916905538808062000303565b8284015185559386019392830192908101908e620002dd565b600f895284838a20918482850160051c8401941062000386575b0160051c019085905b8281106200037a57508d91506200021b565b89815501859062000368565b925081926200035f565b634e487b7160e01b88526022600452602488fd5b90607f169062000207565b634e487b7160e01b87526041600452602487fd5b6064906040519062461bcd60e51b82526004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152fd5b01519050388062000192565b878b52848b208894509190601f1984168c5b8782821062000450575050841162000436575b505050811b018455620001a6565b015160001960f88460031b161c1916905538808062000428565b8385015186558b9790950194938401930162000415565b909150868a52838a208680850160051c820192868610620004b0575b918991869594930160051c01915b828110620004a15750506200017c565b8c815585945089910162000491565b9250819262000483565b634e487b7160e01b8a52602260045260248afd5b90607f169062000167565b634e487b7160e01b89526041600452602489fd5b01519050388062000138565b8b8052858c208994509190601f1984168d5b888282106200054657505084116200052c575b505050811b0188556200014c565b015160001960f88460031b161c191690553880806200051e565b8385015186558c979095019493840193016200050b565b9091508a8052848b208780850160051c820192878610620005a6575b918a91869594930160051c01915b8281106200059757505062000122565b8d81558594508a910162000587565b9250819262000579565b95607f16956200010b565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620005bb57604052565b919080601f84011215620005d15782516001600160401b038111620005bb5760209062000632601f8201601f19168301620005d6565b92818452828287010111620005d15760005b8181106200065a57508260009394955001015290565b85810183015184820184015282016200064456fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461025257806305e398331461024d57806306fdde0314610248578063081812fc14610243578063095ea7b31461023e57806313af403514610239578063150b7a021461023457806318160ddd146101b757806322ab47a11461022f57806323b872dd1461022a5780632a55205a14610225578063362c0cb5146102205780633cd8045e1461021b57806342842e0e14610216578063438b1b4b1461021157806351cff8d91461020c57806355f804b3146102075780636352211e1461020257806366c879a9146101fd5780636c0360eb146101f857806370a08231146101f3578063785e9e86146101ee578063879fbedf146101e95780638da5cb5b146101e45780639456fbcc146101df57806395d89b41146101da5780639659867e146101d5578063a035b1fe146101d0578063a0712d68146101cb578063a22cb465146101c6578063b88d4fde146101c1578063c87b56dd146101bc578063cb4f1c18146101b7578063d5abeb01146101b2578063e1c38ed9146101ad5763e985e9c5146101a857600080fd5b6116b0565b611692565b611674565b610712565b6115b6565b6114dd565b61144b565b611369565b61134b565b61132d565b611288565b610fc6565b610f9d565b610f34565b610f0b565b610e89565b610df4565b610d89565b610d4a565b610cce565b610a47565b610978565b6108a2565b610879565b6107ec565b610798565b61077f565b610730565b6106ee565b6105e8565b610514565b6104c0565b6103dd565b6102f4565b61026e565b6001600160e01b031981160361026957565b600080fd5b3461026957602036600319011261026957602060043561028d81610257565b63ffffffff60e01b166301ffc9a760e01b81149081156102e3575b81156102d2575b81156102c1575b506040519015158152f35b63152a902d60e11b149050386102b6565b635b5e139f60e01b811491506102af565b6380ac58cd60e01b811491506102a8565b3461026957600036600319011261026957602060ff601054166040519015158152f35b90600182811c92168015610347575b602083101461033157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610326565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761038957604052565b610351565b60005b8381106103a15750506000910152565b8181015183820152602001610391565b604091602082526103d1815180928160208601526020868601910161038e565b601f01601f1916010190565b34610269576000806003193601126104bd57604051908080546103ff81610317565b808552916001918083169081156104935750600114610439575b6104358561042981870382610367565b604051918291826103b1565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061047b57505050810160200161042982610435610419565b80546020858701810191909152909301928101610460565b8695506104359693506020925061042994915060ff191682840152151560051b8201019293610419565b80fd5b34610269576020366003190112610269576004356000526004602052602060018060a01b0360406000205416604051908152f35b6001600160a01b0381160361026957565b60243590610512826104f4565b565b3461026957604036600319011261026957600435610531816104f4565b60243560008181526002602052604081205490926001600160a01b03918216919033831480156105c5575b61056590611e2c565b61059c8161057d866000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b16907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b50828552600560209081526040808720336000908152925290205460ff1661055c565b3461026957602036600319011261026957600435610605816104f4565b6008546001600160a01b039061061e9082163314611718565b811690811561065257600855337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60806003198201126102695760043561069f816104f4565b916024356106ac816104f4565b916044359160643567ffffffffffffffff9283821161026957806023830112156102695781600401359384116102695760248483010111610269576024019190565b34610269576106fc36610687565b50505050506020604051630a85bd0160e11b8152f35b34610269576000366003190112610269576020600c54604051908152f35b3461026957600036600319011261026957602060ff601354166040519015158152f35b60609060031901126102695760043561076b816104f4565b90602435610778816104f4565b9060443590565b346102695761079661079036610753565b91611ea9565b005b3461026957604036600319011261026957604060018060a01b03600754166127106107c76006546024356118e3565b0482519182526020820152f35b67ffffffffffffffff81116103895760051b60200190565b60403660031901126102695760043567ffffffffffffffff8111610269573660238201121561026957806004013590610824826107d4565b906108326040519283610367565b82825260209260248484019160051b8301019136831161026957602401905b82821061086a5761079684610864610505565b906117a2565b81358152908401908401610851565b3461026957600036600319011261026957600a546040516001600160a01b039091168152602090f35b34610269576108b036610753565b90916108bd828483611ea9565b823b159283156108d1575b61079684612057565b604051630a85bd0160e11b8082523360048301526001600160a01b039384166024830152604482019490945260806064820152600060848201819052909450602092859260a49284929091165af180156109735761079692600091610945575b506001600160e01b031916149038806108c8565b610966915060203d811161096c575b61095e8183610367565b810190612042565b38610931565b503d610954565b611b52565b606036600319011261026957600435610990816104f4565b602435906044356109a0816104f4565b6109b560018060a01b03600854163314611718565b6001906109c58260095414611753565b6002600955600d54848101809111610a425760125410610a3057916109ea8493611bd3565b6000915b838310610a1457505010610a06576107966001600955565b63dfb035c96000526004601cfd5b809192610a28610a22611bb5565b85612096565b0191906109ee565b60405163d05cb60960e01b8152600490fd5b61178c565b34610269576020806003193601126102695760048035610a66816104f4565b6008546001600160a01b03938391610a819086163314611718565b600a54610a9e906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa94851561097357600095610caf575b50610ace85611b5e565b93610ad886611b5e565b96600e549081151580610ca4575b15610c995790610b0191610afa8247611b90565b94166121f4565b610b0b6000600e55565b600a5460009390610b24906001600160a01b0316610a92565b935b878110610b735788888860005b828110610b3c57005b80610b6d610b5c610b4f600194866118a3565b516001600160a01b031690565b610b6683886118a3565b51906121f4565b01610b33565b825190631419245f60e11b8252828280610b94848b83019190602083019252565b0381895afa91821561097357600092610c6a575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561097357610c148a610c1a9260019686610c2296600093610c33575b50610c0090610c0f93946118a3565b6001600160a01b039091169052565b6118cd565b876118e3565b612710900490565b610c2c828c6118a3565b5201610b26565b610c0f935090610c5b610c00928c8d3d10610c63575b610c538183610367565b810190611b43565b935090610bf1565b503d610c49565b610c8b919250833d8511610c92575b610c838183610367565b810190611b9d565b9038610ba8565b503d610c79565b505090504790610b0b565b508084161515610ae6565b610cc7919550823d8411610c6357610c538183610367565b9338610ac4565b346102695760203660031901126102695760043567ffffffffffffffff80821161026957366023830112156102695781600401359081116103895760405190610d21601f8201601f191660200183610367565b80825236602482850101116102695760208160009260246107969601838601378301015261198a565b34610269576020366003190112610269576004356000526002602052602060018060a01b0360406000205416610d81811515611df3565b604051908152f35b34610269576000806003193601126104bd57610db060018060a01b03600854163314611718565b600160ff19601054161760105560405180610dca816118f6565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b34610269576000806003193601126104bd576040519080600f54610e1781610317565b808552916001918083169081156104935750600114610e40576104358561042981870382610367565b9250600f835260008051602061232d8339815191525b828410610e7157505050810160200161042982610435610419565b80546020858701810191909152909301928101610e56565b3461026957602036600319011261026957600435610ea6816104f4565b6001600160a01b03168015610ed7576000526003602052610435604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b3461026957600036600319011261026957600b546040516001600160a01b039091168152602090f35b346102695760203660031901126102695760043580151580910361026957610f6760018060a01b03600854163314611718565b60ff196013541660ff8216176013557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b34610269576000366003190112610269576008546040516001600160a01b039091168152602090f35b346102695760408060031936011261026957600490813590610fe7826104f4565b60243591610ff4836104f4565b6008546001600160a01b03949061100e9086163314611718565b600a54611023906001600160a01b0316610a92565b835194859163e919ecad60e01b8352828460209485935afa95861561097357600096611269575b5061105486611b5e565b9461105e87611b5e565b976000600e54908115158061125e575b15611201575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa801561097357816110b8916110bf946000916111e4575b50611b90565b93876122bb565b6110c96000600e55565b600a54600093906110e2906001600160a01b0316610a92565b935b8881106111285750505050505060005b8381106110fd57005b80611122611110610b4f600194876118a3565b61111a83896118a3565b5190856122bb565b016110f4565b825190631419245f60e11b8252828280611149848b83019190602083019252565b0381895afa918215610973576000926111c5575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561097357610c148b610c1a92600196866111b496600093610c335750610c0090610c0f93946118a3565b6111be828d6118a3565b52016110e4565b6111dd919250833d8511610c9257610c838183610367565b903861115d565b6111fb9150883d8a11610c6357610c538183610367565b386110b2565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa9182156109735791611241575b50906110c9565b6112589150833d8511610c6357610c538183610367565b3861123a565b50828516151561106e565b611281919650823d8411610c6357610c538183610367565b943861104a565b34610269576000806003193601126104bd57604051908060018054916112ad83610317565b8086529282811690811561049357506001146112d3576104358561042981870382610367565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061131557505050810160200161042982610435610419565b805460208587018101919091529093019281016112fa565b34610269576000366003190112610269576020600d54604051908152f35b34610269576000366003190112610269576020601154604051908152f35b60203660031901126102695760043560016113878160095414611753565b600260095560ff601354161561143957600d54828101809111610a425760125410610a30576011546113b7611d9a565b600e54818101809111610a4257600e556113da846113d433611d2e565b936118e3565b908101809111610a425703611427576113f233611c3a565b6000905b82821061140d575010610a06576107966001600955565b809161142061141a611bb5565b33612096565b01906113f6565b60405163f7760f2560e01b8152600490fd5b6040516316851fc760e11b8152600490fd5b3461026957604036600319011261026957600435611468816104f4565b60243590811515809203610269573360009081526005602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b34610269576114eb36610687565b9392906114f9838386611ea9565b813b1593841561150d575b61079685612057565b602093945090600086939260a4604051809981978296630a85bd0160e11b9b8c855233600486015260018060a01b038097166024860152604485015260806064850152816084850152848401378181018301859052601f01601f19168101030193165af180156109735761079692600091611598575b506001600160e01b0319161438808080611504565b6115b0915060203d811161096c5761095e8183610367565b38611583565b3461026957602036600319011261026957600435600d548111611662576040519060808201604052607f820190600a80603092818106840185530491825b6116495761043561162c61042986886080601f1992838101920301815261163d604051948592611626602085016118f6565b90611973565b64173539b7b760d91b815260050190565b03908101835282610367565b90809293600019019381810683018553049190826115f4565b604051635d68437560e11b8152600490fd5b34610269576000366003190112610269576020601254604051908152f35b34610269576000366003190112610269576020600e54604051908152f35b3461026957604036600319011261026957602060ff61170c6004356116d4816104f4565b602435906116e1826104f4565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b1561171f57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b1561175a57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b906117c260018060a01b03916117bd83600854163314611718565b611c7a565b6000908251925b8383106117d957505010610a0657565b9091600c908154801561189557600192600019809201905560006117fd83866118a3565b519182825260209060028252604060038982862054169361181f851515611df3565b848652528320908154019055611852611842846000526002602052604060002090565b80546001600160a01b0319169055565b611869611842846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a40191906117c9565b63ce3a3d376000526004601cfd5b80518210156118b75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90606482029180830460641490151715610a4257565b81810292918115918404141715610a4257565b600f546000929161190682610317565b91600190818116908115611960575060011461192157505050565b9091929350600f60005260008051602061232d833981519152906000915b84831061194d575050500190565b818160209254858701520192019161193f565b60ff191683525050811515909102019150565b906119866020928281519485920161038e565b0190565b906119a060018060a01b03600854163314611718565b6001918260ff60105416151514611ab257805167ffffffffffffffff8111610389576119d6816119d1600f54610317565b611ac4565b60209384601f8311600114611a3e5750818091611a0c9596600093611a33575b501b916000199060031b1c191617600f55611b23565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b8501519250386119f6565b600f600052601f1983169591929160008051602061232d833981519152916000905b888210611a9b57505082611a0c969710611a82575b5050811b01600f55611b23565b84015160001960f88460031b161c191690553880611a75565b808684958294958a01518155019401920190611a60565b6040516331d1c0a360e01b8152600490fd5b601f8111611ad0575050565b600090600f825260008051602061232d833981519152906020601f850160051c83019410611b19575b601f0160051c01915b828110611b0e57505050565b818155600101611b02565b9092508290611af9565b611b3b9060206040519282848094519384920161038e565b810103902090565b90816020910312610269575190565b6040513d6000823e3d90fd5b90611b68826107d4565b611b756040519182610367565b8281528092611b86601f19916107d4565b0190602036910137565b91908203918211610a4257565b908160209103126102695751611bb2816104f4565b90565b6001600c5401600c55600d5460018101809111610a425780600d5590565b611bdc81611d2e565b6001600160a01b0333838216148015611c2e575b611bf957505050565b611c01611d9a565b8203611c2057600b541680611c1557505050565b61051292309161223f565b63f7760f256000526004601cfd5b5080600b541615611bf0565b611c4381611d2e565b6001600160a01b0333838216148015611c6e575b611c6057505050565b600b541680611c1557505050565b5080600b541615611c57565b611c8381611d2e565b6001600160a01b0333838216148015611d22575b611ca057505050565b6008546000908216803b63ffffffff16611cca5750829050611c2057600b541680611c1557505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa9182156109735791611d04575b50611c01565b611d1c915060203d8111610c6357610c538183610367565b38611cfe565b5080600b541615611c97565b600b546001600160a01b0390811691908215611d935760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561097357600091611d7b575090565b611bb2915060203d8111610c6357610c538183610367565b5050503490565b6008546000906001600160a01b0316803b63ffffffff16611dbc575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa9182156109735791611d7b575090565b15611dfa57565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606490fd5b15611e3357565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15611e7057565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9060018060a01b0380611ec6856000526002602052604060002090565b54169181841692830361201057611f1c611f5792821694611ee8861515611e69565b8433148015611fc9575b8015611f95575b611f0290611e2c565b6001600160a01b0316600090815260036020526040902090565b80546000190190556001600160a01b03811660009081526003602052604090208054600101905561057d856000526002602052604060002090565b611f6e611842846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b50611f02611fc0610a92611fb38a6000526004602052604060002090565b546001600160a01b031690565b33149050611ef9565b5061200b61200433611fed8460018060a01b03166000526005602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b611ef2565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b908160209103126102695751611bb281610257565b1561205e57565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b6001600160a01b0391818316916120ae831515611e69565b60009382855260026020526040852054166121be576001600160a01b0381166000908152600360205260409020600181540190556120fa8161057d846000526002602052604060002090565b8183857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a43b15918215612137575b50506105129150612057565b604051630a85bd0160e11b8082523360048301526000602483018190526044830194909452608060648301526084820193909352919250602090829060a490829087905af19081156109735761051293916121a0575b506001600160e01b03191614388061212b565b6121b8915060203d811161096c5761095e8183610367565b3861218d565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606490fd5b600080809381935af11561220457565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561227f57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156122f557565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfe8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a264697066735822122059b4df811cb6db158d29ccb6d0842e2784d679db7b01c2233d68462a5bb70ebc64736f6c634300081300332a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
