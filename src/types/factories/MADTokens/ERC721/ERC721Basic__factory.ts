/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  Types,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct Types.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001ac5762002449803803806200001f81620001ee565b928339810190602081830312620001ac5780516001600160401b0391828211620001ac57019261014084840312620001ac576200005b620001c7565b918451818111620001ac57846200007491870162000214565b83526020850151818111620001ac57846200009191870162000214565b60208401526040850151908111620001ac576200013293620000b591860162000214565b60408301526060840151606083015260808401516080830152620000dc60a0850162000286565b60a0830152620000ef60c085016200029b565b60c08301526200010260e0850162000286565b60e08301526200012881610100956200011d87820162000286565b878601520162000286565b90820152620002b0565b604051611f0b91826200053e833960805182818161079d0152610d32015260a051828181610f5f015261196b015260c0518281816107df01528181610841015281816108a601528181611583015281816116e201526117c5015260e051828181610d8201526116a8015251818181611473015261181d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001e857604052565b620001b1565b6040519190601f01601f191682016001600160401b03811183821017620001e857604052565b919080601f84011215620001ac5782516001600160401b038111620001e8576020906200024a601f8201601f19168301620001ee565b92818452828287010111620001ac5760005b8181106200027257508260009394955001015290565b85810183015184820184015282016200025c565b51906001600160a01b0382168203620001ac57565b51906001600160601b0382168203620001ac57565b60a08101805161010080840151606085015160e086015161012087015160c08801805190989662000314956001600160a01b039182169593821694821693929116906200030d906001600160601b03165b6001600160601b031690565b94620003f7565b60808201640100000000815111620003e55751620003e394602094620003aa936200039e9384936200036c9262000301926001600160801b031690526200035f604089015162000490565b516001600160601b031690565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2620003db8151620004cb565b015162000504565b565b604051636ad9efbd60e11b8152600490fd5b9390929194608052811562000482578015620004825781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e05260a052565b63aa7feadc6000526004601cfd5b805180601f10620004c95760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfe5b805180601f10620004c95760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565b805180601f10620004c95760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146102a257806305e398331461029d57806306fdde0314610298578063081812fc14610293578063095ea7b31461028e57806318160ddd146101f857806322ab47a11461028957806323b872dd146102845780632a55205a1461027f5780633ccfd60b1461027a5780633cd8045e1461027557806340475c161461027057806342842e0e1461026b57806355f804b3146102665780636352211e1461026157806366c879a91461025c57806369d3e20e146102575780636c0360eb1461025257806370a082311461024d578063769da94314610248578063785e9e8614610243578063879fbedf1461023e578063893d20e8146102395780638c01d30814610234578063911f51f91461022f57806395d89b411461022a5780639659867e14610225578063a035b1fe14610220578063a22cb4651461021b578063a701602314610216578063a7fcf7b514610211578063b0f479a11461020c578063b88d4fde14610207578063be29184f14610202578063c87b56dd146101fd578063cb4f1c18146101f8578063d139e612146101f3578063d5abeb01146101ee578063e1c38ed9146101e9578063e985e9c5146101e45763f4f3b200146101df57600080fd5b6114fa565b6114b5565b611497565b61144a565b611420565b6106d6565b611295565b611247565b61118f565b611171565b611097565b611007565b610f82565b610f47565b610f26565b610e96565b610e73565b610e55565b610e35565b610db5565b610d55565b610d1a565b610cb0565b610c2f565b610bd9565b610b4f565b610b13565b610a24565b6109a9565b6108ca565b610879565b610808565b610782565b61076e565b610706565b6105fe565b610537565b6104a2565b6103b5565b346103a55760206003193601126103a5576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103a557807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561037b575b8115610351575b8115610327575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150143861031c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610315565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061030e565b600080fd5b60009103126103a557565b346103a55760006003193601126103a557602060ff600554166040519015158152f35b60005b8381106103eb5750506000910152565b81810151838201526020016103db565b60208060a052606051908160c05260005b8281106104475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f82600060e09485015201160190565b608081015160e0820152810161040c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261049b81518092816020880152602088880191016103d8565b0116010190565b346103a55760006003193601126103a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606105326103fb565b0160a0f35b346103a55760206003193601126103a557600435806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010173ffffffffffffffffffffffffffffffffffffffff80825416156105aa57602091600101549060405191168152f35b63ceea21b66000526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103a557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103a557565b60406003193601126103a5576106126105b8565b60243573ffffffffffffffffffffffffffffffffffffffff918216600092828452337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c526020842083018301908154169081156106c9578290823314331517156106a5575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b90508185526030600c2054156106bc57829061067a565b634b6e7f1885526004601cfd5b63ceea21b685526004601cfd5b346103a55760006003193601126103a55760206006546fffffffffffffffffffffffffffffffff16604051908152f35b346103a55760006003193601126103a557602060ff60055460081c166040519015158152f35b60031960609101126103a55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103a5579160243590811681036103a5579060443590565b61078061077a3661072c565b91611a2f565b005b346103a55760406003193601126103a55760406127106107c47f0000000000000000000000000000000000000000000000000000000000000000602435611924565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b346103a5576000806003193601126108765760015433600c1b03610869576108664773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611e15565b80f35b631648fd0190526004601cfd5b80fd5b346103a55760006003193601126103a557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103a55767ffffffffffffffff6004358181116103a557366023820112156103a55780600401359182116103a5576024600591368285851b830101116103a557600654806fffffffffffffffffffffffffffffffff16808681031190151761099b578481039081116109965760065560009291905b848410610958576107808585611937565b9091928061098d61098861097386600195891b8701016117fd565b6fffffffffffffffffffffffffffffffff1690565b611c47565b01929190610947565b61185a565b63ce3a3d376000526004601cfd5b6109b23661072c565b6109bd818385611a2f565b813b6109c557005b60405191602083019383851067ffffffffffffffff8611176109f1576107809460405260008452611d51565b6118a0565b9181601f840112156103a55782359167ffffffffffffffff83116103a557602083818601950101116103a557565b346103a55760206003193601126103a55760043567ffffffffffffffff81116103a557610a559036906004016109f6565b9060015433600c1b03610b055760ff60055416610adb5781601f10610ad95760243560011b604435177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc558160405192839283378101600081520390207ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346103a55760206003193601126103a5576020610b316004356119de565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103a5576000806003193601126108765760015433600c1b036108695760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b6fffffffffffffffffffffffffffffffff8116036103a557565b60206003193601126103a557600435610bf181610bbf565b60ff60025416610c055761078090336115e8565b60046040517ff56dc29c000000000000000000000000000000000000000000000000000000008152fd5b346103a55760006003193601126103a557610cac610ca06060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405191829182610458565b0390f35b346103a55760206003193601126103a557610cc96105b8565b8015610d0c577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52600052602063ffffffff601c600c205416604051908152f35b638f4eb6046000526004601cfd5b346103a55760006003193601126103a55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103a55760006003193601126103a557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103a557565b346103a55760206003193601126103a557610dce610da6565b60015433600c1b03610b05576005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346103a55760006003193601126103a557600154600c1c60005260206000f35b346103a55760006003193601126103a5576020600454604051908152f35b346103a55760006003193601126103a557602060ff600254166040519015158152f35b346103a55760006003193601126103a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606105326103fb565b346103a55760006003193601126103a557602060065460801c604051908152f35b346103a55760006003193601126103a55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103a55760406003193601126103a557610f9b6105b8565b602435908115158092036103a55773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a0000000060085233600052806030600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346103a55760206003193601126103a5576110206105b8565b6110286119d4565b33600c1b9060009182546001548032600c1b1480928414169214161461108a57801561107d5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63aa7feadc82526004601cfd5b631648fd0182526004601cfd5b60406003193601126103a5576110ab6105b8565b602435906110b882610bbf565b6110c06119d4565b33600c1b9060009283549260019384548032600c1b14809284141692141614611164576fffffffffffffffffffffffffffffffff61113191166111028161180a565b600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b909280805b61113e578580f35b15611155575b84816111508686611b83565b611136565b81818501940361114457808580f35b631648fd0184526004601cfd5b346103a557600080600319360112610876578060209154600c1c8152f35b60806003193601126103a5576111a36105b8565b6111ab6105db565b906044356064359267ffffffffffffffff938481116103a5576111d29036906004016109f6565b9390946111e0848484611a2f565b823b6111e857005b84116109f1576040519361122460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601866118e3565b80855236818701116103a557602081600092610780988389013786010152611d51565b60406003193601126103a55761125b6105b8565b60243561126781610bbf565b61126f6119d4565b33600c1b6000546001548032600c1b14809284141692141614610b0557610780916115e8565b346103a55760206003193601126103a55760043560065460801c81116113f6576113126060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405160808101604052607f810192600a80603092818106840187530491825b6113bf57610cac611384610ca088886113b361138a8a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09586810192030181526040519687946020860190611889565b90611889565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826118e3565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939601958181068301875304919082611332565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103a55760206003193601126103a557611439610da6565b60015433600c1b03610b0557600255005b346103a55760006003193601126103a55760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103a55760006003193601126103a5576020600354604051908152f35b346103a55760406003193601126103a5576114ce6105b8565b6114d66105db565b601c52670a5a2e7a0000000060085260005260206030600c20546040519015158152f35b346103a55760206003193601126103a5576115136105b8565b60015433600c1b03610b05576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529073ffffffffffffffffffffffffffffffffffffffff908116602083602481845afa9182156115e3576000926115a9575b61078093507f00000000000000000000000000000000000000000000000000000000000000001690611e8c565b91926020813d82116115db575b816115c3602093836118e3565b810103126115d7576107809350519161157c565b8380fd5b3d91506115b6565b61194c565b906fffffffffffffffffffffffffffffffff166116048161180a565b600554156117ef5761161581611965565b90811561168d575b6116519150600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b919091600180805b611665575b5050505050565b1561167d575b6000816116788686611b83565b611659565b81818501940361166b578061165e565b34611793576116a66116a183600454611958565b600455565b7f00000000000000000000000000000000000000000000000000000000000000009161170b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823386611e33565b803b156103a5576040517f580fc80a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931660048401526000908390602490829084905af19182156115e3576116519261177a575b5061161d565b8061178761178d926118cf565b806103aa565b38611774565b6117ea826117ae6117a961165195600354611958565b600355565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611e15565b61161d565b632d0a3f8e6000526004601cfd5b3561180781610bbf565b90565b6fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169060065460801c011161184c57565b63d05cb6096000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9061189c602092828151948592016103d8565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116109f157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109f157604052565b8181029291811591840414171561099657565b1061193e57565b63dfb035c96000526004601cfd5b6040513d6000823e3d90fd5b9190820180921161099657565b906000917f000000000000000000000000000000000000000000000000000000000000000080156119cc57839161199b91611924565b036119a257565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b506000925050565b60025415610b0557565b73ffffffffffffffffffffffffffffffffffffffff90806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010154169081156105aa57565b60008381527f7d8825530a5a2e7a0000000000000000000000000000000000000000000000003317601c9081526020822085018501805473ffffffffffffffffffffffffffffffffffffffff95861695948516948116808614810215611b6757508515611b5b57848452838260010180548033148833141715611b39575b611b31575b505085851818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815401905583825280600c2060018154019163ffffffff831615611b255750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b6004906301336cea8552fd5b558338611ab2565b9091506030600c205415611b4f57908591611aad565b600485634b6e7f188852fd5b60048363ea553b348652fd5b838560049215611b7a5763a11481009052fd5b63ceea21b69052fd5b73ffffffffffffffffffffffffffffffffffffffff168015611c395760008281527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208301830180548060601b611c2c5783179055818152601c600c2060018154019063ffffffff821615611c1f57557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea83526004601cfd5b63c991cbb183526004601cfd5b63ea553b346000526004601cfd5b611c50816119de565b5060008181527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208201820180549073ffffffffffffffffffffffffffffffffffffffff8216918215611d4457829081855284836001018054801560011715611d1d575b611d15575b5050189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b558438611cbf565b91509192506030600c205415611d37578492918691611cba565b634b6e7f1886526004601cfd5b63ceea21b684526004601cfd5b60209173ffffffffffffffffffffffffffffffffffffffff9360405194859363150b7a0285523386860152166040840152606083015260808083015284518095818060a0860152611e01575b505060a4600095019085601c8401915af115611deb575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611dde5750565b63d1a57ed690526004601cfd5b3d611df857818152611db4565b503d81803e3d90fd5b818560c08601920160045afa508438611d9d565b600080809381935af115611e2557565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615611e7e576000606052604052565b637939f4246000526004601cfd5b60109260209260145260345260446000938480936fa9059cbb00000000000000000000000082525af13d156001835114171615611ec857603452565b6390b8ec1890526004601cfdfea26469706673582212209a0faa9c3a6cfa2d1bbe57382137ede6a2592468fce5effd4d97453d338e33c564736f6c63430008130033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(args, overrides || {}) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, overrides || {});
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
