/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  Types,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "contract SplitterImpl",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200014b5762002c9d803803806200001d816200018d565b92833981016040828203126200014b5781516001600160401b0392908381116200014b57810191610120838203126200014b576200005a62000166565b9280518581116200014b578262000073918301620001b3565b845260208101518581116200014b578262000090918301620001b3565b602085015260408101518581116200014b5782620000b0918301620001b3565b60408501526060810151606085015260808101516080850152620000d760a0820162000225565b60a0850152620000ea60c082016200023a565b60c0850152620000fd60e0820162000225565b60e08501526200011261010080920162000225565b9084015260208201519384116200014b576200013b936200013492016200024f565b90620002b7565b60405161233e90816200095f8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061012082016001600160401b038111838210176200018757604052565b62000150565b6040519190601f01601f191682016001600160401b038111838210176200018757604052565b919080601f840112156200014b5782516001600160401b0381116200018757602090620001e9601f8201601f191683016200018d565b928184528282870101116200014b5760005b8181106200021157508260009394955001015290565b8581018301518482018401528201620001fb565b51906001600160a01b03821682036200014b57565b51906001600160601b03821682036200014b57565b81601f820112156200014b578051916001600160401b03831162000187578260051b6020928380620002838185016200018d565b8097815201928201019283116200014b578301905b828210620002a7575050505090565b8151815290830190830162000298565b60408101516060820151608083015160a084015160c085015160e0860151865160208089015182516001600160a01b039687169c9b9a9993986001600160601b0396909616979693949093169290916001600160401b03821162000187576000986200032f83620003298c546200059e565b620005db565b81601f8411600114620004da575096620003bb8a97620004cc9e9f94620003e798620003a5620004c69f9c99620004a49f6101009f9b9a8186620003b697620003c09c620003e29f6200039d9692620004ce575b50508160011b916000199060031b1c1916179055620006e8565b3290620008cc565b620003b06001600a55565b620007d9565b601255565b601355565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600655565b600b546200043390620004119062000405906001600160a01b031681565b6001600160a01b031690565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6006547fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a26007547f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b19062000493906001600160a01b031662000405565b9180a201516001600160a01b031690565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b62000944565b565b01519050388062000383565b600080529190601f1984167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563938c905b8282106200058557505097620004cc9e9f94620003e798620003a5620004c69f9c9599620004a49f9c6101009f9b9a8e600187620003c09c620003e29f620003bb9c620003b69b6200039d98106200056b575b505050811b019055620006e8565b015160001960f88460031b161c191690553880806200055d565b806001869782949787015181550196019401906200050a565b90600182811c92168015620005d0575b6020831014620005ba57565b634e487b7160e01b600052602260045260246000fd5b91607f1691620005ae565b601f8111620005e8575050565b60009081805260208220906020601f850160051c8301941062000628575b601f0160051c01915b8281106200061c57505050565b8181556001016200060f565b909250829062000606565b90601f821162000641575050565b60019160009083825260208220906020601f850160051c8301941062000684575b601f0160051c01915b828110620006795750505050565b81815583016200066b565b909250829062000662565b601f81116200069c575050565b6000906010825260208220906020601f850160051c83019410620006dd575b601f0160051c01915b828110620006d157505050565b818155600101620006c4565b9092508290620006bb565b80519091906001600160401b038111620001875760019062000716816200071084546200059e565b62000633565b602080601f83116001146200075457508192939460009262000748575b5050600019600383901b1c191690821b179055565b01519050388062000733565b6001600052601f198316959091907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6926000905b888210620007c15750508385969710620007a7575b505050811b019055565b015160001960f88460031b161c191690553880806200079d565b80878596829496860151815501950193019062000788565b80519091906001600160401b03811162000187576200080581620007ff6010546200059e565b6200068f565b602080601f831160011462000844575081929360009262000838575b50508160011b916000199060031b1c191617601055565b01519050388062000821565b6010600052601f198316949091907f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672926000905b878210620008b357505083600195961062000899575b505050811b01601055565b015160001960f88460031b161c191690553880806200088e565b8060018596829496860151815501950193019062000878565b90811562000936578015620009365781600c1b60085580600c1b600955337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a2565b63aa7feadc6000526004601cfd5b516200094c57565b604051637734d3ab60e01b8152600490fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461026257806305e398331461025d57806306fdde0314610258578063081812fc14610253578063095ea7b31461024e578063150b7a021461024957806318160ddd146101c257806322ab47a11461024457806323b872dd1461023f5780632a55205a1461023a578063362c0cb5146102355780633cd8045e1461023057806342842e0e1461022b578063438b1b4b1461022657806351cff8d91461022157806355f804b31461021c5780636352211e1461021757806366c879a9146102125780636c0360eb1461020d57806370a0823114610208578063785e9e8614610203578063879fbedf146101fe578063893d20e8146101f95780639456fbcc146101f457806395d89b41146101ef5780639659867e146101ea578063a035b1fe146101e5578063a0712d68146101e0578063a22cb465146101db578063a7016023146101d6578063b0f479a1146101d1578063b88d4fde146101cc578063c87b56dd146101c7578063cb4f1c18146101c2578063d5abeb01146101bd578063e1c38ed9146101b85763e985e9c5146101b357600080fd5b6116fb565b6116dd565b6116bf565b61069f565b611601565b611528565b611508565b611494565b611402565b611325565b611307565b6112e9565b611244565b610f6a565b610f4a565b610ee2565b610eb9565b610e37565b610da2565b610d2b565b610cec565b610c70565b6109d6565b610905565b61082f565b610806565b610779565b610725565b61070c565b6106bd565b61067b565b610540565b6104ec565b610409565b610304565b61027e565b6001600160e01b031981160361027957565b600080fd5b3461027957602036600319011261027957602060043561029d81610267565b63ffffffff60e01b166301ffc9a760e01b81149081156102f3575b81156102e2575b81156102d1575b506040519015158152f35b63152a902d60e11b149050386102c6565b635b5e139f60e01b811491506102bf565b6380ac58cd60e01b811491506102b8565b3461027957600036600319011261027957602060ff601154166040519015158152f35b90600182811c92168015610357575b602083101461034157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610336565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761039357604052565b610361565b90601f8019910116810190811067ffffffffffffffff82111761039357604052565b60005b8381106103cd5750506000910152565b81810151838201526020016103bd565b604091602082526103fd81518092816020860152602086860191016103ba565b601f01601f1916010190565b34610279576000806003193601126104e9576040519080805461042b81610327565b808552916001918083169081156104bf5750600114610465575b6104618561045581870382610398565b604051918291826103dd565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106104a757505050810160200161045582610461610445565b8054602085870181019190915290930192810161048c565b8695506104619693506020925061045594915060ff191682840152151560051b8201019293610445565b80fd5b34610279576020366003190112610279576004356000526004602052602060018060a01b0360406000205416604051908152f35b6001600160a01b0381160361027957565b6024359061053e82610520565b565b346102795760403660031901126102795760043561055d81610520565b60243560008181526002602052604081205490926001600160a01b03918216919033831480156105f1575b61059190611e72565b6105c8816105a9866000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b16907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b50828552600560209081526040808720336000908152925290205460ff16610588565b60806003198201126102795760043561062c81610520565b9160243561063981610520565b916044359160643567ffffffffffffffff9283821161027957806023830112156102795781600401359384116102795760248483010111610279576024019190565b346102795761068936610614565b50505050506020604051630a85bd0160e11b8152f35b34610279576000366003190112610279576020600d54604051908152f35b3461027957600036600319011261027957602060ff601454166040519015158152f35b6060906003190112610279576004356106f881610520565b9060243561070581610520565b9060443590565b346102795761072361071d366106e0565b91611eef565b005b3461027957604036600319011261027957604060018060a01b03600754166127106107546006546024356118f3565b0482519182526020820152f35b67ffffffffffffffff81116103935760051b60200190565b60403660031901126102795760043567ffffffffffffffff81116102795736602382011215610279578060040135906107b182610761565b906107bf6040519283610398565b82825260209260248484019160051b8301019136831161027957602401905b8282106107f757610723846107f1610531565b906117b2565b813581529084019084016107de565b3461027957600036600319011261027957600b546040516001600160a01b039091168152602090f35b346102795761083d366106e0565b909161084a828483611eef565b823b1592831561085e575b6107238461209d565b604051630a85bd0160e11b8082523360048301526001600160a01b039384166024830152604482019490945260806064820152600060848201819052909450602092859260a49284929091165af1801561090057610723926000916108d2575b506001600160e01b03191614903880610855565b6108f3915060203d81116108f9575b6108eb8183610398565b810190612088565b386108be565b503d6108e1565b611b61565b60603660031901126102795760043561091d81610520565b6024356044359161092d83610520565b33600c1b6009548114906008541417156109c85760019261095184600a5414611763565b6002600a55600e548381018091116109c357601354106109b157836109768492611be2565b6000925b8284106109955761098b8385611d4f565b6107236001600a55565b9080936109a96109a3611bc4565b846120dc565b01929061097a565b60405163d05cb60960e01b8152600490fd5b61179c565b631648fd016000526004601cfd5b346102795760208060031936011261027957600480356109f581610520565b33600c1b600954811490600854141715610c6357600b548290610a28906001600160a01b03165b6001600160a01b031690565b938060409586519586809263e919ecad60e01b82525afa93841561090057600094610c44575b50610a5884611b6d565b92610a6285611b6d565b95600f5480151580610c32575b15610c295780610a82610a919247611b9f565b936001600160a01b031661223a565b610a9b6000600f55565b600b5460009390610ab4906001600160a01b0316610a1c565b935b878110610b035788888860005b828110610acc57005b80610afd610aec610adf600194866118b3565b516001600160a01b031690565b610af683886118b3565b519061223a565b01610ac3565b825190631419245f60e11b8252828280610b24848b83019190602083019252565b0381895afa91821561090057600092610bfa575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561090057610ba48a610baa9260019686610bb296600093610bc3575b50610b9090610b9f93946118b3565b6001600160a01b039091169052565b6118dd565b876118f3565b612710900490565b610bbc828c6118b3565b5201610ab6565b610b9f935090610beb610b90928c8d3d10610bf3575b610be38183610398565b810190611b52565b935090610b81565b503d610bd9565b610c1b919250833d8511610c22575b610c138183610398565b810190611bac565b9038610b38565b503d610c09565b50479150610a9b565b506001600160a01b0383161515610a6f565b81610c5c9295503d8611610bf357610be38183610398565b9238610a4e565b50631648fd01600052601cfd5b346102795760203660031901126102795760043567ffffffffffffffff80821161027957366023830112156102795781600401359081116103935760405190610cc3601f8201601f191660200183610398565b80825236602482850101116102795760208160009260246107239601838601378301015261199a565b34610279576020366003190112610279576004356000526002602052602060018060a01b0360406000205416610d23811515611e39565b604051908152f35b34610279576000806003193601126104e95733600c1b600954811490600854141715610d9557600160ff19601154161760115560405180610d6b81611906565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b631648fd0190526004601cfd5b34610279576000806003193601126104e9576040519080601054610dc581610327565b808552916001918083169081156104bf5750600114610dee576104618561045581870382610398565b9250601083526000805160206122e98339815191525b828410610e1f57505050810160200161045582610461610445565b80546020858701810191909152909301928101610e04565b3461027957602036600319011261027957600435610e5481610520565b6001600160a01b03168015610e85576000526003602052610461604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b3461027957600036600319011261027957600c546040516001600160a01b039091168152602090f35b34610279576020366003190112610279576004358015158091036102795733600c1b6009548114906008541417156109c85760ff196014541660ff8216176014557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b3461027957600036600319011261027957600954600c1c60005260206000f35b34610279576040806003193601126102795760048035610f8981610520565b60243590610f9682610520565b33600c1b60095481149060085414171561123757600b54610fbf906001600160a01b0316610a1c565b928451809463e919ecad60e01b8252818360209384935afa94851561090057600095611218575b50610ff085611b6d565b93610ffa86611b6d565b966000600f549081151580611206575b156111a3575081516370a0823160e01b81523086820190815290919085908390819060200103816001600160a01b038b165afa8015610900578161105a9161106194600091611186575b50611b9f565b93876122a8565b61106b6000600f55565b600b5460009390611084906001600160a01b0316610a1c565b935b8881106110ca5750505050505060005b83811061109f57005b806110c46110b2610adf600194876118b3565b6110bc83896118b3565b5190856122a8565b01611096565b825190631419245f60e11b82528282806110eb848b83019190602083019252565b0381895afa91821561090057600092611167575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561090057610ba48b610baa926001968661115696600093610bc35750610b9090610b9f93946118b3565b611160828d6118b3565b5201611086565b61117f919250833d8511610c2257610c138183610398565b90386110ff565b61119d9150883d8a11610bf357610be38183610398565b38611054565b82516370a0823160e01b815230878201908152939450909290915084908290819060200103816001600160a01b038a165afa91821561090057916111e9575b509061106b565b6112009150833d8511610bf357610be38183610398565b386111e2565b506001600160a01b038416151561100a565b816112309296503d8711610bf357610be38183610398565b9338610fe6565b82631648fd01600052601cfd5b34610279576000806003193601126104e9576040519080600180549161126983610327565b808652928281169081156104bf575060011461128f576104618561045581870382610398565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106112d157505050810160200161045582610461610445565b805460208587018101919091529093019281016112b6565b34610279576000366003190112610279576020600e54604051908152f35b34610279576000366003190112610279576020601254604051908152f35b60203660031901126102795760043560019061134482600a5414611763565b6002600a5560ff60145416156113f057600e548181018091116109c357601354106109b157601254611374611dd0565b600f548181018091116109c357600f556113978361139133611d64565b936118f3565b9081018091116109c357036113de576113af33611caf565b6000915b8183106113c4575061098b91611d4f565b80926113d76113d1611bc4565b336120dc565b01916113b3565b60405163f7760f2560e01b8152600490fd5b6040516316851fc760e11b8152600490fd5b346102795760403660031901126102795760043561141f81610520565b60243590811515809203610279573360009081526005602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b34610279576020366003190112610279576004356114b181610520565b33600c1b6009548114906008541417156109c85780156114fa5780600c1b600955337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a3005b63aa7feadc6000526004601cfd5b3461027957600036600319011261027957600854600c1c60005260206000f35b346102795761153636610614565b939290611544838386611eef565b813b15938415611558575b6107238561209d565b602093945090600086939260a4604051809981978296630a85bd0160e11b9b8c855233600486015260018060a01b038097166024860152604485015260806064850152816084850152848401378181018301859052601f01601f19168101030193165af1801561090057610723926000916115e3575b506001600160e01b031916143880808061154f565b6115fb915060203d81116108f9576108eb8183610398565b386115ce565b3461027957602036600319011261027957600435600e5481116116ad576040519060808201604052607f820190600a80603092818106840185530491825b6116945761046161167761045586886080601f1992838101920301815261168860405194859261167160208501611906565b90611983565b64173539b7b760d91b815260050190565b03908101835282610398565b908092936000190193818106830185530491908261163f565b604051635d68437560e11b8152600490fd5b34610279576000366003190112610279576020601354604051908152f35b34610279576000366003190112610279576020600f54604051908152f35b3461027957604036600319011261027957602060ff61175760043561171f81610520565b6024359061172c82610520565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b1561176a57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b919033600c1b6009548114906008541417156109c8576117d190611cef565b815160005b8181106117e85761053e929350611d4f565b600d90815480156118a5576001926000198092019055600061180a83886118b3565b51918282526020906002825260406003878060a01b03828620541693611831851515611e39565b848652528320908154019055611864611854846000526002602052604060002090565b80546001600160a01b0319169055565b61187b611854846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4016117d6565b63ce3a3d376000526004601cfd5b80518210156118c75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906064820291808304606414901517156109c357565b818102929181159184041417156109c357565b6010546000929161191682610327565b91600190818116908115611970575060011461193157505050565b909192935060106000526000805160206122e9833981519152906000915b84831061195d575050500190565b818160209254858701520192019161194f565b60ff191683525050811515909102019150565b90611996602092828151948592016103ba565b0190565b9033600c1b6009548114906008541417156109c8576001918260ff60115416151514611ac157805167ffffffffffffffff8111610393576119e5816119e0601054610327565b611ad3565b60209384601f8311600114611a4d5750818091611a1b9596600093611a42575b501b916000199060031b1c191617601055611b32565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b850151925038611a05565b6010600052601f198316959192916000805160206122e9833981519152916000905b888210611aaa57505082611a1b969710611a91575b5050811b01601055611b32565b84015160001960f88460031b161c191690553880611a84565b808684958294958a01518155019401920190611a6f565b6040516331d1c0a360e01b8152600490fd5b601f8111611adf575050565b600090601082526000805160206122e9833981519152906020601f850160051c83019410611b28575b601f0160051c01915b828110611b1d57505050565b818155600101611b11565b9092508290611b08565b611b4a906020604051928284809451938492016103ba565b810103902090565b90816020910312610279575190565b6040513d6000823e3d90fd5b90611b7782610761565b611b846040519182610398565b8281528092611b95601f1991610761565b0190602036910137565b919082039182116109c357565b908160209103126102795751611bc181610520565b90565b6001600d5401600d55600e54600181018091116109c35780600e5590565b611beb81611d64565b6001600160a01b0333838216148015611ca3575b611c0857505050565b60006040519060208201633b7279e960e21b81526340d097c360e01b602484015260248352611c3683610377565b600854600c1c90813b1580600114611c965715611c7f575b505090508203611c7157600c541680611c6657505050565b61053e923091612258565b63f7760f256000526004601cfd5b6000925060209351915afa50600051803880611c4e565b5050509050803880611c4e565b5080600c541615611bff565b611cb881611d64565b6001600160a01b0333838216148015611ce3575b611cd557505050565b600c541680611c6657505050565b5080600c541615611ccc565b611cf881611d64565b6001600160a01b0333838216148015611d43575b611d1557505050565b60006040519060208201633b7279e960e21b815263044df8e760e41b602484015260248352611c3683610377565b5080600c541615611d0c565b10611d5657565b63dfb035c96000526004601cfd5b600c546001600160a01b0390811691908215611dc95760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561090057600091611db1575090565b611bc1915060203d8111610bf357610be38183610398565b5050503490565b60009060405160208101633b7279e960e21b81526340d097c360e01b602483015260248252611dfe82610377565b600854600c1c91823b1580600114611e2f5715611e1a57505050565b6020939450906000929151915afa5060005190565b5060009450505050565b15611e4057565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606490fd5b15611e7957565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15611eb657565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9060018060a01b0380611f0c856000526002602052604060002090565b54169181841692830361205657611f62611f9d92821694611f2e861515611eaf565b843314801561200f575b8015611fdb575b611f4890611e72565b6001600160a01b0316600090815260036020526040902090565b80546000190190556001600160a01b0381166000908152600360205260409020805460010190556105a9856000526002602052604060002090565b611fb4611854846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b50611f48612006610a1c611ff98a6000526004602052604060002090565b546001600160a01b031690565b33149050611f3f565b5061205161204a336120338460018060a01b03166000526005602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b611f38565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b908160209103126102795751611bc181610267565b156120a457565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b6001600160a01b0391818316916120f4831515611eaf565b6000938285526002602052604085205416612204576001600160a01b038116600090815260036020526040902060018154019055612140816105a9846000526002602052604060002090565b8183857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a43b1591821561217d575b505061053e915061209d565b604051630a85bd0160e11b8082523360048301526000602483018190526044830194909452608060648301526084820193909352919250602090829060a490829087905af19081156109005761053e93916121e6575b506001600160e01b031916143880612171565b6121fe915060203d81116108f9576108eb8183610398565b386121d3565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606490fd5b600080809381935af11561224a57565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526323b872dd60601b600c525af13d1560016000511417161561229a576000606052604052565b637939f4246000526004601cfd5b601092602092601452603452604460009384809363a9059cbb60601b82525af13d1560018351141716156122db57603452565b6390b8ec1890526004601cfdfe1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672a2646970667358221220b7b5a450143a34034e807d632780975b1fd04b631468030faca541a89f0a22b164736f6c63430008130033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
