/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  Types,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct Types.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001b357620024c5803803806200001f81620001f5565b928339810190602081830312620001b35780516001600160401b0391828211620001b357019261014084840312620001b3576200005b620001ce565b918451818111620001b35784620000749187016200021b565b83526020850151818111620001b35784620000919187016200021b565b60208401526040850151908111620001b3576200013293620000b59186016200021b565b60408301526060840151606083015260808401516080830152620000dc60a085016200028d565b60a0830152620000ef60c08501620002a2565b60c08301526200010260e085016200028d565b60e08301526200012881610100956200011d8782016200028d565b87860152016200028d565b90820152620002b7565b604051611f8091826200054583396080518281816107950152610d3b015260a051828181610f68015261199e015260c0518281816107e70152818161084f015281816108b4015281816115940152818161171c01526117ff015260e051828181610d8b015281816116e20152611a3701525181818161147c01526118570152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001ef57604052565b620001b8565b6040519190601f01601f191682016001600160401b03811183821017620001ef57604052565b919080601f84011215620001b35782516001600160401b038111620001ef5760209062000251601f8201601f19168301620001f5565b92818452828287010111620001b35760005b8181106200027957508260009394955001015290565b858101830151848201840152820162000263565b51906001600160a01b0382168203620001b357565b51906001600160601b0382168203620001b357565b60a08101805161010080840151606085015160e086015161012087015160c0880180519098966200031b956001600160a01b0391821695938216948216939291169062000314906001600160601b03165b6001600160601b031690565b94620003fe565b60808201640100000000815111620003ec5751620003ea94602094620003b193620003a5938493620003739262000308926001600160801b0316905262000366604089015162000497565b516001600160601b031690565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2620003e28151620004d2565b01516200050b565b565b604051636ad9efbd60e11b8152600490fd5b9390929194608052811562000489578015620004895781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e05260a052565b63aa7feadc6000526004601cfd5b805180601f10620004d05760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfe5b805180601f10620004d05760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565b805180601f10620004d05760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146102a257806305e398331461029d57806306fdde0314610298578063081812fc14610293578063095ea7b31461028e57806318160ddd146101f857806322ab47a11461028957806323b872dd146102845780632a55205a1461027f5780633ccfd60b1461027a5780633cd8045e1461027557806340475c161461027057806342842e0e1461026b57806355f804b3146102665780636352211e1461026157806366c879a91461025c57806369d3e20e146102575780636c0360eb1461025257806370a082311461024d578063769da94314610248578063785e9e8614610243578063879fbedf1461023e578063893d20e8146102395780638c01d30814610234578063911f51f91461022f57806395d89b411461022a5780639659867e14610225578063a035b1fe14610220578063a22cb4651461021b578063a701602314610216578063a7fcf7b514610211578063b0f479a11461020c578063b88d4fde14610207578063be29184f14610202578063c87b56dd146101fd578063cb4f1c18146101f8578063d139e612146101f3578063d5abeb01146101ee578063e1c38ed9146101e9578063e985e9c5146101e45763f4f3b200146101df57600080fd5b611503565b6114be565b6114a0565b611453565b611429565b6106d6565b61129e565b611250565b611198565b61117a565b6110a0565b611010565b610f8b565b610f50565b610f2f565b610e9f565b610e7c565b610e5e565b610e3e565b610dbe565b610d5e565b610d23565b610cb9565b610c38565b610be2565b610b58565b610b1c565b610a2d565b6109b2565b6108d8565b610887565b610816565b610782565b61076e565b610706565b6105fe565b610537565b6104a2565b6103b5565b346103a55760206003193601126103a5576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103a557807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561037b575b8115610351575b8115610327575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150143861031c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610315565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061030e565b600080fd5b60009103126103a557565b346103a55760006003193601126103a557602060ff600554166040519015158152f35b60005b8381106103eb5750506000910152565b81810151838201526020016103db565b60208060a052606051908160c05260005b8281106104475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f82600060e09485015201160190565b608081015160e0820152810161040c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261049b81518092816020880152602088880191016103d8565b0116010190565b346103a55760006003193601126103a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606105326103fb565b0160a0f35b346103a55760206003193601126103a557600435806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010173ffffffffffffffffffffffffffffffffffffffff80825416156105aa57602091600101549060405191168152f35b63ceea21b66000526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103a557565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103a557565b60406003193601126103a5576106126105b8565b60243573ffffffffffffffffffffffffffffffffffffffff918216600092828452337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c526020842083018301908154169081156106c9578290823314331517156106a5575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b90508185526030600c2054156106bc57829061067a565b634b6e7f1885526004601cfd5b63ceea21b685526004601cfd5b346103a55760006003193601126103a55760206006546fffffffffffffffffffffffffffffffff16604051908152f35b346103a55760006003193601126103a557602060ff60055460081c166040519015158152f35b60031960609101126103a55773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103a5579160243590811681036103a5579060443590565b61078061077a3661072c565b91611aed565b005b346103a55760406003193601126103a5577f00000000000000000000000000000000000000000000000000000000000000006024358181029181159183041417156108115760409061271082519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168352046020820152f35b611894565b346103a5576000806003193601126108845760015433600c1b03610877576108744773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ed3565b80f35b631648fd0190526004601cfd5b80fd5b346103a55760006003193601126103a557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103a55767ffffffffffffffff6004358181116103a557366023820112156103a55780600401359182116103a5576024600591368285851b830101116103a557600654806fffffffffffffffffffffffffffffffff1680868103119015176109a4578481039081116108115760065560009291905b84841061096657610780858561195e565b9091928061099b61099661098186600195891b870101611837565b6fffffffffffffffffffffffffffffffff1690565b611d05565b01929190610955565b63ce3a3d376000526004601cfd5b6109bb3661072c565b6109c6818385611aed565b813b6109ce57005b60405191602083019383851067ffffffffffffffff8611176109fa576107809460405260008452611e0f565b6118da565b9181601f840112156103a55782359167ffffffffffffffff83116103a557602083818601950101116103a557565b346103a55760206003193601126103a55760043567ffffffffffffffff81116103a557610a5e9036906004016109ff565b9060015433600c1b03610b0e5760ff60055416610ae45781601f10610ae25760243560011b604435177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc558160405192839283378101600081520390207ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346103a55760206003193601126103a5576020610b3a600435611a9c565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103a5576000806003193601126108845760015433600c1b036108775760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b6fffffffffffffffffffffffffffffffff8116036103a557565b60206003193601126103a557600435610bfa81610bc8565b60ff60025416610c0e576107809033611622565b60046040517ff56dc29c000000000000000000000000000000000000000000000000000000008152fd5b346103a55760006003193601126103a557610cb5610ca96060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405191829182610458565b0390f35b346103a55760206003193601126103a557610cd26105b8565b8015610d15577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52600052602063ffffffff601c600c205416604051908152f35b638f4eb6046000526004601cfd5b346103a55760006003193601126103a55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103a55760006003193601126103a557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103a557565b346103a55760206003193601126103a557610dd7610daf565b60015433600c1b03610b0e576005547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346103a55760006003193601126103a557600154600c1c60005260206000f35b346103a55760006003193601126103a5576020600454604051908152f35b346103a55760006003193601126103a557602060ff600254166040519015158152f35b346103a55760006003193601126103a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff606105326103fb565b346103a55760006003193601126103a557602060065460801c604051908152f35b346103a55760006003193601126103a55760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103a55760406003193601126103a557610fa46105b8565b602435908115158092036103a55773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a0000000060085233600052806030600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346103a55760206003193601126103a5576110296105b8565b611031611a92565b33600c1b9060009182546001548032600c1b148092841416921416146110935780156110865780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63aa7feadc82526004601cfd5b631648fd0182526004601cfd5b60406003193601126103a5576110b46105b8565b602435906110c182610bc8565b6110c9611a92565b33600c1b9060009283549260019384548032600c1b1480928414169214161461116d576fffffffffffffffffffffffffffffffff61113a911661110b81611844565b600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b909280805b611147578580f35b1561115e575b84816111598686611c41565b61113f565b81818501940361114d57808580f35b631648fd0184526004601cfd5b346103a557600080600319360112610884578060209154600c1c8152f35b60806003193601126103a5576111ac6105b8565b6111b46105db565b906044356064359267ffffffffffffffff938481116103a5576111db9036906004016109ff565b9390946111e9848484611aed565b823b6111f157005b84116109fa576040519361122d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018661191d565b80855236818701116103a557602081600092610780988389013786010152611e0f565b60406003193601126103a5576112646105b8565b60243561127081610bc8565b611278611a92565b33600c1b6000546001548032600c1b14809284141692141614610b0e5761078091611622565b346103a55760206003193601126103a55760043560065460801c81116113ff5761131b6060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405160808101604052607f810192600a80603092818106840187530491825b6113c857610cb561138d610ca988886113bc6113938a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101920301815260405196879460208601906118c3565b906118c3565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b0390810183528261191d565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193960195818106830187530491908261133b565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103a55760206003193601126103a557611442610daf565b60015433600c1b03610b0e57600255005b346103a55760006003193601126103a55760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103a55760006003193601126103a5576020600354604051908152f35b346103a55760406003193601126103a5576114d76105b8565b6114df6105db565b601c52670a5a2e7a0000000060085260005260206030600c20546040519015158152f35b346103a55760206003193601126103a55761151c6105b8565b60015433600c1b03610b0e5773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa90811561161d576000809360449360109360209784926115ee575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d156001600051141716156115e057005b6390b8ec186000526004601cfd5b61160f919250883d8111611616575b611607818361191d565b810190611973565b9038611591565b503d6115fd565b611982565b906fffffffffffffffffffffffffffffffff1661163e81611844565b600554156118295761164f8161199b565b9081156116c7575b61168b9150600654918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600655565b919091600180805b61169f575b5050505050565b156116b7575b6000816116b28686611c41565b611693565b8181850194036116a55780611698565b346117cd576116e06116db8360045461198e565b600455565b7f00000000000000000000000000000000000000000000000000000000000000009161174573ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823386611ef1565b803b156103a5576040517f580fc80a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931660048401526000908390602490829084905af191821561161d5761168b926117b4575b50611657565b806117c16117c792611909565b806103aa565b386117ae565b611824826117e86117e361168b9560035461198e565b600355565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ed3565b611657565b632d0a3f8e6000526004601cfd5b3561184181610bc8565b90565b6fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169060065460801c011161188657565b63d05cb6096000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906118d6602092828151948592016103d8565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116109fa57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109fa57604052565b1061196557565b63dfb035c96000526004601cfd5b908160209103126103a5575190565b6040513d6000823e3d90fd5b9190820180921161081157565b907f0000000000000000000000000000000000000000000000000000000000000000918215611a8b57600034156119e8575034905b819302036119da57565b63f7760f256000526004601cfd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015260208160448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561161d5791611a6d575b50906119d0565b611a85915060203d811161161657611607818361191d565b38611a66565b5060009150565b60025415610b0e57565b73ffffffffffffffffffffffffffffffffffffffff90806000527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602060002081010154169081156105aa57565b60008381527f7d8825530a5a2e7a0000000000000000000000000000000000000000000000003317601c9081526020822085018501805473ffffffffffffffffffffffffffffffffffffffff95861695948516948116808614810215611c2557508515611c1957848452838260010180548033148833141715611bf7575b611bef575b505085851818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff815401905583825280600c2060018154019163ffffffff831615611be35750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a4565b6004906301336cea8552fd5b558338611b70565b9091506030600c205415611c0d57908591611b6b565b600485634b6e7f188852fd5b60048363ea553b348652fd5b838560049215611c385763a11481009052fd5b63ceea21b69052fd5b73ffffffffffffffffffffffffffffffffffffffff168015611cf75760008281527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208301830180548060601b611cea5783179055818152601c600c2060018154019063ffffffff821615611cdd57557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea83526004601cfd5b63c991cbb183526004601cfd5b63ea553b346000526004601cfd5b611d0e81611a9c565b5060008181527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c52602081208201820180549073ffffffffffffffffffffffffffffffffffffffff8216918215611e0257829081855284836001018054801560011715611ddb575b611dd3575b5050189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b558438611d7d565b91509192506030600c205415611df5578492918691611d78565b634b6e7f1886526004601cfd5b63ceea21b684526004601cfd5b60209173ffffffffffffffffffffffffffffffffffffffff9360405194859363150b7a0285523386860152166040840152606083015260808083015284518095818060a0860152611ebf575b505060a4600095019085601c8401915af115611ea9575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611e9c5750565b63d1a57ed690526004601cfd5b3d611eb657818152611e72565b503d81803e3d90fd5b818560c08601920160045afa508438611e5b565b600080809381935af115611ee357565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615611f3c576000606052604052565b637939f4246000526004601cfdfea26469706673582212207867d7df0c5023f6f2a26af9c57e580e1c69df132ab6b1c171979f93eb26e5bf64736f6c63430008130033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(args, overrides || {}) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    args: Types.CollectionArgsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, overrides || {});
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
