/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC721Basic,
  ERC721BasicInterface,
  Types,
} from "../../../MADTokens/ERC721/ERC721Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "contract SplitterImpl",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620007935762002bd980380390816200001f8162000798565b91823982818381010312620007935780516001600160401b0381116200079357810161012080828585010312620007935784519081016001600160401b038111828210176200076c57855281516001600160401b03811162000793576200008c90858501908401620007be565b815260208201516001600160401b0381116200079357620000b390858501908401620007be565b6020820152818501516001600160401b0381116200079357620000dc90858501908401620007be565b81860152606082810151908201526080808301519082015260a08201516001600160a01b0381168103620007935760a082015260c08201516001600160601b0381168103620007935760c082015260e0820151936001600160a01b0385168503620007935760e08201948552610100928301516001600160a01b03811681036200079357828401526020840151936001600160401b0385116200079357818101601f868301011215620007935780850151906001600160401b0382116200076c57620001ae60208360051b0162000798565b9560208088858152019360051b82840101019382018411620007935701602001905b8282106200078257505050848101516060820151608083015160a084015160c085015197518551602087015181516001600160601b03909b169a6001600160a01b039384169997939094169592949291906001600160401b0385116200076c576000948554926001938481811c9116801562000761575b60208210146200074d579081601f849311620006f6575b50602090601f83116001146200069157889262000685575b5050600019600383901b1c191690831b1785555b8051906001600160401b038211620006715782548381811c9116801562000666575b602082101462000652579081601f849311620005fb575b50602090601f8311600114620005965787926200058a575b5050600019600383901b1c191690821b1781555b88156200055657600880546001600160a01b03199081168b1790915598847f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a360098190558451906001600160401b0382116200054257600f548181811c9116801562000537575b60208210146200052357601f8111620004b8575b50602095601f83116001146200043857829160008051602062002bb983398151915297839288946200042c575b50501b916000199060031b1c191617600f555b6011556012558286600a541617600a5587600655828660075416176007558851977fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a280a260018060a01b039101511690600b541617600b55516200041d5750516123889081620008318239f35b637734d3ab60e01b8152600490fd5b0151925038806200039a565b9092939495601f19831691600f88526020882092885b818110620004a15750908460008051602062002bb983398151915299989796959493921062000487575b505050811b01600f55620003ad565b015160001960f88460031b161c1916905538808062000478565b82840151855593860193602093840193016200044e565b600f86527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802601f840160051c8101916020851062000518575b601f0160051c019082905b8281106200050c5750506200036d565b878155018290620004fc565b9091508190620004f1565b634e487b7160e01b86526022600452602486fd5b90607f169062000359565b634e487b7160e01b85526041600452602485fd5b8b5162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b015190503880620002db565b848852602088208594509190601f198416895b818110620005e257508411620005c8575b505050811b018155620002ef565b015160001960f88460031b161c19169055388080620005ba565b82840151855587969094019360209384019301620005a9565b90915083875260208720601f840160051c8101916020851062000647575b84939291601f87920160051c01915b82811062000638575050620002c3565b89815585945086910162000628565b909150819062000619565b634e487b7160e01b87526022600452602487fd5b90607f1690620002ac565b634e487b7160e01b86526041600452602486fd5b01519050388062000276565b888052602089208694509190601f1984168a5b818110620006dd57508411620006c3575b505050811b0185556200028a565b015160001960f88460031b161c19169055388080620006b5565b82840151855588969094019360209384019301620006a4565b90915087805260208820601f840160051c8101916020851062000742575b84939291601f88920160051c01915b828110620007335750506200025e565b8a815585945087910162000723565b909150819062000714565b634e487b7160e01b88526022600452602488fd5b90607f169062000247565b634e487b7160e01b600052604160045260246000fd5b8151815260209182019101620001d0565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200076c57604052565b919080601f84011215620007935782516001600160401b0381116200076c57602090620007f4601f8201601f1916830162000798565b92818452828287010111620007935760005b8181106200081c57508260009394955001015290565b85810183015184820184015282016200080656fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461025257806305e398331461024d57806306fdde0314610248578063081812fc14610243578063095ea7b31461023e57806313af403514610239578063150b7a021461023457806318160ddd146101b757806322ab47a11461022f57806323b872dd1461022a5780632a55205a14610225578063362c0cb5146102205780633cd8045e1461021b57806342842e0e14610216578063438b1b4b1461021157806351cff8d91461020c57806355f804b3146102075780636352211e1461020257806366c879a9146101fd5780636c0360eb146101f857806370a08231146101f3578063785e9e86146101ee578063879fbedf146101e95780638da5cb5b146101e45780639456fbcc146101df57806395d89b41146101da5780639659867e146101d5578063a035b1fe146101d0578063a0712d68146101cb578063a22cb465146101c6578063b88d4fde146101c1578063c87b56dd146101bc578063cb4f1c18146101b7578063d5abeb01146101b2578063e1c38ed9146101ad5763e985e9c5146101a857600080fd5b6116a0565b611682565b611664565b610712565b6115a6565b6114cd565b61143b565b61135e565b611340565b611322565b61127d565b610fbb565b610f92565b610f29565b610f00565b610e7e565b610de9565b610d7e565b610d3f565b610cc3565b610a3c565b610978565b6108a2565b610879565b6107ec565b610798565b61077f565b610730565b6106ee565b6105e8565b610514565b6104c0565b6103dd565b6102f4565b61026e565b6001600160e01b031981160361026957565b600080fd5b3461026957602036600319011261026957602060043561028d81610257565b63ffffffff60e01b166301ffc9a760e01b81149081156102e3575b81156102d2575b81156102c1575b506040519015158152f35b63152a902d60e11b149050386102b6565b635b5e139f60e01b811491506102af565b6380ac58cd60e01b811491506102a8565b3461026957600036600319011261026957602060ff601054166040519015158152f35b90600182811c92168015610347575b602083101461033157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610326565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761038957604052565b610351565b60005b8381106103a15750506000910152565b8181015183820152602001610391565b604091602082526103d1815180928160208601526020868601910161038e565b601f01601f1916010190565b34610269576000806003193601126104bd57604051908080546103ff81610317565b808552916001918083169081156104935750600114610439575b6104358561042981870382610367565b604051918291826103b1565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061047b57505050810160200161042982610435610419565b80546020858701810191909152909301928101610460565b8695506104359693506020925061042994915060ff191682840152151560051b8201019293610419565b80fd5b34610269576020366003190112610269576004356000526004602052602060018060a01b0360406000205416604051908152f35b6001600160a01b0381160361026957565b60243590610512826104f4565b565b3461026957604036600319011261026957600435610531816104f4565b60243560008181526002602052604081205490926001600160a01b03918216919033831480156105c5575b61056590611e32565b61059c8161057d866000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b16907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b50828552600560209081526040808720336000908152925290205460ff1661055c565b3461026957602036600319011261026957600435610605816104f4565b6008546001600160a01b039061061e9082163314611708565b811690811561065257600855337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60806003198201126102695760043561069f816104f4565b916024356106ac816104f4565b916044359160643567ffffffffffffffff9283821161026957806023830112156102695781600401359384116102695760248483010111610269576024019190565b34610269576106fc36610687565b50505050506020604051630a85bd0160e11b8152f35b34610269576000366003190112610269576020600c54604051908152f35b3461026957600036600319011261026957602060ff601354166040519015158152f35b60609060031901126102695760043561076b816104f4565b90602435610778816104f4565b9060443590565b346102695761079661079036610753565b91611eaf565b005b3461026957604036600319011261026957604060018060a01b03600754166127106107c76006546024356118d4565b0482519182526020820152f35b67ffffffffffffffff81116103895760051b60200190565b60403660031901126102695760043567ffffffffffffffff8111610269573660238201121561026957806004013590610824826107d4565b906108326040519283610367565b82825260209260248484019160051b8301019136831161026957602401905b82821061086a5761079684610864610505565b90611792565b81358152908401908401610851565b3461026957600036600319011261026957600a546040516001600160a01b039091168152602090f35b34610269576108b036610753565b90916108bd828483611eaf565b823b159283156108d1575b6107968461205d565b604051630a85bd0160e11b8082523360048301526001600160a01b039384166024830152604482019490945260806064820152600060848201819052909450602092859260a49284929091165af180156109735761079692600091610945575b506001600160e01b031916149038806108c8565b610966915060203d811161096c575b61095e8183610367565b810190612048565b38610931565b503d610954565b611b43565b606036600319011261026957600435610990816104f4565b602435604435916109a0836104f4565b6109b560018060a01b03600854163314611708565b6001926109c58460095414611743565b6002600955600d54838101809111610a375760125410610a2557836109ea8492611bc4565b6000925b828410610a09576109ff8385611d1f565b6107966001600955565b908093610a1d610a17611ba6565b8461209c565b0192906109ee565b60405163d05cb60960e01b8152600490fd5b61177c565b34610269576020806003193601126102695760048035610a5b816104f4565b6008546001600160a01b03938391610a769086163314611708565b600a54610a93906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa94851561097357600095610ca4575b50610ac385611b4f565b93610acd86611b4f565b96600e549081151580610c99575b15610c8e5790610af691610aef8247611b81565b94166121fa565b610b006000600e55565b600a5460009390610b19906001600160a01b0316610a87565b935b878110610b685788888860005b828110610b3157005b80610b62610b51610b4460019486611894565b516001600160a01b031690565b610b5b8388611894565b51906121fa565b01610b28565b825190631419245f60e11b8252828280610b89848b83019190602083019252565b0381895afa91821561097357600092610c5f575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561097357610c098a610c0f9260019686610c1796600093610c28575b50610bf590610c049394611894565b6001600160a01b039091169052565b6118be565b876118d4565b612710900490565b610c21828c611894565b5201610b1b565b610c04935090610c50610bf5928c8d3d10610c58575b610c488183610367565b810190611b34565b935090610be6565b503d610c3e565b610c80919250833d8511610c87575b610c788183610367565b810190611b8e565b9038610b9d565b503d610c6e565b505090504790610b00565b508084161515610adb565b610cbc919550823d8411610c5857610c488183610367565b9338610ab9565b346102695760203660031901126102695760043567ffffffffffffffff80821161026957366023830112156102695781600401359081116103895760405190610d16601f8201601f191660200183610367565b80825236602482850101116102695760208160009260246107969601838601378301015261197b565b34610269576020366003190112610269576004356000526002602052602060018060a01b0360406000205416610d76811515611df9565b604051908152f35b34610269576000806003193601126104bd57610da560018060a01b03600854163314611708565b600160ff19601054161760105560405180610dbf816118e7565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b34610269576000806003193601126104bd576040519080600f54610e0c81610317565b808552916001918083169081156104935750600114610e35576104358561042981870382610367565b9250600f83526000805160206123338339815191525b828410610e6657505050810160200161042982610435610419565b80546020858701810191909152909301928101610e4b565b3461026957602036600319011261026957600435610e9b816104f4565b6001600160a01b03168015610ecc576000526003602052610435604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b3461026957600036600319011261026957600b546040516001600160a01b039091168152602090f35b346102695760203660031901126102695760043580151580910361026957610f5c60018060a01b03600854163314611708565b60ff196013541660ff8216176013557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b34610269576000366003190112610269576008546040516001600160a01b039091168152602090f35b346102695760408060031936011261026957600490813590610fdc826104f4565b60243591610fe9836104f4565b6008546001600160a01b0394906110039086163314611708565b600a54611018906001600160a01b0316610a87565b835194859163e919ecad60e01b8352828460209485935afa9586156109735760009661125e575b5061104986611b4f565b9461105387611b4f565b976000600e549081151580611253575b156111f6575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa801561097357816110ad916110b4946000916111d9575b50611b81565b93876122c1565b6110be6000600e55565b600a54600093906110d7906001600160a01b0316610a87565b935b88811061111d5750505050505060005b8381106110f257005b80611117611105610b4460019487611894565b61110f8389611894565b5190856122c1565b016110e9565b825190631419245f60e11b825282828061113e848b83019190602083019252565b0381895afa918215610973576000926111ba575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561097357610c098b610c0f92600196866111a996600093610c285750610bf590610c049394611894565b6111b3828d611894565b52016110d9565b6111d2919250833d8511610c8757610c788183610367565b9038611152565b6111f09150883d8a11610c5857610c488183610367565b386110a7565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa9182156109735791611236575b50906110be565b61124d9150833d8511610c5857610c488183610367565b3861122f565b508285161515611063565b611276919650823d8411610c5857610c488183610367565b943861103f565b34610269576000806003193601126104bd57604051908060018054916112a283610317565b8086529282811690811561049357506001146112c8576104358561042981870382610367565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061130a57505050810160200161042982610435610419565b805460208587018101919091529093019281016112ef565b34610269576000366003190112610269576020600d54604051908152f35b34610269576000366003190112610269576020601154604051908152f35b60203660031901126102695760043560019061137d8260095414611743565b600260095560ff601354161561142957600d54818101809111610a375760125410610a25576011546113ad611da0565b600e54818101809111610a3757600e556113d0836113ca33611d34565b936118d4565b908101809111610a375703611417576113e833611c2b565b6000915b8183106113fd57506109ff91611d1f565b809261141061140a611ba6565b3361209c565b01916113ec565b60405163f7760f2560e01b8152600490fd5b6040516316851fc760e11b8152600490fd5b3461026957604036600319011261026957600435611458816104f4565b60243590811515809203610269573360009081526005602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b34610269576114db36610687565b9392906114e9838386611eaf565b813b159384156114fd575b6107968561205d565b602093945090600086939260a4604051809981978296630a85bd0160e11b9b8c855233600486015260018060a01b038097166024860152604485015260806064850152816084850152848401378181018301859052601f01601f19168101030193165af180156109735761079692600091611588575b506001600160e01b03191614388080806114f4565b6115a0915060203d811161096c5761095e8183610367565b38611573565b3461026957602036600319011261026957600435600d548111611652576040519060808201604052607f820190600a80603092818106840185530491825b6116395761043561161c61042986886080601f1992838101920301815261162d604051948592611616602085016118e7565b90611964565b64173539b7b760d91b815260050190565b03908101835282610367565b90809293600019019381810683018553049190826115e4565b604051635d68437560e11b8152600490fd5b34610269576000366003190112610269576020601254604051908152f35b34610269576000366003190112610269576020600e54604051908152f35b3461026957604036600319011261026957602060ff6116fc6004356116c4816104f4565b602435906116d1826104f4565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b1561170f57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b1561174a57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b91906117b360018060a01b03916117ae83600854163314611708565b611c6b565b60008351915b8282106117cc5750610512929350611d1f565b90600c908154801561188657600192600019809201905560006117ef8389611894565b5191828252602090600282526040600388828620541693611811851515611df9565b848652528320908154019055611844611834846000526002602052604060002090565b80546001600160a01b0319169055565b61185b611834846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a401906117b9565b63ce3a3d376000526004601cfd5b80518210156118a85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90606482029180830460641490151715610a3757565b81810292918115918404141715610a3757565b600f54600092916118f782610317565b91600190818116908115611951575060011461191257505050565b9091929350600f600052600080516020612333833981519152906000915b84831061193e575050500190565b8181602092548587015201920191611930565b60ff191683525050811515909102019150565b906119776020928281519485920161038e565b0190565b9061199160018060a01b03600854163314611708565b6001918260ff60105416151514611aa357805167ffffffffffffffff8111610389576119c7816119c2600f54610317565b611ab5565b60209384601f8311600114611a2f57508180916119fd9596600093611a24575b501b916000199060031b1c191617600f55611b14565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b8501519250386119e7565b600f600052601f19831695919291600080516020612333833981519152916000905b888210611a8c575050826119fd969710611a73575b5050811b01600f55611b14565b84015160001960f88460031b161c191690553880611a66565b808684958294958a01518155019401920190611a51565b6040516331d1c0a360e01b8152600490fd5b601f8111611ac1575050565b600090600f8252600080516020612333833981519152906020601f850160051c83019410611b0a575b601f0160051c01915b828110611aff57505050565b818155600101611af3565b9092508290611aea565b611b2c9060206040519282848094519384920161038e565b810103902090565b90816020910312610269575190565b6040513d6000823e3d90fd5b90611b59826107d4565b611b666040519182610367565b8281528092611b77601f19916107d4565b0190602036910137565b91908203918211610a3757565b908160209103126102695751611ba3816104f4565b90565b6001600c5401600c55600d5460018101809111610a375780600d5590565b611bcd81611d34565b6001600160a01b0333838216148015611c1f575b611bea57505050565b611bf2611da0565b8203611c1157600b541680611c0657505050565b610512923091612245565b63f7760f256000526004601cfd5b5080600b541615611be1565b611c3481611d34565b6001600160a01b0333838216148015611c5f575b611c5157505050565b600b541680611c0657505050565b5080600b541615611c48565b611c7481611d34565b6001600160a01b0333838216148015611d13575b611c9157505050565b6008546000908216803b63ffffffff16611cbb5750829050611c1157600b541680611c0657505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa9182156109735791611cf5575b50611bf2565b611d0d915060203d8111610c5857610c488183610367565b38611cef565b5080600b541615611c88565b10611d2657565b63dfb035c96000526004601cfd5b600b546001600160a01b0390811691908215611d995760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561097357600091611d81575090565b611ba3915060203d8111610c5857610c488183610367565b5050503490565b6008546000906001600160a01b0316803b63ffffffff16611dc2575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa9182156109735791611d81575090565b15611e0057565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606490fd5b15611e3957565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15611e7657565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9060018060a01b0380611ecc856000526002602052604060002090565b54169181841692830361201657611f22611f5d92821694611eee861515611e6f565b8433148015611fcf575b8015611f9b575b611f0890611e32565b6001600160a01b0316600090815260036020526040902090565b80546000190190556001600160a01b03811660009081526003602052604090208054600101905561057d856000526002602052604060002090565b611f74611834846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b50611f08611fc6610a87611fb98a6000526004602052604060002090565b546001600160a01b031690565b33149050611eff565b5061201161200a33611ff38460018060a01b03166000526005602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b611ef8565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b908160209103126102695751611ba381610257565b1561206457565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b6001600160a01b0391818316916120b4831515611e6f565b60009382855260026020526040852054166121c4576001600160a01b0381166000908152600360205260409020600181540190556121008161057d846000526002602052604060002090565b8183857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a43b1591821561213d575b5050610512915061205d565b604051630a85bd0160e11b8082523360048301526000602483018190526044830194909452608060648301526084820193909352919250602090829060a490829087905af19081156109735761051293916121a6575b506001600160e01b031916143880612131565b6121be915060203d811161096c5761095e8183610367565b38612193565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606490fd5b600080809381935af11561220a57565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561228557565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156122fb57565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfe8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a26469706673582212205588009a24b5d4f2bf92eb965eac9b2cfda65a5bf4edffda6bc1a6badf3c3dc664736f6c634300081300332a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
