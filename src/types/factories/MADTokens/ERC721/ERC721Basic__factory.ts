/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC721/ERC721Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxLoopAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPublicMintLimit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "PublicMintLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "mintedByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "result",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setPublicMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101408060405234620001c35762002a4a9081380380620000208162000202565b938439820191602081840312620001c35780516001600160401b0391828211620001c357019182840312620001c35762000059620001db565b928251828111620001c357816200007291850162000228565b84526020830151828111620001c357816200008f91850162000228565b60208501526040830151918211620001c357620000ae91830162000228565b60408301526060810151606083015260808101516080830152620000d560a0820162000298565b60a0830152620000e860c08201620002ad565b60c0830152620000fb60e0820162000298565b60e083015262000133610100926200011584840162000298565b848201526200012961012080940162000298565b83820152620002c2565b6040519061233f92836200070b84396080518381816107cc0152610fa9015260a0518381816111cc01526121a2015260c05183818161087c015281816108da0152818161183a01528181612094015261214d015260e051838181610ff8015281816120db015261229701525182818161169d0152818161204201526121ca0152518181816116620152611ec70152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061014082016001600160401b03811183821017620001fc57604052565b620001c7565b6040519190601f01601f191682016001600160401b03811183821017620001fc57604052565b919080601f84011215620001c35782516001600160401b038111620001fc576020906200025e601f8201601f1916830162000202565b92818452828287010111620001c3575f5b818110620002845750825f9394955001015290565b85810183015184820184015282016200026f565b51906001600160a01b0382168203620001c357565b51906001600160601b0382168203620001c357565b6200033390608060a0820191620003c0620003b4620003b46200037e6200034e60018060a01b03885116620003626200030561010089015160018060a01b031690565b606089015160e08a0151909391906001600160a01b03166101208b810151909e6001600160a01b0390911690565b9060c08c01956200035a6200034e885160018060601b031690565b6001600160601b031690565b9385620005d8565b620003716040880151620004e2565b516001600160601b031690565b95604051967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c5f80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b15f80a2620003ef600a600855565b620003fb815162000696565b6200040a6020820151620006d1565b01908151156200044357506401000000008151116200043157516001600160801b03169052565b604051636ad9efbd60e11b8152600490fd5b6331c9364360e01b8152600490fd5b90600182811c9216801562000482575b60208310146200046e57565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000462565b601f81116200049a575050565b60065f5260205f20906020601f840160051c83019310620004d7575b601f0160051c01905b818110620004cb575050565b5f8155600101620004bf565b9091508190620004b6565b80519091906001600160401b038111620001fc576200050e816200050860065462000452565b6200048d565b602080601f831160011462000553575081906200054293945f9262000547575b50508160011b915f199060031b1c19161790565b600655565b015190505f806200052e565b60065f52601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f925f905b878210620005bf575050836001959610620005a6575b505050811b01600655565b01515f1960f88460031b161c191690555f80806200059b565b8060018596829496860151815501950193019062000585565b6080959095525f80546001600160a01b0319166001600160a01b039788161790559094939092918015620006895782156200068957849281600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d155f80a21660c052168060e0526200067e5760a052565b60016101005260a052565b63d92e233d5f526004601cfd5b805180601f10620006cf5760209060011b910151177f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb55565bfe5b805180601f10620006cf5760209060011b910151177f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac5556fe60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a7146102df57806305e39833146102da57806306fdde03146102d5578063081812fc146102d0578063095ea7b3146102cb57806318160ddd1461022b57806322ab47a1146102c657806323b872dd146102c15780632a55205a146102bc5780633ca63f2c146102b75780633ccfd60b146102b25780633cd8045e146102ad57806340475c16146102a857806342842e0e146102a357806355f804b31461029e5780636352211e1461029957806366c879a91461029457806369d3e20e1461028f5780636c0360eb1461028a57806370a0823114610285578063769da94314610280578063785e9e861461027b578063879fbedf14610276578063893d20e8146102715780638c01d3081461026c578063911f51f91461026757806395d89b41146102625780639659867e1461025d578063a035b1fe14610258578063a22cb46514610253578063a70160231461024e578063a7fcf7b514610249578063b0f479a114610244578063b88d4fde1461023f578063bb485b881461023a578063be29184f14610235578063c87b56dd14610230578063cb4f1c181461022b578063d139e61214610226578063d5abeb0114610221578063d6ed26631461021c578063e1c38ed914610217578063e985e9c514610212578063ef3e067c1461020d5763f4f3b20014610208575f80fd5b6117a4565b611723565b6116df565b6116c2565b611686565b61163a565b611610565b6106ef565b6114e1565b611494565b611477565b6113c0565b6113a3565b6112e8565b611271565b6111ef565b6111b5565b611195565b611106565b6110e4565b6110c7565b6110aa565b61102b565b610fcc565b610f92565b610f2a565b610e2c565b610d27565b610c90565b610c54565b610a7d565b610a03565b6108fe565b6108ae565b610845565b610800565b610799565b610785565b61071e565b610626565b610562565b6104ce565b6103e6565b346103e25760206003193601126103e2576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036103e257807f01ffc9a700000000000000000000000000000000000000000000000000000000602092149081156103b8575b811561038e575b8115610364575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150145f610359565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150610352565b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915061034b565b5f80fd5b346103e2575f6003193601126103e257602060ff600754166040519015158152f35b5f5b8381106104195750505f910152565b818101518382015260200161040a565b60208060a052606051908160c0525f5b8281106104735750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f825f60e09485015201160190565b608081015160e08201528101610439565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104c78151809281602088015260208888019101610408565b0116010190565b346103e2575f6003193601126103e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f897572a87d0174092695c4d573af60ba2f538ab1e5fe57428eebc5ce7dad72bb54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061055d610429565b0160a0f35b346103e25760206003193601126103e257600435805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f2081010173ffffffffffffffffffffffffffffffffffffffff80825416156105d357602091600101549060405191168152f35b63ceea21b65f526004601cfd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103e257565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103e257565b60406003193601126103e25761063a6105e0565b6024359073ffffffffffffffffffffffffffffffffffffffff90811690825f52337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017601c5260205f2083018301908154169081156105d3578290823314331517156106cb575b600101557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a4005b9050815f526030600c2054156106e25782906106a1565b634b6e7f185f526004601cfd5b346103e2575f6003193601126103e2576020600a546fffffffffffffffffffffffffffffffff16604051908152f35b346103e2575f6003193601126103e257602060ff60075460081c166040519015158152f35b60031960609101126103e25773ffffffffffffffffffffffffffffffffffffffff9060043582811681036103e2579160243590811681036103e2579060443590565b61079761079136610743565b916118c6565b005b346103e25760406003193601126103e257604073ffffffffffffffffffffffffffffffffffffffff5f54166127106107f37f0000000000000000000000000000000000000000000000000000000000000000602435611a39565b0482519182526020820152f35b346103e25760206003193601126103e25773ffffffffffffffffffffffffffffffffffffffff61082e6105e0565b165f526009602052602060405f2054604051908152f35b346103e2575f6003193601126103e25760025433600c1b036108a1576107974773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612009565b631648fd015f526004601cfd5b346103e2575f6003193601126103e257602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60206003193601126103e25767ffffffffffffffff6004358181116103e257366023820112156103e25780600401359182116103e2576024810190602436918460051b0101116103e25761271082116109d957600a54806fffffffffffffffffffffffffffffffff1680848103119015176109cc578281039081116109c757600a555f5b82811061098b57005b806109c16109bc6109a76109a26001958888611a4c565b611a89565b6fffffffffffffffffffffffffffffffff1690565b611c27565b01610982565b611a0c565b63ce3a3d375f526004601cfd5b60046040517ffe37c8dc000000000000000000000000000000000000000000000000000000008152fd5b610a0c36610743565b610a178183856118c6565b813b610a1f57005b60405191602083019383851067ffffffffffffffff861117610a4a57610797946040525f8452611d10565b610dbe565b9181601f840112156103e25782359167ffffffffffffffff83116103e257602083818601950101116103e257565b346103e2576020806003193601126103e25767ffffffffffffffff6004358181116103e257610ab0903690600401610a4f565b9160025433600c1b036108a15760ff60075416610c2a578211610a4a57610ae182610adc600654610d6d565b611a96565b5f92601f8311600114610b695750610b308280610b38955f91610b5e575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b600655611b03565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f65f80a2005b90508301355f610aff565b60065f527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915f905b868210610c1257505083610b389510610bda575b5050600182811b01600655611b03565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690555f80610bca565b80600184958294958801358155019401920190610bb6565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e2576020610c72600435611b17565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103e2575f6003193601126103e25760025433600c1b036108a15760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600754161760075560405180610ce481611b66565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca05f80a2005b6fffffffffffffffffffffffffffffffff8116036103e257565b60206003193601126103e257600435610d3f81610d0d565b60ff60035416610d54575b6107979033611dd0565b60015433600c1b14610d4a57631648fd015f526004601cfd5b90600182811c92168015610db4575b6020831014610d8757565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610d7c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a4a57604052565b346103e2575f6003193601126103e2576040515f600654610e4c81610d6d565b80845290602090600190818116908115610ee25750600114610e89575b610e8585610e7981870382610deb565b60405191829182610484565b0390f35b60065f90815293507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b838510610ecf57505050508101602001610e7982610e85610e69565b8054868601840152938201938101610eb3565b869550610e8596935060209250610e799491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b8201019293610e69565b346103e25760206003193601126103e257610f436105e0565b8015610f85577f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c525f52602063ffffffff601c600c205416604051908152f35b638f4eb6045f526004601cfd5b346103e2575f6003193601126103e25760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103e2575f6003193601126103e257602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6004359081151582036103e257565b346103e25760206003193601126103e25761104461101c565b60025433600c1b036108a1576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e65f80a2005b346103e2575f6003193601126103e257600254600c1c5f5260205ff35b346103e2575f6003193601126103e2576020600554604051908152f35b346103e2575f6003193601126103e257602060ff600354166040519015158152f35b346103e2575f6003193601126103e2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007f30ec9400a6906cefbe2888cc908b6b5efeceee7bcd5438fa93fc189e1bbe64ac54607f8160011c166060521660805260a06040527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6061055d610429565b346103e2575f6003193601126103e2576020600a5460801c604051908152f35b346103e2575f6003193601126103e25760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346103e25760406003193601126103e2576112086105e0565b602435908115158092036103e25773ffffffffffffffffffffffffffffffffffffffff9181601c52670a5a2e7a00000000600852335f52806030600c20555f5216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa3005b346103e25760206003193601126103e25761128a6105e0565b33600c1b6001546002548032600c1b148092841416921416146108a15780156112db5780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a3005b63d92e233d5f526004601cfd5b60406003193601126103e2576112fc6105e0565b6024359061130982610d0d565b33600c1b916001926001546002548032600c1b148092841416921416146108a1576fffffffffffffffffffffffffffffffff1661271081116109d9578061135261138592611eae565b906001600a54928360801c93818386019501918260801b916fffffffffffffffffffffffffffffffff160117600a550190565b91905b82811061139157005b8061139d859284611f2d565b01611388565b346103e2575f6003193601126103e257600154600c1c5f5260205ff35b60806003193601126103e2576113d46105e0565b6113dc610603565b906044356064359267ffffffffffffffff938481116103e257611403903690600401610a4f565b9390946114118484846118c6565b823b61141957005b8411610a4a576040519361145560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160186610deb565b80855236818701116103e2576020815f92610797988389013786010152611d10565b346103e2575f6003193601126103e2576020600854604051908152f35b60406003193601126103e2576114a86105e0565b6024356114b481610d0d565b60ff600354166114c8575b61079791611dd0565b60015433600c1b146114bf57631648fd015f526004601cfd5b346103e25760206003193601126103e257600435600a805460801c82116115e657906040519060808201604052607f820192600a60309281810660300186530491825b6115af57610e8561157a610e79878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09283810192030181526115a360405194859261157460208501611b66565b90611c10565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610deb565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81939501948181068301865304919082611524565b60046040517fbad086ea000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e25761162961101c565b60025433600c1b036108a157600355005b346103e2575f6003193601126103e25760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103e2575f6003193601126103e25760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346103e2575f6003193601126103e2576020600454604051908152f35b346103e25760406003193601126103e2576116f86105e0565b611700610603565b601c52670a5a2e7a000000006008525f5260206030600c20546040519015158152f35b346103e25760206003193601126103e25760043560025433600c1b036108a157801561177a576020817f4de366374f8ef0a62246f5f9dc35e9463a14db6065d42d12d946079c615420cb92600855604051908152a1005b60046040517fa3f7d515000000000000000000000000000000000000000000000000000000008152fd5b346103e25760206003193601126103e2576117bd6105e0565b60025433600c1b036108a15780156112db5773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa9081156118c1575f80936044936010936020978492611892575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560015f511417161561188557005b6390b8ec185f526004601cfd5b6118b3919250883d8a116118ba575b6118ab8183610deb565b810190611fef565b905f611837565b503d6118a1565b611ffe565b9073ffffffffffffffffffffffffffffffffffffffff91821690821691835f52601c90337f7d8825530a5a2e7a00000000000000000000000000000000000000000000000017825260205f20850185019081548091168481148102156119f1575084156119e557835f5281600101805480331486331417156119cf575b6119c6575b5084841818905580600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8154019055825f5280600c2060018154019163ffffffff8316156119ba5750557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4565b6004906301336cea5f52fd5b5f90555f611948565b6030600c205461194357600485634b6e7f185f52fd5b60048363ea553b345f52fd5b8360049115611a035763a11481005f52fd5b63ceea21b65f52fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818102929181159184041417156109c757565b9190811015611a5c5760051b0190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b35611a9381610d0d565b90565b601f8111611aa2575050565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f840160051c83019310611af9575b601f0160051c01905b818110611aee575050565b5f8155600101611ae3565b9091508190611ada565b81604051928392833781015f815203902090565b73ffffffffffffffffffffffffffffffffffffffff90805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f2081010154169081156105d357565b6006545f9291611b7582610d6d565b91600190818116908115611bdf5750600114611b9057505050565b909192935060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f915b848310611bcc575050500190565b8181602092548587015201920191611bbe565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90611c2360209282815194859201610408565b0190565b611c3081611b17565b50805f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f208101810180549073ffffffffffffffffffffffffffffffffffffffff82169081156105d357815f5280600101928354801560011715611cfe575b905f948492611cf5575b50189055601c600c207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b8590555f611ca0565b906030600c2054156106e25790611c96565b9060a473ffffffffffffffffffffffffffffffffffffffff9460209460405196879563150b7a0287523388880152166040860152606085015260808085015280518091818060a0880152611dbc575b505001905f601c8401915af115611da7575b517feaf485fe0000000000000000000000000000000000000000000000000000000001611d9a57565b63d1a57ed65f526004601cfd5b3d611db4575f8152611d71565b3d5f803e3d5ffd5b818760c08801920160045afa50805f611d5f565b906fffffffffffffffffffffffffffffffff1661271081116109d957611df581611eae565b73ffffffffffffffffffffffffffffffffffffffff8216805f52600960205260405f20548281018091116109c75760085410611e84575f52600960205260405f209081548181018091116109c757611e629255611352611e5b60075460ff9060081c1690565b8483612025565b91905b828110611e7157505050565b80611e7e60019284611f2d565b01611e65565b60046040517f303b682f000000000000000000000000000000000000000000000000000000008152fd5b8015611f03576fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690600a5460801c0111611ef657565b63d05cb6095f526004601cfd5b60046040517f1f2a2005000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff168015611fe257815f527f7d8825530a5a2e7a000000000000000000000000000000000000000000000000601c5260205f208201820180548060601b611fd55782179055805f52601c600c2060018154019063ffffffff821615611fc857555f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4565b6301336cea5f526004601cfd5b63c991cbb15f526004601cfd5b63ea553b345f526004601cfd5b908160209103126103e2575190565b6040513d5f823e3d90fd5b5f80809381935af11561201857565b63b12d13eb5f526004601cfd5b90911561217457816120369161219e565b9081612040575050565b7f000000000000000000000000000000000000000000000000000000000000000015612120576005548281018091116109c7576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c5260205f6064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d1560015f5114171615612113575f606052604052565b637939f4245f526004601cfd5b50600454908082018092116109c7576121729160045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612009565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b91907f0000000000000000000000000000000000000000000000000000000000000000908115612302577f000000000000000000000000000000000000000000000000000000000000000061222b57506121fa34933492611a39565b0361220157565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9384156118c1575f946122db575b50906122d291611a39565b80921061220157565b6122d2929194506122fa9060203d6020116118ba576118ab8183610deb565b9390916122c7565b505f92505056fea26469706673582212206640fbe3be6fe8e5ae81dc5fa37061e8a1836a134f280024b93f669a8153308864736f6c63430008160033";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC721Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721Basic__factory {
    return super.connect(runner) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new Interface(_abi) as ERC721BasicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721Basic {
    return new Contract(address, _abi, runner) as unknown as ERC721Basic;
  }
}
