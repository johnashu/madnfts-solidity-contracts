/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxBatchAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPublicMintLimit",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "_publicMintStates",
        type: "bool[]",
      },
    ],
    name: "BatchPublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "MaxSupplySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "PublicMintLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_BATCH_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint256[]",
        name: "_maxSupplies",
        type: "uint256[]",
      },
    ],
    name: "batchSetMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "_ids",
        type: "uint128[]",
      },
      {
        internalType: "bool[]",
        name: "_publicMintStates",
        type: "bool[]",
      },
      {
        internalType: "uint256[]",
        name: "_maxSupplies",
        type: "uint256[]",
      },
    ],
    name: "batchSetPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "mintedByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "minted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "publicMintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "publicMintLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintLimitDefault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "publicMintState",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "setMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setPublicMintLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "_maxSupply",
        type: "uint128",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001b35762003492803803806200001f81620001f2565b928339810190602081830312620001b35780516001600160401b0391828211620001b357019261014084840312620001b3576200005b620001cb565b918451818111620001b35784620000749187016200023b565b83526020850151818111620001b35784620000919187016200023b565b60208401526040850151908111620001b3576200013293620000b59186016200023b565b60408301526060840151606083015260808401516080830152620000dc60a0850162000292565b60a0830152620000ef60c08501620002a7565b60c08301526200010260e0850162000292565b60e08301526200012881610100956200011d87820162000292565b878601520162000292565b90820152620002ea565b604051612e1f9182620006738339608051828181610a750152611845015260a051828181611b200152612bdd015260c051828181610ffc0152818161104d015281816121db015281816128cd0152612986015260e051828181611894015281816129140152612cd2015251818181611ccc0152818161287b0152612c050152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061014082016001600160401b03811183821017620001ec57604052565b620001b7565b6040519190601f01601f191682016001600160401b03811183821017620001ec57604052565b5f5b8381106200022a5750505f910152565b81810151838201526020016200021a565b81601f82011215620001b35780516001600160401b038111620001ec576200026d601f8201601f1916602001620001f2565b9281845260208284010111620001b3576200028f916020808501910162000218565b90565b51906001600160a01b0382168203620001b357565b51906001600160601b0382168203620001b357565b60409160208252620002de815180928160208601526020868601910162000218565b601f01601f1916010190565b60a081018051610100830151606084015160e085015161012086015160c0870180515f987f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b989792966200042996620003a2966200037396604096949562000387956001600160a01b0390811695811694928116931691906200037f906001600160601b03168a565b6001600160601b031690565b9385620005b4565b0193620003958551620004be565b516001600160601b031690565b91620003f2620003e6620003e66040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a262000421600a600b55565b5182620002bc565b0390a2565b90600182811c921680156200045e575b60208310146200044a57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916200043e565b601f811162000476575050565b60065f5260205f20906020601f840160051c83019310620004b3575b601f0160051c01905b818110620004a7575050565b5f81556001016200049b565b909150819062000492565b80519091906001600160401b038111620001ec57620004ea81620004e46006546200042e565b62000469565b602080601f83116001146200052f575081906200051e93945f9262000523575b50508160011b915f199060031b1c19161790565b600655565b015190505f806200050a565b60065f52601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f925f905b8782106200059b57505083600195961062000582575b505050811b01600655565b01515f1960f88460031b161c191690555f808062000577565b8060018596829496860151815501950193019062000561565b6080959095525f80546001600160a01b0319166001600160a01b039788161790559094939092918015620006655782156200066557849281600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d155f80a21660c052168060e0526200065a5760a052565b60016101005260a052565b63d92e233d5f526004601cfdfe60806040526004361015610011575f80fd5b5f3560e01c8062fdd58e1461030357806301ffc9a7146102fe57806305e39833146102f95780630e89341c146102f457806315e89173146102ef5780631a759141146102ea5780632665e5a1146102e55780632a2fd743146102e05780632a55205a146102db5780632c8701a4146102d65780632eb2c2d6146102d157806339e55ae6146102cc5780633ccfd60b146102c75780633cd8045e146102c257806342abcd66146102bd5780634e1273f4146102b85780634fe9632b146102b3578063514d3e90146102ae57806355f804b3146102a95780635f68f739146102a457806366c879a91461029f578063685d2ca51461029a5780636c0360eb14610295578063769da94314610290578063785e9e861461028b578063795e15f0146102865780637cc22f7014610281578063869f75941461027c578063893d20e8146102775780638c01d30814610272578063911f51f91461026d5780639762287014610268578063a035b1fe14610263578063a22cb4651461025e578063a701602314610259578063b0f479a114610254578063c363989f1461024f578063d139e6121461024a578063d6ed266314610245578063dfe7a8e514610240578063e1c38ed91461023b578063e985e9c514610236578063ef00385f14610231578063f06f04f21461022c578063f204ed5914610227578063f242432a146102225763f4f3b2001461021d575f80fd5b612145565b611f94565b611e88565b611dc5565b611da8565b611d63565b611d46565b611cf1565b611cb5565b611c87565b611c58565b611c3b565b611bc4565b611b43565b611b09565b611acf565b611a67565b611a4a565b611a2d565b611a03565b6118e2565b6118b8565b611868565b61182e565b611740565b6115b3565b6114d2565b61148b565b6112b4565b6111c2565b6111a6565b61112a565b611071565b611021565b610fc5565b610f73565b610ce1565b610b9b565b610a42565b610957565b610755565b6106e8565b61064e565b61051f565b610492565b61038f565b610352565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361032b57565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361032b57565b3461032b57604060031936011261032b5761036b610308565b60601b679a31110384e0b0c9176020526024355f52602060405f2054604051908152f35b3461032b57602060031936011261032b576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361032b57807f01ffc9a70000000000000000000000000000000000000000000000000000000060209214908115610468575b811561043e575b8115610414575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150145f610409565b7f0e89341c0000000000000000000000000000000000000000000000000000000081149150610402565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506103fb565b3461032b575f60031936011261032b57602060ff600754166040519015158152f35b5f5b8381106104c55750505f910152565b81810151838201526020016104b6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261051881518092816020880152602088880191016104b4565b0116010190565b3461032b57602060031936011261032b57600435610549815f52600860205260405f205460801c90565b156106415760405160808101604052607f810191600a8060309281810660300186530491825b61060a576106066105c56105fa878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09283810192030181526105ee6040519485926105bf60208501612267565b90612311565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610ad6565b604051918291826104d5565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193950194818106830186530491908261056f565b63bad086ea5f526004601cfd5b3461032b57604060031936011261032b5760043560243560025433600c1b036106db5780156106b15760207f4e6ff992c584c0d612d436008ae5b8a6f64958e2f797e91328862c499cc01b0c91835f52600c82528060405f2055604051908152a2005b60046040517fa3f7d515000000000000000000000000000000000000000000000000000000008152fd5b631648fd015f526004601cfd5b3461032b57602060031936011261032b576004355f52600860205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b9181601f8401121561032b5782359167ffffffffffffffff831161032b576020808501948460051b01011161032b57565b3461032b57606060031936011261032b5767ffffffffffffffff6004803582811161032b576107879036908301610724565b9060243584811161032b5761079f9036908501610724565b93909460443590811161032b576107b99036908301610724565b9060029260025433600c1b908103610927576103e887116108fe57929332600c1b93905f5b888110610827578a7f37184bc8c61f6571cc7e9b9ed98e0c341fb034179c0bfc4e23662aa0a27ba7da8b6108128c8c612379565b92610822604051928392836123cb565b0390a2005b610832818a8a612355565b3561083c81610933565b610847828988612355565b3590600154845490818a14809188141691871416146108f257896108bc61089c8f8f968f61089161088c8360019b61089796610887839d6108ec9d6124d9565b612355565b61236f565b95612355565b612365565b6fffffffffffffffffffffffffffffffff165f52600a60205260405f2090565b9060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b016107de565b85631648fd015f52601cfd5b506040517fe8d3ed23000000000000000000000000000000000000000000000000000000008152fd5b50631648fd015f52601cfd5b6fffffffffffffffffffffffffffffffff81160361032b57565b8015150361032b57565b3461032b57606060031936011261032b5760043561097481610933565b602435906109818261094d565b60443561098d81610933565b60025433600c1b908082149081156106db576fffffffffffffffffffffffffffffffff926001549132600c1b1491829114169116146106db577f1df74b1bbe2d9862e1838e58943cd191c5fc878e5fae8f970fcba31148b0f7a4926109f68260209416826124d9565b1692835f52600a8252610a378160405f209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b6040519015158152a2005b3461032b57604060031936011261032b57604073ffffffffffffffffffffffffffffffffffffffff5f5416612710610a9c7f0000000000000000000000000000000000000000000000000000000000000000602435612440565b0482519182526020820152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610b1757604052565b610aa9565b90929167ffffffffffffffff8411610b17578360051b6020926020604051610b4682850182610ad6565b809781520191810192831161032b57905b828210610b645750505050565b8380918335610b7281610933565b815201910190610b57565b9080601f8301121561032b57816020610b9893359101610b1c565b90565b606060031936011261032b57610baf610308565b67ffffffffffffffff9060243582811161032b57610bd1903690600401610b7d565b9160443590811161032b57610bea903690600401610724565b60ff60039492945416610c9a575b8151600190815f5b828110610c3e57505091610c2f869286610c2a610c3696610c2486610c3c9c61281e565b90612440565b61285e565b3691610b1c565b916125a1565b005b8551811015610c9557600a60206fffffffffffffffffffffffffffffffff818460051b8a010151165f5252610c80610c7b60405f2060ff90541690565b151590565b15610c8d575b8101610c00565b5f9350610c86565b612328565b60015433600c1b14610bf857631648fd015f526004601cfd5b9181601f8401121561032b5782359167ffffffffffffffff831161032b576020838186019501011161032b57565b3461032b5760a060031936011261032b57610cfa610308565b610d0261032f565b906044359167ffffffffffffffff9081841161032b57610d2760049436908601610724565b909260643581811161032b57610d409036908801610724565b9160843590811161032b57610d589036908901610cb3565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610f6757893303610f4e575b928b9297969594918b9460051b915f5b838103610ee1575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610e3157005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a905f91f115610ecc575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610ec157005b639c05499b5f52601cfd5b3d610ed9575f8152610e98565b3d5f803e3d5ffd5b91939697829193965080999a9550013590828d52808501355f526040805f208054808511610f40578490039055848e525f20805490928101908110610f34578d925501918b94918d949998979693610d9b565b8f6301336cea5f52601cfd5b50508f63f4d678b85f52601cfd5b335f526034600c2054610d8b578c634b6e7f185f52601cfd5b8c63ea553b345f52601cfd5b3461032b57604060031936011261032b57610f8c61032f565b6004355f52600d60205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f52602052602060405f2054604051908152f35b3461032b575f60031936011261032b5760025433600c1b036106db57610c3c4773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166129d7565b3461032b575f60031936011261032b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461032b57602060031936011261032b57602061109c6004355f52600860205260405f205460801c90565b604051908152f35b604060031982011261032b5767ffffffffffffffff9160043583811161032b57826110d191600401610724565b9390939260243591821161032b576110eb91600401610724565b9091565b60209060206040818301928281528551809452019301915f5b828110611116575050505090565b835185529381019392810192600101611108565b3461032b57611138366110a4565b91820361119957604080519280845260051b916020946020858501016040525f5b84810361116e576040518061060688826110ef565b80879183013560601b679a31110384e0b0c9178252808401355f52845f205482828901015201611159565b633b800a465f526004601cfd5b3461032b575f60031936011261032b5760206040516103e88152f35b3461032b576111d0366110a4565b919232600c1b9033600c1b906001956001549160029260025490818714809187141691861416146106db576103e8821161128a57818703611260575f5b82811061121657005b611221818484612355565b359061122c82610933565b611237818a8a612355565b35918a54865490818a1480918a141691891416146106db578a9261125a916124d9565b0161120d565b60046040517f3b800a46000000000000000000000000000000000000000000000000000000008152fd5b60046040517fe8d3ed23000000000000000000000000000000000000000000000000000000008152fd5b3461032b5760208060031936011261032b5767ffffffffffffffff60043581811161032b576112e7903690600401610cb3565b9160025433600c1b036106db5760ff60075416611461578211610b1757611318826113136006546116ef565b612458565b5f92601f83116001146113a05750611367828061136f955f91611395575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b6006556124c5565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f65f80a2005b90508301355f611336565b60065f527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915f905b8682106114495750508361136f9510611411575b5050600182811b016006556124c5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690555f80611401565b806001849582949588013581550194019201906113ed565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b3461032b57604060031936011261032b576004356114a881610933565b33600c1b6001546002548032600c1b148092841416921416146106db57610c3c90602435906124d9565b3461032b575f60031936011261032b5760025433600c1b036106db5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060075416176007556040518061152681612267565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca05f80a2005b606060031982011261032b5760043573ffffffffffffffffffffffffffffffffffffffff8116810361032b579167ffffffffffffffff60243581811161032b578361159c91600401610b7d565b9260443591821161032b57610b9891600401610b7d565b6115bc3661154f565b909133600c1b6001546002548032600c1b148092841416921416146106db576115e36126cc565b916115ee81856129f3565b8051845103611199578160601b9283156116e257602093679a31110384e0b0c9178452845160051b925f915b82858114611656578601928680828701015191890101515f5260405f208054918201918210611649575561161a565b6301336cea5f526004601cfd5b508387875f604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6116d957005b610c3c93612a72565b63ea553b345f526004601cfd5b90600182811c92168015611736575b602083101461170957565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916116fe565b3461032b575f60031936011261032b576040515f600654611760816116ef565b808452906020906001908181169081156117e6575060011461178d575b610606856105fa81870382610ad6565b60065f90815293507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8385106117d3575050505081016020016105fa8261060661177d565b80548686018401529382019381016117b7565b869550610606969350602092506105fa9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101929361177d565b3461032b575f60031936011261032b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461032b575f60031936011261032b57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461032b57602060031936011261032b576004355f52600c602052602060405f2054604051908152f35b6118eb3661154f565b909133600c1b6001546002548032600c1b148092841416921416146106db576119148284612d44565b8151835103611199578060601b9160209280679a31110384e0b0c917845215600117156119e9575b835160051b915f905b81848114611981578501918580828601015191880101515f5260405f2090815480821161197457039055611945565b63f4d678b85f526004601cfd5b5f82877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a88604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a4005b5f80526034600c205461193c57634b6e7f185f526004601cfd5b3461032b57602060031936011261032b576004355f526009602052602060405f2054604051908152f35b3461032b575f60031936011261032b57600254600c1c5f5260205ff35b3461032b575f60031936011261032b576020600554604051908152f35b3461032b575f60031936011261032b57602060ff600354166040519015158152f35b600319606091011261032b5760043573ffffffffffffffffffffffffffffffffffffffff8116810361032b5790602435611ac281610933565b90604435610b9881610933565b611ad836611a89565b60ff60039392935416611af0575b610c3c92826126ef565b60015433600c1b14611ae657631648fd015f526004601cfd5b3461032b575f60031936011261032b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461032b57604060031936011261032b5773ffffffffffffffffffffffffffffffffffffffff611b71610308565b602435611b7d8161094d565b1515679a31110384e0b0c960205233601452815f52806034600c20555f5216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa3005b3461032b57602060031936011261032b57611bdd610308565b33600c1b6001546002548032600c1b148092841416921416146106db578015611c2e5780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a3005b63d92e233d5f526004601cfd5b3461032b575f60031936011261032b57600154600c1c5f5260205ff35b3461032b57602060031936011261032b576004355f52600a602052602060ff60405f2054166040519015158152f35b3461032b57602060031936011261032b57600435611ca48161094d565b60025433600c1b036106db57600355005b3461032b575f60031936011261032b5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b604060031936011261032b57600435611d0981610933565b60243590611d1682610933565b60ff60035416611d2d575b610c3c913391336126ef565b60015433600c1b14611d2157631648fd015f526004601cfd5b3461032b575f60031936011261032b576020600454604051908152f35b3461032b57604060031936011261032b57611d7c610308565b611d8461032f565b90679a31110384e0b0c96020526014525f5260206034600c20546040519015158152f35b3461032b575f60031936011261032b576020600b54604051908152f35b611dce36611a89565b919033600c1b6001546002548032600c1b148092841416921416146106db576fffffffffffffffffffffffffffffffff8091169216611e0d8184612db9565b8160601b80679a31110384e0b0c9176020521560011715611e6e575b825f5260405f209283549384831161197457825f950390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4005b5f80526034600c2054611e2957634b6e7f185f526004601cfd5b611e9136611a89565b9033600c1b6001546002548032600c1b148092841416921416146106db576fffffffffffffffffffffffffffffffff808093169116611ece6126cc565b92815f5260096020528060405f20541690600860205260405f209182548060801c8601918211611f8757859160801b9216011790558360601b156116e257679a31110384e0b0c960205283601452805f5260405f208054908382019182106116495755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611f7e57005b610c3c93612b3f565b63d05cb6095f526004601cfd5b3461032b5760a060031936011261032b57611fad610308565b611fb561032f565b604435906064356084359367ffffffffffffffff851161032b57611fde60049536908701610cb3565b9091679a31110384e0b0c99060601b81179460601b179160209480865260601c938360601c93841561213957853303612120575b875f5260405f208054808411612114578390039055865260405f2080549082820191821061210857558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405fa4833b61206e57005b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c401905f601c8401915af1156120fb575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001610ec157005b3d610ed9575f81526120d2565b896301336cea5f52601cfd5b8a63f4d678b85f52601cfd5b335f526034600c20546120125788634b6e7f185f52601cfd5b8863ea553b345f52601cfd5b3461032b57602060031936011261032b5761215e610308565b60025433600c1b036106db578015611c2e5773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115612262575f80936044936010936020978492612233575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560015f511417161561222657005b6390b8ec185f526004601cfd5b612254919250883d8a1161225b575b61224c8183610ad6565b810190612804565b905f6121d8565b503d612242565b612813565b6006545f9291612276826116ef565b916001908181169081156122e0575060011461229157505050565b909192935060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f915b8483106122cd575050500190565b81816020925485870152019201916122bf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90612324602092828151948592016104b4565b0190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9190811015610c955760051b0190565b35610b9881610933565b35610b988161094d565b60405191829182915f5b8181106123935750505003902090565b919350916001906fffffffffffffffffffffffffffffffff85356123b681610933565b16815260208091019401910191849392612383565b90916040602092826020820160208352520192915f5b8281106123ef575050505090565b90919293828060019287356124038161094d565b15158152019501939291016123e1565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181029291811591840414171561245357565b612413565b601f8111612464575050565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f840160051c830193106124bb575b601f0160051c01905b8181106124b0575050565b5f81556001016124a5565b909150819061249c565b81604051928392833781015f815203902090565b6fffffffffffffffffffffffffffffffff1690815f52600960205260405f205461259d5764010000000081116125735780156125495760207f5af22a09e6677efe5d29d19bf6a17f71d28caad7707022d8eab337320df9f50d91835f52600982528060405f2055604051908152a2565b60046040517f31c93643000000000000000000000000000000000000000000000000000000008152fd5b60046040517fd5b3df7a000000000000000000000000000000000000000000000000000000008152fd5b5050565b90929133600c1b6001546002548032600c1b148092841416921416146106db576125c96126cc565b6125d382866129f3565b8151855103611199578260601b9384156116e257602094679a31110384e0b0c9178552855160051b935f925b8386811461262e5787019387808288010151918a0101515f5260405f20805491820191821061164957556125ff565b50945094909591505f604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6126ba575b50505050565b6126c393612a72565b5f8080806126b4565b604051906020820182811067ffffffffffffffff821117610b17576040525f8252565b926127226fffffffffffffffffffffffffffffffff80809516931691825f52600a60205260ff60405f205416908461285e565b33600c1b6001546002548032600c1b148092841416921416146106db576127476126cc565b92815f5260096020528060405f20541690600860205260405f209182548060801c8601918211611f8757859160801b9216011790558360601b156116e257679a31110384e0b0c960205283601452805f5260405f208054908382019182106116495755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b6127fb5750505050565b6126c393612b3f565b9081602091031261032b575190565b6040513d5f823e3d90fd5b5f92918061282a575050565b60051b81013d1515905b811561283f57505050565b909193602090853501940191818310156128595790612834565b505050565b9091156129ad578161286f91612bd9565b9081612879575050565b7f00000000000000000000000000000000000000000000000000000000000000001561295957600554828101809111612453576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c5260205f6064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d1560015f511417161561294c575f606052604052565b637939f4245f526004601cfd5b5060045490808201809211612453576129ab9160045573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166129d7565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b5f80809381935af1156129e657565b63b12d13eb5f526004601cfd5b90815190805182036111995790602083818080960194019260051b0101915b828103612a1f5750505050565b80515f5260098452604090815f2091600886525f2091549082549260809380851c865101938411611f8757879485948751911b916fffffffffffffffffffffffffffffffff160117905501910190612a12565b60a460209392604051958694859263bc197c81845233888501525f604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d010301905f601c8401915af115612b32575b517f43e6837f0000000000000000000000000000000000000000000000000000000001612b2557565b639c05499b5f526004601cfd5b3d610ed9575f8152612afc565b6020929360405194859363f23a6e61855233868601525f60408601526060850152608084015260a08084015280518091818060c0870152612bc5575b505060c401905f601c8401915af115612bb8575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001612b2557565b3d610ed9575f8152612b8f565b818660e08701920160045afa50805f612b7b565b91907f0000000000000000000000000000000000000000000000000000000000000000908115612d3d577f0000000000000000000000000000000000000000000000000000000000000000612c665750612c3534933492612440565b03612c3c57565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa938415612262575f94612d16575b5090612d0d91612440565b809210612c3c57565b612d0d92919450612d359060203d60201161225b5761224c8183610ad6565b939091612d02565b505f925050565b90815190805182036111995790602083818080960194019260051b0101915b828103612d705750505050565b6008845280515f5260405f2080546fffffffffffffffffffffffffffffffff1691828451810311831517612dac57859283925501910190612d63565b63ce3a3d375f526004601cfd5b60086020525f5260405f2080546fffffffffffffffffffffffffffffffff1691820391808311901517612dac575556fea2646970667358221220a821bab75db916fc0f5930dcc117eca40ba3b38462c705e72175d5add2a5e2b764736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
