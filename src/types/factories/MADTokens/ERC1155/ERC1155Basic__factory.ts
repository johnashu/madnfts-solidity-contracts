/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  Types,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxIdBalance",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234620001f157620033f9803803806200001e8162000233565b928339810190604081830312620001f15780516001600160401b0390818111620001f157820192610120928385830312620001f1576200005d6200020c565b918551848111620001f15781620000769188016200027e565b83526020860151848111620001f15781620000939188016200027e565b60208401526040860151848111620001f15781620000b39188016200027e565b60408401526060860151606084015260808601516080840152620000da60a08701620002d5565b60a0840152620000ed60c08701620002ea565b60c08401526200010060e08701620002d5565b60e084015262000115610100809701620002d5565b868401526020820151938411620001f1576200013e93620001379201620002ff565b5062000395565b60405190612e96928362000563843960805183818161071901526114ab015260a05183818161075b01528181610ac901528181610ea10152611652015260c0518381816114fb0152818161213a015281816122a701528181612502015281816125f20152818161267d015281816126d60152612790015260e05183818161187a01526122d10152518281816119f00152818161209501526122000152518181816106da015281816128440152612a3b0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061012082016001600160401b038111838210176200022d57604052565b620001f6565b6040519190601f01601f191682016001600160401b038111838210176200022d57604052565b60005b8381106200026d5750506000910152565b81810151838201526020016200025c565b81601f82011215620001f15780516001600160401b0381116200022d57620002b0601f8201601f191660200162000233565b9281845260208284010111620001f157620002d2916020808501910162000259565b90565b51906001600160a01b0382168203620001f157565b51906001600160601b0382168203620001f157565b81601f82011215620001f1578051916001600160401b0383116200022d578260051b60209283806200033381850162000233565b809781520192820101928311620001f1578301905b82821062000357575050505090565b8151815290830190830162000348565b6040916020825262000389815180928160208601526020868601910162000259565b601f01601f1916010190565b604081018051606083015190608084019182519160018060a01b03958660a0820151169360018060601b0360c0830151169360e083015198808a1690610100809501511690866080528015620005115732156200051157600c9a8b1b611000600160ac1b03166000908155329b8c901b6001559a337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698d80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d158b80a260a087905260c0526200046b600160801b83106200051f565b60e0526001600160801b03169052620004849062000527565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8580a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18480a2516001600160801b03166101205251604051620004eb81928262000367565b037f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b91a2565b63aa7feadc6000526004601cfd5b15620001f157565b805180601f10620005605760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfefe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028157806301ffc9a71461027c57806305e39833146102775780630e89341c1461027257806318160ddd146101eb5780631a7591411461026d57806322ab47a1146102685780632670d17d146102635780632a55205a1461025e5780632eb2c2d6146102595780633cd8045e1461025457806342abcd661461024f5780634e1273f41461024a5780634fc4a9391461024557806351cff8d91461024057806355f804b31461023b5780636009074b1461023657806365ca075b1461023157806366c879a91461022c5780636c0360eb14610227578063769da94314610222578063785e9e861461021d578063879fbedf14610218578063893d20e8146102135780638c01d3081461020e5780639456fbcc146102095780639659867e14610204578063a035b1fe146101ff578063a22cb465146101fa578063a7016023146101f5578063b0f479a1146101f0578063cb4f1c18146101eb578063d5abeb01146101e6578063dfe7a8e5146101e1578063e1c38ed9146101dc578063e985e9c5146101d7578063eb5ec4f2146101d2578063eca32ab9146101cd5763f242432a146101c857600080fd5b611cf9565b611c40565b611afa565b611ac6565b611aa8565b611a14565b6119c7565b61061d565b6119a9565b611927565b61189d565b611862565b611841565b611610565b6115cd565b6115ad565b61151f565b6114ce565b611493565b611422565b61139b565b6112da565b611211565b61111b565b610e51565b610dfc565b610b5d565b610aed565b610a9c565b6107e3565b6106fe565b6106b1565b61068b565b61064d565b61048e565b6103fe565b6102fb565b6102b8565b73ffffffffffffffffffffffffffffffffffffffff8116036102a457565b600080fd5b606435906102b682610286565b565b346102a45760406003193601126102a4576004356102d581610286565b60601b679a31110384e0b0c9176020526024356000526020604060002054604051908152f35b346102a45760206003193601126102a4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102a457807f01ffc9a700000000000000000000000000000000000000000000000000000000602092149081156103d4575b81156103aa575b8115610380575b506040519015158152f35b7f2a55205a0000000000000000000000000000000000000000000000000000000091501438610375565b7f0e89341c000000000000000000000000000000000000000000000000000000008114915061036e565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149150610367565b346102a45760006003193601126102a457602060ff600554166040519015158152f35b60005b8381106104345750506000910152565b8181015183820152602001610424565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104878151809281602088015260208888019101610421565b0116010190565b346102a45760206003193601126102a4576004356104ba81600052600660205260406000205460801c90565b61060f5761051b6060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405160808101604052607f810192600a80603092818106840187530491825b6105d8576105d461058d6105c888886105bc6105938a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09586810192030181526040519687946020860190612068565b90612068565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610c83565b60405191829182610444565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193960195818106830187530491908261053b565b63bad086ea6000526004601cfd5b346102a45760006003193601126102a45760206004546fffffffffffffffffffffffffffffffff16604051908152f35b346102a45760206003193601126102a457600435600052600660205260206fffffffffffffffffffffffffffffffff60406000205416604051908152f35b346102a45760006003193601126102a457602060ff60055460081c166040519015158152f35b346102a45760006003193601126102a45760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760406003193601126102a45760406127106107407f0000000000000000000000000000000000000000000000000000000000000000602435612055565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b9181601f840112156102a45782359167ffffffffffffffff83116102a4576020808501948460051b0101116102a457565b9181601f840112156102a45782359167ffffffffffffffff83116102a457602083818601950101116102a457565b346102a45760a06003193601126102a4576004803561080181610286565b60243561080d81610286565b67ffffffffffffffff906044358281116102a45761082e9036908601610784565b90926064358181116102a4576108479036908801610784565b916084359081116102a45761085f90369089016107b5565b92808503610a8f57606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610a8257893303610a67575b928b9297969594918b9460051b9160005b8381036109f5575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b61094057005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a90600091f1156109dd575b517f43e6837f00000000000000000000000000000000000000000000000000000000016109d157005b639c05499b600052601cfd5b3d6109eb57600081526109a8565b3d6000803e3d6000fd5b91939697829193965080999a9550013590828d52808501356000526040806000208054808511610a58578490039055848e52600020805490928101908110610a4b578d925501918b94918d9499989796936108aa565b8f6301336cea600052601cfd5b50508f63f4d678b8600052601cfd5b336000526034600c2054610899578c634b6e7f18600052601cfd5b8c63ea553b34600052601cfd5b88633b800a46600052601cfd5b346102a45760006003193601126102a457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760206003193601126102a4576020610b1a600435600052600660205260406000205460801c90565b604051908152f35b6020908160408183019282815285518094520193019160005b828110610b49575050505090565b835185529381019392810192600101610b3b565b346102a4576040806003193601126102a45767ffffffffffffffff906004358281116102a457610b91903690600401610784565b9190926024359081116102a457610bac903690600401610784565b928303610c095781519280845260051b60209182858301018452600095865b838103610bdf578551806105d48982610b22565b679a31110384e0b0c98282013560601b178552828101358852858820548782018601528401610bcb565b633b800a466000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610c6257604052565b610c17565b6060810190811067ffffffffffffffff821117610c6257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c6257604052565b67ffffffffffffffff8111610c625760051b60200190565b602435906fffffffffffffffffffffffffffffffff821682036102a457565b604435906fffffffffffffffffffffffffffffffff821682036102a457565b9291610d2582610cc4565b91610d336040519384610c83565b829481845260208094019160051b81019283116102a457905b828210610d595750505050565b81356fffffffffffffffffffffffffffffffff811681036102a4578152908301908301610d4c565b9080601f830112156102a457816020610d9c93359101610d1a565b90565b60806003198201126102a457600435610db781610286565b9167ffffffffffffffff6024358181116102a45783610dd891600401610d81565b926044359182116102a457610def91600401610d81565b90606435610d9c81610286565b610e0536610d9f565b929133600c1b600154811490600054141715610e4357610e29610e4194825161207f565b505060405192610e3884610c46565b6000845261292c565b005b631648fd016000526004601cfd5b346102a4576020806003193601126102a457600490813591610e7283610286565b33600c1b9260019283548514600095865414171561110f5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166040938451947fe919ecad00000000000000000000000000000000000000000000000000000000865283868381865afa9586156110bc5788966110f0575b50610f09866123ce565b93610f1c610f16886123ce565b96612432565b90895b888110610f7c57505050505050845b838110610f39578580f35b80610f76610f65610f4b889486611fcd565b5173ffffffffffffffffffffffffffffffffffffffff1690565b610f6f8387611fcd565b5190612da0565b01610f2e565b8351907f283248be000000000000000000000000000000000000000000000000000000008252828280610fb6848a83019190602083019252565b03818a5afa9182156110bc578c926110c1575b5084517fb34c8caf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831687820190815284908290819060200103818b5afa80156110bc576110668a8f928f96866110749661106c9693611085575b50611046906110619394611fcd565b9073ffffffffffffffffffffffffffffffffffffffff169052565b61203f565b86612055565b612710900490565b61107e828b611fcd565b5201610f1f565b6110619350906110ad611046928c8d3d106110b5575b6110a58183610c83565b8101906123b3565b935090611037565b503d61109b565b6123c2565b6110e2919250833d85116110e9575b6110da8183610c83565b81019061241d565b9038610fc9565b503d6110d0565b611108919650843d86116110b5576110a58183610c83565b9438610eff565b82631648fd018652601cfd5b346102a45760206003193601126102a45760043567ffffffffffffffff81116102a45761114c9036906004016107b5565b33600c1b91600154831460009384541417156112045760ff600554166111da5781601f106111d85760243560011b604435177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc5581604051928392833781018381520390207ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f68280a280f35bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd0183526004601cfd5b60806003193601126102a45767ffffffffffffffff6004358181116102a457366023820112156102a457806004013561124981610cc4565b916112576040519384610c83565b81835260209160248385019160051b830101913683116102a457602401905b8282106112c15785856024358281116102a457611297903690600401610d81565b6044359283116102a4576112b2610e41933690600401610d81565b906112bb6102a9565b92611eeb565b83809183356112cf81610286565b815201910190611276565b60406003193601126102a45767ffffffffffffffff6004358181116102a457611307903690600401610d81565b906024359081116102a457611320903690600401610784565b8291925181600090611361575b916113498261134361135295610e419895612055565b906121dc565b50503691610d1a565b61135a611ed8565b913361292c565b843d1515600585901b82015b811561137c575b50505061132d565b90919260209084350193019181831015611396579061136d565b611374565b346102a45760008060031936011261141f5733600c1b60015481149082541417156114125760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b631648fd0190526004601cfd5b80fd5b346102a45760006003193601126102a4576105d46105c86060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b346102a45760006003193601126102a45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102a45760006003193601126102a457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760206003193601126102a457600435801515908181036102a45733600c1b9160015483146000938454141715611204577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff006005549260081b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e68280a280f35b346102a45760006003193601126102a457600154600c1c60005260206000f35b346102a45760006003193601126102a4576020600354604051908152f35b60031960409101126102a45760043561160381610286565b90602435610d9c81610286565b346102a45761161e366115eb565b9033600c1b916001918254841460009485541417156118345773ffffffffffffffffffffffffffffffffffffffff809116907f0000000000000000000000000000000000000000000000000000000000000000169160408051937fe919ecad00000000000000000000000000000000000000000000000000000000855260209160049083878381865afa9687156110bc578997611815575b506116c0876123ce565b936116d4876116ce8a6123ce565b9761249c565b908a5b89811061171b57505050505050855b8481106116f1578680f35b80611715611703610f4b899486611fcd565b61170d8387611fcd565b519087612e17565b016116e6565b8351907f283248be000000000000000000000000000000000000000000000000000000008252828280611755848a83019190602083019252565b03818a5afa9182156110bc578d926117f6575b5084517fb34c8caf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831687820190815284908290819060200103818b5afa9283156110bc576110668f8f9561106c93866117e5968f94936110855750611046906110619394611fcd565b6117ef828b611fcd565b52016116d7565b61180e919250833d85116110e9576110da8183610c83565b9038611768565b61182d919750843d86116110b5576110a58183610c83565b95386116b6565b631648fd0184526004601cfd5b346102a45760006003193601126102a457602060045460801c604051908152f35b346102a45760006003193601126102a45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102a45760406003193601126102a4576004356118ba81610286565b602435908115158092036102a45773ffffffffffffffffffffffffffffffffffffffff16903360601b679a31110384e0b0c91760205281600052806034600c2055600052337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346102a45760206003193601126102a45760043561194481610286565b33600c1b906001548214600092835414171561199c57801561198f5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63aa7feadc82526004601cfd5b631648fd0182526004601cfd5b346102a45760008060031936011261141f578060209154600c1c8152f35b346102a45760006003193601126102a45760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6040806003193601126102a457600435906fffffffffffffffffffffffffffffffff918281168091036102a45782611a4a610cdc565b1692838202908116908103611aa357611a62916121dc565b929092600180805b611a7057005b15611a97575b600081611a928651611a8781610c46565b838152868933612828565b611a6a565b818186019503611a7657005b612010565b346102a45760006003193601126102a4576020600254604051908152f35b346102a457611ad4366115eb565b9060601b679a31110384e0b0c91760205260005260206034600c20546040519015158152f35b611b0336610d9f565b91909233600c1b92600154841460009485541417156118345780611b29611b2e9261270e565b6126b4565b611b38825161235f565b611b428483612bae565b8351825103611c335760601b679a31110384e0b0c91760209080825260601c91821560011715611c19575b805160051b94845b868103611be65750849550907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a480f35b8301808201519681840151875260408720805498898111611c0c57909803909755611b75565b63f4d678b889526004601cfd5b8380526034600c2054611b6d57634b6e7f1884526004601cfd5b633b800a4683526004601cfd5b60806003193601126102a457600435611c5881610286565b611c60610cdc565b90611c69610cfb565b9160643590611c7782610286565b33600c1b93600192835486146000968754141715611cec57611cad84916fffffffffffffffffffffffffffffffff80951661207f565b929093829116945b611cbd578680f35b15611cdd575b8581611cd8611cd0611ed8565b87878a612828565b611cb5565b818184019303611cc357808680f35b631648fd0186526004601cfd5b346102a45760a06003193601126102a4576004803590611d1882610286565b602435611d2481610286565b604435906064359360843567ffffffffffffffff81116102a457611d4b90369086016107b5565b959091679a31110384e0b0c99060601b81179360601b179560209380855260601c928760601c92843303611ebd575b8315611eb057600098878a5260408a208054808411611ea4578390039055865260408920805490828201918210611e9857558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260408da4833b611de1578880f35b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c4019086601c8401915af115611e82575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001611e7757808080808080808880f35b639c05499b8252601cfd5b3d611e8f57828152611e45565b823d81803e3d90fd5b896301336cea8c52601cfd5b8a63f4d678b88d52601cfd5b8763ea553b34600052601cfd5b336000526034600c2054611d7a5787634b6e7f18600052601cfd5b60405190611ee582610c46565b60008252565b9093929333600c1b946001958654811490600054141715610e435780611b29611f139261270e565b805192611f1f8461235f565b82518414815185141615610c09579491906000955b848710611f4957505050506102b6919261239e565b90919286611fc373ffffffffffffffffffffffffffffffffffffffff611f70849a88611fcd565b5116611fad611f98611f828589611fcd565b516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b611fbd611f98611f828689611fcd565b91612ae1565b0195929190611f34565b8051821015611fe15760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90606482029180830460641490151715611aa357565b81810292918115918404141715611aa357565b9061207b60209282815194859201610421565b0190565b6120bb6fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682612336565b600091604051602081017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f40d097c30000000000000000000000000000000000000000000000000000000060248301526024825261211b82610c67565b8454600c1c91823b15806001146121d057156121b5575b50505061215f7f0000000000000000000000000000000000000000000000000000000000000000826127e4565b919084036121a7576121a393612174926126b4565b600454918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600455565b9091565b63f7760f256000526004601cfd5b6020939550906000929151915afa5060005191388080612132565b50505050388080612132565b60055460081c60011615612328576122266fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682612336565b600060405190602082017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f40d097c30000000000000000000000000000000000000000000000000000000060248401526024835261228683610c67565b8154600c1c90813b158060011461231b5715612304575b50508091506122cc7f0000000000000000000000000000000000000000000000000000000000000000336127e4565b9281957f00000000000000000000000000000000000000000000000000000000000000000201036121a7576121a3936121749261265c565b6000925060209351915afa5060005180388061229d565b505050905080388061229d565b632d0a3f8e6000526004601cfd5b60045460801c011161234457565b63d05cb6096000526004601cfd5b91908203918211611aa357565b60045490816fffffffffffffffffffffffffffffffff168082810311901517612390578103908111611aa357600455565b63ce3a3d376000526004601cfd5b106123a557565b63dfb035c96000526004601cfd5b908160209103126102a4575190565b6040513d6000823e3d90fd5b906123d882610cc4565b6123e56040519182610c83565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06124138294610cc4565b0190602036910137565b908160209103126102a45751610d9c81610286565b600254908115158061247d575b15612477574791808303928311611aa35773ffffffffffffffffffffffffffffffffffffffff61246f9216612da0565b600060025590565b50504790565b5073ffffffffffffffffffffffffffffffffffffffff8116151561243f565b9073ffffffffffffffffffffffffffffffffffffffff90811680156126195760035490811515806125ee575b806125e3575b1561257d57506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000009390926020908490602490829088165afa80156110bc578261254f916125559560009161255f575b50612352565b93612e17565b610d9c6000600355565b612577915060203d81116110b5576110a58183610c83565b38612549565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015293506020925083915060249082905afa9081156110bc576000916125cb575090565b610d9c915060203d81116110b5576110a58183610c83565b5082841615156124ce565b50827f00000000000000000000000000000000000000000000000000000000000000001681146124c8565b5060025480151580612651575b1561264a57612640916126398247612352565b9316612da0565b610d9c6000600255565b5050504790565b508183161515612626565b15156001036126a157600354918201809211611aa3576102b69160035530337f0000000000000000000000000000000000000000000000000000000000000000612dbe565b50600254908101809111611aa357600255565b15156001036126fa5760035491818301809311611aa3576102b69260035530907f0000000000000000000000000000000000000000000000000000000000000000612dbe565b9050600254908101809111611aa357600255565b90600090604051602081017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f44df8e700000000000000000000000000000000000000000000000000000000060248301526024825261276f82610c67565b8354600c1c91823b15806001146127d857156127bd575b5050506127b582937f0000000000000000000000000000000000000000000000000000000000000000906127e4565b92036121a757565b6020939450906000929151915afa5060005190388080612786565b50505050388080612786565b34156127f35750503490600090565b60446010602093600093601452306034526fdd62ed3e00000000000000000000000084525afa50600051906000603452600190565b92919060066020526000938185526040852080548060801c85017f0000000000000000000000000000000000000000000000000000000000000000811161291f57859060801b916fffffffffffffffffffffffffffffffff160117905560601b679a31110384e0b0c917938460601c9485156129125760205281815260408120805490848201918210612905575581815260208390528490337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b6128f3575b50505050565b6128fc93612c25565b388080806128ed565b6301336cea83526004601cfd5b63ea553b3482526004601cfd5b63d05cb60988526004601cfd5b9391929361293a8483612a39565b8351825103610c095760601b679a31110384e0b0c917938460601c928315612a2b57825160051b936000925b838685146129aa5760208095019480828a010151918a8252870101516000526040600020805491820191821061299c5755612966565b6301336cea6000526004601cfd5b50945094929150945083600060407f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb815191808352855160051b602001818401818860045afa503d81016020840152823d8101885160051b602001838201818b60045afa503d0103013392a4833b612a225750505050565b6128fc93612cdb565b63ea553b346000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000009181519080518203610c095790602083818080960194019260051b0101915b828103612a87575050505050565b6006845280516000908152604081209081549060809082821c86510190898211612ad457508551911b6fffffffffffffffffffffffffffffffff9290921601179055908301908301612a79565b63d05cb60990526004601cfd5b919091612aee8284612b7c565b60601b679a31110384e0b0c9178060205260601c90811560011715612b60575b600092808452604084208054808411612b535783900390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b63f4d678b886526004601cfd5b600080526034600c2054612b0e57634b6e7f186000526004601cfd5b6006602052600052604060002080546fffffffffffffffffffffffffffffffff16918203918083119015176123905755565b9081519080518203610c095790602083818080960194019260051b0101915b828103612bda5750505050565b60068452805160009081526040812080546fffffffffffffffffffffffffffffffff1691828551810311831517612c18575055908301908301612bcd565b63ce3a3d3790526004601cfd5b91602091939260405193849263f23a6e61845233858501526000968760408601526060850152608084015260a08084015280518091818060c0870152612cc7575b505060c4019085601c8401915af115612cb1575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001612ca45750565b639c05499b90526004601cfd5b3d612cbe57818152612c7a565b503d81803e3d90fd5b818660e08701920160045afa508038612c66565b91602091939260a46040518095819463bc197c818352338784015260009889604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d0103019085601c8401915af115612d93575b517f43e6837f0000000000000000000000000000000000000000000000000000000001612ca45750565b3d612cbe57818152612d69565b600080809381935af115612db057565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615612e09576000606052604052565b637939f4246000526004601cfd5b60109260209260145260345260446000938480936fa9059cbb00000000000000000000000082525af13d156001835114171615612e5357603452565b6390b8ec1890526004601cfdfea26469706673582212203529a193ef2b9aba517de80430b7bf7f37912e02d49dcb9d0e25a11e6792c58d64736f6c63430008130033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
