/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  Types,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_liveSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxIdBalance",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "_mintCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234620001ff5762003461803803806200001e8162000241565b928339810190604081830312620001ff5780516001600160401b0390818111620001ff57820192610120928385830312620001ff576200005d6200021a565b918551848111620001ff5781620000769188016200028c565b83526020860151848111620001ff5781620000939188016200028c565b60208401526040860151848111620001ff5781620000b39188016200028c565b60408401526060860151606084015260808601516080840152620000da60a08701620002e3565b60a0840152620000ed60c08701620002f8565b60c08401526200010060e08701620002e3565b60e084015262000115610100809701620002e3565b868401526020820151938411620001ff576200013e936200013792016200030d565b90620003c7565b60405190612e9d9283620005c4843960805183818161071901526115a2015260a05183818161075b01528181610ac901528181610f380152611756015260c0518381816115f2015281816123d1015281816124c10152818161254c015281816125a50152818161265e0152612749015260e0518381816114170152818161197e0152611b8d015251828181610e5d015281816113cb01528181611ae701528181611b4c0152611dee0152518181816106da0152818161285e0152612a420152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061012082016001600160401b038111838210176200023b57604052565b62000204565b6040519190601f01601f191682016001600160401b038111838210176200023b57604052565b60005b8381106200027b5750506000910152565b81810151838201526020016200026a565b81601f82011215620001ff5780516001600160401b0381116200023b57620002be601f8201601f191660200162000241565b9281845260208284010111620001ff57620002e0916020808501910162000267565b90565b51906001600160a01b0382168203620001ff57565b51906001600160601b0382168203620001ff57565b81601f82011215620001ff578051916001600160401b0383116200023b578260051b60209283806200034181850162000241565b809781520192820101928311620001ff578301905b82821062000365575050505090565b8151815290830190830162000356565b805115620003835760200190565b634e487b7160e01b600052603260045260246000fd5b60409160208252620003bb815180928160208601526020868601910162000267565b601f01601f1916010190565b9060408201908151606084015160808501519160018060a01b03958660a0820151169360018060601b0360c0830151169360e083015198808a1690610100809501511690866080528015620005585732156200055857600c9a8b1b611000600160ac1b03166000908155329b8c901b6001559a337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698d80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d158b80a260a087905260c0526200049c600160801b831062000566565b60e0526001600160801b03169052620004b59062000588565b7fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8580a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18480a262000508816200056e565b620005139062000375565b516001600160801b031661012052516040516200053281928262000399565b037f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b91a2565b63aa7feadc6000526004601cfd5b15620001ff57565b3d159051036200057a57565b637734d3ab6000526004601cfd5b805180601f10620005c15760209060011b910151177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc55565bfefe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028157806301ffc9a71461027c57806305e39833146102775780630e89341c1461027257806318160ddd146101eb5780631a7591411461026d57806322ab47a1146102685780632670d17d146102635780632a55205a1461025e5780632eb2c2d6146102595780633cd8045e1461025457806342abcd661461024f5780634e1273f41461024a5780634fc4a9391461024557806351cff8d91461024057806355f804b31461023b5780636009074b1461023657806365ca075b1461023157806366c879a91461022c5780636c0360eb14610227578063769da94314610222578063785e9e861461021d578063879fbedf14610218578063893d20e8146102135780638c01d3081461020e5780639456fbcc146102095780639659867e14610204578063a035b1fe146101ff578063a22cb465146101fa578063a7016023146101f5578063b0f479a1146101f0578063cb4f1c18146101eb578063d5abeb01146101e6578063dfe7a8e5146101e1578063e1c38ed9146101dc578063e985e9c5146101d7578063eb5ec4f2146101d2578063eca32ab9146101cd5763f242432a146101c857600080fd5b611e61565b611d7c565b611c41565b611c0d565b611bef565b611b0b565b611abe565b61061d565b611aa0565b611a2b565b6119a1565b611966565b611945565b611714565b6116d1565b6116b1565b611616565b6115c5565b61158a565b611519565b611492565b611362565b611299565b6111b2565b610ee8565b610e1b565b610b5d565b610aed565b610a9c565b6107e3565b6106fe565b6106b1565b61068b565b61064d565b61048e565b6103fe565b6102fb565b6102b8565b73ffffffffffffffffffffffffffffffffffffffff8116036102a457565b600080fd5b606435906102b682610286565b565b346102a45760406003193601126102a4576004356102d581610286565b60601b679a31110384e0b0c9176020526024356000526020604060002054604051908152f35b346102a45760206003193601126102a4576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102a457807f01ffc9a700000000000000000000000000000000000000000000000000000000602092149081156103d4575b81156103aa575b8115610380575b506040519015158152f35b7f2a55205a0000000000000000000000000000000000000000000000000000000091501438610375565b7f0e89341c000000000000000000000000000000000000000000000000000000008114915061036e565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149150610367565b346102a45760006003193601126102a457602060ff600554166040519015158152f35b60005b8381106104345750506000910152565b8181015183820152602001610424565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104878151809281602088015260208888019101610421565b0116010190565b346102a45760206003193601126102a4576004356104ba81600052600660205260406000205460801c90565b61060f5761051b6060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b60405160808101604052607f810192600a80603092818106840187530491825b6105d8576105d461058d6105c888886105bc6105938a60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101920301815260405196879460208601906121d0565b906121d0565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610c83565b60405191829182610444565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193960195818106830187530491908261053b565b63bad086ea6000526004601cfd5b346102a45760006003193601126102a45760206004546fffffffffffffffffffffffffffffffff16604051908152f35b346102a45760206003193601126102a457600435600052600660205260206fffffffffffffffffffffffffffffffff60406000205416604051908152f35b346102a45760006003193601126102a457602060ff60055460081c166040519015158152f35b346102a45760006003193601126102a45760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760406003193601126102a45760406127106107407f00000000000000000000000000000000000000000000000000000000000000006024356121bd565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b9181601f840112156102a45782359167ffffffffffffffff83116102a4576020808501948460051b0101116102a457565b9181601f840112156102a45782359167ffffffffffffffff83116102a457602083818601950101116102a457565b346102a45760a06003193601126102a4576004803561080181610286565b60243561080d81610286565b67ffffffffffffffff906044358281116102a45761082e9036908601610784565b90926064358181116102a4576108479036908801610784565b916084359081116102a45761085f90369089016107b5565b92808503610a8f57606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610a8257893303610a67575b928b9297969594918b9460051b9160005b8381036109f5575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b61094057005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a90600091f1156109dd575b517f43e6837f00000000000000000000000000000000000000000000000000000000016109d157005b639c05499b600052601cfd5b3d6109eb57600081526109a8565b3d6000803e3d6000fd5b91939697829193965080999a9550013590828d52808501356000526040806000208054808511610a58578490039055848e52600020805490928101908110610a4b578d925501918b94918d9499989796936108aa565b8f6301336cea600052601cfd5b50508f63f4d678b8600052601cfd5b336000526034600c2054610899578c634b6e7f18600052601cfd5b8c63ea553b34600052601cfd5b88633b800a46600052601cfd5b346102a45760006003193601126102a457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760206003193601126102a4576020610b1a600435600052600660205260406000205460801c90565b604051908152f35b6020908160408183019282815285518094520193019160005b828110610b49575050505090565b835185529381019392810192600101610b3b565b346102a4576040806003193601126102a45767ffffffffffffffff906004358281116102a457610b91903690600401610784565b9190926024359081116102a457610bac903690600401610784565b928303610c095781519280845260051b60209182858301018452600095865b838103610bdf578551806105d48982610b22565b679a31110384e0b0c98282013560601b178552828101358852858820548782018601528401610bcb565b633b800a466000526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610c6257604052565b610c17565b6060810190811067ffffffffffffffff821117610c6257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c6257604052565b67ffffffffffffffff8111610c625760051b60200190565b600435906fffffffffffffffffffffffffffffffff821682036102a457565b602435906fffffffffffffffffffffffffffffffff821682036102a457565b604435906fffffffffffffffffffffffffffffffff821682036102a457565b9291610d4482610cc4565b91610d526040519384610c83565b829481845260208094019160051b81019283116102a457905b828210610d785750505050565b81356fffffffffffffffffffffffffffffffff811681036102a4578152908301908301610d6b565b9080601f830112156102a457816020610dbb93359101610d39565b90565b60806003198201126102a457600435610dd681610286565b9167ffffffffffffffff6024358181116102a45783610df791600401610da0565b926044359182116102a457610e0e91600401610da0565b90606435610dbb81610286565b610e2436610dbe565b929133600c1b600154811490600054141715610eda57610ec0610ed894610e91835191610e836fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001684612205565b610e8c816126c7565b612583565b600454918260801c9282600185019401928360801b916fffffffffffffffffffffffffffffffff160117600455565b505060405192610ecf84610c46565b60008452612946565b005b631648fd016000526004601cfd5b346102a4576020806003193601126102a457600490813591610f0983610286565b33600c1b926001928354851460009586541417156111a65773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166040938451947fe919ecad00000000000000000000000000000000000000000000000000000000865283868381865afa958615611153578896611187575b50610fa08661229d565b93610fb3610fad8861229d565b96612301565b90895b88811061101357505050505050845b838110610fd0578580f35b8061100d610ffc610fe2889486612135565b5173ffffffffffffffffffffffffffffffffffffffff1690565b6110068387612135565b5190612da7565b01610fc5565b8351907f283248be00000000000000000000000000000000000000000000000000000000825282828061104d848a83019190602083019252565b03818a5afa918215611153578c92611158575b5084517fb34c8caf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831687820190815284908290819060200103818b5afa8015611153576110fd8a8f928f968661110b96611103969361111c575b506110dd906110f89394612135565b9073ffffffffffffffffffffffffffffffffffffffff169052565b6121a7565b866121bd565b612710900490565b611115828b612135565b5201610fb6565b6110f89350906111446110dd928c8d3d1061114c575b61113c8183610c83565b810190612282565b9350906110ce565b503d611132565b612291565b611179919250833d8511611180575b6111718183610c83565b8101906122ec565b9038611060565b503d611167565b61119f919650843d861161114c5761113c8183610c83565b9438610f96565b82631648fd018652601cfd5b346102a45760206003193601126102a45760043567ffffffffffffffff81116102a4576111e39036906004016107b5565b905033600c1b906001548214600092835414171561128c5760ff6005541661126257601f106112605760443560243560011b81177fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc557ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f68280a280f35bfe5b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd0182526004601cfd5b60806003193601126102a45767ffffffffffffffff6004358181116102a457366023820112156102a45780600401356112d181610cc4565b916112df6040519384610c83565b81835260209160248385019160051b830101913683116102a457602401905b8282106113495785856024358281116102a45761131f903690600401610da0565b6044359283116102a45761133a610ed8933690600401610da0565b906113436102a9565b92612053565b838091833561135781610286565b8152019101906112fe565b60406003193601126102a45767ffffffffffffffff6004358181116102a45761138f903690600401610da0565b906024359081116102a4576113a8903690600401610784565b6113b39291926121e7565b81516113f16fffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682612205565b600082611458575b9161144082610e9161143b61141561144997610ed89a976121bd565b7f00000000000000000000000000000000000000000000000000000000000000006125dd565b61252b565b50503691610d39565b611451612040565b9133612946565b843d1515600585901b82015b8115611473575b5050506113f9565b9091926020908435019301918183101561148d5790611464565b61146b565b346102a4576000806003193601126115165733600c1b60015481149082541417156115095760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060055416176005557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b631648fd0190526004601cfd5b80fd5b346102a45760006003193601126102a4576105d46105c86060907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fdd05fcb58e4c0a1a429c1a9d6607c399731f1ef0b81be85c3f7701c0333c82fc54607f8160011c1684521660805260a0604052565b346102a45760006003193601126102a45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102a45760006003193601126102a457602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102a45760206003193601126102a457600435801515908181036102a45733600c1b91600154831460009384541417156116a4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff006005549260081b169116176005557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e68280a280f35b631648fd0183526004601cfd5b346102a45760006003193601126102a457600154600c1c60005260206000f35b346102a45760006003193601126102a4576020600354604051908152f35b60031960409101126102a45760043561170781610286565b90602435610dbb81610286565b346102a457611722366116ef565b9033600c1b916001918254841460009485541417156119385773ffffffffffffffffffffffffffffffffffffffff809116907f0000000000000000000000000000000000000000000000000000000000000000169160408051937fe919ecad00000000000000000000000000000000000000000000000000000000855260209160049083878381865afa968715611153578997611919575b506117c48761229d565b936117d8876117d28a61229d565b9761236b565b908a5b89811061181f57505050505050855b8481106117f5578680f35b80611819611807610fe2899486612135565b6118118387612135565b519087612e1e565b016117ea565b8351907f283248be000000000000000000000000000000000000000000000000000000008252828280611859848a83019190602083019252565b03818a5afa918215611153578d926118fa575b5084517fb34c8caf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831687820190815284908290819060200103818b5afa928315611153576110fd8f8f9561110393866118e9968f949361111c57506110dd906110f89394612135565b6118f3828b612135565b52016117db565b611912919250833d8511611180576111718183610c83565b903861186c565b611931919750843d861161114c5761113c8183610c83565b95386117ba565b631648fd0184526004601cfd5b346102a45760006003193601126102a457602060045460801c604051908152f35b346102a45760006003193601126102a45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102a45760406003193601126102a4576004356119be81610286565b602435908115158092036102a45773ffffffffffffffffffffffffffffffffffffffff16903360601b679a31110384e0b0c91760205281600052806034600c2055600052337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b346102a45760206003193601126102a457600435611a4881610286565b33600c1b906001548214600092835414171561128c578015611a935780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63aa7feadc82526004601cfd5b346102a457600080600319360112611516578060209154600c1c8152f35b346102a45760006003193601126102a45760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60406003193601126102a457611b1f610cdc565b611b27610cfb565b90611b306121e7565b6fffffffffffffffffffffffffffffffff8080921692611b72827f00000000000000000000000000000000000000000000000000000000000000001685612205565b1691828102918216918203611bea57610e9161143b611bb1937f00000000000000000000000000000000000000000000000000000000000000006125dd565b600180805b611bbc57005b15611bdd575b600081611bd8611bd0612040565b878733612842565b611bb6565b80920191818303611bc257005b612178565b346102a45760006003193601126102a4576020600254604051908152f35b346102a457611c1b366116ef565b9060601b679a31110384e0b0c91760205260005260206034600c20546040519015158152f35b611c4a36610dbe565b9233600c1b9360015485146000958654141715611d6f5780610e8c611c6e9261279d565b611c78835161222e565b611c828284612bb5565b60601b679a31110384e0b0c9179060209180835260601c90811560011715611d55575b835160051b9185905b8187858214611cec5750850191858082860101519188010151885260408820908154808211611cdf57039055611cae565b63f4d678b88a526004601cfd5b8083887f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b89604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a480f35b8480526034600c2054611ca557634b6e7f1885526004601cfd5b631648fd0185526004601cfd5b60806003193601126102a457600435611d9481610286565b611d9c610cfb565b90611da5610d1a565b9160643590611db382610286565b33600c1b93600192835486146000968754141715611e5457611e148491610e916fffffffffffffffffffffffffffffffff80961691610e83877f00000000000000000000000000000000000000000000000000000000000000001684612205565b929093829116945b611e24578680f35b15611e44575b8581611e3f611e37612040565b87878a612842565b611e1c565b80920191818303611e2a57808680f35b631648fd0186526004601cfd5b346102a45760a06003193601126102a4576004803590611e8082610286565b602435611e8c81610286565b604435906064359360843567ffffffffffffffff81116102a457611eb390369086016107b5565b959091679a31110384e0b0c99060601b81179360601b179560209380855260601c928760601c92843303612025575b831561201857600098878a5260408a20805480841161200c57839003905586526040892080549082820191821061200057558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260408da4833b611f49578880f35b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c4019086601c8401915af115611fea575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001611fdf57808080808080808880f35b639c05499b8252601cfd5b3d611ff757828152611fad565b823d81803e3d90fd5b896301336cea8c52601cfd5b8a63f4d678b88d52601cfd5b8763ea553b34600052601cfd5b336000526034600c2054611ee25787634b6e7f18600052601cfd5b6040519061204d82610c46565b60008252565b9093929333600c1b946001958654811490600054141715610eda5780610e8c61207b9261279d565b8051926120878461222e565b82518414815185141615610c09579491906000955b8487106120b157505050506102b6919261226d565b9091928661212b73ffffffffffffffffffffffffffffffffffffffff6120d8849a88612135565b51166121156121006120ea8589612135565b516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b6121256121006120ea8689612135565b91612ae8565b019592919061209c565b80518210156121495760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90606482029180830460641490151715611bea57565b81810292918115918404141715611bea57565b906121e360209282815194859201610421565b0190565b60055460081c600116156121f757565b632d0a3f8e6000526004601cfd5b60045460801c011161221357565b63d05cb6096000526004601cfd5b91908203918211611bea57565b60045490816fffffffffffffffffffffffffffffffff16808281031190151761225f578103908111611bea57600455565b63ce3a3d376000526004601cfd5b1061227457565b63dfb035c96000526004601cfd5b908160209103126102a4575190565b6040513d6000823e3d90fd5b906122a782610cc4565b6122b46040519182610c83565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06122e28294610cc4565b0190602036910137565b908160209103126102a45751610dbb81610286565b600254908115158061234c575b15612346574791808303928311611bea5773ffffffffffffffffffffffffffffffffffffffff61233e9216612da7565b600060025590565b50504790565b5073ffffffffffffffffffffffffffffffffffffffff8116151561230e565b9073ffffffffffffffffffffffffffffffffffffffff90811680156124e85760035490811515806124bd575b806124b2575b1561244c57506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000009390926020908490602490829088165afa8015611153578261241e916124249560009161242e575b50612221565b93612e1e565b610dbb6000600355565b612446915060203d811161114c5761113c8183610c83565b38612418565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015293506020925083915060249082905afa9081156111535760009161249a575090565b610dbb915060203d811161114c5761113c8183610c83565b50828416151561239d565b50827f0000000000000000000000000000000000000000000000000000000000000000168114612397565b5060025480151580612520575b156125195761250f916125088247612221565b9316612da7565b610dbb6000600255565b5050504790565b5081831615156124f5565b151560010361257057600354918201809211611bea576102b69160035530337f0000000000000000000000000000000000000000000000000000000000000000612dc5565b50600254908101809111611bea57600255565b15156001036125c95760035491818301809311611bea576102b69260035530907f0000000000000000000000000000000000000000000000000000000000000000612dc5565b9050600254908101809111611bea57600255565b90600092604051602081017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f40d097c30000000000000000000000000000000000000000000000000000000060248301526024825261263e82610c67565b8554600c1c91823b15806001146126bb57156126a0575b505050836126837f0000000000000000000000000000000000000000000000000000000000000000336127fe565b91909193829502010361269257565b63f7760f256000526004601cfd5b6020939650906000929151915afa5060005192388080612655565b50505050388080612655565b90600090604051602081017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f40d097c30000000000000000000000000000000000000000000000000000000060248301526024825261272882610c67565b8354600c1c91823b15806001146127915715612776575b50505061276e82937f0000000000000000000000000000000000000000000000000000000000000000906127fe565b920361269257565b6020939450906000929151915afa506000519038808061273f565b5050505038808061273f565b90600090604051602081017fedc9e7a40000000000000000000000000000000000000000000000000000000081527f44df8e700000000000000000000000000000000000000000000000000000000060248301526024825261272882610c67565b341561280d5750503490600090565b60446010602093600093601452306034526fdd62ed3e00000000000000000000000084525afa50600051906000603452600190565b92919060066020526000938185526040852080548060801c85017f0000000000000000000000000000000000000000000000000000000000000000811161293957859060801b916fffffffffffffffffffffffffffffffff160117905560601b679a31110384e0b0c917938460601c94851561292c576020528181526040812080549084820191821061291f575581815260208390528490337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b61290d575b50505050565b61291693612c2c565b38808080612907565b6301336cea83526004601cfd5b63ea553b3482526004601cfd5b63d05cb60988526004601cfd5b929190926129548285612a40565b60601b679a31110384e0b0c917928360601c938415612a3257815160051b906000915b8083036129f95750505083600060407f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb815191808352855160051b602001818401818860045afa503d81016020840152823d8101885160051b602001838201818b60045afa503d0103013392a4833b6129f05750505050565b61291693612ce2565b602080930192828487015191528385015160005260406000208054918201918210612a245755612977565b6301336cea6000526004601cfd5b63ea553b346000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000009181519080518203610c095790602083818080960194019260051b0101915b828103612a8e575050505050565b6006845280516000908152604081209081549060809082821c86510190898211612adb57508551911b6fffffffffffffffffffffffffffffffff9290921601179055908301908301612a80565b63d05cb60990526004601cfd5b919091612af58284612b83565b60601b679a31110384e0b0c9178060205260601c90811560011715612b67575b600092808452604084208054808411612b5a5783900390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b63f4d678b886526004601cfd5b600080526034600c2054612b1557634b6e7f186000526004601cfd5b6006602052600052604060002080546fffffffffffffffffffffffffffffffff169182039180831190151761225f5755565b9081519080518203610c095790602083818080960194019260051b0101915b828103612be15750505050565b60068452805160009081526040812080546fffffffffffffffffffffffffffffffff1691828551810311831517612c1f575055908301908301612bd4565b63ce3a3d3790526004601cfd5b91602091939260405193849263f23a6e61845233858501526000968760408601526060850152608084015260a08084015280518091818060c0870152612cce575b505060c4019085601c8401915af115612cb8575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001612cab5750565b639c05499b90526004601cfd5b3d612cc557818152612c81565b503d81803e3d90fd5b818660e08701920160045afa508038612c6d565b91602091939260a46040518095819463bc197c818352338784015260009889604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d0103019085601c8401915af115612d9a575b517f43e6837f0000000000000000000000000000000000000000000000000000000001612cab5750565b3d612cc557818152612d70565b600080809381935af115612db757565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615612e10576000606052604052565b637939f4246000526004601cfd5b60109260209260145260345260446000938480936fa9059cbb00000000000000000000000082525af13d156001835114171615612e5a57603452565b6390b8ec1890526004601cfdfea2646970667358221220381e064a2b6041ca69633496bbd6f75a3e1b891c472c69548fd5e83a29a8c07d64736f6c63430008130033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
