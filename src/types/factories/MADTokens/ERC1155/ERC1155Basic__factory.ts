/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  Types,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "contract SplitterImpl",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200014b57620031b1803803806200001d816200018d565b92833981016040828203126200014b5781516001600160401b0392908381116200014b57810191610120838203126200014b576200005a62000166565b9280518581116200014b578262000073918301620001b3565b845260208101518581116200014b578262000090918301620001b3565b602085015260408101518581116200014b5782620000b0918301620001b3565b60408501526060810151606085015260808101516080850152620000d760a0820162000225565b60a0850152620000ea60c082016200023a565b60c0850152620000fd60e0820162000225565b60e08501526200011261010080920162000225565b9084015260208201519384116200014b576200013b936200013492016200024f565b90620002b7565b604051612b5490816200065d8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061012082016001600160401b038111838210176200018757604052565b62000150565b6040519190601f01601f191682016001600160401b038111838210176200018757604052565b919080601f840112156200014b5782516001600160401b0381116200018757602090620001e9601f8201601f191683016200018d565b928184528282870101116200014b5760005b8181106200021157508260009394955001015290565b8581018301518482018401528201620001fb565b51906001600160a01b03821682036200014b57565b51906001600160601b03821682036200014b57565b81601f820112156200014b578051916001600160401b03831162000187578260051b6020928380620002838185016200018d565b8097815201928201019283116200014b578301905b828210620002a7575050505090565b8151815290830190830162000298565b60408101516060820151608083015160a084015160c085015160e08601516001600160a01b0392831697969095939490928616916001600160601b0316908215620004ab573215620004ab57620004a998620003a162000481976200039c620003c394620003976101009a620004a39d611000600160ac1b0390600c1b1660025532600c1b60035560009932337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698d80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d158b80a260016004556200054f565b600c55565b600d55565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b81556005546200041190620003ef90620003e3906001600160a01b031681565b6001600160a01b031690565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b80547fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a26001547f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b19062000470906001600160a01b0316620003e3565b9180a201516001600160a01b031690565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b62000642565b565b63aa7feadc6000526004601cfd5b90600182811c92168015620004eb575b6020831014620004d557565b634e487b7160e01b600052602260045260246000fd5b91607f1691620004c9565b601f811162000503575050565b600090600a825260208220906020601f850160051c8301941062000544575b601f0160051c01915b8281106200053857505050565b8181556001016200052b565b909250829062000522565b80519091906001600160401b03811162000187576200057b8162000575600a54620004b9565b620004f6565b602080601f8311600114620005ba5750819293600092620005ae575b50508160011b916000199060031b1c191617600a55565b01519050388062000597565b600a600052601f198316949091907fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8926000905b878210620006295750508360019596106200060f575b505050811b01600a55565b015160001960f88460031b161c1916905538808062000604565b80600185968294968601518155019501930190620005ee565b516200064a57565b604051637734d3ab60e01b8152600490fdfe6080604052600436101561001257600080fd5b60003560e01c8062f7486714610260578062fdd58e1461025b57806301ffc9a71461025657806305e39833146102515780630e89341c1461024c57806318160ddd146101e35780631b2ef1ca1461024757806322ab47a1146102425780632a55205a1461023d5780632eb2c2d6146102385780633cd8045e146102335780634e1273f41461022e57806351cff8d91461022957806355f804b31461022457806366c879a91461021f5780636c0360eb1461021a578063785e9e8614610215578063879fbedf14610210578063893d20e81461020b5780639456fbcc146102065780639659867e14610201578063a035b1fe146101fc578063a22cb465146101f7578063a7016023146101f2578063b0f479a1146101ed578063bc197c81146101e8578063cb4f1c18146101e3578063d351cfdc146101de578063d580725d146101d9578063d5abeb01146101d4578063d6fa7b10146101cf578063d78147cb146101ca578063e1c38ed9146101c5578063e985e9c5146101c0578063f23a6e61146101bb578063f242432a146101b65763f745586f146101b157600080fd5b611cc4565b611b5a565b611b35565b611a81565b611a63565b61191c565b611854565b611836565b611791565b611585565b610504565b6114e9565b6114c9565b611455565b6113c3565b6113a5565b611387565b6110ad565b61108d565b611017565b610fee565b610f2e565b610e7a565b610e08565b610ae1565b610a0d565b61099f565b61077b565b610663565b610640565b610522565b61043a565b6103bb565b610335565b6102db565b61028a565b6001600160a01b0381160361027657565b600080fd5b6064359061028882610265565b565b346102765760403660031901126102765760206102d26024356102ac81610265565b6004356000526010835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b346102765760403660031901126102765760206102d26004356102fd81610265565b6024356000526010835260406000209060018060a01b0316600052602052604060002090565b6001600160e01b031981160361027657565b3461027657602036600319011261027657602060043561035481610323565b63ffffffff60e01b166301ffc9a760e01b81149081156103aa575b8115610399575b8115610388575b506040519015158152f35b63152a902d60e11b1490503861037d565b6303a24d0760e21b81149150610376565b636cdb3d1360e11b8114915061036f565b3461027657600036600319011261027657602060ff600b54166040519015158152f35b60005b8381106103f15750506000910152565b81810151838201526020016103e1565b9060209161041a815180928185528580860191016103de565b601f01601f1916010190565b906020610437928181520190610401565b90565b346102765760203660031901126102765760043560085481116104f6576040519060808201604052607f820190600a80603092818106840185530491825b6104dd576104d96104b06104cd86886080601f199283810192030181526104c16040519485926104aa60208501611fc5565b90612042565b64173539b7b760d91b815260050190565b03908101835282610dcc565b60405191829182610426565b0390f35b9080929360001901938181068301855304919082610478565b63bad086ea6000526004601cfd5b34610276576000366003190112610276576020600754604051908152f35b6040806003193601126102765760049081356024359160019361054785825414611dc2565b6002815560ff600e541615610632576105608484611e27565b60085490810180911161061f57600d541061062457600c546105806124a7565b60095481810180911161061f576009556105a38561059d3361243b565b93611e27565b90810180911161061f5703610611575091926105be336122b9565b60009283945b8386106105e357846105d68588612426565b6105e06001600455565b80f35b909180956106086105f261227f565b848651916105ff83610d91565b89835233612787565b019491906105c4565b905163f7760f2560e01b8152fd5b611dfb565b905163d05cb60960e01b8152fd5b90516316851fc760e11b8152fd5b3461027657600036600319011261027657602060ff600e54166040519015158152f35b3461027657604036600319011261027657604060018060a01b0360015416612710610692600054602435611e27565b0482519182526020820152f35b9181601f84011215610276578235916001600160401b038311610276576020808501948460051b01011161027657565b9181601f84011215610276578235916001600160401b038311610276576020838186019501011161027657565b9060a06003198301126102765760043561071581610265565b9160243561072281610265565b916001600160401b0360443581811161027657836107429160040161069f565b93909392606435838111610276578261075d9160040161069f565b9390939260843591821161027657610777916004016106cf565b9091565b3461027657610789366106fc565b9061079c83869498959699979914611f4f565b6001600160a01b038681169490338614801561096a575b6107bc90612510565b8460005b888c8b8d8585106108af57505050505050811680958a7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61080b8c6040519182918d8c3397856126df565b0390a43b1561089c579661084060009260209798996040519a8b988997889663bc197c8160e01b9d8e89523360048a01612706565b03925af180156108975761086792600091610869575b506001600160e01b0319161461266c565b005b61088a915060203d8111610890575b6108828183610dcc565b810190612603565b38610856565b503d610878565b61221f565b50505092505050610867915015156125c3565b6108ce856108eb926108c78260019a61095c986126ab565b35966126ab565b359361090a610902846108eb846000526010602052604060002090565b9060018060a01b0316600052602052604060002090565b54151561254d565b61092e85610926856108eb856000526010602052604060002090565b541015612586565b610946896108eb836000526010602052604060002090565b8581540190556000526010602052604060002090565b9081540390550185906107c0565b506107bc610998610991336108eb8c60018060a01b0316600052600f602052604060002090565b5460ff1690565b90506107b3565b34610276576000366003190112610276576005546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b8281106109e8575050505090565b8351855293810193928101926001016109da565b9060206104379281815201906109c8565b3461027657604080600319360112610276576001600160401b0360043581811161027657610a3f90369060040161069f565b9160243590811161027657610a5890369060040161069f565b92610a64848214611f4f565b610a6d8161222b565b93600091825b818110610a87578751806104d989826109fc565b80610acf610a98600193858a6126ab565b35610aa281610265565b610aad83878a6126ab565b35875260106020528a87209060018060a01b0316600052602052604060002090565b54610ada828a611e5d565b5201610a73565b34610276576020806003193601126102765760048035610b0081610265565b33600c1b600354811490600254141715610d6e576005548290610b33906001600160a01b03165b6001600160a01b031690565b938060409586519586809263e919ecad60e01b82525afa93841561089757600094610d4f575b50610b638461222b565b92610b6d8561222b565b9560095480151580610d3d575b15610d345780610b8d610b9c924761225d565b936001600160a01b0316612a50565b610ba66000600955565b60055460009390610bbf906001600160a01b0316610b27565b935b878110610c0e5788888860005b828110610bd757005b80610c08610bf7610bea60019486611e5d565b516001600160a01b031690565b610c018388611e5d565b5190612a50565b01610bce565b825190631419245f60e11b8252828280610c2f848b83019190602083019252565b0381895afa91821561089757600092610d05575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561089757610caf8a610cb59260019686610cbd96600093610cce575b50610c9b90610caa9394611e5d565b6001600160a01b039091169052565b611e11565b87611e27565b612710900490565b610cc7828c611e5d565b5201610bc1565b610caa935090610cf6610c9b928c8d3d10610cfe575b610cee8183610dcc565b810190612210565b935090610c8c565b503d610ce4565b610d26919250833d8511610d2d575b610d1e8183610dcc565b81019061226a565b9038610c43565b503d610d14565b50479150610ba6565b506001600160a01b0383161515610b7a565b81610d679295503d8611610cfe57610cee8183610dcc565b9238610b59565b50631648fd01600052601cfd5b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117610dac57604052565b610d7b565b606081019081106001600160401b03821117610dac57604052565b90601f801991011681019081106001600160401b03821117610dac57604052565b6001600160401b038111610dac57601f01601f191660200190565b34610276576020366003190112610276576004356001600160401b0381116102765736602382011215610276578060040135610e4381610ded565b90610e516040519283610dcc565b808252366024828501011161027657602081600092602461086796018386013783010152612059565b3461027657600080600319360112610ef15733600c1b600354811490600254141715610ee457600160ff19600b541617600b5560405180610eba81611fc5565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b631648fd0190526004601cfd5b80fd5b90600182811c92168015610f24575b6020831014610f0e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f03565b3461027657600080600319360112610ef1576040519080600a54610f5181610ef4565b80855291600191808316908115610fc45750600114610f7b575b6104d9856104cd81870382610dcc565b9250600a8352600080516020612aff8339815191525b828410610fac5750505081016020016104cd826104d9610f6b565b80546020858701810191909152909301928101610f91565b8695506104d9969350602092506104cd94915060ff191682840152151560051b8201019293610f6b565b34610276576000366003190112610276576006546040516001600160a01b039091168152602090f35b34610276576020366003190112610276576004358015158091036102765733600c1b60035481149060025414171561107f5760ff19600e541660ff821617600e557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b631648fd016000526004601cfd5b3461027657600036600319011261027657600354600c1c60005260206000f35b346102765760408060031936011261027657600480356110cc81610265565b602435906110d982610265565b33600c1b60035481149060025414171561137a57600554611102906001600160a01b0316610b27565b928451809463e919ecad60e01b8252818360209384935afa9485156108975760009561135b575b506111338561222b565b9361113d8661222b565b9660006009549081151580611349575b156112e6575081516370a0823160e01b81523086820190815290919085908390819060200103816001600160a01b038b165afa8015610897578161119d916111a4946000916112c9575b5061225d565b9387612abe565b6111ae6000600955565b600554600093906111c7906001600160a01b0316610b27565b935b88811061120d5750505050505060005b8381106111e257005b806112076111f5610bea60019487611e5d565b6111ff8389611e5d565b519085612abe565b016111d9565b825190631419245f60e11b825282828061122e848b83019190602083019252565b0381895afa918215610897576000926112aa575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561089757610caf8b610cb5926001968661129996600093610cce5750610c9b90610caa9394611e5d565b6112a3828d611e5d565b52016111c9565b6112c2919250833d8511610d2d57610d1e8183610dcc565b9038611242565b6112e09150883d8a11610cfe57610cee8183610dcc565b38611197565b82516370a0823160e01b815230878201908152939450909290915084908290819060200103816001600160a01b038a165afa918215610897579161132c575b50906111ae565b6113439150833d8511610cfe57610cee8183610dcc565b38611325565b506001600160a01b038416151561114d565b816113739296503d8711610cfe57610cee8183610dcc565b9338611129565b82631648fd01600052601cfd5b34610276576000366003190112610276576020600854604051908152f35b34610276576000366003190112610276576020600c54604051908152f35b34610276576040366003190112610276576004356113e081610265565b6024359081151580920361027657336000908152600f602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b346102765760203660031901126102765760043561147281610265565b33600c1b60035481149060025414171561107f5780156114bb5780600c1b600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a3005b63aa7feadc6000526004601cfd5b3461027657600036600319011261027657600254600c1c60005260206000f35b34610276576114f7366106fc565b5050505050505050602060405163bc197c8160e01b8152f35b6001600160401b038111610dac5760051b60200190565b81601f820112156102765780359161153e83611510565b9261154c6040519485610dcc565b808452602092838086019260051b820101928311610276578301905b828210611576575050505090565b81358152908301908301611568565b60403660031901126102765760046001600160401b038135818111610276576115b19036908401611527565b90602435908111610276576115c99036908401611527565b6001926115d884825414611dc2565b6002815560ff600e541615611726576115f082611f8d565b60085490810180911161061f57600d541061171757600c5483516116126124a7565b906009549082820180921161061f576116319160095561059d3361243b565b90810180911161061f57036117085782518251036116d257506116533361243b565b82516006549094916001600160a01b0390911690816116be575b50506000905b8482106116a157506116979361168891612426565b611690611e76565b91336128c7565b6108676001600455565b816116b66116b0839486611e5d565b5161229d565b500190611673565b6116cb9130903390612a6e565b388061166d565b60649060206040519162461bcd60e51b8352820152600f60248201526e09a92a69a82a88690be988a9c8ea89608b1b6044820152fd5b60405163f7760f2560e01b8152fd5b60405163d05cb60960e01b8152fd5b6040516316851fc760e11b8152fd5b60806003198201126102765760043561174d81610265565b916001600160401b03602435818111610276578361176d91600401611527565b926044359182116102765761178491600401611527565b9060643561043781610265565b61179a36611735565b92919233600c1b60035481149060025414171561107f576117ba82611f8d565b60085490810180911161061f57600d5410611824576117d890612304565b82519260005b84811061180857610867946117f291612426565b604051926117ff84610d91565b600084526128c7565b8061181560019285611e5d565b516007908154019055016117de565b60405163d05cb60960e01b8152600490fd5b34610276576000366003190112610276576020600d54604051908152f35b6080366003190112610276576001600160401b03600435818111610276573660238201121561027657806004013561188b81611510565b916118996040519384610dcc565b81835260209160248385019160051b8301019136831161027657602401905b828210611903578585602435828111610276576118d9903690600401611527565b604435928311610276576118f4610867933690600401611527565b906118fd61027b565b92611e89565b838091833561191181610265565b8152019101906118b8565b61192536611735565b92919233600c1b60035481149060025414171561107f576119529061194d8551845114611f4f565b6123c6565b825160005b818110611a32579061196891612426565b6001600160a01b0382169161197e831515612974565b83519060005b8281106119c757600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6119c288604051918291339583612857565b0390a4005b806119d460019288611e5d565b51611a036119f0856108eb846000526010602052604060002090565b546119fb8489611e5d565b51111561254d565b611a26846108eb611a14858a611e5d565b51936000526010602052604060002090565b90815403905501611984565b611a3c8184611e5d565b519060078054928315611a555760019303905501611957565b63ce3a3d376000526004601cfd5b34610276576000366003190112610276576020600954604051908152f35b3461027657604036600319011261027657602060ff611add600435611aa581610265565b60243590611ab282610265565b60018060a01b0316600052600f845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b60a060031982011261027657600435611b0181610265565b91602435611b0e81610265565b916044359160643591608435906001600160401b03821161027657610777916004016106cf565b3461027657611b4336611ae9565b505050505050602060405163f23a6e6160e01b8152f35b3461027657611b6836611ae9565b9294929390916001600160a01b0380851692903384148015611c96575b611b8e90612510565b611ba9610902876108eb8b6000526010602052604060002090565b611bc583610926886108eb8c6000526010602052604060002090565b611bdd826108eb8a6000526010602052604060002090565b611be8848254611e3a565b9055611c02866108eb8a6000526010602052604060002090565b611c0d84825461225d565b905581168093887fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405180611c528833958360209093929193604081019481520152565b0390a43b15611c8557600060209495966108406040519889968795869463f23a6e6160e01b9b8c87523360048801612639565b5092505050610867915015156125c3565b50611b8e611cbd610991336108eb8a60018060a01b0316600052600f602052604060002090565b9050611b85565b60803660031901126102765760048035611cdd81610265565b6024356044356001600160401b03811161027657611cfe9036908501611527565b606435611d0a81610265565b600194611d1986825414611dc2565b6002815533600c1b600354811490600254141715611db657611d4384611d3e85611f8d565b611e27565b60085490810180911161061f57600d541061171757509184611d658594612304565b60009283945b838610611d7d57846105d68588612426565b90918095611dad611d8c61227f565b611d968387611e5d565b5160405191611da483610d91565b89835286612787565b01949190611d6b565b631648fd01600052601cfd5b15611dc957565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9060648202918083046064149015171561061f57565b8181029291811591840414171561061f57565b9190820180921161061f57565b634e487b7160e01b600052603260045260246000fd5b8051821015611e715760209160051b010190565b611e47565b60405190611e8382610d91565b60008252565b90939233600c1b60035481149060025414171561107f57611ea9906123c6565b60009182918551938482511480611f45575b611ec89093929193611f4f565b848410611edd57505050610288929350612426565b909192611eea8184611e5d565b5160079081548015611f3857039055600190611f2f6001600160a01b03611f118386611e5d565b5116611f1d838b611e5d565b51611f288488611e5d565b51916129af565b01929190611ec8565b63ce3a3d3787526004601cfd5b5082518514611ebb565b15611f5657565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b9060009180516000915b818310611fa357505050565b909193611fb08583611e5d565b51810180911161061f57936001019190611f97565b600a5460009291611fd582610ef4565b9160019081811690811561202f5750600114611ff057505050565b9091929350600a600052600080516020612aff833981519152906000915b84831061201c575050500190565b818160209254858701520192019161200e565b60ff191683525050811515909102019150565b90612055602092828151948592016103de565b0190565b9033600c1b60035481149060025414171561107f576001918260ff600b541615151461217f5780516001600160401b038111610dac576120a38161209e600a54610ef4565b612191565b60209384601f831160011461210b57508180916120d99596600093612100575b501b916000199060031b1c191617600a556121f0565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b8501519250386120c3565b600a600052601f19831695919291600080516020612aff833981519152916000905b888210612168575050826120d996971061214f575b5050811b01600a556121f0565b84015160001960f88460031b161c191690553880612142565b808684958294958a0151815501940192019061212d565b6040516331d1c0a360e01b8152600490fd5b601f811161219d575050565b600090600a8252600080516020612aff833981519152906020601f850160051c830194106121e6575b601f0160051c01915b8281106121db57505050565b8181556001016121cf565b90925082906121c6565b612208906020604051928284809451938492016103de565b810103902090565b90816020910312610276575190565b6040513d6000823e3d90fd5b9061223582611510565b6122426040519182610dcc565b8281528092612253601f1991611510565b0190602036910137565b9190820391821161061f57565b90816020910312610276575161043781610265565b6001600754016007556008546001810180911161061f578060085590565b806007540160075560085490810180911161061f578060085590565b6122c28161243b565b6001600160a01b03338382161480156122f8575b6122df57505050565b60065416806122ed57505050565b610288923091612a6e565b508060065416156122d6565b61230d8161243b565b6001600160a01b03338382161480156123ba575b61232a57505050565b60006040519060208201633b7279e960e21b81526340d097c360e01b60248401526024835261235883610db1565b600254600c1c90813b15806001146123ad5715612396575b5050905082036123885760065416806122ed57505050565b63f7760f256000526004601cfd5b6000925060209351915afa50600051803880612370565b5050509050803880612370565b50806006541615612321565b6123cf8161243b565b6001600160a01b033383821614801561241a575b6123ec57505050565b60006040519060208201633b7279e960e21b815263044df8e760e41b60248401526024835261235883610db1565b508060065416156123e3565b1061242d57565b63dfb035c96000526004601cfd5b6006546001600160a01b03908116919082156124a05760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561089757600091612488575090565b610437915060203d8111610cfe57610cee8183610dcc565b5050503490565b60009060405160208101633b7279e960e21b81526340d097c360e01b6024830152602482526124d582610db1565b600254600c1c91823b158060011461250657156124f157505050565b6020939450906000929151915afa5060005190565b5060009450505050565b1561251757565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b1561255457565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b1561258d57565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b156125ca57565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b90816020910312610276575161043781610323565b908060209392818452848401376000828201840152601f01601f1916010190565b919261043796949160a094600180871b038092168552166020840152604083015260608201528160808201520191612618565b1561267357565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b9190811015611e715760051b0190565b81835290916001600160fb1b0383116102765760209260051b809284830137010190565b92906126f89061043795936040865260408601916126bb565b9260208185039101526126bb565b9694926127489461273a926104379a989460018060a01b038092168b521660208a015260a060408a015260a08901916126bb565b9186830360608801526126bb565b926080818503910152612618565b909260a0926104379594600180861b0316835260006020840152604083015260608201528160808201520190610401565b9290916127a2846108eb856000526010602052604060002090565b6127ad828254611e3a565b905560408051848152602081018390526001600160a01b0386169591869160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43b15612849579061282393602092600060405180978195829463f23a6e6160e01b998a85523360048601612756565b03925af18015610897576102889260009161086957506001600160e01b0319161461266c565b5050506102889015156125c3565b909161286e610437936040845260408401906109c8565b9160208184039101526109c8565b926128ab61043795936128b99360018060a01b031686526000602087015260a0604087015260a08601906109c8565b9084820360608601526109c8565b916080818403910152610401565b929091825160005b81811061294957505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180612917888b83612857565b0390a43b15612849579061282393602092600060405180978195829463bc197c8160e01b998a8552336004860161287c565b8061295660019287611e5d565b51612968886108eb611a148589611e5d565b908154019055016128cf565b1561297b57565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f46524f4d60a01b6044820152606490fd5b8160005260106020526129dc836109268360406000209060018060a01b0316600052602052604060002090565b60008281526010602090815260408083206001600160a01b0385168452909152902092835490810390811161061f5790925560408051918252600160208301526000926001600160a01b03169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a4565b600080809381935af115612a6057565b63b12d13eb6000526004601cfd5b601c600060649281946020966040519860605260405260601b602c526323b872dd60601b600c525af13d15600160005114171615612ab0576000606052604052565b637939f4246000526004601cfd5b601092602092601452603452604460009384809363a9059cbb60601b82525af13d156001835114171615612af157603452565b6390b8ec1890526004601cfdfec65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8a26469706673582212209bcdbaef39f90e0c5317fbf03b391720867e1d4a2a013d3d793edb7addc091d564736f6c63430008130033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
