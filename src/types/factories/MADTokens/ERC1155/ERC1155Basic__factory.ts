/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { NonPayableOverrides } from "../../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001c1576200321b803803806200001f8162000203565b928339810190602081830312620001c15780516001600160401b0391828211620001c157019261014084840312620001c1576200005b620001dc565b918451818111620001c15784620000749187016200024e565b83526020850151818111620001c15784620000919187016200024e565b60208401526040850151908111620001c1576200013293620000b59186016200024e565b60408301526060840151606083015260808401516080830152620000dc60a08501620002a5565b60a0830152620000ef60c08501620002ba565b60c08301526200010260e08501620002a5565b60e08301526200012881610100956200011d878201620002a5565b8786015201620002a5565b90820152620002fd565b604051612adb918262000740833960805182818161067a015261138c015260a0518281816116d5015261287c015260c0518281816106bc01528181610d8601528181610deb01528181611dfe0152818161257301526125e8015260e0518281816113dc01528181612596015261296401525181818161193501528181611aaf0152818161234f01526126570152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001fd57604052565b620001c6565b6040519190601f01601f191682016001600160401b03811183821017620001fd57604052565b60005b8381106200023d5750506000910152565b81810151838201526020016200022c565b81601f82011215620001c15780516001600160401b038111620001fd5762000280601f8201601f191660200162000203565b9281845260208284010111620001c157620002a2916020808501910162000229565b90565b51906001600160a01b0382168203620001c157565b51906001600160601b0382168203620001c157565b60409160208252620002f1815180928160208601526020868601910162000229565b601f01601f1916010190565b60a08101805161010080840151606085015160e086015161012087015160c088018051959796909562000362956001600160a01b0392831695938316948316939216906200035b906001600160601b03165b6001600160601b031690565b9462000465565b608084016401000000008151116200045357516000947f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b946200044e92620003d2926200034f926040926001600160801b031690520193620003c5855162000517565b516001600160601b031690565b916200042262000416620004166040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a25182620002cf565b0390a2565b604051636ad9efbd60e11b8152600490fd5b9390929194608052811562000509578015620005095781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e0819052620004f75760a052565b600160ff19600554161760055560a052565b63d92e233d6000526004601cfd5b9060019160015433600c1b03620006775760ff6007541662000665578051926001600160401b038411620001fd576200055d846200055760065462000685565b620006c2565b602090816001601f871114620005d457505083620005a193946200059892600091620005c8575b508160011b916000199060031b1c19161790565b6006556200071d565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b90508301513862000584565b60066000529190601f198616907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000915b8383106200064d57505050918591620005a195966001941062000633575b5050811b016006556200071d565b84015160001960f88460031b161c19169055388062000625565b86850151865594850194938101939181019162000607565b6040516331d1c0a360e01b8152600490fd5b631648fd016000526004601cfd5b90600182811c92168015620006b7575b6020831014620006a157565b634e487b7160e01b600052602260045260246000fd5b91607f169162000695565b601f8111620006cf575050565b60009060066000526020600020906020601f850160051c8301941062000712575b601f0160051c01915b8281106200070657505050565b818155600101620006f9565b9092508290620006f0565b620007379060206040519282848094519384920162000229565b81010390209056fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028657806301ffc9a71461028157806305e398331461027c5780630e89341c146102775780631a7591411461027257806322ab47a11461026d5780632a55205a146102685780632c8701a4146102635780632eb2c2d61461025e5780633ccfd60b146102595780633cd8045e1461025457806342abcd661461024f5780634e1273f41461024a57806355f804b31461024557806366c879a914610240578063685d2ca51461023b5780636c0360eb14610236578063769da94314610231578063785e9e861461022c5780637cc22f7014610227578063879fbedf14610222578063893d20e81461021d5780638c01d30814610218578063911f51f914610213578063976228701461020e578063a035b1fe14610209578063a22cb46514610204578063a4ddb2a3146101ff578063a7016023146101fa578063b0f479a1146101f5578063d139e612146101f0578063d5abeb01146101eb578063d6ed2663146101e6578063dfe7a8e5146101e1578063e1c38ed9146101dc578063e985e9c5146101d7578063f204ed59146101d2578063f242432a146101cd5763f4f3b200146101c857600080fd5b611d6d565b611b95565b611a46565b611a00565b6119e2565b61197c565b611959565b61190c565b6118e2565b6118c4565b61183c565b61177d565b6116f8565b6116bd565b611682565b611604565b6115e6565b6115c6565b611538565b611400565b6113af565b611374565b611280565b6110c1565b610fed565b610f7a565b610e80565b610e0f565b610dbe565b610d4d565b610aad565b610844565b61065f565b610639565b6105fb565b6104c9565b610439565b610336565b6102f7565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b346102ae5760406003193601126102ae5761031061028b565b60601b679a31110384e0b0c9176020526024356000526020604060002054604051908152f35b346102ae5760206003193601126102ae576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102ae57807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561040f575b81156103e5575b81156103bb575b506040519015158152f35b7f2a55205a00000000000000000000000000000000000000000000000000000000915014386103b0565b7f0e89341c00000000000000000000000000000000000000000000000000000000811491506103a9565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506103a2565b346102ae5760006003193601126102ae57602060ff600754166040519015158152f35b60005b83811061046f5750506000910152565b818101518382015260200161045f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104c2815180928160208801526020888801910161045c565b0116010190565b346102ae5760206003193601126102ae576004356104f581600052600860205260406000205460801c90565b156105ed5760405160808101604052607f810191600a8060309281810660300186530491825b6105b6576105b26105716105a6878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261059a60405194859261056b60208501611e8c565b90611f39565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610735565b6040519182918261047f565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193950194818106830186530491908261051b565b63bad086ea6000526004601cfd5b346102ae5760206003193601126102ae57600435600052600860205260206fffffffffffffffffffffffffffffffff60406000205416604051908152f35b346102ae5760006003193601126102ae57602060ff60075460081c166040519015158152f35b346102ae5760406003193601126102ae5760406127106106a17f0000000000000000000000000000000000000000000000000000000000000000602435611f7f565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761073057604052565b6106e5565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761073057604052565b67ffffffffffffffff81116107305760051b60200190565b929161079982610776565b916107a76040519384610735565b829481845260208094019160051b81019283116102ae57905b8282106107cd5750505050565b81356fffffffffffffffffffffffffffffffff811681036102ae5781529083019083016107c0565b9080601f830112156102ae578160206108109335910161078e565b90565b9181601f840112156102ae5782359167ffffffffffffffff83116102ae576020808501948460051b0101116102ae57565b60606003193601126102ae5761085861028b565b60243567ffffffffffffffff918282116102ae5761087b600492369084016107f5565b926044359081116102ae57610894829136908501610813565b60ff60025416610a5b575b808651600091610a21575b936108bb6108c0926108c796611f7f565b61251b565b369161078e565b33600c1b6000546001548032600c1b14809284141692141614610a14576040918251916108f383610714565b600083526109018187612655565b8051865103610a07578160601b9283156109fa57602093679a31110384e0b0c9178452865160051b926000915b8285811461096b5786019286808287010151918b01015160005287600020805491820191821061095e575561092e565b896301336cea600052601cfd5b5083898760008a8c8151938491838352865160051b82018484018189845afa503d8401828401523d830191885160051b01908189868501925afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6109ef57005b6109f8936126fd565b005b8563ea553b34600052601cfd5b84633b800a46600052601cfd5b82631648fd01600052601cfd5b833d1515600585901b82015b8115610a3c575b5050506108aa565b90919360209085350194019181831015610a565790610a2d565b610a34565b90915060005433600c1b03610a725790829161089f565b83631648fd01600052601cfd5b9181601f840112156102ae5782359167ffffffffffffffff83116102ae57602083818601950101116102ae57565b346102ae5760a06003193601126102ae57610ac661028b565b610ace6102b3565b906044359167ffffffffffffffff908184116102ae57610af360049436908601610813565b90926064358181116102ae57610b0c9036908801610813565b916084359081116102ae57610b249036908901610a7f565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610d4057893303610d25575b928b9297969594918b9460051b9160005b838103610cb3575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610bfe57005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a90600091f115610c9b575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610c8f57005b639c05499b600052601cfd5b3d610ca95760008152610c66565b3d6000803e3d6000fd5b91939697829193965080999a9550013590828d52808501356000526040806000208054808511610d16578490039055848e52600020805490928101908110610d09578d925501918b94918d949998979693610b68565b8f6301336cea600052601cfd5b50508f63f4d678b8600052601cfd5b336000526034600c2054610b57578c634b6e7f18600052601cfd5b8c63ea553b34600052601cfd5b346102ae57600080600319360112610dbb5760015433600c1b03610dae57610dab4773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612637565b80f35b631648fd0190526004601cfd5b80fd5b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760206003193601126102ae576020610e3c600435600052600860205260406000205460801c90565b604051908152f35b602090602060408183019282815285518094520193019160005b828110610e6c575050505090565b835185529381019392810192600101610e5e565b346102ae576040806003193601126102ae5767ffffffffffffffff906004358281116102ae57610eb4903690600401610813565b926024359081116102ae57610ecd903690600401610813565b9290938303610f32576040519280845260051b9160209460208585010160405260009160005b858103610f0857604051806105b28982610e44565b679a31110384e0b0c98282013560601b178852828101358452848420548782018901528701610ef3565b633b800a466000526004601cfd5b67ffffffffffffffff811161073057601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b346102ae5760206003193601126102ae5760043567ffffffffffffffff81116102ae57366023820112156102ae578060040135610fb681610f40565b90610fc46040519283610735565b80825236602482850101116102ae5760208160009260246109f896018386013783010152611f97565b346102ae57600080600319360112610dbb5760015433600c1b03610dae5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060075416176007557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b60606003198201126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae579167ffffffffffffffff6024358181116102ae57836110aa916004016107f5565b926044359182116102ae57610810916004016107f5565b6110ca3661105d565b909133600c1b9160009283546001548032600c1b14809284141692141614611220576040918251916110fb83610714565b8483526111088187612655565b8051865103611213578160601b92831561120657602093679a31110384e0b0c9178452865160051b9286915b8285811461116f5786019286808287010151918b010151895287892080549182019182106111625755611134565b6301336cea8a526004601cfd5b888383878d8b858e80518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6111f5578480f35b6111fe936126fd565b818080808480f35b63ea553b3486526004601cfd5b633b800a4685526004601cfd5b631648fd0183526004601cfd5b90600182811c92168015611276575b602083101461124757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161123c565b346102ae57600080600319360112610dbb576040519080600654906112a48261122d565b8085529160209160019182811690811561132957506001146112d1575b6105b2866105a681880382610735565b9350600684527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b838510611316575050505081016020016105a6826105b2386112c1565b80548686018401529382019381016112f9565b8796506105b2979450602093506105a69592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201019293386112c1565b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6114093661105d565b33600c1b9260009384546001548032600c1b1480928414169214161461151c5761143382846129d5565b8060601b9160209280679a31110384e0b0c91784521560011715611502575b835160051b9185905b8187858214611499575085019185808286010151918801015188526040882090815480821161148c5703905561145b565b63f4d678b88a526004601cfd5b8083887f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b89604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a480f35b8480526034600c205461145257634b6e7f1885526004601cfd5b631648fd0184526004601cfd5b6004359081151582036102ae57565b346102ae5760206003193601126102ae57611551611529565b60015433600c1b036115b8576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b631648fd016000526004601cfd5b346102ae5760006003193601126102ae57600154600c1c60005260206000f35b346102ae5760006003193601126102ae576020600454604051908152f35b346102ae5760006003193601126102ae57602060ff600254166040519015158152f35b60031960609101126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae57906fffffffffffffffffffffffffffffffff9060243582811681036102ae579160443590811681036102ae5790565b61168b36611627565b60ff600293929354166116a3575b6109f892826122e6565b60005433600c1b1461169957631648fd016000526004601cfd5b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760406003193601126102ae5761171161028b565b602435908115158092036102ae5773ffffffffffffffffffffffffffffffffffffffff91679a31110384e0b0c96020523360145281600052806034600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b60606003193601126102ae5767ffffffffffffffff6004358181116102ae57366023820112156102ae5780600401356117b581610776565b916117c36040519384610735565b8183526020916024602085019160051b830101913683116102ae57602401905b8282106118255785856024358281116102ae576118049036906004016107f5565b6044359283116102ae5761181f6109f89336906004016107f5565b916121e8565b838091611831846102d6565b8152019101906117e3565b346102ae5760206003193601126102ae5761185561028b565b33600c1b9060009182546001548032600c1b148092841416921416146118b75780156118aa5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63d92e233d82526004601cfd5b631648fd0182526004601cfd5b346102ae57600080600319360112610dbb578060209154600c1c8152f35b346102ae5760206003193601126102ae576118fb611529565b60015433600c1b036115b857600255005b346102ae5760006003193601126102ae5760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760006003193601126102ae57602060ff600554166040519015158152f35b60406003193601126102ae576fffffffffffffffffffffffffffffffff60043581811681036102ae5760243591821682036102ae5760ff600254166119c8575b6109f8913391336122e6565b60005433600c1b146119bc57631648fd016000526004601cfd5b346102ae5760006003193601126102ae576020600354604051908152f35b346102ae5760406003193601126102ae57611a1961028b565b611a216102b3565b90679a31110384e0b0c960205260145260005260206034600c20546040519015158152f35b611a4f36611627565b919033600c1b9260009384546001548032600c1b1480928414169214161461151c576fffffffffffffffffffffffffffffffff80809316911660405192611a9584610714565b8584526008602052818652604086209081548060801c85017f00000000000000000000000000000000000000000000000000000000000000008111611b885790859160801b9216011790558360601b15611b7b57679a31110384e0b0c96020528360145280855260408520805490838201918210611b6e57558085528160205273ffffffffffffffffffffffffffffffffffffffff841685337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611b5d578480f35b611b66936127d8565b388080808480f35b6301336cea87526004601cfd5b63ea553b3485526004601cfd5b63d05cb60989526004601cfd5b346102ae5760a06003193601126102ae57611bae61028b565b611bb66102b3565b90604435606435926084359267ffffffffffffffff84116102ae57611be060049436908601610a7f565b959091679a31110384e0b0c99060601b81179360601b179560209380855260601c928760601c928315611d6057843303611d45575b600098878a5260408a208054808411611d39578390039055865260408920805490828201918210611d2d57558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260408da4833b611c76578880f35b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c4019086601c8401915af115611d17575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001611d0c57808080808080808880f35b639c05499b8252601cfd5b3d611d2457828152611cda565b823d81803e3d90fd5b896301336cea8c52601cfd5b8a63f4d678b88d52601cfd5b336000526034600c2054611c155787634b6e7f18600052601cfd5b8763ea553b34600052601cfd5b346102ae5760206003193601126102ae57611d8661028b565b60015433600c1b036115b85773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115611e8757600080936044936010936020978492611e58575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611e4a57005b6390b8ec186000526004601cfd5b611e79919250883d8a11611e80575b611e718183610735565b810190612500565b9038611dfb565b503d611e67565b61250f565b60065460009291611e9c8261122d565b91600190818116908115611f085750600114611eb757505050565b909192935060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906000915b848310611ef5575050500190565b8181602092548587015201920191611ee7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90611f4c6020928281519485920161045c565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810292918115918404141715611f9257565b611f50565b9060019160015433600c1b036115b85760ff6007541661212c5780519267ffffffffffffffff841161073057611fd784611fd260065461122d565b612156565b602090816001601f87111461206557505083612033939461202b9260009161205a575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b6006556121c8565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b905083015138611ffa565b600660005291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000915b838310612115575050509185916120339596600194106120de575b5050811b016006556121c8565b8401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905538806120d1565b8685015186559485019493810193918101916120b6565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b601f8111612162575050565b60009060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f850160051c830194106121be575b601f0160051c01915b8281106121b357505050565b8181556001016121a7565b909250829061219e565b6121e09060206040519282848094519384920161045c565b810103902090565b9033600c1b92600054936001946001548032600c1b148092841416921416146115b85781519280518414825185141615610f325760005b84811061222e57505050505050565b8061229d73ffffffffffffffffffffffffffffffffffffffff6122528994866122a3565b51166fffffffffffffffffffffffffffffffff61229781612273868b6122a3565b511691612280868a6122a3565b51166fffffffffffffffffffffffffffffffff1690565b91612439565b0161221f565b80518210156122b75760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b926123056fffffffffffffffffffffffffffffffff809416918261251b565b33600c1b9160009283546001548032600c1b14809284141692141614611220578316916040519361233585610714565b8185526008602052828252604082209081548060801c86017f0000000000000000000000000000000000000000000000000000000000000000811161242c5790869160801b9216011790558460601b1561241f57679a31110384e0b0c9602052846014528181526040812080549084820191821061241257558181528260205273ffffffffffffffffffffffffffffffffffffffff851690337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b612400575b50505050565b612409936127d8565b388080806123fa565b6301336cea83526004601cfd5b63ea553b3490526004601cfd5b63d05cb60985526004601cfd5b909160086020526000928084526040842080546fffffffffffffffffffffffffffffffff1690838203918083119015176124f357558260601b80679a31110384e0b0c91760205215600117156124d9575b8084526040842080548084116124cc5783900390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b63f4d678b886526004601cfd5b8380526034600c205461248a57634b6e7f1884526004601cfd5b63ce3a3d3786526004601cfd5b908160209103126102ae575190565b6040513d6000823e3d90fd5b60ff60075460081c161561260d578161253391612878565b8061253c575050565b60055460ff16156125bc5760045491818301809311611f92576125ba9260045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f0000000000000000000000000000000000000000000000000000000000000000612a4c565b565b60035480820192508210611f92576125ba9160035573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612637565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b600080809381935af11561264757565b63b12d13eb6000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000009181519080518203610f325790602083818080960194019260051b0101915b8281036126a3575050505050565b6008845280516000908152604081209081549060809082821c865101908982116126f057508551911b6fffffffffffffffffffffffffffffffff9290921601179055908301908301612695565b63d05cb60990526004601cfd5b91602091939260a46040518095819463bc197c818352338784015260009889604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d0103019085601c8401915af1156127c2575b517f43e6837f00000000000000000000000000000000000000000000000000000000016127b55750565b639c05499b90526004601cfd5b3d6127cf5781815261278b565b503d81803e3d90fd5b91602091939260405193849263f23a6e61845233858501526000968760408601526060850152608084015260a08084015280518091818060c0870152612864575b505060c4019085601c8401915af115612857575b517f0dc5919f00000000000000000000000000000000000000000000000000000000016127b55750565b3d6127cf5781815261282d565b818660e08701920160045afa508038612819565b91907f00000000000000000000000000000000000000000000000000000000000000009081156129cd576128b56128b160055460ff1690565b1590565b156128f857506128c734933492611f7f565b036128ce57565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015290926020828060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215611e87576000926129a8575b506129a1908294611f7f565b116128ce57565b6129a19192506129c69060203d602011611e8057611e718183610735565b9190612995565b506000925050565b9081519080518203610f325790602083818080960194019260051b0101915b828103612a015750505050565b60088452805160009081526040812080546fffffffffffffffffffffffffffffffff1691828551810311831517612a3f5750559083019083016129f4565b63ce3a3d3790526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d15600160005114171615612a97576000606052604052565b637939f4246000526004601cfdfea2646970667358221220ba4df7985bcabb76f5605beb5f71f889a21ba2322d2ebe73fb8813b3e8bcf3d564736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
