/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101408060405234620001d15762002de89081380380620000208162000210565b938439820191602081840312620001d15780516001600160401b0391828211620001d157019182840312620001d15762000059620001e9565b928251828111620001d157816200007291850162000259565b84526020830151828111620001d157816200008f91850162000259565b60208501526040830151918211620001d157620000ae91830162000259565b60408301526060810151606083015260808101516080830152620000d560a08201620002b0565b60a0830152620000e860c08201620002c5565b60c0830152620000fb60e08201620002b0565b60e0830152620001336101009262000115848401620002b0565b8482015262000129610120809401620002b0565b8382015262000308565b604051906127309283620006b8843960805183818161066201526113d8015260a05183818161170201526124ee015260c051838181610cea01528181610d4801528181611dde015281816121c6015261227f015260e0518381816114270152818161220d01526125e30152518281816118c801528181612174015261251601525181818161188d01528181611ad60152818161207401526122ef0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519061014082016001600160401b038111838210176200020a57604052565b620001d5565b6040519190601f01601f191682016001600160401b038111838210176200020a57604052565b5f5b838110620002485750505f910152565b818101518382015260200162000238565b81601f82011215620001d15780516001600160401b0381116200020a576200028b601f8201601f191660200162000210565b9281845260208284010111620001d157620002ad916020808501910162000236565b90565b51906001600160a01b0382168203620001d157565b51906001600160601b0382168203620001d157565b60409160208252620002fc815180928160208601526020868601910162000236565b601f01601f1916010190565b60a081018051610100830151606084015160e08501516101208087015160c088018051929796909562000371956001600160a01b03928316959183169493831693929091169162000369906001600160601b03165b6001600160601b031690565b9385620005f9565b608084016401000000008151116200046157515f947f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b946200045c92620003e0926200035d926040926001600160801b031690520193620003d3855162000503565b516001600160601b031690565b916200043062000424620004246040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a25182620002da565b0390a2565b604051636ad9efbd60e11b8152600490fd5b90600182811c92168015620004a3575b60208310146200048f57565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000483565b601f8111620004bb575050565b60065f5260205f20906020601f840160051c83019310620004f8575b601f0160051c01905b818110620004ec575050565b5f8155600101620004e0565b9091508190620004d7565b80519091906001600160401b0381116200020a576200052f816200052960065462000473565b620004ae565b602080601f831160011462000574575081906200056393945f9262000568575b50508160011b915f199060031b1c19161790565b600655565b015190505f806200054f565b60065f52601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f925f905b878210620005e0575050836001959610620005c7575b505050811b01600655565b01515f1960f88460031b161c191690555f8080620005bc565b80600185968294968601518155019501930190620005a6565b6080959095525f80546001600160a01b0319166001600160a01b039788161790559094939092918015620006aa578215620006aa57849281600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d155f80a21660c052168060e0526200069f5760a052565b60016101005260a052565b63d92e233d5f526004601cfdfe60806040526004361015610011575f80fd5b5f3560e01c8062fdd58e1461028357806301ffc9a71461027e57806305e39833146102795780630e89341c146102745780631a7591411461026f57806322ab47a11461026a5780632a55205a146102655780632c8701a4146102605780632eb2c2d61461025b5780633ccfd60b146102565780633cd8045e1461025157806342abcd661461024c5780634e1273f41461024757806355f804b31461024257806366c879a91461023d578063685d2ca5146102385780636c0360eb14610233578063769da9431461022e578063785e9e86146102295780637cc22f7014610224578063879fbedf1461021f578063893d20e81461021a5780638c01d30814610215578063911f51f914610210578063976228701461020b578063a035b1fe14610206578063a22cb46514610201578063a7016023146101fc578063b0f479a1146101f7578063d139e612146101f2578063d5abeb01146101ed578063d6ed2663146101e8578063dfe7a8e5146101e3578063e1c38ed9146101de578063e985e9c5146101d9578063f06f04f2146101d4578063f204ed59146101cf578063f242432a146101ca5763f4f3b200146101c5575f80fd5b611d48565b611b97565b611a77565b6119b4565b61196f565b611952565b6118ed565b6118b1565b611865565b61183b565b61181e565b6117a7565b611725565b6116eb565b6116b1565b611634565b611617565b6115fa565b61157b565b61144b565b6113fb565b6113c1565b6112d3565b61114f565b61106e565b610e97565b610dda565b610d6c565b610d1c565b610cb3565b610a21565b6107c8565b61062f565b61060a565b6105ce565b61049f565b610412565b61030f565b6102d2565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102ab57565b5f80fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102ab57565b346102ab5760406003193601126102ab576102eb610288565b60601b679a31110384e0b0c9176020526024355f52602060405f2054604051908152f35b346102ab5760206003193601126102ab576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102ab57807f01ffc9a700000000000000000000000000000000000000000000000000000000602092149081156103e8575b81156103be575b8115610394575b506040519015158152f35b7f2a55205a000000000000000000000000000000000000000000000000000000009150145f610389565b7f0e89341c0000000000000000000000000000000000000000000000000000000081149150610382565b7fd9b67a26000000000000000000000000000000000000000000000000000000008114915061037b565b346102ab575f6003193601126102ab57602060ff600754166040519015158152f35b5f5b8381106104455750505f910152565b8181015183820152602001610436565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104988151809281602088015260208888019101610434565b0116010190565b346102ab5760206003193601126102ab576004356104c9815f52600860205260405f205460801c90565b156105c15760405160808101604052607f810191600a8060309281810660300186530491825b61058a5761058661054561057a878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261056e60405194859261053f60208501611e6a565b90611f14565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826106c3565b60405191829182610455565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff819395019481810683018653049190826104ef565b63bad086ea5f526004601cfd5b346102ab5760206003193601126102ab576004355f52600860205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b346102ab575f6003193601126102ab57602060ff60075460081c166040519015158152f35b346102ab5760406003193601126102ab57604073ffffffffffffffffffffffffffffffffffffffff5f54166127106106897f0000000000000000000000000000000000000000000000000000000000000000602435611f58565b0482519182526020820152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761070457604052565b610696565b90929167ffffffffffffffff8411610704578360051b6020926020604051610733828501826106c3565b80978152019181019283116102ab57905b8282106107515750505050565b81356fffffffffffffffffffffffffffffffff811681036102ab578152908301908301610744565b9080601f830112156102ab5781602061079493359101610709565b90565b9181601f840112156102ab5782359167ffffffffffffffff83116102ab576020808501948460051b0101116102ab57565b60606003193601126102ab576107dc610288565b60243567ffffffffffffffff918282116102ab576107ff60049236908401610779565b926044359081116102ab57610818829136908501610797565b60ff600354166109d0575b8086515f91610996575b9361083e6108439261084a96611f58565b612150565b3691610709565b9033600c1b6001546002548032600c1b1480928414169214161461098a57610870611ff1565b9161087b81866122ec565b805185510361097e578160601b92831561097257602093679a31110384e0b0c9178452855160051b925f915b828581146108e25786019286808287010151918a0101515f5260405f2080549182019182106108d657556108a7565b886301336cea5f52601cfd5b508388875f8a6040908151938491838352865160051b82018484018189845afa503d8401828401523d830191885160051b01908189868501925afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b61096757005b61097093612383565b005b8463ea553b345f52601cfd5b83633b800a465f52601cfd5b82631648fd015f52601cfd5b833d1515600585901b82015b81156109b1575b50505061082d565b909193602090853501940191818310156109cb57906109a2565b6109a9565b90915060015433600c1b036109e757908291610823565b83631648fd015f52601cfd5b9181601f840112156102ab5782359167ffffffffffffffff83116102ab57602083818601950101116102ab57565b346102ab5760a06003193601126102ab57610a3a610288565b610a426102af565b906044359167ffffffffffffffff908184116102ab57610a6760049436908601610797565b90926064358181116102ab57610a809036908801610797565b916084359081116102ab57610a9890369089016109f3565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610ca757893303610c8e575b928b9297969594918b9460051b915f5b838103610c21575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610b7157005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a905f91f115610c0c575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610c0157005b639c05499b5f52601cfd5b3d610c19575f8152610bd8565b3d5f803e3d5ffd5b91939697829193965080999a9550013590828d52808501355f526040805f208054808511610c80578490039055848e525f20805490928101908110610c74578d925501918b94918d949998979693610adb565b8f6301336cea5f52601cfd5b50508f63f4d678b85f52601cfd5b335f526034600c2054610acb578c634b6e7f185f52601cfd5b8c63ea553b345f52601cfd5b346102ab575f6003193601126102ab5760025433600c1b03610d0f576109704773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166122d0565b631648fd015f526004601cfd5b346102ab575f6003193601126102ab57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ab5760206003193601126102ab576020610d976004355f52600860205260405f205460801c90565b604051908152f35b60209060206040818301928281528551809452019301915f5b828110610dc6575050505090565b835185529381019392810192600101610db8565b346102ab576040806003193601126102ab5767ffffffffffffffff906004358281116102ab57610e0e903690600401610797565b90926024359081116102ab57610e28903690600401610797565b9290918303610e8a576040519280845260051b916020946020858501016040525f5b848103610e5f57604051806105868882610d9f565b80879183013560601b679a31110384e0b0c9178252808401355f52845f205482828901015201610e4a565b633b800a465f526004601cfd5b346102ab576020806003193601126102ab5767ffffffffffffffff6004358181116102ab57610eca9036906004016109f3565b9160025433600c1b03610d0f5760ff6007541661104457821161070457610efb82610ef6600654611282565b611f70565b5f92601f8311600114610f835750610f4a8280610f52955f91610f78575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b600655611fdd565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f65f80a2005b90508301355f610f19565b60065f527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f915f905b86821061102c57505083610f529510610ff4575b5050600182811b01600655611fdd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690555f80610fe4565b80600184958294958801358155019401920190610fd0565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b346102ab575f6003193601126102ab5760025433600c1b03610d0f5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006007541617600755604051806110c281611e6a565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca05f80a2005b60606003198201126102ab5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ab579167ffffffffffffffff6024358181116102ab578361113891600401610779565b926044359182116102ab5761079491600401610779565b611158366110eb565b909133600c1b6001546002548032600c1b14809284141692141614610d0f5761117f611ff1565b9161118a81856122ec565b8051845103610e8a578160601b92831561127557602093679a31110384e0b0c9178452845160051b925f915b828581146111f2578601928680828701015191890101515f5260405f2080549182019182106111e557556111b6565b6301336cea5f526004601cfd5b508387875f604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b61096757005b63ea553b345f526004601cfd5b90600182811c921680156112c9575b602083101461129c57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691611291565b346102ab575f6003193601126102ab576040515f6006546112f381611282565b808452906020906001908181169081156113795750600114611320575b6105868561057a818703826106c3565b60065f90815293507ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8385106113665750505050810160200161057a82610586611310565b805486860184015293820193810161134a565b8695506105869693506020925061057a9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b8201019293611310565b346102ab575f6003193601126102ab5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ab575f6003193601126102ab57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b611454366110eb565b909133600c1b6001546002548032600c1b14809284141692141614610d0f5761147d8284612655565b8151835103610e8a578060601b9160209280679a31110384e0b0c91784521560011715611552575b835160051b915f905b818481146114ea578501918580828601015191880101515f5260405f209081548082116114dd570390556114ae565b63f4d678b85f526004601cfd5b5f82877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a88604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a4005b5f80526034600c20546114a557634b6e7f185f526004601cfd5b6004359081151582036102ab57565b346102ab5760206003193601126102ab5761159461156c565b60025433600c1b03610d0f576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e65f80a2005b346102ab575f6003193601126102ab57600254600c1c5f5260205ff35b346102ab575f6003193601126102ab576020600554604051908152f35b346102ab575f6003193601126102ab57602060ff600354166040519015158152f35b60031960609101126102ab5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ab57906fffffffffffffffffffffffffffffffff9060243582811681036102ab579160443590811681036102ab5790565b6116ba36611656565b60ff600393929354166116d2575b6109709282612014565b60015433600c1b146116c857631648fd015f526004601cfd5b346102ab575f6003193601126102ab5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ab5760406003193601126102ab5761173e610288565b602435908115158092036102ab5773ffffffffffffffffffffffffffffffffffffffff91679a31110384e0b0c960205233601452815f52806034600c20555f5216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160205fa3005b346102ab5760206003193601126102ab576117c0610288565b33600c1b6001546002548032600c1b14809284141692141614610d0f5780156118115780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2695f80a3005b63d92e233d5f526004601cfd5b346102ab575f6003193601126102ab57600154600c1c5f5260205ff35b346102ab5760206003193601126102ab5761185461156c565b60025433600c1b03610d0f57600355005b346102ab575f6003193601126102ab5760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ab575f6003193601126102ab5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b60406003193601126102ab576fffffffffffffffffffffffffffffffff60043581811681036102ab5760243591821682036102ab5760ff60035416611939575b61097091339133612014565b60015433600c1b1461192d57631648fd015f526004601cfd5b346102ab575f6003193601126102ab576020600454604051908152f35b346102ab5760406003193601126102ab57611988610288565b6119906102af565b90679a31110384e0b0c96020526014525f5260206034600c20546040519015158152f35b6119bd36611656565b919033600c1b6001546002548032600c1b14809284141692141614610d0f576fffffffffffffffffffffffffffffffff80911692166119fc81846126ca565b8160601b80679a31110384e0b0c9176020521560011715611a5d575b825f5260405f20928354938483116114dd57825f950390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4005b5f80526034600c2054611a1857634b6e7f185f526004601cfd5b611a8036611656565b9033600c1b6001546002548032600c1b14809284141692141614610d0f576fffffffffffffffffffffffffffffffff808093169116611abd611ff1565b926008602052815f5260405f209081548060801c8501907f00000000000000000000000000000000000000000000000000000000000000008211611b8a57859160801b9216011790558360601b1561127557679a31110384e0b0c960205283601452805f5260405f208054908382019182106111e55755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611b8157005b61097093612450565b63d05cb6095f526004601cfd5b346102ab5760a06003193601126102ab57611bb0610288565b611bb86102af565b604435906064356084359367ffffffffffffffff85116102ab57611be1600495369087016109f3565b9091679a31110384e0b0c99060601b81179460601b179160209480865260601c938360601c938415611d3c57853303611d23575b875f5260405f208054808411611d17578390039055865260405f20805490828201918210611d0b57558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405fa4833b611c7157005b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c401905f601c8401915af115611cfe575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001610c0157005b3d610c19575f8152611cd5565b896301336cea5f52601cfd5b8a63f4d678b85f52601cfd5b335f526034600c2054611c155788634b6e7f185f52601cfd5b8863ea553b345f52601cfd5b346102ab5760206003193601126102ab57611d61610288565b60025433600c1b03610d0f5780156118115773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115611e65575f80936044936010936020978492611e36575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d1560015f5114171615611e2957005b6390b8ec185f526004601cfd5b611e57919250883d8a11611e5e575b611e4f81836106c3565b810190612136565b905f611ddb565b503d611e45565b612145565b6006545f9291611e7982611282565b91600190818116908115611ee35750600114611e9457505050565b909192935060065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f905f915b848310611ed0575050500190565b8181602092548587015201920191611ec2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b90611f2760209282815194859201610434565b0190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b81810292918115918404141715611f6b57565b611f2b565b601f8111611f7c575050565b60065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f840160051c83019310611fd3575b601f0160051c01905b818110611fc8575050565b5f8155600101611fbd565b9091508190611fb4565b81604051928392833781015f815203902090565b604051906020820182811067ffffffffffffffff821117610704576040525f8252565b92906120346fffffffffffffffffffffffffffffffff8094169283612150565b33600c1b6001546002548032600c1b14809284141692141614610d0f57821661205b611ff1565b926008602052815f5260405f209081548060801c8501907f00000000000000000000000000000000000000000000000000000000000000008211611b8a57859160801b9216011790558360601b1561127557679a31110384e0b0c960205283601452805f5260405f208054908382019182106111e55755805f528160205273ffffffffffffffffffffffffffffffffffffffff84165f337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b612124575b50505050565b61212d93612450565b5f80808061211e565b908160209103126102ab575190565b6040513d5f823e3d90fd5b60ff60075460081c16156122a65781612168916124ea565b9081612172575050565b7f00000000000000000000000000000000000000000000000000000000000000001561225257600554828101809111611f6b576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c5260205f6064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d1560015f5114171615612245575f606052604052565b637939f4245f526004601cfd5b5060045490808201809211611f6b576122a49160045573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166122d0565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b5f80809381935af1156122df57565b63b12d13eb5f526004601cfd5b907f000000000000000000000000000000000000000000000000000000000000000082519180518303610e8a5791602084818080970195019260051b0101925b83810361233a575050505050565b6008855280515f5260405f209081549060809282841c85510192868411611b8a57889485948751911b916fffffffffffffffffffffffffffffffff16011790550191019061232c565b60a460209392604051958694859263bc197c81845233888501525f604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d010301905f601c8401915af115612443575b517f43e6837f000000000000000000000000000000000000000000000000000000000161243657565b639c05499b5f526004601cfd5b3d610c19575f815261240d565b6020929360405194859363f23a6e61855233868601525f60408601526060850152608084015260a08084015280518091818060c08701526124d6575b505060c401905f601c8401915af1156124c9575b517f0dc5919f000000000000000000000000000000000000000000000000000000000161243657565b3d610c19575f81526124a0565b818660e08701920160045afa50805f61248c565b91907f000000000000000000000000000000000000000000000000000000000000000090811561264e577f0000000000000000000000000000000000000000000000000000000000000000612577575061254634933492611f58565b0361254d57565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa938415611e65575f94612627575b509061261e91611f58565b80921061254d57565b61261e929194506126469060203d602011611e5e57611e4f81836106c3565b939091612613565b505f925050565b9081519080518203610e8a5790602083818080960194019260051b0101915b8281036126815750505050565b6008845280515f5260405f2080546fffffffffffffffffffffffffffffffff16918284518103118315176126bd57859283925501910190612674565b63ce3a3d375f526004601cfd5b60086020525f5260405f2080546fffffffffffffffffffffffffffffffff16918203918083119015176126bd575556fea2646970667358221220d9163758ddb6a101e58b2bb8cab9b1c5c0829ce63a0af00326c3b847b068219764736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
