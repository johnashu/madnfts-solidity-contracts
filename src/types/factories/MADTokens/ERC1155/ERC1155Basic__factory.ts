/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  Types,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { PromiseOrValue } from "../../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "contract SplitterImpl",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_fraction",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "_erc20",
            type: "address",
          },
        ],
        internalType: "struct Types.ColArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_extra",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815234620004b8576200313e80380390816200001f81620004d3565b91823982818381010312620004b85780516001600160401b038111620004b857810161012080828585010312620004b85784519081016001600160401b03811182821017620004bd57855281516001600160401b038111620004b8576200008c90858501908401620004f9565b815260208201516001600160401b038111620004b857620000b390858501908401620004f9565b6020820152818501516001600160401b038111620004b857620000dc90858501908401620004f9565b81860190815260608084015190830190815260808085015190840190815260a0850151909492916001600160a01b0382168203620004b85760a0850191825260c0840151926001600160601b0384168403620004b85760c0860193845260e0850151986001600160a01b038a168a03620004b85760e08701998a52610100958601516001600160a01b0381168103620004b8578787015260208901516001600160401b038111620004b857818a01601f828c01011215620004b85789810151996001600160401b038b11620004bd578a60051b91602080620001c0818601620004d3565b809e8152019382840101019382018411620004b85701602001905b828210620004a75750509051915196519251935198516001600160601b03909916986001600160a01b03948516941692905082156200047357600280546001600160a01b0319908116851790915596600093847f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a360016003819055835190936001600160401b0382116200045f576009548581811c9116801562000454575b60208210146200044057601f8111620003e6575b50602090601f83116001146200035d57600080516020620030fe83398151915296959493929186918362000351575b5050600019600383901b1c191690841b176009555b600b55600c558387600454161760045588825583878254161790558851977fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a280a260018060a01b03910151169060055416176005555162000342575051612b9290816200056c8239f35b637734d3ab60e01b8152600490fd5b015190503880620002c0565b600987526000805160206200311e8339815191529190601f198416885b818110620003cf57509187969594929183600080516020620030fe8339815191529a99959310620003b5575b505050811b01600955620002d5565b015160001960f88460031b161c19169055388080620003a6565b82840151855593880193602093840193016200037a565b600987526000805160206200311e833981519152601f840160051c8101916020851062000435575b601f0160051c019086905b8281106200042957505062000291565b88815501869062000419565b90915081906200040e565b634e487b7160e01b87526022600452602487fd5b90607f16906200027d565b634e487b7160e01b86526041600452602486fd5b895162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b8151815260209182019101620001db565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620004bd57604052565b919080601f84011215620004b85782516001600160401b038111620004bd576020906200052f601f8201601f19168301620004d3565b92818452828287010111620004b85760005b8181106200055757508260009394955001015290565b85810183015184820184015282016200054156fe6080604052600436101561001257600080fd5b60003560e01c8062f7486714610250578062fdd58e1461024b57806301ffc9a71461024657806305e39833146102415780630e89341c1461023c57806313af40351461023757806318160ddd146101d85780631b2ef1ca1461023257806322ab47a11461022d5780632a55205a146102285780632eb2c2d6146102235780633cd8045e1461021e5780634e1273f41461021957806351cff8d91461021457806355f804b31461020f57806366c879a91461020a5780636c0360eb14610205578063785e9e8614610200578063879fbedf146101fb5780638da5cb5b146101f65780639456fbcc146101f15780639659867e146101ec578063a035b1fe146101e7578063a22cb465146101e2578063bc197c81146101dd578063cb4f1c18146101d8578063d351cfdc146101d3578063d580725d146101ce578063d5abeb01146101c9578063d6fa7b10146101c4578063d78147cb146101bf578063e1c38ed9146101ba578063e985e9c5146101b5578063f23a6e61146101b0578063f242432a146101ab5763f745586f146101a657600080fd5b611c6a565b611b00565b611adb565b611a27565b611a09565b6118c5565b6117fd565b6117df565b611739565b61152b565b610593565b61148f565b6113fd565b6113df565b6113c1565b611101565b6110d8565b61106f565b611046565b610f86565b610ede565b610e6c565b610b75565b610aa1565b610a33565b61080f565b6106f7565b6106d4565b6105b1565b6104f4565b61042a565b6103ab565b610325565b6102cb565b61027a565b6001600160a01b0381160361026657565b600080fd5b6064359061027882610255565b565b346102665760403660031901126102665760206102c260243561029c81610255565b600435600052600f835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b346102665760403660031901126102665760206102c26004356102ed81610255565b602435600052600f835260406000209060018060a01b0316600052602052604060002090565b6001600160e01b031981160361026657565b3461026657602036600319011261026657602060043561034481610313565b63ffffffff60e01b166301ffc9a760e01b811490811561039a575b8115610389575b8115610378575b506040519015158152f35b63152a902d60e11b1490503861036d565b6303a24d0760e21b81149150610366565b636cdb3d1360e11b8114915061035f565b3461026657600036600319011261026657602060ff600a54166040519015158152f35b60005b8381106103e15750506000910152565b81810151838201526020016103d1565b9060209161040a815180928185528580860191016103ce565b601f01601f1916010190565b9060206104279281815201906103f1565b90565b346102665760203660031901126102665760043560075481116104e6576040519060808201604052607f820190600a80603092818106840185530491825b6104cd576104c96104a06104bd86886080601f199283810192030181526104b160405194859261049a60208501611f9a565b90612017565b64173539b7b760d91b815260050190565b03908101835282610e30565b60405191829182610416565b0390f35b9080929360001901938181068301855304919082610468565b63bad086ea6000526004601cfd5b346102665760203660031901126102665760043561051181610255565b6002546001600160a01b039061052a9082163314611d9a565b811690811561055e57600255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b34610266576000366003190112610266576020600654604051908152f35b60408060031936011261026657600435602435906001926105d58460035414611d61565b600260035560ff600d5416156106c4576105ef8383611e01565b6007549081018091116106af57600c54106106b457600b5461060f61246b565b6008548181018091116106af576008556106328461062c336123ff565b93611e01565b9081018091116106af570361069f57919261064c3361228f565b60009283945b838610610671578461066485886123ea565b61066e6001600355565b80f35b90918095610696610680612255565b8486519161068d83610e10565b8983523361273b565b01949190610652565b5163f7760f2560e01b8152600490fd5b611dd5565b5163d05cb60960e01b8152600490fd5b516316851fc760e11b8152600490fd5b3461026657600036600319011261026657602060ff600d54166040519015158152f35b3461026657604036600319011261026657604060018060a01b0360015416612710610726600054602435611e01565b0482519182526020820152f35b9181601f84011215610266578235916001600160401b038311610266576020808501948460051b01011161026657565b9181601f84011215610266578235916001600160401b038311610266576020838186019501011161026657565b9060a0600319830112610266576004356107a981610255565b916024356107b681610255565b916001600160401b0360443581811161026657836107d691600401610733565b9390939260643583811161026657826107f191600401610733565b939093926084359182116102665761080b91600401610763565b9091565b346102665761081d36610790565b9061083083869498959699979914611f24565b6001600160a01b03868116949033861480156109fe575b610850906124c4565b8460005b888c8b8d85851061094357505050505050811680958a7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61089f8c6040519182918d8c339785612693565b0390a43b1561093057966108d460009260209798996040519a8b988997889663bc197c8160e01b9d8e89523360048a016126ba565b03925af1801561092b576108fb926000916108fd575b506001600160e01b03191614612620565b005b61091e915060203d8111610924575b6109168183610e30565b8101906125b7565b386108ea565b503d61090c565b6121f5565b505050925050506108fb91501515612577565b6109628561097f9261095b8260019a6109f09861265f565b359661265f565b359361099e6109968461097f84600052600f602052604060002090565b9060018060a01b0316600052602052604060002090565b541515612501565b6109c2856109ba8561097f85600052600f602052604060002090565b54101561253a565b6109da8961097f83600052600f602052604060002090565b858154019055600052600f602052604060002090565b908154039055018590610854565b50610850610a2c610a253361097f8c60018060a01b0316600052600e602052604060002090565b5460ff1690565b9050610847565b34610266576000366003190112610266576004546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b828110610a7c575050505090565b835185529381019392810192600101610a6e565b906020610427928181520190610a5c565b3461026657604080600319360112610266576001600160401b0360043581811161026657610ad3903690600401610733565b9160243590811161026657610aec903690600401610733565b92610af8848214611f24565b610b0181612201565b93600091825b818110610b1b578751806104c98982610a90565b80610b63610b2c600193858a61265f565b35610b3681610255565b610b4183878a61265f565b358752600f6020528a87209060018060a01b0316600052602052604060002090565b54610b6e828a611e37565b5201610b07565b34610266576020806003193601126102665760048035610b9481610255565b6002546001600160a01b03938391610baf9086163314611d9a565b8154610bcb906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa94851561092b57600095610ddb575b50610bfb85612201565b93610c0586612201565b966008549081151580610dd0575b15610dc55790610c2e91610c278247612233565b9416612a04565b610c386000600855565b835460009390610c50906001600160a01b0316610bbf565b935b878110610c9f5788888860005b828110610c6857005b80610c99610c88610c7b60019486611e37565b516001600160a01b031690565b610c928388611e37565b5190612a04565b01610c5f565b825190631419245f60e11b8252828280610cc0848b83019190602083019252565b0381895afa91821561092b57600092610d96575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561092b57610d408a610d469260019686610d4e96600093610d5f575b50610d2c90610d3b9394611e37565b6001600160a01b039091169052565b611deb565b87611e01565b612710900490565b610d58828c611e37565b5201610c52565b610d3b935090610d87610d2c928c8d3d10610d8f575b610d7f8183610e30565b8101906121e6565b935090610d1d565b503d610d75565b610db7919250833d8511610dbe575b610daf8183610e30565b810190612240565b9038610cd4565b503d610da5565b505090504790610c38565b508084161515610c13565b610df3919550823d8411610d8f57610d7f8183610e30565b9338610bf1565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117610e2b57604052565b610dfa565b90601f801991011681019081106001600160401b03821117610e2b57604052565b6001600160401b038111610e2b57601f01601f191660200190565b34610266576020366003190112610266576004356001600160401b0381116102665736602382011215610266578060040135610ea781610e51565b90610eb56040519283610e30565b80825236602482850101116102665760208160009260246108fb9601838601378301015261202e565b3461026657600080600319360112610f4957610f0560018060a01b03600254163314611d9a565b600160ff19600a541617600a5560405180610f1f81611f9a565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b80fd5b90600182811c92168015610f7c575b6020831014610f6657565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f5b565b3461026657600080600319360112610f49576040519080600954610fa981610f4c565b8085529160019180831690811561101c5750600114610fd3575b6104c9856104bd81870382610e30565b925060098352600080516020612b3d8339815191525b8284106110045750505081016020016104bd826104c9610fc3565b80546020858701810191909152909301928101610fe9565b8695506104c9969350602092506104bd94915060ff191682840152151560051b8201019293610fc3565b34610266576000366003190112610266576005546040516001600160a01b039091168152602090f35b3461026657602036600319011261026657600435801515809103610266576110a260018060a01b03600254163314611d9a565b60ff19600d541660ff821617600d557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b34610266576000366003190112610266576002546040516001600160a01b039091168152602090f35b34610266576040806003193601126102665760049081359061112282610255565b6024359161112f83610255565b6002546001600160a01b0394906111499086163314611d9a565b805461115d906001600160a01b0316610bbf565b835194859163e919ecad60e01b8352828460209485935afa95861561092b576000966113a2575b5061118e86612201565b9461119887612201565b9760006008549081151580611397575b1561133a575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa801561092b57816111f2916111f99460009161131d575b50612233565b9387612acb565b6112036000600855565b83546000939061121b906001600160a01b0316610bbf565b935b8881106112615750505050505060005b83811061123657005b8061125b611249610c7b60019487611e37565b6112538389611e37565b519085612acb565b0161122d565b825190631419245f60e11b8252828280611282848b83019190602083019252565b0381895afa91821561092b576000926112fe575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561092b57610d408b610d4692600196866112ed96600093610d5f5750610d2c90610d3b9394611e37565b6112f7828d611e37565b520161121d565b611316919250833d8511610dbe57610daf8183610e30565b9038611296565b6113349150883d8a11610d8f57610d7f8183610e30565b386111ec565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa91821561092b579161137a575b5090611203565b6113919150833d8511610d8f57610d7f8183610e30565b38611373565b5082851615156111a8565b6113ba919650823d8411610d8f57610d7f8183610e30565b9438611184565b34610266576000366003190112610266576020600754604051908152f35b34610266576000366003190112610266576020600b54604051908152f35b346102665760403660031901126102665760043561141a81610255565b6024359081151580920361026657336000908152600e602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b346102665761149d36610790565b5050505050505050602060405163bc197c8160e01b8152f35b6001600160401b038111610e2b5760051b60200190565b81601f82011215610266578035916114e4836114b6565b926114f26040519485610e30565b808452602092838086019260051b820101928311610266578301905b82821061151c575050505090565b8135815290830190830161150e565b60403660031901126102665760046001600160401b0381358181116102665761155790369084016114cd565b906024359081116102665761156f90369084016114cd565b60019261157f8460035414611d61565b600260035560ff600d5416156116ce5761159882611f62565b6007549081018091116106af57600c54106116bf57600b5483516115ba61246b565b90600854908282018092116106af576115d99160085561062c336123ff565b9081018091116106af57036116b057825182510361167a57506115fb336123ff565b82516005549094916001600160a01b039091169081611666575b50506000905b848210611649575061163f93611630916123ea565b611638611e50565b913361287b565b6108fb6001600355565b8161165e611658839486611e37565b51612273565b50019061161b565b6116739130903390612a4f565b3880611615565b60649060206040519162461bcd60e51b8352820152600f60248201526e09a92a69a82a88690be988a9c8ea89608b1b6044820152fd5b60405163f7760f2560e01b8152fd5b60405163d05cb60960e01b8152fd5b6040516316851fc760e11b8152fd5b6080600319820112610266576004356116f581610255565b916001600160401b036024358181116102665783611715916004016114cd565b926044359182116102665761172c916004016114cd565b9060643561042781610255565b611742366116dd565b61175a60018060a09695961b03600254163314611d9a565b61176382611f62565b6007549081018091116106af57600c54106117cd57611781906122da565b82519260005b8481106117b1576108fb9461179b916123ea565b604051926117a884610e10565b6000845261287b565b806117be60019285611e37565b51600690815401905501611787565b60405163d05cb60960e01b8152600490fd5b34610266576000366003190112610266576020600c54604051908152f35b6080366003190112610266576001600160401b036004358181116102665736602382011215610266578060040135611834816114b6565b916118426040519384610e30565b81835260209160248385019160051b8301019136831161026657602401905b8282106118ac578585602435828111610266576118829036906004016114cd565b6044359283116102665761189d6108fb9336906004016114cd565b906118a661026b565b92611e63565b83809183356118ba81610255565b815201910190611861565b6118ce366116dd565b6002549293926001600160a01b0391611900916118ee9084163314611d9a565b6118fb8651855114611f24565b612336565b835160005b8181106119d85790611916916123ea565b821691611924831515612928565b83519060005b82811061196d57600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6119688860405191829133958361280b565b0390a4005b8061197a60019288611e37565b516119a96119968561097f84600052600f602052604060002090565b546119a18489611e37565b511115612501565b6119cc8461097f6119ba858a611e37565b5193600052600f602052604060002090565b9081540390550161192a565b6119e28185611e37565b5190600680549283156119fb5760019303905501611905565b63ce3a3d376000526004601cfd5b34610266576000366003190112610266576020600854604051908152f35b3461026657604036600319011261026657602060ff611a83600435611a4b81610255565b60243590611a5882610255565b60018060a01b0316600052600e845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b60a060031982011261026657600435611aa781610255565b91602435611ab481610255565b916044359160643591608435906001600160401b0382116102665761080b91600401610763565b3461026657611ae936611a8f565b505050505050602060405163f23a6e6160e01b8152f35b3461026657611b0e36611a8f565b9294929390916001600160a01b0380851692903384148015611c3c575b611b34906124c4565b611b4f6109968761097f8b600052600f602052604060002090565b611b6b836109ba8861097f8c600052600f602052604060002090565b611b838261097f8a600052600f602052604060002090565b611b8e848254611e14565b9055611ba88661097f8a600052600f602052604060002090565b611bb3848254612233565b905581168093887fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405180611bf88833958360209093929193604081019481520152565b0390a43b15611c2b57600060209495966108d46040519889968795869463f23a6e6160e01b9b8c875233600488016125ed565b50925050506108fb91501515612577565b50611b34611c63610a253361097f8a60018060a01b0316600052600e602052604060002090565b9050611b2b565b608036600319011261026657600435611c8281610255565b602435906044356001600160401b03811161026657611ca59036906004016114cd565b9160643592611cb384610255565b600193611cc38560035414611d61565b6002600355611cdd60018060a01b03600254163314611d9a565b611cef83611cea84611f62565b611e01565b6007549081018091116106af57600c54106117cd579184611d1085946122da565b60009283945b838610611d28578461066485886123ea565b90918095611d58611d37612255565b611d418387611e37565b5160405191611d4f83610e10565b8983528661273b565b01949190611d16565b15611d6857565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b15611da157565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b906064820291808304606414901517156106af57565b818102929181159184041417156106af57565b919082018092116106af57565b634e487b7160e01b600052603260045260246000fd5b8051821015611e4b5760209160051b010190565b611e21565b60405190611e5d82610e10565b60008252565b90939291611e8160018060a01b03936118fb85600254163314611d9a565b60009283928651948582511480611f1a575b611ea1909493929194611f24565b858510611eb757505050506102789293506123ea565b90919293611ec58185611e37565b5160069081548015611f0d57039055600190611f0384611ee58386611e37565b5116611ef1838c611e37565b51611efc8489611e37565b5191612963565b0193929190611ea1565b63ce3a3d3788526004601cfd5b5083518614611e93565b15611f2b57565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b9060009180516000915b818310611f7857505050565b909193611f858583611e37565b5181018091116106af57936001019190611f6c565b60095460009291611faa82610f4c565b916001908181169081156120045750600114611fc557505050565b90919293506009600052600080516020612b3d833981519152906000915b848310611ff1575050500190565b8181602092548587015201920191611fe3565b60ff191683525050811515909102019150565b9061202a602092828151948592016103ce565b0190565b9061204460018060a01b03600254163314611d9a565b6001918260ff600a54161515146121555780516001600160401b038111610e2b5761207981612074600954610f4c565b612167565b60209384601f83116001146120e157508180916120af95966000936120d6575b501b916000199060031b1c1916176009556121c6565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b850151925038612099565b6009600052601f19831695919291600080516020612b3d833981519152916000905b88821061213e575050826120af969710612125575b5050811b016009556121c6565b84015160001960f88460031b161c191690553880612118565b808684958294958a01518155019401920190612103565b6040516331d1c0a360e01b8152600490fd5b601f8111612173575050565b60009060098252600080516020612b3d833981519152906020601f850160051c830194106121bc575b601f0160051c01915b8281106121b157505050565b8181556001016121a5565b909250829061219c565b6121de906020604051928284809451938492016103ce565b810103902090565b90816020910312610266575190565b6040513d6000823e3d90fd5b9061220b826114b6565b6122186040519182610e30565b8281528092612229601f19916114b6565b0190602036910137565b919082039182116106af57565b90816020910312610266575161042781610255565b600160065401600655600754600181018091116106af578060075590565b80600654016006556007549081018091116106af578060075590565b612298816123ff565b6001600160a01b03338382161480156122ce575b6122b557505050565b60055416806122c357505050565b610278923091612a4f565b508060055416156122ac565b6122e3816123ff565b6001600160a01b033383821614801561232a575b61230057505050565b61230861246b565b820361231c5760055416806122c357505050565b63f7760f256000526004601cfd5b508060055416156122f7565b61233f816123ff565b6001600160a01b03338382161480156123de575b61235c57505050565b6002546000908216803b63ffffffff16612386575082905061231c5760055416806122c357505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa91821561092b57916123c0575b50612308565b6123d8915060203d8111610d8f57610d7f8183610e30565b386123ba565b50806005541615612353565b106123f157565b63dfb035c96000526004601cfd5b6005546001600160a01b03908116919082156124645760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561092b5760009161244c575090565b610427915060203d8111610d8f57610d7f8183610e30565b5050503490565b6002546000906001600160a01b0316803b63ffffffff1661248d575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa91821561092b579161244c575090565b156124cb57565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b1561250857565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b1561254157565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b1561257e57565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b90816020910312610266575161042781610313565b908060209392818452848401376000828201840152601f01601f1916010190565b919261042796949160a094600180871b0380921685521660208401526040830152606082015281608082015201916125cc565b1561262757565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b9190811015611e4b5760051b0190565b81835290916001600160fb1b0383116102665760209260051b809284830137010190565b92906126ac90610427959360408652604086019161266f565b92602081850391015261266f565b9694926126fc946126ee926104279a989460018060a01b038092168b521660208a015260a060408a015260a089019161266f565b91868303606088015261266f565b9260808185039101526125cc565b909260a0926104279594600180861b03168352600060208401526040830152606082015281608082015201906103f1565b9290916127568461097f85600052600f602052604060002090565b612761828254611e14565b905560408051848152602081018390526001600160a01b0386169591869160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43b156127fd57906127d793602092600060405180978195829463f23a6e6160e01b998a8552336004860161270a565b03925af1801561092b57610278926000916108fd57506001600160e01b03191614612620565b505050610278901515612577565b909161282261042793604084526040840190610a5c565b916020818403910152610a5c565b9261285f610427959361286d9360018060a01b031686526000602087015260a0604087015260a0860190610a5c565b908482036060860152610a5c565b9160808184039101526103f1565b929091825160005b8181106128fd57505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806128cb888b8361280b565b0390a43b156127fd57906127d793602092600060405180978195829463bc197c8160e01b998a85523360048601612830565b8061290a60019287611e37565b5161291c8861097f6119ba8589611e37565b90815401905501612883565b1561292f57565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f46524f4d60a01b6044820152606490fd5b81600052600f602052612990836109ba8360406000209060018060a01b0316600052602052604060002090565b6000828152600f602090815260408083206001600160a01b038516845290915290209283549081039081116106af5790925560408051918252600160208301526000926001600160a01b03169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a4565b600080809381935af115612a1457565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160016000511416171615612a8f57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d1160016000511416171615612b0557565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfe6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7afa2646970667358221220de6a59dd7cb39640a76dedd9a89fc89547349ea60ca8e2f333b4149c9f2c416d64736f6c634300081300332a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b16e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(args, _extra, overrides || {}) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    args: Types.ColArgsStruct,
    _extra: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(args, _extra, overrides || {});
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
