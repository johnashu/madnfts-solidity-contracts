/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101408060405234620001d157620030dd9081380380620000208162000213565b938439820191602081840312620001d15780516001600160401b0391828211620001d157019182840312620001d15762000059620001ec565b928251828111620001d15781620000729185016200025e565b84526020830151828111620001d157816200008f9185016200025e565b60208501526040830151918211620001d157620000ae9183016200025e565b60408301526060810151606083015260808101516080830152620000d560a08201620002b5565b60a0830152620000e860c08201620002ca565b60c0830152620000fb60e08201620002b5565b60e0830152620001336101009262000115848401620002b5565b8482015262000129610120809401620002b5565b838201526200030d565b60405190612a0c9283620006d184396080518381816106930152611455015260a05183818161178601526127f6015260c051838181610d4601528181610dab01528181611ebd015281816124a30152612560015260e0518381816114a5015281816124eb01526128eb015251828181611a1501528181612451015261281e0152518181816119d901528181611b680152818161226101526125d10152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b038111838210176200020d57604052565b620001d6565b6040519190601f01601f191682016001600160401b038111838210176200020d57604052565b60005b8381106200024d5750506000910152565b81810151838201526020016200023c565b81601f82011215620001d15780516001600160401b0381116200020d5762000290601f8201601f191660200162000213565b9281845260208284010111620001d157620002b2916020808501910162000239565b90565b51906001600160a01b0382168203620001d157565b51906001600160601b0382168203620001d157565b6040916020825262000301815180928160208601526020868601910162000239565b601f01601f1916010190565b60a081018051610100830151606084015160e08501516101208087015160c088018051929796909562000376956001600160a01b0392831695918316949383169392909116916200036e906001600160601b03165b6001600160601b031690565b93856200060c565b608084016401000000008151116200046757516000947f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b946200046292620003e69262000362926040926001600160801b031690520193620003d9855162000511565b516001600160601b031690565b91620004366200042a6200042a6040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a25182620002df565b0390a2565b604051636ad9efbd60e11b8152600490fd5b90600182811c92168015620004ab575b60208310146200049557565b634e487b7160e01b600052602260045260246000fd5b91607f169162000489565b601f8111620004c3575050565b60009060066000526020600020906020601f850160051c8301941062000506575b601f0160051c01915b828110620004fa57505050565b818155600101620004ed565b9092508290620004e4565b80519091906001600160401b0381116200020d576200053d816200053760065462000479565b620004b6565b602080601f8311600114620005845750819062000573939460009262000578575b50508160011b916000199060031b1c19161790565b600655565b0151905038806200055e565b6006600052601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f926000905b878210620005f3575050836001959610620005d9575b505050811b01600655565b015160001960f88460031b161c19169055388080620005ce565b80600185968294968601518155019501930190620005b8565b608095909552600080546001600160a01b0319166001600160a01b039788161781559195949093909291908215620006c3578015620006c35782917fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d1591879594600c1b60015580600c1b6002556001600355337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380a21660c052168060e052620006b85760a052565b60016101005260a052565b63d92e233d82526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028657806301ffc9a71461028157806305e398331461027c5780630e89341c146102775780631a7591411461027257806322ab47a11461026d5780632a55205a146102685780632c8701a4146102635780632eb2c2d61461025e5780633ccfd60b146102595780633cd8045e1461025457806342abcd661461024f5780634e1273f41461024a57806355f804b31461024557806366c879a914610240578063685d2ca51461023b5780636c0360eb14610236578063769da94314610231578063785e9e861461022c5780637cc22f7014610227578063879fbedf14610222578063893d20e81461021d5780638c01d30814610218578063911f51f914610213578063976228701461020e578063a035b1fe14610209578063a22cb46514610204578063a4ddb2a3146101ff578063a7016023146101fa578063b0f479a1146101f5578063d139e612146101f0578063d5abeb01146101eb578063d6ed2663146101e6578063dfe7a8e5146101e1578063e1c38ed9146101dc578063e985e9c5146101d7578063f204ed59146101d2578063f242432a146101cd5763f4f3b200146101c857600080fd5b611e26565b611c4e565b611b04565b611abe565b611aa0565b611a3a565b6119fd565b6119b0565b611986565b611966565b6118ed565b61182e565b6117a9565b61176e565b611733565b6116b5565b611697565b611677565b6115f7565b6114c9565b611478565b61143d565b611349565b6111bd565b6110e9565b610f00565b610e40565b610dcf565b610d7e565b610d0d565b610a6d565b61080a565b61065f565b610639565b6105fb565b6104c9565b610439565b610336565b6102f7565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b346102ae5760406003193601126102ae5761031061028b565b60601b679a31110384e0b0c9176020526024356000526020604060002054604051908152f35b346102ae5760206003193601126102ae576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102ae57807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561040f575b81156103e5575b81156103bb575b506040519015158152f35b7f2a55205a00000000000000000000000000000000000000000000000000000000915014386103b0565b7f0e89341c00000000000000000000000000000000000000000000000000000000811491506103a9565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506103a2565b346102ae5760006003193601126102ae57602060ff600754166040519015158152f35b60005b83811061046f5750506000910152565b818101518382015260200161045f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104c2815180928160208801526020888801910161045c565b0116010190565b346102ae5760206003193601126102ae576004356104f581600052600860205260406000205460801c90565b156105ed5760405160808101604052607f810191600a8060309281810660300186530491825b6105b6576105b26105716105a6878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261059a60405194859261056b60208501611f4b565b90611ff8565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b039081018352826106f6565b6040519182918261047f565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193950194818106830186530491908261051b565b63bad086ea6000526004601cfd5b346102ae5760206003193601126102ae57600435600052600860205260206fffffffffffffffffffffffffffffffff60406000205416604051908152f35b346102ae5760006003193601126102ae57602060ff60075460081c166040519015158152f35b346102ae5760406003193601126102ae57604073ffffffffffffffffffffffffffffffffffffffff600054166127106106ba7f000000000000000000000000000000000000000000000000000000000000000060243561203e565b0482519182526020820152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761073757604052565b6106c7565b67ffffffffffffffff81116107375760051b60200190565b929161075f8261073c565b9161076d60405193846106f6565b829481845260208094019160051b81019283116102ae57905b8282106107935750505050565b81356fffffffffffffffffffffffffffffffff811681036102ae578152908301908301610786565b9080601f830112156102ae578160206107d693359101610754565b90565b9181601f840112156102ae5782359167ffffffffffffffff83116102ae576020808501948460051b0101116102ae57565b60606003193601126102ae5761081e61028b565b60243567ffffffffffffffff918282116102ae57610841600492369084016107bb565b926044359081116102ae5761085a8291369085016107d9565b60ff60035416610a1b575b8086516000916109e1575b936108816108869261088d9661203e565b61242d565b3691610754565b9033600c1b6001546002548032600c1b148092841416921416146109d4576108b36120dd565b916108be81866125cf565b80518551036109c7578160601b9283156109ba57602093679a31110384e0b0c9178452855160051b926000915b828581146109295786019286808287010151918a0101516000526040600020805491820191821061091c57556108eb565b886301336cea600052601cfd5b5083888760008a6040908151938491838352865160051b82018484018189845afa503d8401828401523d830191885160051b01908189868501925afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6109af57005b6109b893612677565b005b8463ea553b34600052601cfd5b83633b800a46600052601cfd5b82631648fd01600052601cfd5b833d1515600585901b82015b81156109fc575b505050610870565b90919360209085350194019181831015610a1657906109ed565b6109f4565b90915060015433600c1b03610a3257908291610865565b83631648fd01600052601cfd5b9181601f840112156102ae5782359167ffffffffffffffff83116102ae57602083818601950101116102ae57565b346102ae5760a06003193601126102ae57610a8661028b565b610a8e6102b3565b906044359167ffffffffffffffff908184116102ae57610ab3600494369086016107d9565b90926064358181116102ae57610acc90369088016107d9565b916084359081116102ae57610ae49036908901610a3f565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610d0057893303610ce5575b928b9297969594918b9460051b9160005b838103610c73575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610bbe57005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a90600091f115610c5b575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610c4f57005b639c05499b600052601cfd5b3d610c695760008152610c26565b3d6000803e3d6000fd5b91939697829193965080999a9550013590828d52808501356000526040806000208054808511610cd6578490039055848e52600020805490928101908110610cc9578d925501918b94918d949998979693610b28565b8f6301336cea600052601cfd5b50508f63f4d678b8600052601cfd5b336000526034600c2054610b17578c634b6e7f18600052601cfd5b8c63ea553b34600052601cfd5b346102ae57600080600319360112610d7b5760025433600c1b03610d6e57610d6b4773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166125b1565b80f35b631648fd0190526004601cfd5b80fd5b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760206003193601126102ae576020610dfc600435600052600860205260406000205460801c90565b604051908152f35b602090602060408183019282815285518094520193019160005b828110610e2c575050505090565b835185529381019392810192600101610e1e565b346102ae576040806003193601126102ae5767ffffffffffffffff906004358281116102ae57610e749036906004016107d9565b926024359081116102ae57610e8d9036906004016107d9565b9290938303610ef2576040519280845260051b9160209460208585010160405260009160005b858103610ec857604051806105b28982610e04565b679a31110384e0b0c98282013560601b178852828101358452848420548782018901528701610eb3565b633b800a466000526004601cfd5b346102ae576020806003193601126102ae5767ffffffffffffffff6004358181116102ae57610f33903690600401610a3f565b9160025433600c1b036110db5760ff600754166110b157821161073757610f6482610f5f6006546112f6565b612056565b600092601f8311600114610fef5750610fb58280610fbd95600091610fe4575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b6006556120c8565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005b905083013538610f84565b60066000527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08316937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9181905b86821061109957505083610fbd9510611061575b5050600182811b016006556120c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690553880611051565b8060018495829495880135815501940192019061103d565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346102ae57600080600319360112610d7b5760025433600c1b03610d6e5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060075416176007557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b60606003198201126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae579167ffffffffffffffff6024358181116102ae57836111a6916004016107bb565b926044359182116102ae576107d6916004016107bb565b6111c636611159565b909133600c1b6001546002548032600c1b148092841416921416146110db576111ed6120dd565b916111f881856125cf565b8051845103610ef2578160601b9283156112e857602093679a31110384e0b0c9178452845160051b926000915b8285811461126457860192868082870101519189010151600052604060002080549182019182106112565755611225565b6301336cea6000526004601cfd5b508387876000604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6109af57005b63ea553b346000526004601cfd5b90600182811c9216801561133f575b602083101461131057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691611305565b346102ae57600080600319360112610d7b5760405190806006549061136d826112f6565b808552916020916001918281169081156113f2575060011461139a575b6105b2866105a6818803826106f6565b9350600684527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8385106113df575050505081016020016105a6826105b23861138a565b80548686018401529382019381016113c2565b8796506105b2979450602093506105a69592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010192933861138a565b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6114d236611159565b909133600c1b6001546002548032600c1b148092841416921416146110db576114fb828461295f565b8060601b9160209280679a31110384e0b0c917845215600117156115cc575b835160051b916000905b8184811461156357850191858082860101519188010151600052604060002090815480821161155557039055611524565b63f4d678b86000526004601cfd5b600082877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a88604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a4005b600080526034600c205461151a57634b6e7f186000526004601cfd5b6004359081151582036102ae57565b346102ae5760206003193601126102ae576116106115e8565b60025433600c1b036110db576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346102ae5760006003193601126102ae57600254600c1c60005260206000f35b346102ae5760006003193601126102ae576020600554604051908152f35b346102ae5760006003193601126102ae57602060ff600354166040519015158152f35b60031960609101126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae57906fffffffffffffffffffffffffffffffff9060243582811681036102ae579160443590811681036102ae5790565b61173c366116d8565b60ff60039392935416611754575b6109b892826121fe565b60015433600c1b1461174a57631648fd016000526004601cfd5b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760406003193601126102ae576117c261028b565b602435908115158092036102ae5773ffffffffffffffffffffffffffffffffffffffff91679a31110384e0b0c96020523360145281600052806034600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b60606003193601126102ae5767ffffffffffffffff6004358181116102ae57366023820112156102ae5780600401356118668161073c565b9161187460405193846106f6565b8183526020916024602085019160051b830101913683116102ae57602401905b8282106118d65785856024358281116102ae576118b59036906004016107bb565b6044359283116102ae576118d06109b89336906004016107bb565b91612101565b8380916118e2846102d6565b815201910190611894565b346102ae5760206003193601126102ae5761190661028b565b33600c1b6001546002548032600c1b148092841416921416146110db5780156119585780600c1b600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a3005b63d92e233d6000526004601cfd5b346102ae5760006003193601126102ae57600154600c1c60005260206000f35b346102ae5760206003193601126102ae5761199f6115e8565b60025433600c1b036110db57600355005b346102ae5760006003193601126102ae5760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760006003193601126102ae5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b60406003193601126102ae576fffffffffffffffffffffffffffffffff60043581811681036102ae5760243591821682036102ae5760ff60035416611a86575b6109b8913391336121fe565b60015433600c1b14611a7a57631648fd016000526004601cfd5b346102ae5760006003193601126102ae576020600454604051908152f35b346102ae5760406003193601126102ae57611ad761028b565b611adf6102b3565b90679a31110384e0b0c960205260145260005260206034600c20546040519015158152f35b611b0d366116d8565b91909133600c1b6001546002548032600c1b148092841416921416146110db576fffffffffffffffffffffffffffffffff80809416911690611b4d6120dd565b916008602052600094818652604086209081548060801c85017f00000000000000000000000000000000000000000000000000000000000000008111611c415790859160801b9216011790558360601b15611c3457679a31110384e0b0c96020528360145280855260408520805490838201918210611c2757558085528160205273ffffffffffffffffffffffffffffffffffffffff841685337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611c16578480f35b611c1f93612752565b388080808480f35b6301336cea87526004601cfd5b63ea553b3485526004601cfd5b63d05cb60989526004601cfd5b346102ae5760a06003193601126102ae57611c6761028b565b611c6f6102b3565b90604435606435926084359267ffffffffffffffff84116102ae57611c9960049436908601610a3f565b959091679a31110384e0b0c99060601b81179360601b179560209380855260601c928760601c928315611e1957843303611dfe575b600098878a5260408a208054808411611df2578390039055865260408920805490828201918210611de657558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260408da4833b611d2f578880f35b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c4019086601c8401915af115611dd0575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001611dc557808080808080808880f35b639c05499b8252601cfd5b3d611ddd57828152611d93565b823d81803e3d90fd5b896301336cea8c52601cfd5b8a63f4d678b88d52601cfd5b336000526034600c2054611cce5787634b6e7f18600052601cfd5b8763ea553b34600052601cfd5b346102ae5760206003193601126102ae57611e3f61028b565b60025433600c1b036110db5780156119585773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115611f4657600080936044936010936020978492611f17575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611f0957005b6390b8ec186000526004601cfd5b611f38919250883d8a11611f3f575b611f3081836106f6565b810190612412565b9038611eba565b503d611f26565b612421565b60065460009291611f5b826112f6565b91600190818116908115611fc75750600114611f7657505050565b909192935060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906000915b848310611fb4575050500190565b8181602092548587015201920191611fa6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b9061200b6020928281519485920161045c565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181029291811591840414171561205157565b61200f565b601f8111612062575050565b60009060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f850160051c830194106120be575b601f0160051c01915b8281106120b357505050565b8181556001016120a7565b909250829061209e565b81604051928392833781016000815203902090565b604051906020820182811067ffffffffffffffff8211176107375760405260008252565b9033600c1b926001936001546002548032600c1b148092841416921416146110db5781519280518414825185141615610ef25760005b84811061214657505050505050565b806121b573ffffffffffffffffffffffffffffffffffffffff61216a8994866121bb565b51166fffffffffffffffffffffffffffffffff6121af8161218b868b6121bb565b511691612198868a6121bb565b51166fffffffffffffffffffffffffffffffff1690565b9161234b565b01612137565b80518210156121cf5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b929061221e6fffffffffffffffffffffffffffffffff809416928361242d565b33600c1b6001546002548032600c1b148092841416921416146110db578216906122466120dd565b926008602052600090828252604082209081548060801c86017f0000000000000000000000000000000000000000000000000000000000000000811161233e5790869160801b9216011790558460601b1561233157679a31110384e0b0c9602052846014528181526040812080549084820191821061232457558181528260205273ffffffffffffffffffffffffffffffffffffffff851690337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b612312575b50505050565b61231b93612752565b3880808061230c565b6301336cea83526004601cfd5b63ea553b3490526004601cfd5b63d05cb60985526004601cfd5b909160086020526000928084526040842080546fffffffffffffffffffffffffffffffff16908382039180831190151761240557558260601b80679a31110384e0b0c91760205215600117156123eb575b8084526040842080548084116123de5783900390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b63f4d678b886526004601cfd5b8380526034600c205461239c57634b6e7f1884526004601cfd5b63ce3a3d3786526004601cfd5b908160209103126102ae575190565b6040513d6000823e3d90fd5b60ff60075460081c16156125875781612445916127f2565b908161244f575050565b7f00000000000000000000000000000000000000000000000000000000000000001561253357600554828101809111612051576005556040519160605273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660405260601b602c526f23b872dd000000000000000000000000600c52602060006064601c827f00000000000000000000000000000000000000000000000000000000000000005af13d15600160005114171615612525576000606052604052565b637939f4246000526004601cfd5b5060045490808201809211612051576125859160045573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166125b1565b565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b600080809381935af1156125c157565b63b12d13eb6000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000009181519080518203610ef25790602083818080960194019260051b0101915b82810361261d575050505050565b6008845280516000908152604081209081549060809082821c8651019089821161266a57508551911b6fffffffffffffffffffffffffffffffff929092160117905590830190830161260f565b63d05cb60990526004601cfd5b91602091939260a46040518095819463bc197c818352338784015260009889604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d0103019085601c8401915af11561273c575b517f43e6837f000000000000000000000000000000000000000000000000000000000161272f5750565b639c05499b90526004601cfd5b3d61274957818152612705565b503d81803e3d90fd5b91602091939260405193849263f23a6e61845233858501526000968760408601526060850152608084015260a08084015280518091818060c08701526127de575b505060c4019085601c8401915af1156127d1575b517f0dc5919f000000000000000000000000000000000000000000000000000000000161272f5750565b3d612749578181526127a7565b818660e08701920160045afa508038612793565b91907f0000000000000000000000000000000000000000000000000000000000000000908115612957577f000000000000000000000000000000000000000000000000000000000000000061287f575061284e3493349261203e565b0361285557565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015292906020848060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa938415611f4657600094612930575b50906129279161203e565b80921061285557565b6129279291945061294f9060203d602011611f3f57611f3081836106f6565b93909161291c565b506000925050565b9081519080518203610ef25790602083818080960194019260051b0101915b82810361298b5750505050565b60088452805160009081526040812080546fffffffffffffffffffffffffffffffff16918285518103118315176129c957505590830190830161297e565b63ce3a3d3790526004601cfdfea264697066735822122097480ef662a3ee04de93b28b6ab884b429f8431cbf50d312c7a979cc8d6b03ca64736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
