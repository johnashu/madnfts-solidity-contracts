/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
  FactoryTypes,
} from "../../../MADTokens/ERC1155/ERC1155Basic";
import type { NonPayableOverrides } from "../../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_baseURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "_price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_maxSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "_splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "_royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "address",
            name: "_router",
            type: "address",
          },
          {
            internalType: "address",
            name: "_erc20",
            type: "address",
          },
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CollectionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccountBalanceOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayLengthsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectPriceAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyBoundExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterIsEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongArgsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "_royaltyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "balances",
        type: "uint128[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20PaymentsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCountERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "liveBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128[]",
        name: "ids",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "amounts",
        type: "uint128[]",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_id",
        type: "uint128",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerHasAuthority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_hasAuthority",
        type: "bool",
      },
    ],
    name: "setRouterHasAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101208060405234620001c157620030d5803803806200001f8162000203565b928339810190602081830312620001c15780516001600160401b0391828211620001c157019261014084840312620001c1576200005b620001dc565b918451818111620001c15784620000749187016200024e565b83526020850151818111620001c15784620000919187016200024e565b60208401526040850151908111620001c1576200013293620000b59186016200024e565b60408301526060840151606083015260808401516080830152620000dc60a08501620002a5565b60a0830152620000ef60c08501620002ba565b60c08301526200010260e08501620002a5565b60e08301526200012881610100956200011d878201620002a5565b8786015201620002a5565b90820152620002fd565b604051612a2a9182620006ab833960805182818161067a01526114aa015260a0518281816117e501526127cb015260c0518281816106bc01528181610d6401528181610dc901528181611efa015281816124c20152612537015260e0518281816114fa015281816124e501526128b3015251818181611a4501528181611bb80152818161229e01526125a60152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519061014082016001600160401b03811183821017620001fd57604052565b620001c6565b6040519190601f01601f191682016001600160401b03811183821017620001fd57604052565b60005b8381106200023d5750506000910152565b81810151838201526020016200022c565b81601f82011215620001c15780516001600160401b038111620001fd5762000280601f8201601f191660200162000203565b9281845260208284010111620001c157620002a2916020808501910162000229565b90565b51906001600160a01b0382168203620001c157565b51906001600160601b0382168203620001c157565b60409160208252620002f1815180928160208601526020868601910162000229565b601f01601f1916010190565b60a08101805161010080840151606085015160e086015161012087015160c088018051959796909562000362956001600160a01b0392831695938316948316939216906200035b906001600160601b03165b6001600160601b031690565b94620005f8565b608084016401000000008151116200045357516000947f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b946200044e92620003d2926200034f926040926001600160801b031690520193620003c58551620004fd565b516001600160601b031690565b916200042262000416620004166040519687967fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8b80a2516001600160a01b031690565b6001600160a01b031690565b7f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b18780a25182620002cf565b0390a2565b604051636ad9efbd60e11b8152600490fd5b90600182811c9216801562000497575b60208310146200048157565b634e487b7160e01b600052602260045260246000fd5b91607f169162000475565b601f8111620004af575050565b60009060066000526020600020906020601f850160051c83019410620004f2575b601f0160051c01915b828110620004e657505050565b818155600101620004d9565b9092508290620004d0565b80519091906001600160401b038111620001fd5762000529816200052360065462000465565b620004a2565b602080601f831160011462000570575081906200055f939460009262000564575b50508160011b916000199060031b1c19161790565b600655565b0151905038806200054a565b6006600052601f198316949091907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f926000905b878210620005df575050836001959610620005c5575b505050811b01600655565b015160001960f88460031b161c19169055388080620005ba565b80600185968294968601518155019501930190620005a4565b939092919460805281156200069c5780156200069c5781600c1b60005580600c1b6001556001600255337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e269600080a37fc6b438e6a8a59579ce6a4406cbd203b740e0d47b458aae6596339bcd40c40d15600080a26001600160a01b0391821660c0521660e08190526200068a5760a052565b600160ff19600554161760055560a052565b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461028657806301ffc9a71461028157806305e398331461027c5780630e89341c146102775780631a7591411461027257806322ab47a11461026d5780632a55205a146102685780632c8701a4146102635780632eb2c2d61461025e5780633ccfd60b146102595780633cd8045e1461025457806342abcd661461024f5780634e1273f41461024a57806355f804b31461024557806366c879a914610240578063685d2ca51461023b5780636c0360eb14610236578063769da94314610231578063785e9e861461022c5780637cc22f7014610227578063879fbedf14610222578063893d20e81461021d5780638c01d30814610218578063911f51f914610213578063976228701461020e578063a035b1fe14610209578063a22cb46514610204578063a4ddb2a3146101ff578063a7016023146101fa578063b0f479a1146101f5578063d139e612146101f0578063d5abeb01146101eb578063d6ed2663146101e6578063dfe7a8e5146101e1578063e1c38ed9146101dc578063e985e9c5146101d7578063f204ed59146101d2578063f242432a146101cd5763f4f3b200146101c857600080fd5b611e69565b611c91565b611b56565b611b10565b611af2565b611a8c565b611a69565b611a1c565b6119f2565b6119d4565b61194c565b61188d565b611808565b6117cd565b611792565b611714565b6116f6565b6116d6565b611656565b61151e565b6114cd565b611492565b61139e565b6111e4565b611110565b610f1e565b610e5e565b610ded565b610d9c565b610d2b565b610a8b565b610828565b61065f565b610639565b6105fb565b6104c9565b610439565b610336565b6102f7565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b359073ffffffffffffffffffffffffffffffffffffffff821682036102ae57565b346102ae5760406003193601126102ae5761031061028b565b60601b679a31110384e0b0c9176020526024356000526020604060002054604051908152f35b346102ae5760206003193601126102ae576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102ae57807f01ffc9a7000000000000000000000000000000000000000000000000000000006020921490811561040f575b81156103e5575b81156103bb575b506040519015158152f35b7f2a55205a00000000000000000000000000000000000000000000000000000000915014386103b0565b7f0e89341c00000000000000000000000000000000000000000000000000000000811491506103a9565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811491506103a2565b346102ae5760006003193601126102ae57602060ff600754166040519015158152f35b60005b83811061046f5750506000910152565b818101518382015260200161045f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526104c2815180928160208801526020888801910161045c565b0116010190565b346102ae5760206003193601126102ae576004356104f581600052600860205260406000205460801c90565b156105ed5760405160808101604052607f810191600a8060309281810660300186530491825b6105b6576105b26105716105a6878760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101920301815261059a60405194859261056b60208501611f88565b90612035565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b03908101835282610714565b6040519182918261047f565b0390f35b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8193950194818106830186530491908261051b565b63bad086ea6000526004601cfd5b346102ae5760206003193601126102ae57600435600052600860205260206fffffffffffffffffffffffffffffffff60406000205416604051908152f35b346102ae5760006003193601126102ae57602060ff60075460081c166040519015158152f35b346102ae5760406003193601126102ae5760406127106106a17f000000000000000000000000000000000000000000000000000000000000000060243561207b565b0481519073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001682526020820152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761075557604052565b6106e5565b67ffffffffffffffff81116107555760051b60200190565b929161077d8261075a565b9161078b6040519384610714565b829481845260208094019160051b81019283116102ae57905b8282106107b15750505050565b81356fffffffffffffffffffffffffffffffff811681036102ae5781529083019083016107a4565b9080601f830112156102ae578160206107f493359101610772565b90565b9181601f840112156102ae5782359167ffffffffffffffff83116102ae576020808501948460051b0101116102ae57565b60606003193601126102ae5761083c61028b565b60243567ffffffffffffffff918282116102ae5761085f600492369084016107d9565b926044359081116102ae576108788291369085016107f7565b60ff60025416610a39575b8086516000916109ff575b9361089f6108a4926108ab9661207b565b61246a565b3691610772565b9033600c1b6000546001548032600c1b148092841416921416146109f2576108d161211a565b916108dc81866125a4565b80518551036109e5578160601b9283156109d857602093679a31110384e0b0c9178452855160051b926000915b828581146109475786019286808287010151918a0101516000526040600020805491820191821061093a5755610909565b886301336cea600052601cfd5b5083888760008a6040908151938491838352865160051b82018484018189845afa503d8401828401523d830191885160051b01908189868501925afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b6109cd57005b6109d69361264c565b005b8463ea553b34600052601cfd5b83633b800a46600052601cfd5b82631648fd01600052601cfd5b833d1515600585901b82015b8115610a1a575b50505061088e565b90919360209085350194019181831015610a345790610a0b565b610a12565b90915060005433600c1b03610a5057908291610883565b83631648fd01600052601cfd5b9181601f840112156102ae5782359167ffffffffffffffff83116102ae57602083818601950101116102ae57565b346102ae5760a06003193601126102ae57610aa461028b565b610aac6102b3565b906044359167ffffffffffffffff908184116102ae57610ad1600494369086016107f7565b90926064358181116102ae57610aea90369088016107f7565b916084359081116102ae57610b029036908901610a5d565b92606097679a31110384e0b0c990891b811796891b1795602097818952818a1c97808b1c978815610d1e57893303610d03575b928b9297969594918b9460051b9160005b838103610c91575050507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb97898b60405194604086528488019b8c967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c809701988960408401378988018b8301528782019360051b809b0196879101809a8501376080818b339501030190a4893b610bdc57005b8b9885936040519e8f9d8e809d63bc197c8182523391015260408d01528b0160a0905260c08b013760c0820160808a01528189019360e08501370160e00160a08701520191838801910161010083013701036101040190601c8301905a90600091f115610c79575b517f43e6837f0000000000000000000000000000000000000000000000000000000001610c6d57005b639c05499b600052601cfd5b3d610c875760008152610c44565b3d6000803e3d6000fd5b91939697829193965080999a9550013590828d52808501356000526040806000208054808511610cf4578490039055848e52600020805490928101908110610ce7578d925501918b94918d949998979693610b46565b8f6301336cea600052601cfd5b50508f63f4d678b8600052601cfd5b336000526034600c2054610b35578c634b6e7f18600052601cfd5b8c63ea553b34600052601cfd5b346102ae57600080600319360112610d995760015433600c1b03610d8c57610d894773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612586565b80f35b631648fd0190526004601cfd5b80fd5b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760206003193601126102ae576020610e1a600435600052600860205260406000205460801c90565b604051908152f35b602090602060408183019282815285518094520193019160005b828110610e4a575050505090565b835185529381019392810192600101610e3c565b346102ae576040806003193601126102ae5767ffffffffffffffff906004358281116102ae57610e929036906004016107f7565b926024359081116102ae57610eab9036906004016107f7565b9290938303610f10576040519280845260051b9160209460208585010160405260009160005b858103610ee657604051806105b28982610e22565b679a31110384e0b0c98282013560601b178852828101358452848420548782018901528701610ed1565b633b800a466000526004601cfd5b346102ae576020806003193601126102ae5767ffffffffffffffff906004358281116102ae57610f52903690600401610a5d565b9160019360015433600c1b036111025760ff600754166110d857831161075557610f8683610f8160065461134b565b612093565b600090601f84116001146110135750610fe193508280610fd992600091611008575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b600655612105565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2005b905083013538610fa8565b600660005290937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08416907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9286915b8383106110c1575050509383610fe19510611089575b5050600182811b01600655612105565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19908301351690553880611079565b858801358555968101969384019391810191611063565b60046040517f31d1c0a3000000000000000000000000000000000000000000000000000000008152fd5b631648fd016000526004601cfd5b346102ae57600080600319360112610d995760015433600c1b03610d8c5760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060075416176007557f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08180a180f35b60606003198201126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae579167ffffffffffffffff6024358181116102ae57836111cd916004016107d9565b926044359182116102ae576107f4916004016107d9565b6111ed36611180565b91909133600c1b9160009283546001548032600c1b1480928414169214161461133e5761121861211a565b9161122381866125a4565b8051855103611331578160601b92831561132457602093679a31110384e0b0c9178452855160051b9285915b8285811461128b5786019286808287010151918a010151885260408820805491820191821061127e575561124f565b6301336cea89526004601cfd5b5093509386915085604080518093828252855160051b8101838301818860045afa503d8301818301523d820190875160051b01838201818960045afa503d010301917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb73ffffffffffffffffffffffffffffffffffffffff8816933392a4833b611313578480f35b61131c9361264c565b818080808480f35b63ea553b3485526004601cfd5b633b800a4684526004601cfd5b631648fd0183526004601cfd5b90600182811c92168015611394575b602083101461136557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161135a565b346102ae57600080600319360112610d99576040519080600654906113c28261134b565b8085529160209160019182811690811561144757506001146113ef575b6105b2866105a681880382610714565b9350600684527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b838510611434575050505081016020016105a6826105b2386113df565b8054868601840152938201938101611417565b8796506105b2979450602093506105a69592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201019293386113df565b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760006003193601126102ae57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b61152736611180565b33600c1b9260009384546001548032600c1b1480928414169214161461163a576115518284612924565b8060601b9160209280679a31110384e0b0c91784521560011715611620575b835160051b9185905b81878582146115b757508501918580828601015191880101518852604088209081548082116115aa57039055611579565b63f4d678b88a526004601cfd5b8083887f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b89604090815192828452805160051b860190818486019160045afa503d8201858401523d830194815160051b0190818387019160045afa508133943d01030190a480f35b8480526034600c205461157057634b6e7f1885526004601cfd5b631648fd0184526004601cfd5b6004359081151582036102ae57565b346102ae5760206003193601126102ae5761166f611647565b60015433600c1b03611102576007547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff0083151560081b169116176007557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b346102ae5760006003193601126102ae57600154600c1c60005260206000f35b346102ae5760006003193601126102ae576020600454604051908152f35b346102ae5760006003193601126102ae57602060ff600254166040519015158152f35b60031960609101126102ae5760043573ffffffffffffffffffffffffffffffffffffffff811681036102ae57906fffffffffffffffffffffffffffffffff9060243582811681036102ae579160443590811681036102ae5790565b61179b36611737565b60ff600293929354166117b3575b6109d6928261223c565b60005433600c1b146117a957631648fd016000526004601cfd5b346102ae5760006003193601126102ae5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102ae5760406003193601126102ae5761182161028b565b602435908115158092036102ae5773ffffffffffffffffffffffffffffffffffffffff91679a31110384e0b0c96020523360145281600052806034600c205560005216337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160206000a3005b60606003193601126102ae5767ffffffffffffffff6004358181116102ae57366023820112156102ae5780600401356118c58161075a565b916118d36040519384610714565b8183526020916024602085019160051b830101913683116102ae57602401905b8282106119355785856024358281116102ae576119149036906004016107d9565b6044359283116102ae5761192f6109d69336906004016107d9565b9161213e565b838091611941846102d6565b8152019101906118f3565b346102ae5760206003193601126102ae5761196561028b565b33600c1b9060009182546001548032600c1b148092841416921416146119c75780156119ba5780600c1b600155337fb9312e2100469bd44e3f762c248f4dcc8d7788906fabf34f79db45920c37e2698380a380f35b63d92e233d82526004601cfd5b631648fd0182526004601cfd5b346102ae57600080600319360112610d99578060209154600c1c8152f35b346102ae5760206003193601126102ae57611a0b611647565b60015433600c1b0361110257600255005b346102ae5760006003193601126102ae5760206040516fffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ae5760006003193601126102ae57602060ff600554166040519015158152f35b60406003193601126102ae576fffffffffffffffffffffffffffffffff60043581811681036102ae5760243591821682036102ae5760ff60025416611ad8575b6109d69133913361223c565b60005433600c1b14611acc57631648fd016000526004601cfd5b346102ae5760006003193601126102ae576020600354604051908152f35b346102ae5760406003193601126102ae57611b2961028b565b611b316102b3565b90679a31110384e0b0c960205260145260005260206034600c20546040519015158152f35b611b5f36611737565b919033600c1b9260009384546001548032600c1b1480928414169214161461163a576fffffffffffffffffffffffffffffffff808093169116611ba061211a565b926008602052818652604086209081548060801c85017f00000000000000000000000000000000000000000000000000000000000000008111611c845790859160801b9216011790558360601b1561132457679a31110384e0b0c96020528360145280855260408520805490838201918210611c7757558085528160205273ffffffffffffffffffffffffffffffffffffffff841685337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b611c66578480f35b611c6f93612727565b388080808480f35b6301336cea87526004601cfd5b63d05cb60989526004601cfd5b346102ae5760a06003193601126102ae57611caa61028b565b611cb26102b3565b90604435606435926084359267ffffffffffffffff84116102ae57611cdc60049436908601610a5d565b959091679a31110384e0b0c99060601b81179360601b179560209380855260601c928760601c928315611e5c57843303611e41575b600098878a5260408a208054808411611e35578390039055865260408920805490828201918210611e2957558086528385337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260408da4833b611d72578880f35b60405196879563f23a6e618752338888015260408701526060860152608085015260a0808501527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828601910160c085013760c4019086601c8401915af115611e13575b517f0dc5919f0000000000000000000000000000000000000000000000000000000001611e0857808080808080808880f35b639c05499b8252601cfd5b3d611e2057828152611dd6565b823d81803e3d90fd5b896301336cea8c52601cfd5b8a63f4d678b88d52601cfd5b336000526034600c2054611d115787634b6e7f18600052601cfd5b8763ea553b34600052601cfd5b346102ae5760206003193601126102ae57611e8261028b565b60015433600c1b036111025773ffffffffffffffffffffffffffffffffffffffff809116604051917f70a08231000000000000000000000000000000000000000000000000000000008352306004840152602083602481855afa908115611f8357600080936044936010936020978492611f54575b507f0000000000000000000000000000000000000000000000000000000000000000166014526034526fa9059cbb00000000000000000000000082525af13d15600160005114171615611f4657005b6390b8ec186000526004601cfd5b611f75919250883d8a11611f7c575b611f6d8183610714565b81019061244f565b9038611ef7565b503d611f63565b61245e565b60065460009291611f988261134b565b916001908181169081156120045750600114611fb357505050565b909192935060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906000915b848310611ff1575050500190565b8181602092548587015201920191611fe3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b906120486020928281519485920161045c565b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181029291811591840414171561208e57565b61204c565b601f811161209f575050565b60009060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f906020601f850160051c830194106120fb575b601f0160051c01915b8281106120f057505050565b8181556001016120e4565b90925082906120db565b81604051928392833781016000815203902090565b604051906020820182811067ffffffffffffffff8211176107555760405260008252565b9033600c1b92600054936001946001548032600c1b148092841416921416146111025781519280518414825185141615610f105760005b84811061218457505050505050565b806121f373ffffffffffffffffffffffffffffffffffffffff6121a88994866121f9565b51166fffffffffffffffffffffffffffffffff6121ed816121c9868b6121f9565b5116916121d6868a6121f9565b51166fffffffffffffffffffffffffffffffff1690565b91612388565b01612175565b805182101561220d5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9261225b6fffffffffffffffffffffffffffffffff809416918261246a565b33600c1b9160009283546001548032600c1b1480928414169214161461133e5783169161228661211a565b936008602052828252604082209081548060801c86017f0000000000000000000000000000000000000000000000000000000000000000811161237b5790869160801b9216011790558460601b1561236e57679a31110384e0b0c9602052846014528181526040812080549084820191821061236157558181528260205273ffffffffffffffffffffffffffffffffffffffff851690337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604083a4833b61234f575b50505050565b61235893612727565b38808080612349565b6301336cea83526004601cfd5b63ea553b3490526004601cfd5b63d05cb60985526004601cfd5b909160086020526000928084526040842080546fffffffffffffffffffffffffffffffff16908382039180831190151761244257558260601b80679a31110384e0b0c9176020521560011715612428575b80845260408420805480841161241b5783900390558352602052337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62604084a4565b63f4d678b886526004601cfd5b8380526034600c20546123d957634b6e7f1884526004601cfd5b63ce3a3d3786526004601cfd5b908160209103126102ae575190565b6040513d6000823e3d90fd5b60ff60075460081c161561255c5781612482916127c7565b8061248b575050565b60055460ff161561250b576004549181830180931161208e576125099260045573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016907f000000000000000000000000000000000000000000000000000000000000000061299b565b565b6003548082019250821061208e576125099160035573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016612586565b60046040517f2d0a3f8e000000000000000000000000000000000000000000000000000000008152fd5b600080809381935af11561259657565b63b12d13eb6000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000009181519080518203610f105790602083818080960194019260051b0101915b8281036125f2575050505050565b6008845280516000908152604081209081549060809082821c8651019089821161263f57508551911b6fffffffffffffffffffffffffffffffff92909216011790559083019083016125e4565b63d05cb60990526004601cfd5b91602091939260a46040518095819463bc197c818352338784015260009889604085015260a06060850152805160051b8801908160c086019160045afa5060a03d80820160808601523d850192805160051b8a01908160c086019160045afa503d010160a08401523d019080518701908160c084019160045afa503d0103019085601c8401915af115612711575b517f43e6837f00000000000000000000000000000000000000000000000000000000016127045750565b639c05499b90526004601cfd5b3d61271e578181526126da565b503d81803e3d90fd5b91602091939260405193849263f23a6e61845233858501526000968760408601526060850152608084015260a08084015280518091818060c08701526127b3575b505060c4019085601c8401915af1156127a6575b517f0dc5919f00000000000000000000000000000000000000000000000000000000016127045750565b3d61271e5781815261277c565b818660e08701920160045afa508038612768565b91907f000000000000000000000000000000000000000000000000000000000000000090811561291c5761280461280060055460ff1690565b1590565b1561284757506128163493349261207b565b0361281d57565b60046040517f68e26200000000000000000000000000000000000000000000000000000000008152fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015230602482015290926020828060448101038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215611f83576000926128f7575b506128f090829461207b565b1161281d57565b6128f09192506129159060203d602011611f7c57611f6d8183610714565b91906128e4565b506000925050565b9081519080518203610f105790602083818080960194019260051b0101915b8281036129505750505050565b60088452805160009081526040812080546fffffffffffffffffffffffffffffffff169182855181031183151761298e575055908301908301612943565b63ce3a3d3790526004601cfd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d156001600051141716156129e6576000606052604052565b637939f4246000526004601cfdfea264697066735822122079851d2ee292a1292016d607c7182b9d178fbfa20387112e2911d694bf97e16b64736f6c63430008160033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: FactoryTypes.CollectionArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      ERC1155Basic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Basic__factory {
    return super.connect(runner) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Basic {
    return new Contract(address, _abi, runner) as unknown as ERC1155Basic;
  }
}
