/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADRouter1155,
  MADRouter1155Interface,
} from "../../contracts/MADRouter1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory1155",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620001b557601f62001a6938819003918201601f19168301916001600160401b03831184841017620001ba57808492606094604052833981010312620001b55780516001600160a01b038082169291839003620001b5576200007560406200006d60208501620001d0565b9301620001d0565b90600093818554946040519533887f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76818aa36001600160a81b0319163360ff60a01b19161787556001805560058790556722b1c8c1227a00006007556706f05b59d3b200006008556703782dace9d90000600455600280546001600160a01b031990811690941790551690816200017f575b505081169182156200014b57506006557f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64666040519283a26118839081620001e68239f35b62461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b819060035416176003557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138585a2388062000107565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001b55756fe60806040526004361015610013575b600080fd5b60003560e01c806306fdde03146101f3578063089f8b1b146101ea5780630a98eae5146101e15780630b78f9c0146101d857806313af4035146101cf5780633bbed4a0146101c65780633f4ba83a146101bd5780635041c8e7146101b4578063535f64e7146101ab578063583fef34146101a2578063586ba782146101995780635c975abb1461019057806366d003ac14610187578063785e9e861461017e5780638456cb59146101755780638b9f18151461016c5780638da5cb5b14610163578063ae6e7faf1461015a578063b611f9d614610151578063c99aa4e514610148578063cd22e7d51461013f578063e427affe14610136578063edc9e7a41461012d5763f940e3851461012557600080fd5b61000e610e7a565b5061000e610e01565b5061000e610de2565b5061000e610d11565b5061000e610cf2565b5061000e610c2f565b5061000e610b96565b5061000e610b6c565b5061000e610aab565b5061000e610a32565b5061000e610a08565b5061000e6109de565b5061000e6109b7565b5061000e610998565b5061000e610979565b5061000e6108f4565b5061000e610869565b5061000e6107c7565b5061000e610721565b5061000e61067d565b5061000e6105b5565b5061000e6104b5565b5061000e610298565b5061000e610256565b600091031261000e57565b60005b83811061021a5750506000910152565b818101518382015260200161020a565b6040916020825261024a8151809281602086015260208686019101610207565b601f01601f1916010190565b503461000e57600036600319011261000e57602080526606726f7574657260465260606020f35b6001600160a01b0381160361000e57565b8015150361000e57565b503461000e57604036600319011261000e576004356102b68161027d565b6024356102c28161028e565b6102cf6001805414611155565b600260015560ff6000926102e982855460a01c161561126a565b6102f2816114ee565b909216906001820361039e576001600160a01b0316803b1561039a5760405163879fbedf60e01b815284151560048201529085908290602490829084905af1801561038d575b610374575b50604051921515917f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d8585a461037260018055565bf35b80610381610387926103ed565b806101fc565b3861033d565b61039561129f565b610338565b8480fd5b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606490fd5b0390fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161040157604052565b6104096103d6565b604052565b90601f8019910116810190811067ffffffffffffffff82111761040157604052565b60209067ffffffffffffffff811161044a575b60051b0190565b6104526103d6565b610443565b81601f8201121561000e5780359161046e83610430565b9261047c604051948561040e565b808452602092838086019260051b82010192831161000e578301905b8282106104a6575050505090565b81358152908301908301610498565b50608036600319011261000e576004356104ce8161027d565b602435906104db8261027d565b60643567ffffffffffffffff811161000e576104fb903690600401610457565b906105096001805414611155565b600260015561052060ff60005460a01c161561126a565b600160ff61052d836114ee565b9050160361039e5761053d611631565b6001600160a01b031691823b1561000e5760405163f745586f60e01b8152926000928492839182916105789133916044359060048601611300565b039134905af180156105a8575b610595575b61059360018055565b005b806103816105a2926103ed565b3861058a565b6105b061129f565b610585565b503461000e57604036600319011261000e576004356024356105e260018060a01b0360005416331461111a565b60075482111580610671575b1561062d577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191816040926005558160045582519182526020820152a1005b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d61786044820152fd5b506008548111156105ee565b503461000e57602036600319011261000e5760043561069b8161027d565b6000546001600160a01b03906106b4908216331461111a565b811680156106ec57600091825560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b503461000e57602036600319011261000e5760043561073f8161027d565b6000546001600160a01b0390610758908216331461111a565b8116801561079057600091600655604051907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668383a2f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b503461000e576000806003193601126108665780546107f0336001600160a01b0383161461111a565b60ff8160a01c16156108365760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1604051f35b60405162461bcd60e51b8152602060048201526008602482015267155394105554d15160c21b6044820152606490fd5b80fd5b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b90608060031983011261000e576004356108ac8161027d565b916024356108b98161027d565b9167ffffffffffffffff60443581811161000e57836108da91600401610457565b9260643591821161000e576108f191600401610457565b90565b506108fe36610893565b9261090f6001809493945414611155565b600260015561092660ff60005460a01c161561126a565b600160ff610933836114ee565b9050160361039e57610943611631565b6001600160a01b0316803b1561000e57610578936000936040519586948593849363d580725d60e01b8552339260048601611334565b503461000e57600036600319011261000e576020600554604051908152f35b503461000e57600036600319011261000e576020600454604051908152f35b503461000e57600036600319011261000e57602060ff60005460a01c166040519015158152f35b503461000e57600036600319011261000e576006546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e57600080600319360112610866578054610a5b336001600160a01b0383161461111a565b610a6b60ff8260a01c161561126a565b60ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1604051f35b50610ab536610893565b92610ac66001809493945414611155565b6002600155610add60ff60005460a01c161561126a565b600160ff610aea836114ee565b9050610af4611730565b160361039e576001600160a01b0316803b1561000e57610b30936000936040519586948593849363d78147cb60e01b8552339260048601611334565b039134905af18015610b5f575b610b4c575b5061059360018055565b80610381610b59926103ed565b38610b42565b610b6761129f565b610b3d565b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b503461000e57604036600319011261000e57600435610bb48161027d565b6024359067ffffffffffffffff9081831161000e573660238401121561000e578260040135918211610c22575b60405191610bf9601f8201601f19166020018461040e565b808352366024828601011161000e5760208160009260246105939701838701378401015261118e565b610c2a6103d6565b610be1565b503461000e57602036600319011261000e57600435610c4d8161027d565b610c5a6001805414611155565b6002600155600090610c7360ff835460a01c161561126a565b600160ff610c80836114ee565b9050161460001461039e5781906001600160a01b0316803b15610cef57819060046040518094819363c360a1b760e01b83525af18015610ce2575b610ccf575b50610cca60018055565b604051f35b80610381610cdc926103ed565b38610cc0565b610cea61129f565b610cbb565b50fd5b503461000e57600036600319011261000e576020600754604051908152f35b50608036600319011261000e57600435610d2a8161027d565b67ffffffffffffffff9060243582811161000e57610d4c903690600401610457565b6044359083821161000e573660238301121561000e578160040135610d7081610430565b92610d7e604051948561040e565b81845260209160248386019160051b8301019136831161000e57602401905b828210610dc9575050505060643593841161000e57610dc3610593943690600401610457565b9261136d565b8380918335610dd78161027d565b815201910190610d9d565b503461000e57600036600319011261000e576020600854604051908152f35b503461000e57602036600319011261000e57600480356001600160e01b03198116810361000e5760009163044df8e760e41b8214916340d097c360e01b14610e6d5750610e6157610e5d905b6040519081529081906020820190565b0390f35b50610e5d600554610e4d565b9050610e5d915054610e4d565b503461000e5760408060031936011261000e5760049060ff8235610e9d8161027d565b602435610ea98161027d565b610eb66001805414611155565b6002600155610ec4826114ee565b90931691600183036110e1576001600160a01b03908282168015159082908261105c575b505015610fa057600654911695906001600160a01b0316863b1561000e578551632515bef360e21b81526001600160a01b0393841692810192835292166020820152600095869183919082908490829060400103925af18015610f93575b610f80575b505b33917ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a1858551a4610f7d60018055565b51f35b80610381610f8d926103ed565b38610f4b565b610f9b61129f565b610f46565b909150803115611026576006549116906001600160a01b031694813b1561000e5784516351cff8d960e01b81526001600160a01b0390961690860190815260009591869183919082908490829060200103925af18015611019575b611006575b50610f4d565b80610381611013926103ed565b38611000565b61102161129f565b610ffb565b845162461bcd60e51b81526020818801818152600891810191909152674e4f5f46554e445360c01b604082015281906060010390fd5b88516370a0823160e01b81526001600160a01b03909216828b0190815291925060209183919082908190850103915afa9081156110d4575b6000916110a6575b5015158138610ee8565b6110c7915060203d81116110cd575b6110bf818361040e565b8101906114a1565b3861109c565b503d6110b5565b6110dc61129f565b611094565b845162461bcd60e51b8152806103d281890160609060208152600c60208201526b494e56414c49445f5459504560a01b60408201520190565b1561112157565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b1561115c57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b9060ff9061119f6001805414611155565b60026001556000926111b783855460a01c161561126a565b60016111c2826114ee565b9094160361039e576001600160a01b0316803b15611266577f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb791611236918560405180926302fe530560e01b8252818381611220886004830161022a565b03925af18015611259575b611246575b506112ac565b92604051a361124460018055565b565b80610381611253926103ed565b38611230565b61126161129f565b61122b565b8380fd5b1561127157565b60405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606490fd5b506040513d6000823e3d90fd5b6112c490602060405192828480945193849201610207565b810103902090565b90815180825260208080930193019160005b8281106112ec575050505090565b8351855293810193928101926001016112de565b9261132d9060609396959660018060a01b03809416865260208601526080604086015260808501906112cc565b9416910152565b9261132d9061135f60609497969760018060a01b0380951687526080602088015260808701906112cc565b9085820360408701526112cc565b91909161137d6001805414611155565b600260015561139460ff60005460a01c161561126a565b600160ff6113a1836114ee565b90506113ab611730565b160361039e576001600160a01b0316803b1561000e576113e79360009360405195869485938493630d6fa7b160e41b8552339260048601611423565b039134905af18015611416575b611403575b5061124460018055565b80610381611410926103ed565b386113f9565b61141e61129f565b6113f4565b9291949394608084019160808552805180935260a085019260208092019060005b81811061148457505050826060949261146692876114749603908801526112cc565b9084820360408601526112cc565b6001600160a01b03909416910152565b82516001600160a01b031686529483019491830191600101611444565b9081602091031261000e575190565b919082604091031261000e57602082516114c98161027d565b9201516108f18161028e565b9081602091031261000e575160ff8116810361000e5790565b6002546040805163617d1d3b60e01b81526001600160a01b0393841660048201529093926020926115819284929091168282602481845afa918215611624575b600092611605575b50865163b64bd5eb60e01b815260048101839052919687928181602481865afa80156115f8575b6115cc575b5051808095819463d93cb8fd60e01b8352600483019190602083019252565b03915afa9182156115bf575b60009261159957505090565b6108f19250803d106115b8575b6115b0818361040e565b8101906114d5565b503d6115a6565b6115c761129f565b61158d565b6115eb90823d84116115f1575b6115e3818361040e565b8101906114b0565b50611562565b503d6115d9565b61160061129f565b61155d565b61161d919250833d85116110cd576110bf818361040e565b9038611536565b61162c61129f565b61152e565b6003546001600160a01b03168080611647575050565b604051636eb1769f60e11b8152336004820152306024820152906020908190839060449082905afa918215611723575b600092611704575b50604051633b7279e960e21b81526340d097c360e01b6004820152818180602481015b0381305afa9182156116f7575b6000926116da575b505081036116cc5761124491309033906117d1565b63f7760f256000526004601cfd5b6116f09250803d106110cd576110bf818361040e565b38806116b7565b6116ff61129f565b6116af565b8161171c9293503d84116110cd576110bf818361040e565b903861167f565b61172b61129f565b611677565b6003546001600160a01b03168080611746575050565b604051636eb1769f60e11b8152336004820152306024820152906020908190839060449082905afa9182156117c4575b6000926117a5575b50604051633b7279e960e21b815263044df8e760e41b6004820152818180602481016116a2565b816117bd9293503d84116110cd576110bf818361040e565b903861177e565b6117cc61129f565b611776565b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561181157565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea26469706673582212200748a1da1cc9d63445eca9908d3e12b411647e8c74c1313e0190045d573c1df664736f6c63430008100033";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
