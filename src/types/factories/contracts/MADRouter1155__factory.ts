/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADRouter1155,
  MADRouter1155Interface,
} from "../../contracts/MADRouter1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory1155",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200022d5762001fb380380390601f19601f83011683019183831060018060401b038411176200021757808492606094604052833981010312620002125780519060018060a01b038083168093036200020d57620000716040620000696020850162000232565b930162000232565b91600093828554926040519333887f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768188a360ff60a01b1933169060018060a81b03191617875560018055866005556722b1c8c1227a00006007556706f05b59d3b200006008556703782dace9d9000060045560018060a01b03199283600254161760025516908115156000146200020557819060035416176003557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138583a25b818454163303620001c3575081169081156200017f576006557f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64666040519283a2611d6790816200024c8239f35b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b60649062461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b505062000132565b600080fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b519060018060a01b03821682036200024657565b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610267578063089f8b1b146102595780630a98eae51461024b5780630b78f9c01461023d57806313af40351461022f5780633bbed4a0146102215780633f4ba83a146102135780635041c8e714610205578063535f64e7146101f7578063583fef34146101e9578063586ba782146101db5780635c975abb146101cd57806366d003ac146101bf578063785e9e86146101b15780638456cb59146101a35780638b9f1815146101955780638da5cb5b14610187578063ae6e7faf14610179578063b611f9d61461016b578063c99aa4e51461015d578063cd22e7d51461014f578063e427affe14610141578063edc9e7a4146101335763f940e38514610126575b61000e565b61012e611153565b610121565b5061013c6110cf565b610121565b5061014a6110a6565b610121565b50610158610faf565b610121565b50610166610f86565b610121565b50610174610e98565b610121565b50610182610ddf565b610121565b50610190610dae565b610121565b5061019e610cbd565b610121565b506101ac610c3e565b610121565b506101ba610c0d565b610121565b506101c8610bdc565b610121565b506101d6610b97565b610121565b506101e4610b60565b610121565b506101f2610b37565b610121565b50610200610a3c565b610121565b5061020e61099a565b610121565b5061021c6108e2565b610121565b5061022a610828565b610121565b5061023861076e565b610121565b50610246610697565b610121565b5061025461055f565b610121565b50610262610336565b610121565b506102706102d6565b610121565b600091031261028057565b600080fd5b60005b838110610299575050906000910152565b806020918301518185015201610288565b604091602082526102ca8151809281602086015260208686019101610285565b601f8019910116010190565b50346103025760006003193601126102fd57602080526606726f7574657260465260606020f35b600080fd5b600080fd5b60018060a01b031690565b60018060a01b0381160361032257565b600080fd5b8015150361033157565b600080fd5b503461046157604060031936011261045c5760043561035481610312565b60243561036081610327565b61036d6001805414611404565b600260015560ff60009261038782855460a01c1615611556565b610390816118cf565b92909216906001821460001461043f5760018060a01b0316803b1561043b5784604051809263879fbedf60e01b82528183816103cf8a60048301610b89565b03925af1801561042e575b610415575b50604051921515917f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d8585a461041361144f565bf35b806104226104289261047d565b80610275565b386103df565b6104366115d9565b6103da565b8480fd5b60405162461bcd60e51b815280610458600482016115a1565b0390fd5b600080fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610492575b604052565b61049a610466565b61048d565b90601f8019910116810190811067ffffffffffffffff8211176104c2575b604052565b6104ca610466565b6104bd565b60209067ffffffffffffffff81116104e9575b60051b0190565b6104f1610466565b6104e2565b81601f8201121561055a5780359161050d836104cf565b9261051b604051948561049f565b808452602092838086019260051b820101928311610555578301905b828210610545575050505090565b8380918335815201910190610537565b600080fd5b600080fd5b5060806003193601126106925760043561057881610312565b6024359061058582610312565b60643567ffffffffffffffff811161068d576105a59036906004016104f6565b906105b36001805414611404565b60026001556105ca60ff60005460a01c1615611556565b600160ff6105d7836118cf565b90501614156000146106005760405162461bcd60e51b8152806105fc600482016115a1565b0390fd5b610608611a57565b60018060a01b031691823b15610688576106419260009260405180958194829363f745586f60e01b845233916044359060048601611641565b039134905af1801561067b575b610662575b61065b61144f565b6000604051f35b8061066f6106759261047d565b80610275565b38610653565b6106836115d9565b61064e565b600080fd5b600080fd5b600080fd5b5034610769576040600319360112610764576004356024356106c460018060a01b036000541633146113b9565b60075482111580610758575b15610714577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191816040926005558160045582519182526020820152a16000604051f35b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d61786044820152fd5b506008548111156106d0565b600080fd5b600080fd5b503461082357602060031936011261081e5760043561078c81610312565b60018060a01b036107a2816000541633146113b9565b811680156107da57600091825560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b50346108dd5760206003193601126108d85760043561084681610312565b60018060a01b0361085c816000541633146113b9565b8116801561089457600091600655604051907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668383a2f35b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b50346109955760008060031936011261099257805461090a60018060a01b03821633146113b9565b60ff8160a01c161561094e5760ff60a01b191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1604051f35b606460405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152fd5b80fd5b600080fd5b50346109c65760006003193601126109c157602060018060a01b0360025416604051908152f35b600080fd5b600080fd5b906080600319830112610a37576004356109e481610312565b916024356109f181610312565b9160443567ffffffffffffffff90818111610a325783610a13916004016104f6565b92606435918211610a2d57610a2a916004016104f6565b90565b600080fd5b600080fd5b600080fd5b50610a46366109cb565b92610a576001809493945414611404565b6002600155610a6e60ff60005460a01c1615611556565b600160ff610a7b836118cf565b9050161415600014610aa45760405162461bcd60e51b815280610aa0600482016115a1565b0390fd5b610aac611a57565b60018060a01b0316803b15610b2857610ae1936000936040519586948593849363d580725d60e01b8552339260048601611675565b039134905af18015610b1b575b610b02575b610afb61144f565b6000604051f35b80610b0f610b159261047d565b80610275565b38610af3565b610b236115d9565b610aee565b600080fd5b9190602083019252565b5034610b5b576000600319360112610b56576020600554604051908152f35b600080fd5b600080fd5b5034610b84576000600319360112610b7f576020600454604051908152f35b600080fd5b600080fd5b919091602081019215159052565b5034610bc3576000600319360112610bbe57602060ff60005460a01c166040519015158152f35b600080fd5b600080fd5b919091602081019260018060a01b03169052565b5034610c08576000600319360112610c0357602060018060a01b0360065416604051908152f35b600080fd5b600080fd5b5034610c39576000600319360112610c3457602060018060a01b0360035416604051908152f35b600080fd5b600080fd5b5034610cb857600080600319360112610cb5578054610c6660018060a01b03821633146113b9565b610c7660ff8260a01c1615611556565b600160a01b9060ff60a01b19161781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1604051f35b80fd5b600080fd5b50610cc7366109cb565b92610cd86001809493945414611404565b6002600155610cef60ff60005460a01c1615611556565b600160ff610cfc836118cf565b9050610d06611b82565b1614600014610d915760018060a01b0316803b15610d8c57610d44936000936040519586948593849363d78147cb60e01b8552339260048601611675565b039134905af18015610d7f575b610d66575b50610d5f61144f565b6000604051f35b80610d73610d799261047d565b80610275565b38610d56565b610d876115d9565b610d51565b600080fd5b60405162461bcd60e51b815280610daa600482016115a1565b0390fd5b5034610dda576000600319360112610dd557602060018060a01b0360005416604051908152f35b600080fd5b600080fd5b5034610e93576040600319360112610e8e57600435610dfd81610312565b6024359067ffffffffffffffff90818311610e895736602384011215610e84578260040135918211610e77575b60405191610e426020601f19601f840116018461049f565b8083523660248286010111610e72576020816000926024610e6b97018387013784010152611455565b6000604051f35b600080fd5b610e7f610466565b610e2a565b600080fd5b600080fd5b600080fd5b600080fd5b5034610f81576020600319360112610f7c57600435610eb681610312565b610ec36001805414611404565b6002600155600090610edc60ff835460a01c1615611556565b600160ff610ee9836118cf565b90501614600014610f5f57819060018060a01b0316803b15610f5c57819060046040518094819363c360a1b760e01b83525af18015610f4f575b610f36575b50610f3161144f565b604051f35b80610f43610f499261047d565b80610275565b38610f28565b610f576115d9565b610f23565b50fd5b60405162461bcd60e51b815280610f78600482016115a1565b0390fd5b600080fd5b600080fd5b5034610faa576000600319360112610fa5576020600754604051908152f35b600080fd5b600080fd5b5060806003193601126110a157600435610fc881610312565b6024359067ffffffffffffffff9182811161109c57610feb9036906004016104f6565b60443590838211611097573660238301121561109257816004013561100f816104cf565b9261101d604051948561049f565b81845260209160248386019160051b8301019136831161108d57602401905b828210611074575050505060643593841161106f576110626110689436906004016104f6565b926116b5565b6000604051f35b600080fd5b838091833561108281610312565b81520191019061103c565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b50346110ca5760006003193601126110c5576020600854604051908152f35b600080fd5b600080fd5b503461114e576020600319360112611149576004803563ffffffff60e01b8116810361114457600091816340d097c360e01b149163044df8e760e41b1491611137575061112b57611127905b60405191829182610b2d565b0390f35b5061112760055461111b565b905061112791505461111b565b600080fd5b600080fd5b600080fd5b50346113b4576040806003193601126113af5760049060ff823561117681610312565b60243561118281610312565b61118f6001805414611404565b600260015561119d826118cf565b9390931691600183146000146113925760018060a01b0390818316818115159182611316575b50506000146112735716946111d9600654610307565b863b1561126e5760009661120493888094895196879586948593632515bef360e21b85528401611861565b03925af18015611261575b611248575b505b33917ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a1858551a461124561144f565b51f35b8061125561125b9261047d565b80610275565b38611214565b6112696115d9565b61120f565b600080fd5b809192503115156000146112f9571661128d600654610307565b94813b156112f4576000956112b89287928388518096819582946351cff8d960e01b84528301610bc8565b03925af180156112e7575b6112ce575b50611216565b806112db6112e19261047d565b80610275565b386112c8565b6112ef6115d9565b6112c3565b600080fd5b61131286865191829162461bcd60e51b83528201611829565b0390fd5b6113399250906020918a8a518095819482936370a0823160e01b84528301610bc8565b03915afa908115611385575b600091611357575b50151581386111c3565b611378915060203d811161137e575b611370818361049f565b810190611815565b3861134d565b503d611366565b61138d6115d9565b611345565b6113ab86865191829162461bcd60e51b835282016115a1565b0390fd5b600080fd5b600080fd5b156113c057565b606460405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b1561140b57565b606460405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152fd5b60018055565b9060ff906114666001805414611404565b600260015560009261147e83855460a01c1615611556565b6001611489826118cf565b94909416146000146115395760018060a01b0316803b15611535577f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb791611500918560405180926302fe530560e01b82528183816114ea88600483016102aa565b03925af18015611528575b61150f575b506115e6565b92604051a361150d61144f565b565b8061151c6115229261047d565b80610275565b386114fa565b6115306115d9565b6114f5565b8380fd5b60405162461bcd60e51b815280611552600482016115a1565b0390fd5b1561155d57565b606460405162461bcd60e51b815260206004820152600660248201527f50415553454400000000000000000000000000000000000000000000000000006044820152fd5b60609060208152600c60208201527f494e56414c49445f54595045000000000000000000000000000000000000000060408201520190565b506040513d6000823e3d90fd5b6115fe90602060405192828480945193849201610285565b810103902090565b90815180825260208080930193019160005b828110611626575050505090565b90919293828060019287518152019501910192919092611618565b9261166e9060609396959660018060a01b0380941686526020860152608060408601526080850190611606565b9416910152565b926116ae906116a060609497969760018060a01b038095168752608060208801526080870190611606565b908582036040870152611606565b9416910152565b9190916116c56001805414611404565b60026001556116dc60ff60005460a01c1615611556565b600160ff6116e9836118cf565b90506116f3611b82565b16146000146117795760018060a01b0316803b15611774576117319360009360405195869485938493630d6fa7b160e41b8552339260048601611796565b039134905af18015611767575b61174e575b5061174c61144f565b565b8061175b6117619261047d565b80610275565b38611743565b61176f6115d9565b61173e565b600080fd5b60405162461bcd60e51b815280611792600482016115a1565b0390fd5b9291949394608084019160808552805180935260a085019260208092019060005b8181106117f55750505082606094926117d992876117e7960390880152611606565b908482036040860152611606565b9360018060a01b0316910152565b9091948380600192838060a01b03895116815201960191019190916117b7565b90816020910312611824575190565b600080fd5b60609060208152600860208201527f4e4f5f46554e445300000000000000000000000000000000000000000000000060408201520190565b90602090939293604083019460018060a01b03809216845216910152565b91908260409103126118a7576020825161189881610312565b9201516118a481610327565b90565b600080fd5b908160209103126118ca575160ff811681036118c55790565b600080fd5b600080fd5b906118e36118de600254610307565b610307565b61196b61190c604094855193849163617d1d3b60e01b8352826020968795869360048301610bc8565b0381845afa918215611a26575b6000926119f7575b508196805163b64bd5eb60e01b81528181806119408760048301610b2d565b0381865afa80156119ea575b6119be575b5051808095819463d93cb8fd60e01b835260048301610b2d565b03915afa9182156119b1575b600092611984575b505090565b6119a39250803d106119aa575b61199b818361049f565b8101906118ac565b388061197f565b503d611991565b6119b96115d9565b611977565b6119dd90823d84116119e3575b6119d5818361049f565b81019061187f565b50611951565b503d6119cb565b6119f26115d9565b61194c565b611a18919250833d8511611a1f575b611a10818361049f565b810190611815565b9038611921565b503d611a06565b611a2e6115d9565b611919565b9060208201916340d097c360e01b9052565b90602082019163044df8e760e41b9052565b611a62600354610307565b60018060a01b038116801515600014611b7b576040518091636eb1769f60e11b825260209182918180611a99303360048401611861565b03915afa918215611b6e575b600092611b3f575b50604051633b7279e960e21b8152818180611aca60048201611a33565b0381305afa918215611b32575b600092611b05575b50508103611af757611af49130903390611cad565b5b565b63f7760f256000526004601cfd5b611b249250803d10611b2b575b611b1c818361049f565b810190611815565b3880611adf565b503d611b12565b611b3a6115d9565b611ad7565b81611b609293503d8411611b67575b611b58818361049f565b810190611815565b9038611aad565b503d611b4e565b611b766115d9565b611aa5565b5050611af5565b611b8d600354610307565b60018060a01b038116801515600014611ca6576040518091636eb1769f60e11b825260209182918180611bc4303360048401611861565b03915afa918215611c99575b600092611c6a575b50604051633b7279e960e21b8152818180611bf560048201611a45565b0381305afa918215611c5d575b600092611c30575b50508103611c2257611c1f9130903390611cad565b5b565b63f7760f256000526004601cfd5b611c4f9250803d10611c56575b611c47818361049f565b810190611815565b3880611c0a565b503d611c3d565b611c656115d9565b611c02565b81611c8b9293503d8411611c92575b611c83818361049f565b810190611815565b9038611bd8565b503d611c79565b611ca16115d9565b611bd0565b5050611c20565b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160016000511416171615611ced57565b606460405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea2646970667358221220a9d6ab01b784b29588d2b167950daf97c2b85daf27d21bc17ad93fd81562d6ff64736f6c63430008100033";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
