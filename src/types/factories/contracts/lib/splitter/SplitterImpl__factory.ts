/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  SplitterImpl,
  SplitterImplInterface,
} from "../../../../contracts/lib/splitter/SplitterImpl";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares_",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyPayee",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DeniedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShare",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPayees",
    type: "error",
  },
  {
    inputs: [],
    name: "NoShares",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_payees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payeesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60406080815262000de590813803806200001981620002ea565b93843982018183820312620002e55782519260018060401b0393848111620002e05781019180601f84011215620002db57825194620000626200005c8762000325565b620002ea565b9283948785526020809501856005998a1b83010191858311620002d6578601905b828210620002ae5750505083810151918211620002a957019080601f83011215620002a4578151620000bf620000b98262000325565b620002ea565b928480858481520192891b8201019283116200029f5784809101915b8383106200028d57505050508251928151841415600014620001075760048551631fec674760e31b8152fd5b8315600014620001215760048551637b21919d60e01b8152fd5b60005b8481106200013b578551610a6690816200037f8239f35b60018060a01b036200014e828462000353565b5116906200015d818562000353565b5182156000146200017857600488516384ff3e1b60e01b8152fd5b801560001462000192576004885163040357dd60e21b8152fd5b8260005288865287600020541515600014620001b8576004885163215a865160e11b8152fd5b6006928354680100000000000000008110156200027757600194858201808255821015620002615760005287600020018160018060a01b031982541617905580600052898752818960002055600054908282018092116200024b577f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928a92600055825191825288820152a10162000124565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b819083518152019101908490620000db565b600080fd5b600080fd5b600080fd5b815160018060a01b0381168103620002d157818892918392520191019062000083565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b9060405191601f8019910116820182811060018060401b038211176200030f57604052565b634e487b7160e01b600052604160045260246000fd5b60018060401b0381116200033d5760209060051b0190565b634e487b7160e01b600052604160045260246000fd5b8051821015620003685760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe60806040526004361015610023575b361561001957600080fd5b610021610616565b005b60003560e01c80631916558714610164578063283248be146101565780633a98ef3914610148578063406072a91461013a57806348b750441461012c5780635be7fde81461011e5780639852595c14610110578063a3f8eace14610102578063b34c8caf146100f4578063c45ac050146100e6578063d79779b2146100d8578063e33b7de3146100ca5763e919ecad146100bd575b61000e565b6100c56105d3565b6100b8565b506100d36105aa565b6100b8565b506100e1610562565b6100b8565b506100ef61053b565b6100b8565b506100fd6104f3565b6100b8565b5061010b61045a565b6100b8565b50610119610412565b6100b8565b506101276103e7565b6100b8565b50610135610307565b6100b8565b506101436102cb565b6100b8565b50610151610275565b6100b8565b5061015f61020b565b6100b8565b5061016d610187565b6100b8565b60018060a01b0381160361018257565b600080fd5b50346101b95760206003193601126101b4576101ad6004356101a881610172565b61068a565b6000604051f35b600080fd5b600080fd5b6006548110156101f55760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b503461027057602060031936011261026b5760043560065481101561026657602090600660005260018060a01b03907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015416604051908152f35b600080fd5b600080fd5b600080fd5b5034610299576000600319360112610294576020600054604051908152f35b600080fd5b600080fd5b60409060031901126102c6576004356102b681610172565b906024356102c381610172565b90565b600080fd5b50346103025760206102f96102df3661029e565b9060018060a01b03166000526004835260406000206104dc565b54604051908152f35b600080fd5b50346103e2576103163661029e565b9061032082610494565b541560001461033a57600460405163b317087b60e01b8152fd5b6103448282610875565b801560001461035e576004604051635c70873f60e11b8152fd5b7f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a916103928461038d836104ac565b6104dc565b61039d83825461066a565b90556103a8816104c4565b6103b383825461066a565b90556103c08285836109b2565b6103d860405192839260018060a01b031695836105fc565b0390a26000604051f35b600080fd5b503461040d57600060031936011261040857610401610749565b6000604051f35b600080fd5b600080fd5b50346104555760206003193601126104505760043561043081610172565b60018060a01b031660005260026020526020604060002054604051908152f35b600080fd5b600080fd5b503461048f57602060031936011261048a57602061048260043561047d81610172565b6107b2565b604051908152f35b600080fd5b600080fd5b60018060a01b03166000526005602052604060002090565b60018060a01b03166000526004602052604060002090565b60018060a01b03166000526003602052604060002090565b9060018060a01b0316600052602052604060002090565b50346105365760206003193601126105315760043561051181610172565b60018060a01b031660005260056020526020604060002054604051908152f35b600080fd5b600080fd5b503461055d57602061055561054f3661029e565b90610875565b604051908152f35b600080fd5b50346105a55760206003193601126105a05760043561058081610172565b60018060a01b031660005260036020526020604060002054604051908152f35b600080fd5b600080fd5b50346105ce5760006003193601126105c9576020600154604051908152f35b600080fd5b600080fd5b50346105f75760006003193601126105f2576020600654604051908152f35b600080fd5b600080fd5b60209093929193604081019460018060a01b031681520152565b61061e610749565b7f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7706040518061064e3433836105fc565b0390a1565b50634e487b7160e01b600052601160045260246000fd5b91908201809211610678575b565b610680610653565b610676565b600155565b61069381610494565b54156000146106ad57600460405163b317087b60e01b8152fd5b60018060a01b038116906106c0826107b2565b9081156000146106db576004604051635c70873f60e11b8152fd5b610735827fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05694806000526002602052604060002061071a83825461066a565b905561073061072b8360015461066a565b610685565b61095e565b610744604051928392836105fc565b0390a1565b60065460005b81811061075a575050565b806107666001926101be565b905490610772836101be565b92909161078d868060a01b03809454600396871b1c166107b2565b15156000146107a9576107a2931b1c1661068a565b5b0161074f565b505050506107a3565b6107e1904760015481018091116107e4575b60018060a01b0382166000526002602052604060002054916107f1565b90565b6107ec610653565b6107c4565b60018060a01b031660005260056020526040600020548160001904811182151516610854575b60005491821561083e570204908103908111610831575b90565b610839610653565b61082e565b634e487b7160e01b600052601260045260246000fd5b61085c610653565b610817565b90816020910312610870575190565b600080fd5b9190604051926370a0823160e01b845230600485015260208460248160018060a01b0385165afa938415610952576000946108e0575b506108d6826108d16108cb6108dd96976108c4866104c4565b549061066a565b936104ac565b6104dc565b54916107f1565b90565b936020903d8211610949575b601f19601f83011686019086821067ffffffffffffffff83111761093557506108d16108cb61092a6108dd97986108d6958895604052810190610861565b9796505050506108ab565b602490634e487b7160e01b81526041600452fd5b90503d906108ec565b6040513d6000823e3d90fd5b600080809381935af11561096e57565b606460405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156109ec57565b606460405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152fdfea2646970667358221220e8e03783ce48c3f69bad953a34b2c8c4a01fa18b52e919732ec042b6bc5f4cd564736f6c63430008100033";

type SplitterImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SplitterImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SplitterImpl__factory extends ContractFactory {
  constructor(...args: SplitterImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<SplitterImpl> {
    return super.deploy(
      payees,
      shares_,
      overrides || {}
    ) as Promise<SplitterImpl>;
  }
  override getDeployTransaction(
    payees: PromiseOrValue<string>[],
    shares_: PromiseOrValue<BigNumberish>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(payees, shares_, overrides || {});
  }
  override attach(address: string): SplitterImpl {
    return super.attach(address) as SplitterImpl;
  }
  override connect(signer: Signer): SplitterImpl__factory {
    return super.connect(signer) as SplitterImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SplitterImplInterface {
    return new utils.Interface(_abi) as SplitterImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SplitterImpl {
    return new Contract(address, _abi, signerOrProvider) as SplitterImpl;
  }
}
