/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../../../contracts/lib/test/erc721-mock.sol/MockERC721";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200033a5762001185803803806200001d816200033f565b9283398101906040818303126200033557805160018060401b03908181116200033057836200004e9184016200037a565b91602093848201518381116200032b576200006a92016200037a565b825190828211620003155760008054926001958685811c951680156200030a575b88861014620002f6578190601f958681116200029e575b5088908683116001146200023057849262000223575b505081871b916000199060031b1c19161781555b81519384116200020f5784548581811c9116801562000204575b87821014620001f057838111620001a6575b50859284116001146200014157839495509262000134575b505081831b916000199060031b1c19161790555b604051610d7890816200040d8239f35b9091500151388062000110565b9190601f1984169585845280842093905b8782106200018e5750508385961062000174575b505050811b01905562000124565b015160001960f88460031b161c1916905538808062000166565b80878596829496860151815501950193019062000152565b8582528682208480870160051c820192898810620001e6575b908892910160051c01915b828110620001da575050620000f8565b838155018690620001ca565b92508192620001bf565b602482634e487b7160e01b81526022600452fd5b90607f1690620000e6565b602490634e487b7160e01b81526041600452fd5b90915001513880620000b8565b90889350601f198316918580528a862092865b8c8282106200027e575050841162000264575b505050811b018155620000cc565b015160001960f88460031b161c1916905538808062000256565b91929395968291958786015181550195019301908a959493929162000243565b9091508380528884208680850160051c8201928b8610620002ec575b918a91869594930160051c01915b828110620002d8575050620000a2565b9091929350858155019088849392620002c8565b92508192620002ba565b602483634e487b7160e01b81526022600452fd5b94607f16946200008b565b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b9060405191601f8019910116820182811060018060401b038211176200036457604052565b634e487b7160e01b600052604160045260246000fd5b919080601f840112156200040757825160018060401b038111620003f157602090620003af82601f19601f840116016200033f565b92818452828287010111620003ec5760005b818110620003d757508260009394955001015290565b808380928801015182828701015201620003c1565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260049182361015610017575b600080fd5b600092833560e01c91826301ffc9a7146109865750816306fdde031461086e578163081812fc14610836578163095ea7b31461077857816323b872dd1461075857816340c10f191461066a57816342842e0e1461058b5781636352211e1461050857816370a082311461047d57816395d89b4114610366578163a22cb465146102da578163b88d4fde1461017c57508063c87b56dd146101155763e985e9c5146100c15780610012565b34610111578060031936011261010d5760ff816020936100df610a81565b6100e7610a9b565b9060018060a01b0380911683526005875283832091168252855220541690519015158152f35b5080fd5b5080fd5b50346101785760208060031936011261017457918151928391818352606051918281850152815b838110610159575050838284010152601f80199101168101030190f35b8192939450608081015186828901015201908593929161013c565b8280fd5b5080fd5b9050346102d65760806003193601126102d257610197610a81565b61019f610a9b565b604435926064359167ffffffffffffffff928381116102ce57366023820112156102ca57808301359384116102c65736602485830101116102c2576101e5868387610b8f565b87823b159586156101ff575b50876101fc87610cf7565b51f35b602494965060a486986020978b519a8b9889978894630a85bd0160e11b9d8e8752339087015260018060a01b0380981683870152604486015260806064860152826084860152018484013784838284010152601f80199101168101030193165af180156102b5576101fc928591610287575b5063ffffffff60e01b16143880808087816101f1565b6102a8915060203d81116102ae575b6102a081836109fe565b810190610cce565b38610271565b503d610296565b50505051903d90823e3d90fd5b8780fd5b8780fd5b8780fd5b8780fd5b8280fd5b8280fd5b505034610362578060031936011261035e576102f4610a81565b60243580151580910361035a5733845260056020528284209160018060a01b03169182855260205282842060ff1981541660ff831617905582519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a351f35b8380fd5b5080fd5b5080fd5b9190503461047957826003193601126104755780519183600180549182821c92828116801561046b575b60209586861082146104585750848852908160001461043057506001146103d1575b6103cd86866103c3828b03836109fe565b5191829182610a36565b0390f35b9295508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061041657505050826103cd946103c39282010194386103b2565b81818892959394955483858a0101520191019291906103f9565b90506103cd97506103c39492508693915060ff191682840152151560051b82010194386103b2565b836022602492634e487b7160e01b835252fd5b93607f1693610390565b8280fd5b8280fd5b839150346105045760206003193601126105005760018060a01b036104a0610a81565b169081156104bd5760208480858581526003845220549051908152f35b606490602085519162461bcd60e51b8352820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152fd5b5080fd5b5080fd5b90508234610588576020600319360112610585578135815260026020528260018060a01b0391205416908115610542575060209151908152f35b606490602084519162461bcd60e51b8352820152600a60248201527f4e4f545f4d494e544544000000000000000000000000000000000000000000006044820152fd5b80fd5b80fd5b9050346106665761059b36610ab5565b9192906105a9838286610b8f565b803b159283156105c2575b86866105bf86610cf7565b51f35b602092935060a4908787519687948593630a85bd0160e11b98898652339086015260018060a01b038093166024860152604485015260806064850152826084850152165af18015610659576105bf92859161062b575b5063ffffffff60e01b16143880806105b4565b61064c915060203d8111610652575b61064481836109fe565b810190610cce565b38610618565b503d61063a565b50505051903d90823e3d90fd5b8280fd5b905034610754578160031936011261075057610684610a81565b916024359160018060a01b038094169361069f851515610b44565b8386526002602052828620541661070e57508284526003602052808420600181540190558184526002602052808420836bffffffffffffffffffffffff60a01b8254161790555191837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8185a4f35b6020606492519162461bcd60e51b8352820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152fd5b8280fd5b8280fd5b5050346107745761077161076b36610ab5565b91610b8f565b51f35b5080fd5b91905034610832578060031936011261082e57610793610a81565b60243591828552600260205260018060a01b0380828720541694853314801561080b575b6107c090610af9565b848752602052818620921691826bffffffffffffffffffffffff60a01b82541617905551927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b5085875260056020528287203388526020526107c060ff848920541690506107b7565b8280fd5b8280fd5b90503461086a57602060031936011261086657918260209335825283528160018060a01b03912054169051908152f35b8280fd5b8280fd5b91905034610982578260031936011261097e578051918380549060019082821c928281168015610974575b60209586861082146109615750848852908160001461093957506001146108da575b6108d686866108cc828b03836109fe565b5191829182610a36565b0390f35b8080949750527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061091f57505050826108d6946108cc9282010194386108bb565b81818892959394955483858a010152019101929190610902565b90506108d697506108cc9492508693915060ff191682840152151560051b82010194386108bb565b836022602492634e487b7160e01b835252fd5b93607f1693610899565b8280fd5b8280fd5b8491346109fa5760206003193601126109f6573563ffffffff60e01b81168091036109f257602092506301ffc9a760e01b81149081156109e0575b81156109cf575b5015158152f35b9050635b5e139f60e01b14836109c8565b90506380ac58cd60e01b8114906109c1565b8280fd5b8280fd5b8280fd5b90601f8019910116810190811067ffffffffffffffff821117610a2057604052565b634e487b7160e01b600052604160045260246000fd5b919091602092838252805190818584015260005b828110610a6c57505060409293506000838284010152601f8019910116010190565b80868092840101516040828701015201610a4a565b6004359060018060a01b0382168203610a9657565b600080fd5b6024359060018060a01b0382168203610ab057565b600080fd5b6060906003190112610af4576004359060018060a01b03918281168103610aef57916024359081168103610aea579060443590565b600080fd5b600080fd5b600080fd5b15610b0057565b606460405162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b15610b4b57565b606460405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152fd5b60008381526020926002845260018060a01b0393604091858084862054169516948503610c8b5790610c04867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9594931696610bec881515610b44565b863314908115610c6d575b8115610c57575b50610af9565b84835260038152818320600019815401905585835281832060018154019055868352600281526004828420916bffffffffffffffffffffffff60a01b9288848254161790555281832090815416905551a4565b9050888552600483528385205416331438610bfe565b905086855260058352838520338652835260ff848620541690610bf7565b50606491519062461bcd60e51b82526004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152fd5b90816020910312610cf2575163ffffffff60e01b81168103610ced5790565b600080fd5b600080fd5b15610cfe57565b606460405162461bcd60e51b815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fdfea2646970667358221220d1eea80d21785220ab49f4c0f31d97fcebc6b9a0a683eed0b93fdb0d12aaff4e64736f6c63430008100033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<MockERC721>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  override connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
