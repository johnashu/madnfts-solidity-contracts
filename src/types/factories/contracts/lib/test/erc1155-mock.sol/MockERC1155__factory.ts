/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../../../contracts/lib/test/erc1155-mock.sol/MockERC1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35061188c806100636000396000f3fe608060405234801561001057600080fd5b50600436106100f35760003560e01c80632eb2c2d611610097578063bc197c8111610066578063bc197c811461025a578063e985e9c514610295578063f23a6e61146102c0578063f242432a146102e057600080fd5b80632eb2c2d6146101e95780634e1273f4146101fc5780638da5cb5b1461021c578063a22cb4651461024757600080fd5b80630ca83480116100d35780630ca834801461018d5780630e89341c146101a257806313af4035146101c3578063156e29f6146101d657600080fd5b8062f74867146100f8578062fdd58e1461013657806301ffc9a71461016a575b600080fd5b6101236101063660046110bb565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101236101443660046110e7565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b61017d61017836600461112a565b6102f3565b604051901515815260200161012d565b6101a061019b3660046111ff565b610345565b005b6101b66101b0366004611273565b50606090565b60405161012d91906112d2565b6101a06101d13660046112e5565b6103b3565b6101a06101e4366004611300565b610490565b6101a06101f73660046113c1565b6104f4565b61020f61020a36600461147c565b6108e9565b60405161012d9190611523565b60025461022f906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b6101a0610255366004611536565b610a13565b61027c6102683660046113c1565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161012d565b61017d6102a3366004611572565b600060208181529281526040808220909352908152205460ff1681565b61027c6102ce36600461159c565b63f23a6e6160e01b9695505050505050565b6101a06102ee36600461159c565b610a7d565b60006301ffc9a760e01b6001600160e01b0319831614806103245750636cdb3d1360e11b6001600160e01b03198316145b8061033f57506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001600160a01b031633146103935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6103ae83838360405180602001604052806000815250610d96565b505050565b6002546001600160a01b031633146103fc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b6001600160a01b0381166104525760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e657200000000000000000000000000000000000000604482015260640161038a565b60028190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6002546001600160a01b031633146104d95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161038a565b6103ae83838360405180602001604052806000815250610ef6565b8483146105355760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b336001600160a01b038916148061056d57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6105aa5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008060005b87811015610759578888828181106105ca576105ca611614565b9050602002013592508686828181106105e5576105e5611614565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054116106615760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038f1684529091529020548211156106c45760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000206000828254039250508190555080806001019150506105b0565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516107ad9493929190611675565b60405180910390a46001600160a01b0389163b156108935760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906108019033908f908e908e908e908e908e908e906004016116c5565b6020604051808303816000875af1158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190611729565b6001600160e01b0319161461088e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b6108dd565b6001600160a01b0389166108dd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050505050505050565b606083821461092c5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161038a565b8367ffffffffffffffff8111156109455761094561114e565b60405190808252806020026020018201604052801561096e578160200160208202803683370190505b50905060005b84811015610a0a576109e586868381811061099157610991611614565b90506020020160208101906109a691906112e5565b8585848181106109b8576109b8611614565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106109f7576109f7611614565b6020908102919091010152600101610974565b50949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610ab557506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b610af25760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054610b4e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038a168452909152902054831115610bb15760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038a565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290610be390849061175c565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290610c1a90849061176f565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610d445760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610cb29033908b908a908a908a908a90600401611782565b6020604051808303816000875af1158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190611729565b6001600160e01b03191614610d3f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b610d8e565b6001600160a01b038516610d8e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b505050505050565b82516000805b82811015610e0c57858181518110610db657610db6611614565b60200260200101519150848181518110610dd257610dd2611614565b6020908102919091018101516000848152600180845260408083206001600160a01b038d1684529094529290208054909101905501610d9c565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051610e5d9291906117c7565b60405180910390a46001600160a01b0386163b15610eac5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190610cb29033906000908b908b908b906004016117f5565b6001600160a01b038616610d8e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290610f2890849061175c565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b1561104f5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610fbd903390600090899089908990600401611847565b6020604051808303816000875af1158015610fdc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110009190611729565b6001600160e01b0319161461104a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161038a565b611099565b6001600160a01b0384166110995760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161038a565b50505050565b80356001600160a01b03811681146110b657600080fd5b919050565b600080604083850312156110ce57600080fd5b823591506110de6020840161109f565b90509250929050565b600080604083850312156110fa57600080fd5b6111038361109f565b946020939093013593505050565b6001600160e01b03198116811461112757600080fd5b50565b60006020828403121561113c57600080fd5b813561114781611111565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261117557600080fd5b8135602067ffffffffffffffff808311156111925761119261114e565b8260051b604051601f19603f830116810181811084821117156111b7576111b761114e565b6040529384528581018301938381019250878511156111d557600080fd5b83870191505b848210156111f4578135835291830191908301906111db565b979650505050505050565b60008060006060848603121561121457600080fd5b61121d8461109f565b9250602084013567ffffffffffffffff8082111561123a57600080fd5b61124687838801611164565b9350604086013591508082111561125c57600080fd5b5061126986828701611164565b9150509250925092565b60006020828403121561128557600080fd5b5035919050565b6000815180845260005b818110156112b257602081850181015186830182015201611296565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611147602083018461128c565b6000602082840312156112f757600080fd5b6111478261109f565b60008060006060848603121561131557600080fd5b61131e8461109f565b95602085013595506040909401359392505050565b60008083601f84011261134557600080fd5b50813567ffffffffffffffff81111561135d57600080fd5b6020830191508360208260051b850101111561137857600080fd5b9250929050565b60008083601f84011261139157600080fd5b50813567ffffffffffffffff8111156113a957600080fd5b60208301915083602082850101111561137857600080fd5b60008060008060008060008060a0898b0312156113dd57600080fd5b6113e68961109f565b97506113f460208a0161109f565b9650604089013567ffffffffffffffff8082111561141157600080fd5b61141d8c838d01611333565b909850965060608b013591508082111561143657600080fd5b6114428c838d01611333565b909650945060808b013591508082111561145b57600080fd5b506114688b828c0161137f565b999c989b5096995094979396929594505050565b6000806000806040858703121561149257600080fd5b843567ffffffffffffffff808211156114aa57600080fd5b6114b688838901611333565b909650945060208701359150808211156114cf57600080fd5b506114dc87828801611333565b95989497509550505050565b600081518084526020808501945080840160005b83811015611518578151875295820195908201906001016114fc565b509495945050505050565b60208152600061114760208301846114e8565b6000806040838503121561154957600080fd5b6115528361109f565b91506020830135801515811461156757600080fd5b809150509250929050565b6000806040838503121561158557600080fd5b61158e8361109f565b91506110de6020840161109f565b60008060008060008060a087890312156115b557600080fd5b6115be8761109f565b95506115cc6020880161109f565b94506040870135935060608701359250608087013567ffffffffffffffff8111156115f657600080fd5b61160289828a0161137f565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561165c57600080fd5b8260051b80836020870137939093016020019392505050565b60408152600061168960408301868861162a565b82810360208401526111f481858761162a565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526116f260a08301888a61162a565b828103606084015261170581878961162a565b9050828103608084015261171a81858761169c565b9b9a5050505050505050505050565b60006020828403121561173b57600080fd5b815161114781611111565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033f5761033f611746565b8181038181111561033f5761033f611746565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526117bb60a08301848661169c565b98975050505050505050565b6040815260006117da60408301856114e8565b82810360208401526117ec81856114e8565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261182160a08301866114e8565b828103606084015261183381866114e8565b905082810360808401526117bb818561128c565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526111f460a083018461128c56fea164736f6c6343000810000a";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
