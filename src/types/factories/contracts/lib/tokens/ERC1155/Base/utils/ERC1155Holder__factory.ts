/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  ERC1155Holder,
  ERC1155HolderInterface,
} from "../../../../../../../contracts/lib/tokens/ERC1155/Base/utils/ERC1155Holder";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576102cc908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c8063bc197c81146100945763f23a6e6114610035575061000e565b346100915760a060031936011261008e5761004e610130565b5061005761014a565b5060843567ffffffffffffffff811161008a57610078903690600401610223565b50602060405163f23a6e6160e01b8152f35b5080fd5b80fd5b80fd5b503461012d5760a060031936011261012a576100ae610130565b506100b761014a565b5060443567ffffffffffffffff90818111610126576100da9036906004016101a0565b50606435818111610122576100f39036906004016101a0565b5060843590811161011e5761010c903690600401610223565b50602060405163bc197c8160e01b8152f35b5080fd5b8280fd5b8280fd5b80fd5b80fd5b6004359060018060a01b038216820361014557565b600080fd5b6024359060018060a01b038216820361015f57565b600080fd5b9060405191601f8019910116820182811067ffffffffffffffff82111761018a57604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561021e5780359167ffffffffffffffff8311610208578260051b60209283806101d1818501610164565b809781520192820101928311610203578301905b8282106101f3575050505090565b83809183358152019101906101e5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b81601f820112156102915780359067ffffffffffffffff821161027b576102536020601f19601f85011601610164565b928284526020838301011161027657816000926020809301838601378301015290565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfea264697066735822122072ba7dc1ec27fb02e372a268a47a741a51aba2b6fd1481c224eab8baaeb7bf6664736f6c63430008100033";

type ERC1155HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Holder__factory extends ContractFactory {
  constructor(...args: ERC1155HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  override connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new utils.Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}
