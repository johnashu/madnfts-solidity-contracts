/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../../contracts/lib/tokens/ERC1155/Impl/ERC1155Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "URILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200036b57620038d5803803806200001d8162000370565b92833981019060e0818303126200036657805160018060401b03908181116200036157820191601f918483850112156200035c578351938185116200034657602094601f1991620000748784888501160162000370565b978289528783830101116200034157869060005b8381106200032957505060009188010152848301519060408401519260608501519660018060a01b0396878916809903620003245760808701519960018060601b038b16809b036200031f5760a0880151978989168099036200031a5760c00151988916809903620003155760018060a01b0319978089600454161760045560007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7681604051a3600192836005558151948511620002ff57600c548481811c91168015620002f4575b82821014620002de5783811162000290575b50809285116001146200022457508394509083929160009462000215575b50501b916000199060031b1c191617600c555b600d55600e558281600654161760065583600255828160035416176003556007541617600755604051917fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600084a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600083a26135299081620003ac8239f35b90919350015191388062000181565b929484908116600c60005284600020946000905b888383106200027457505050106200025a575b505050811b01600c5562000194565b015160001960f88460031b161c191690553880806200024b565b8193945086978293978701518155019601940186929162000238565b600c600052816000208480880160051c820192848910620002d4575b908792910160051c01915b828110620002c757505062000163565b60008155018590620002b7565b92508192620002ac565b634e487b7160e01b600052602260045260246000fd5b90607f169062000151565b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b828183949301015182828c0101520190879162000088565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b9060405191601f8019910116820182811060018060401b038211176200039557604052565b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8062f7486714610378578062fdd58e1461036a57806301ffc9a71461035c57806302fe53051461034e5780630e89341c1461034057806313af40351461033257806318160ddd146103245780631b2ef1ca1461031657806322ab47a1146103085780632a55205a146102fa5780632eb2c2d6146102ec5780633cd8045e146102de5780634e1273f4146102d057806351cff8d9146102c25780637754305c146102b4578063785e9e86146102a6578063879fbedf146102985780638da5cb5b1461028a5780638fc3b5491461027c5780639456fbcc1461026e578063a035b1fe14610260578063a22cb46514610252578063bc197c8114610244578063c360a1b714610236578063c811026414610228578063d351cfdc1461021a578063d580725d1461020c578063d5abeb01146101fe578063d6fa7b10146101f0578063d78147cb146101e2578063e1c38ed9146101d4578063e985e9c5146101c6578063f23a6e61146101b8578063f242432a146101aa5763f745586f1461019d575b61000e565b6101a561218e565b610198565b506101b3611fc9565b610198565b506101c1611f9e565b610198565b506101cf611ee0565b610198565b506101dd611eb7565b610198565b506101eb611d70565b610198565b506101f9611c80565b610198565b50610207611c57565b610198565b50610215611b8f565b610198565b5061022361193e565b610198565b50610231611880565b610198565b5061023f611806565b610198565b5061024d6117d9565b610198565b5061025b61173e565b610198565b50610269611715565b610198565b50610277611375565b610198565b5061028561134c565b610198565b5061029361131b565b610198565b506102a1611288565b610198565b506102af611257565b610198565b506102bd611163565b610198565b506102cb610ebd565b610198565b506102d9610ddf565b610198565b506102e7610d5f565b610198565b506102f5610b5f565b610198565b50610303610a04565b610198565b506103116109d6565b610198565b5061031f610879565b610198565b5061032d610850565b610198565b5061033b610795565b610198565b506103496106c9565b610198565b506103576105d7565b610198565b506103656104a8565b610198565b50610373610448565b610198565b506103816103fe565b610198565b60018060a01b031690565b60018060a01b038116036103a157565b600080fd5b606435906103b382610391565b565b6000526001602052604060002090565b60018060a01b03166000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b9190602083019252565b503461044357604060031936011261043e57602061043560243561042181610391565b6004356000526001835260406000206103dd565b54604051908152f35b600080fd5b600080fd5b503461048d57604060031936011261048857602061047f60043561046b81610391565b6024356000526001835260406000206103dd565b54604051908152f35b600080fd5b600080fd5b63ffffffff60e01b8116036104a357565b600080fd5b50346105365760206003193601126105315760206004356104c881610492565b63ffffffff60e01b166301ffc9a760e01b811490811561051f575b811561050d575b81156104fc575b506040519015158152f35b905063152a902d60e11b14386104f1565b90506303a24d0760e21b8114906104ea565b9050636cdb3d1360e11b8114906104e3565b600080fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761056f575b604052565b61057761053b565b61056a565b90601f8019910116810190811067ffffffffffffffff82111761059f575b604052565b6105a761053b565b61059a565b60209067ffffffffffffffff81116105ca575b601f80199101160190565b6105d261053b565b6105bf565b50346106665760206003193601126106615760043567ffffffffffffffff811161065c5736602382011215610657578060040135610614816105ac565b90610622604051928361057c565b808252366024828501011161065257602081600092602461064b960183860137830101526126da565b6000604051f35b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60005b83811061067f575050906000910152565b80602091830151818501520161066e565b906020916106a98151809281855285808601910161066b565b601f8019910116010190565b9060206106c6928181520190610690565b90565b503461079057602060031936011261078b5760043560095481116000146106f85763bad086ea6000526004601cfd5b6040519060808201604052607f820190600a80603092818106840185530491825b6107725761076e61075161076286886080601f1992838101920301815261075660405194859261074b6020850161292e565b906128f7565b61306c565b0390810183528261057c565b604051918291826106b5565b0390f35b9080929360001901938181068301855304919082610719565b600080fd5b600080fd5b503461084b576020600319360112610846576004356107b381610391565b60018060a01b036107c9816004541633146122a9565b811680156108025760009160045560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b503461087457600060031936011261086f576020600854604051908152f35b600080fd5b600080fd5b506040806003193601126109d157600435906024359160019261089f8460055414612f39565b600260055560ff600f5416156000146108c257600483516316851fc760e11b8152fd5b6108cc81836129f2565b6009549081018091116109c4575b600e54106000146108f5576004835163d05cb60960e01b8152fd5b600d54610900613302565b600a548181018091116109b7575b600a556109248461091e3361326c565b936129f2565b9081018091116109aa575b1415600014610948576004835163f7760f2560e01b8152fd5b9261095233613096565b60009384915b83831061097e575050106109715761096e61240f565b51f35b63dfb035c982526004601cfd5b8091926109a261098c612fcf565b8588519161099983610552565b8a835233612a79565b019190610958565b6109b26123dd565b61092f565b6109bf6123dd565b61090e565b6109cc6123dd565b6108da565b600080fd5b50346109ff5760006003193601126109fa57602060ff600f54166040519015158152f35b600080fd5b600080fd5b5034610a46576040600319360112610a4157604060018060a01b0360035416612710610a346002546024356129f2565b0482519182526020820152f35b600080fd5b600080fd5b9181601f84011215610a865782359167ffffffffffffffff8311610a81576020808501948460051b010111610a7c57565b600080fd5b600080fd5b600080fd5b9181601f84011215610ac35782359167ffffffffffffffff8311610abe5760208381860195010111610ab957565b600080fd5b600080fd5b600080fd5b9060a0600319830112610b5a57600435610ae181610391565b91602435610aee81610391565b9160443567ffffffffffffffff90818111610b555783610b1091600401610a4b565b93909392606435838111610b505782610b2b91600401610a4b565b93909392608435918211610b4b57610b4591600401610a8b565b91909190565b600080fd5b600080fd5b600080fd5b600080fd5b5034610d5a57610b6e36610ac8565b90610b828386959699989997949714612561565b60018060a01b0397888816988933148015610d35575b610ba1906122fc565b8560005b88878c8c858510610ca957505050505050811680996040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610bee8d8d8d8d85612609565b0390a43b1515600014610c9257610c4f9792610c2b6020969593600093604051998a988997889663bc197c8160e01b9e8f89523360048a01612633565b03925af1908115610c85575b600091610c57575b5063ffffffff60e01b1614612516565b5b6000604051f35b610c78915060203d8111610c7e575b610c70818361057c565b810190612495565b38610c3f565b503d610c66565b610c8d612509565b610c37565b50505050505050610ca490151561244a565b610c50565b610cc885610d2292610cc18260019a610d27986125c3565b35966125c3565b3593610ce7610cdf84610cda846103b5565b6103dd565b541515612347565b610d0585610cfd85610cf8856103b5565b6103dd565b541015612392565b610d1789610d12836103b5565b6103dd565b8581540190556103b5565b6103dd565b908154039055018690610ba5565b50610ba1610d53610d4e33610d498d6103c5565b6103dd565b6122f4565b9050610b98565b600080fd5b5034610d8b576000600319360112610d8657602060018060a01b0360065416604051908152f35b600080fd5b600080fd5b90815180825260208080930193019160005b828110610db0575050505090565b90919293828060019287518152019501910192919092610da2565b906020610ddc928181520190610d90565b90565b5034610eb857604080600319360112610eb35760043567ffffffffffffffff90818111610eae57610e14903690600401610a4b565b91602435908111610ea957610e2d903690600401610a4b565b92610e39848214612561565b610e4281612686565b93600091825b818110610e6257610e5e87895191829182610dcb565b0390f35b80610e97610e73600193858a6125c3565b35610e7d81610391565b610e8883878a6125c3565b358752836020528a87206103dd565b54610ea2828a6126b8565b5201610e48565b600080fd5b600080fd5b600080fd5b600080fd5b503461115e57602080600319360112611159576004803591610ede83610391565b60018060a01b0390610ef48284541633146122a9565b82610f08610f03600654610386565b610386565b948260409687519687809263e919ecad60e01b82525afa94851561114c575b60009561111d575b50610f3985612686565b92610f4386612686565b94600a549081151580611112575b6000146111075790610f6e91610f67824761241d565b941661339d565b610f76612416565b5b600084610f8d610f88600654610386565b610386565b915b89898210610fd95789898460005b838110610faa5760008551f35b80610fd3610fc2610fbd600194866126b8565b612e09565b610fcc83876126b8565b519061339d565b01610f9d565b61106d61106760019461103987868a8d88826110729a518096631419245f60e11b8252818061100a898883016103f4565b03915afa9485156110fa575b6000956110c9575b5090849151958692839263b34c8caf60e01b84528301611307565b03818d5afa9283156110bc575b600093611085575b5061105d9061106293946126b8565b612f24565b6129ce565b876129f2565b612f31565b61107c828a6126b8565b52018590610f8f565b6110629350906110ad61105d928d803d106110b5575b6110a5818361057c565b810190612ef3565b93509061104e565b503d61109b565b6110c4612509565b611046565b6110eb91929550833d85116110f3575b6110e3818361057c565b810190612f07565b93903861101e565b503d6110d9565b611102612509565b611016565b505090504790610f77565b508084161515610f51565b61113e919550833d8511611145575b611136818361057c565b810190612ef3565b9338610f2f565b503d61112c565b611154612509565b610f27565b600080fd5b600080fd5b50346112525760008060031936011261124f576040519080600c546111878161281d565b91828552600191828116908160001461122557506001146111c3575b6111bf856111b38187038261057c565b604051918291826106b5565b0390f35b9250600c83527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c75b82841061120a57505050906111b38160206111bf9482010192936111a3565b818160209295939495548385890101520191019291906111eb565b8695506111bf969350602092506111b394915060ff191682840152151560051b82010192936111a3565b80fd5b600080fd5b503461128357600060031936011261127e57602060018060a01b0360075416604051908152f35b600080fd5b600080fd5b50346113025760206003193601126112fd576004358015158091036112f8576000906112bf60018060a01b036004541633146122a9565b60ff19600f541660ff821617600f55604051907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e68383a2f35b600080fd5b600080fd5b600080fd5b919091602081019260018060a01b03169052565b503461134757600060031936011261134257602060018060a01b0360045416604051908152f35b600080fd5b600080fd5b503461137057600060031936011261136b576020600954604051908152f35b600080fd5b600080fd5b50346117105760408060031936011261170b5760049081359161139783610391565b602435926113a484610391565b60018060a01b03916113ba8382541633146122a9565b6113cd6113c8600654610386565b610386565b90845193849263e919ecad60e01b8452838360209586935afa9485156116fe575b6000956116cf575b5061140085612686565b9661140a86612686565b93600086858a600a5493841515806116c4575b60001461164a5750958461145061146b94869461147298999a519485809481936370a0823160e01b835230908301611307565b0392165afa90811561163d575b600091611610575b5061241d565b9387613475565b61147a612416565b5b60008861149161148c600654610386565b610386565b915b898982106114e2575050505050505060005b8381106114b25760008551f35b806114dc6114ca6114c56001948a6126b8565b612e09565b6114d483866126b8565b519086613475565b016114a5565b61157661157060019461154287868a8d888261157b9a518096631419245f60e11b82528180611513898883016103f4565b03915afa948515611603575b6000956115d2575b5090849151958692839263b34c8caf60e01b84528301611307565b03818d5afa9283156115c5575b60009361158e575b506115669061156b93946126b8565b612f24565b6129ce565b876129f2565b612f31565b61158582896126b8565b52018990611493565b61156b9350906115b6611566928d803d106115be575b6115ae818361057c565b810190612ef3565b935090611557565b503d6115a4565b6115cd612509565b61154f565b6115f491929550833d85116115fc575b6115ec818361057c565b810190612f07565b939038611527565b503d6115e2565b61160b612509565b61151f565b6116309150863d8811611636575b611628818361057c565b810190612ef3565b38611465565b503d61161e565b611645612509565b61145d565b955091505082949291505180926370a0823160e01b8252818061166f308a8301611307565b03918a165afa9182156116b7575b9161168a575b509061147b565b6116aa9150823d84116116b0575b6116a2818361057c565b810190612ef3565b38611683565b503d611698565b6116bf612509565b61167d565b50878716151561141d565b6116f0919550833d85116116f7575b6116e8818361057c565b810190612ef3565b93386113f6565b503d6116de565b611706612509565b6113ee565b600080fd5b600080fd5b5034611739576000600319360112611734576020600d54604051908152f35b600080fd5b600080fd5b50346117d45760406003193601126117cf5760043561175c81610391565b602435908115158092036117ca573360005260006020526117818160406000206103dd565b60ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a36000604051f35b600080fd5b600080fd5b600080fd5b5034611801576117e836610ac8565b5050505050505050602060405163bc197c8160e01b8152f35b600080fd5b503461187b5760006003193601126118765761182d60018060a01b036004541633146122a9565b600160ff19600b541617600b556000604051806118498161292e565b039020604051907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08383a2f35b600080fd5b600080fd5b50346118a95760006003193601126118a457602060ff600b54166040519015158152f35b600080fd5b600080fd5b60209067ffffffffffffffff81116118c8575b60051b0190565b6118d061053b565b6118c1565b81601f82011215611939578035916118ec836118ae565b926118fa604051948561057c565b808452602092838086019260051b820101928311611934578301905b828210611924575050505090565b8380918335815201910190611916565b600080fd5b600080fd5b506040600319360112611b1a576004803567ffffffffffffffff90818111611b155761196d90369084016118d5565b90602435908111611b105761198590369084016118d5565b60016119948160055414612f39565b600260055560ff600f5416156000146119b757836040516316851fc760e11b8152fd5b6119c082613025565b600954908101809111611b03575b600e54106000146119e9578360405163d05cb60960e01b8152fd5b600d548351611a1a6119f9613302565b91600a54838101809111611af6575b600a55611a143361326c565b936129f2565b908101809111611ae9575b1415600014611a3e578360405163f7760f2560e01b8152fd5b611a4b8351835114612f84565b611a543361326c565b90835191611a63600754610386565b9060018060a01b0382161515600014611ae257611a8391309033906133f1565b5b6000905b828210611ac5575010611ab857611aa99250611aa2612a13565b9133612bfe565b611ab161240f565b6000604051f35b8263dfb035c9600052601cfd5b81611ada611ad48394876126b8565b51612ffb565b500190611a88565b5050611a84565b611af16123dd565b611a25565b611afe6123dd565b611a08565b611b0b6123dd565b6119ce565b600080fd5b600080fd5b600080fd5b6080600319820112611b8a57600435611b3781610391565b9160243567ffffffffffffffff90818111611b855783611b59916004016118d5565b92604435918211611b8057611b70916004016118d5565b90606435611b7d81610391565b90565b600080fd5b600080fd5b600080fd5b50611b9936611b1f565b611bb160018060a09695961b036004541633146122a9565b611bba82613025565b600954908101809111611c4a575b600e5410600014611be457600460405163d05cb60960e01b8152fd5b611bed906130f2565b60008351905b818110611c2e5710611c2057611c199260405192611c1084610552565b60008452612bfe565b6000604051f35b63dfb035c96000526004601cfd5b80611c3b600192856126b8565b51600890815401905501611bf3565b611c526123dd565b611bc8565b5034611c7b576000600319360112611c76576020600e54604051908152f35b600080fd5b600080fd5b506080600319360112611d6b5760043567ffffffffffffffff90818111611d665736602382011215611d61578060040135611cba816118ae565b91611cc8604051938461057c565b81835260209160248385019160051b83010191368311611d5c57602401905b828210611d43578585602435828111611d3e57611d089036906004016118d5565b604435928311611d3957611d23611d329336906004016118d5565b90611d2c6103a6565b92612d33565b6000604051f35b600080fd5b600080fd5b8380918335611d5181610391565b815201910190611ce7565b600080fd5b600080fd5b600080fd5b600080fd5b50611d7a36611b1f565b60018060a09594951b0390611dab600491611d998484541633146122a9565b611da68751865114612561565b61316a565b60008551905b818110611e855710611e795750821691611dcc831515612ea8565b83519060005b828110611e1a57600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb611e1088604051918291339583612b88565b0390a46000604051f35b80611e27600192886126b8565b51611e50611e3d85611e38846103b5565b6103dd565b54611e4884896126b8565b511115612347565b611e6d84611e68611e61858a6126b8565b51936103b5565b6103dd565b90815403905501611dd2565b63dfb035c9600052601cfd5b611e8f81866126b8565b5160089081548015611eaa5790600193929103905501611db1565b8563ce3a3d37600052601cfd5b5034611edb576000600319360112611ed6576020600a54604051908152f35b600080fd5b600080fd5b5034611f3c576040600319360112611f3757602060ff611f2b600435611f0581610391565b60243590611f1282610391565b60018060a01b03166000526000845260406000206103dd565b54166040519015158152f35b600080fd5b600080fd5b60a0600319820112611f9957600435611f5981610391565b91602435611f6681610391565b9160443591606435916084359067ffffffffffffffff8211611f9457611f8e91600401610a8b565b91909190565b600080fd5b600080fd5b5034611fc457611fad36611f41565b505050505050602060405163f23a6e6160e01b8152f35b600080fd5b503461218957611fd836611f41565b9260018060a09796979493941b0395868616968733148015612164575b611ffe906122fc565b61201b6120138861200e866103b5565b6103dd565b541515612347565b612039846120318961202c876103b5565b6103dd565b541015612392565b61204b82612046856103b5565b6103dd565b6120568582546123f4565b905561206a87612065856103b5565b6103dd565b61207585825461241d565b9055811680976040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f623391806120ad898983612438565b0390a43b151560001461214f579460209291600061210c976120e86040519788968795869463f23a6e6160e01b9c8d875233600488016124d3565b03925af1908115612142575b600091612114575b5063ffffffff60e01b1614612516565b5b6000604051f35b612135915060203d811161213b575b61212d818361057c565b810190612495565b386120fc565b503d612123565b61214a612509565b6120f4565b505050505061215f90151561244a565b61210d565b50611ffe61218261217d336121788b6103c5565b6103dd565b6122f4565b9050611ff5565b600080fd5b5060806003193601126122a4576004356121a781610391565b60243560443567ffffffffffffffff811161229f576121ca9036906004016118d5565b6064356121d681610391565b6121eb60018060a01b036004541633146122a9565b6121fd836121f884613025565b6129f2565b600954908101809111612292575b600e541060001461222757600460405163d05cb60960e01b8152fd5b612233909391936130f2565b60009283915b8383106122595750501061224c57604051f35b63dfb035c990526004601cfd5b909160019061228a612269612fcf565b61227383876126b8565b516040519161228183610552565b89835286612a79565b019190612239565b61229a6123dd565b61220b565b600080fd5b600080fd5b156122b057565b606460405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b60ff90541690565b1561230357565b606460405162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152fd5b1561234e57565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152fd5b1561239957565b606460405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f414d4f554e540000000000000000000000000000000000006044820152fd5b50634e487b7160e01b600052601160045260246000fd5b91908201809211612402575b565b61240a6123dd565b612400565b6001600555565b6000600a55565b9190820391821161242b575b565b6124336123dd565b612429565b60209093929193604081019481520152565b1561245157565b606460405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152fd5b908160209103126124ad57516124aa81610492565b90565b600080fd5b908060209392818452848401376000838284010152601f8019910116010190565b919261250696949160a094600180871b0380921685521660208401526040830152606082015281608082015201916124b2565b90565b506040513d6000823e3d90fd5b1561251d57565b606460405162461bcd60e51b815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152fd5b1561256857565b606460405162461bcd60e51b815260206004820152600f60248201527f4c454e4754485f4d49534d4154434800000000000000000000000000000000006044820152fd5b50634e487b7160e01b600052603260045260246000fd5b91908110156125d4575b60051b0190565b6125dc6125ac565b6125cd565b909182815260018060fb1b0383116126045760209260051b809284830137010190565b600080fd5b92906126229061263095936040865260408601916125e1565b9260208185039101526125e1565b90565b96949261267594612667926126839a989460018060a01b038092168b521660208a015260a060408a015260a08901916125e1565b9186830360608801526125e1565b9260808185039101526124b2565b90565b90612690826118ae565b61269d604051918261057c565b82815280926126ae601f19916118ae565b0190602036910137565b60209181518110156126cd575b60051b010190565b6126d56125ac565b6126c5565b906126f060018060a01b036004541633146122a9565b6001918260ff600b5416151514600014612715576004604051639619d74760e01b8152fd5b805167ffffffffffffffff8111612810575b61273b81612736600c5461281d565b612880565b60209384601f83116001146127a85750818091612772959660009361279b575b501b916000199060031b1c191617600c555b61290e565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f66000604051a2565b909250840151913861275b565b601f929192198216956127b9612857565b916000905b8882106127f9575050826127729697106127e0575b5050811b01600c5561276d565b84015160001960f88460031b161c1916905538806127d3565b808684958294958a015181550194019201906127be565b61281861053b565b612727565b90600182811c9216801561284d575b602083101461283757565b634e487b7160e01b600052602260045260246000fd5b91607f169161282c565b600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b601f811161288d575b5050565b600090600c82527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906020601f850160051c830194106128ea575b601f0160051c01915b8281106128de5750612889565b808260019255016128d1565b9250601f819390506128c8565b9061290a6020928281519485920161066b565b0190565b6129269060206040519282848094519384920161066b565b810103902090565b90600091600c549061293f8261281d565b9160019081811690816000146129b4575060011461295d575b505050565b9091929350600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906000915b8483106129a1575050500190388080612958565b818160209254858701520192019161298d565b92949550505060ff19168252801515020190388080612958565b60649080600019048211811515166129e5575b0290565b6129ed6123dd565b6129e1565b8060001904821181151516612a06575b0290565b612a0e6123dd565b612a02565b604051906020820182811067ffffffffffffffff821117612a38575b60405260008252565b612a4061053b565b612a2f565b909260a092612a769594600180861b0316835260006020840152604083015260608201528160808201520190610690565b90565b929091612a8e84612a89856103b5565b6103dd565b612a998282546123f4565b905560018060a01b038416938460006040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180612ada888b83612438565b0390a43b1515600014612b7557612b1391612b3794602092600060405180968195829463f23a6e6160e01b9a8b85523360048601612a45565b03925af1908115612b68575b600091612b3a575b5063ffffffff60e01b1614612516565b5b565b612b5b915060203d8111612b61575b612b53818361057c565b810190612495565b38612b27565b503d612b49565b612b70612509565b612b1f565b505050612b8390151561244a565b612b38565b9091612b9f612bad93604084526040840190610d90565b916020818403910152610d90565b90565b92612bdf612bfb9593612bed9360018060a01b031686526000602087015260a0604087015260a0860190610d90565b908482036060860152610d90565b916080818403910152610690565b90565b929091825160005b818110612cfc57505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180612c4e888b83612b88565b0390a43b1515600014612ce957612c8791612cab94602092600060405180968195829463bc197c8160e01b9a8b85523360048601612bb0565b03925af1908115612cdc575b600091612cae575b5063ffffffff60e01b1614612516565b5b565b612ccf915060203d8111612cd5575b612cc7818361057c565b810190612495565b38612c9b565b503d612cbd565b612ce4612509565b612c93565b505050612cf790151561244a565b612cac565b80612d09600192876126b8565b51612d2788612d22612d1b85896126b8565b51936103b5565b6103dd565b90815401905501612c06565b9091612d54600494612d4f60018060a01b0387541633146122a9565b61316a565b60009283918151938481511480612dfa575b612d739093929193612561565b5b848410612d925750505010612d87575050565b63dfb035c99052601cfd5b909192612d9f81836126b8565b5160089081548015612dee57906001939291039055612de5612dc9612dc483886126b8565b612e09565b612dd383876126b8565b51612dde84876126b8565b5191612e16565b01929190612d74565b8963ce3a3d378a52601cfd5b50612d73825186149050612d66565b60018060a01b0390511690565b6000928284526001602052612e3a81612e3284604088206103dd565b541015612392565b8284526001602052612e4f82604086206103dd565b8054918203918211612e9b575b556040519182526001602083015260018060a01b0316907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260403392a4565b612ea36123dd565b612e5c565b15612eaf57565b606460405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152fd5b90816020910312612f02575190565b600080fd5b90816020910312612f1f5751612f1c81610391565b90565b600080fd5b9060018060a01b03169052565b612710900490565b15612f4057565b606460405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152fd5b15612f8b57565b606460405162461bcd60e51b815260206004820152600f60248201527f4d49534d415443485f4c454e47544800000000000000000000000000000000006044820152fd5b60016008540160085560095460018101809111612fee575b8060095590565b612ff66123dd565b612fe7565b8060085401600855600954908101809111613018575b8060095590565b6130206123dd565b613011565b9060009180516000915b81831061303b57505050565b90919360019061304b86846126b8565b51810180911161305f575b9401919061302f565b6130676123dd565b613056565b6005907f2e6a736f6e00000000000000000000000000000000000000000000000000000081520190565b61309f8161326c565b60018060a01b03808316331480156130e6575b6000146130de57600754168015156000146130d6576130d29230916133f1565b5b5b565b5050506130d3565b5050506130d4565b508060075416156130b2565b6130fb8161326c565b60018060a01b038083163314801561315e575b6000146131565761311d613302565b820361314857600754168015156000146131405761313c9230916133f1565b5b5b565b50505061313d565b63f7760f256000526004601cfd5b50505061313e565b5080600754161561310e565b6131738161326c565b60018060a01b0380831633148015613260575b60001461325857806004541663ffffffff813b1615906000916000146131e457505060005b82036131d657600754168015156000146131ce576131ca9230916133f1565b5b5b565b5050506131cb565b63f7760f256000526004601cfd5b602060249160405192838092633b7279e960e21b825263044df8e760e41b60048301525afa91821561324b575b9161321d575b506131ab565b61323e915060203d8111613244575b613236818361057c565b810190612ef3565b38613217565b503d61322c565b613253612509565b613211565b5050506131cc565b50806007541615613186565b60018060a01b03908160075416918215156000146132f95760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa9081156132ec575b6000916132be575b505b90565b6132df915060203d81116132e5575b6132d7818361057c565b810190612ef3565b386132b9565b503d6132cd565b6132f4612509565b6132b1565b505050346132bb565b60018060a01b036004541663ffffffff813b16159060009160001461332957505060005b90565b602060249160405192838092633b7279e960e21b82526340d097c360e01b60048301525afa918215613390575b91613362575b50613326565b613383915060203d8111613389575b61337b818361057c565b810190612ef3565b3861335c565b503d613371565b613398612509565b613356565b600080809381935af1156133ad57565b606460405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561343157565b606460405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156134af57565b606460405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152fdfea2646970667358221220613513567940c7d2fdff4521ab3dd69cdd0023d06a7649a79f1bf08b8c31a65064736f6c63430008100033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
