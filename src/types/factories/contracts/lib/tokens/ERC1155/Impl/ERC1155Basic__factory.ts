/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../../contracts/lib/tokens/ERC1155/Impl/ERC1155Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "URILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200031257620030c3803803806200001d816200032c565b92833981019060e081830312620003125780516001600160401b03908181116200031257820191601f918483850112156200031257835193818511620002fc57602094601f199162000075868301841688016200032c565b978289528783830101116200031257869060005b8381106200031757505060009188010152848301519060408401519260608501519660018060a01b0396878916809903620003125760808701516001600160601b0381169a908b9003620003125760a088015197898916809903620003125760c00151988916809903620003125760018060a01b0319978089600454161760045560007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7681604051a3600192836005558151948511620002fc57600c548481811c91168015620002f1575b82821014620002db578381116200028f575b50809285116001146200022457508394509083929160009462000218575b50501b916000199060031b1c191617600c555b600d55600e558281600654161760065583600255828160035416176003556007541617600755604051917fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600084a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600083a2612d709081620003538239f35b01519250388062000184565b929484908116600c60005284600020946000905b888383106200027457505050106200025a575b505050811b01600c5562000197565b015160001960f88460031b161c191690553880806200024b565b85870151885590960195948501948793509081019062000238565b600c600052816000208480880160051c820192848910620002d1575b0160051c019085905b828110620002c457505062000166565b60008155018590620002b4565b92508192620002ab565b634e487b7160e01b600052602260045260246000fd5b90607f169062000154565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8181018301518a820184015288920162000089565b6040519190601f01601f191682016001600160401b03811183821017620002fc5760405256fe60806040526004361015610013575b600080fd5b60003560e01c8062f74867146102cd578062fdd58e146102c457806301ffc9a7146102bb57806302fe5305146102b25780630e89341c146102a957806313af4035146102a057806318160ddd146102975780631b2ef1ca1461028e57806322ab47a1146102855780632a55205a1461027c5780632eb2c2d6146102735780633cd8045e1461026a5780634e1273f41461026157806351cff8d9146102585780637754305c1461024f578063785e9e8614610246578063879fbedf1461023d5780638da5cb5b146102345780638fc3b5491461022b5780639456fbcc14610222578063a035b1fe14610219578063a22cb46514610210578063bc197c8114610207578063c360a1b7146101fe578063c8110264146101f5578063d351cfdc146101ec578063d580725d146101e3578063d5abeb01146101da578063d6fa7b10146101d1578063d78147cb146101c8578063e1c38ed9146101bf578063e985e9c5146101b6578063f23a6e61146101ad578063f242432a146101a45763f745586f1461019c57600080fd5b61000e611d5a565b5061000e611beb565b5061000e611bc5565b5061000e611b10565b5061000e611af1565b5061000e6119a6565b5061000e6118dd565b5061000e6118be565b5061000e611800565b5061000e6115ed565b5061000e611545565b5061000e6114d5565b5061000e6114ad565b5061000e61141c565b5061000e6113fd565b5061000e61117a565b5061000e61115b565b5061000e611131565b5061000e6110c1565b5061000e611097565b5061000e610fd3565b5061000e610d12565b5061000e610c3e565b5061000e610bcf565b5061000e6109a4565b5061000e61088b565b5061000e610867565b5061000e610714565b5061000e6106f5565b5061000e610650565b5061000e610585565b5061000e6104b4565b5061000e6103a3565b5061000e610348565b5061000e6102f6565b6001600160a01b0381160361000e57565b606435906102f4826102d6565b565b503461000e57604036600319011261000e57602061033f602435610319816102d6565b6004356000526001835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b503461000e57604036600319011261000e57602061033f60043561036b816102d6565b6024356000526001835260406000209060018060a01b0316600052602052604060002090565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e5760206004356103c381610391565b63ffffffff60e01b166301ffc9a760e01b8114908115610419575b8115610408575b81156103f7575b506040519015158152f35b63152a902d60e11b149050386103ec565b6303a24d0760e21b811491506103e5565b636cdb3d1360e11b811491506103de565b50634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761045c57604052565b61046461042a565b604052565b90601f801991011681019081106001600160401b0382111761045c57604052565b6020906001600160401b0381116104a7575b601f01601f19160190565b6104af61042a565b61049c565b503461000e57602036600319011261000e576004356001600160401b03811161000e573660238201121561000e5780600401356104f08161048a565b906104fe6040519283610469565b808252366024828501011161000e576020816000926024610527960183860137830101526121cd565b005b60005b83811061053c5750506000910152565b818101518382015260200161052c565b9060209161056581518092818552858086019101610529565b601f01601f1916010190565b90602061058292818152019061054c565b90565b503461000e57602036600319011261000e576004356009548111610642576040519060808201604052607f820190600a80603092818106840185530491825b610629576106256105fc61061986886080601f1992838101920301815261060d6040519485926105f6602085016123e6565b906123af565b64173539b7b760d91b815260050190565b03908101835282610469565b60405191829182610571565b0390f35b90809293600019019381810683018553049190826105c4565b63bad086ea6000526004601cfd5b503461000e57602036600319011261000e5760043561066e816102d6565b6004546001600160a01b03906106879082163314611e55565b811680156106c05760009160045560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b503461000e57600036600319011261000e576020600854604051908152f35b5060408060031936011261000e57600435906024359160019261073a8460055414612892565b600260055560ff600f541615610856576107548183612485565b600954908101809111610849575b600e541061083857600d54610775612b7b565b600a5481810180911161082b575b600a556107998461079333612b01565b93612485565b90810180911161081e575b0361080d57926107b333612998565b60009384915b8383106107e1575050106107d4576107d16001600555565b51f35b63dfb035c982526004601cfd5b8091926108056107ef612909565b858851916107fc83610441565b8a8352336124fa565b0191906107b9565b825163f7760f2560e01b8152600490fd5b610826611f43565b6107a4565b610833611f43565b610783565b825163d05cb60960e01b8152600490fd5b610851611f43565b610762565b82516316851fc760e11b8152600490fd5b503461000e57600036600319011261000e57602060ff600f54166040519015158152f35b503461000e57604036600319011261000e57604060018060a01b03600354166127106108bb600254602435612485565b0482519182526020820152f35b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b9181601f8401121561000e578235916001600160401b03831161000e576020838186019501011161000e57565b9060a060031983011261000e5760043561093e816102d6565b9160243561094b816102d6565b916001600160401b0360443581811161000e578361096b916004016108c8565b9390939260643583811161000e5782610986916004016108c8565b9390939260843591821161000e576109a0916004016108f8565b9091565b503461000e576109b336610925565b906109c78386959699989997949714612071565b6001600160a01b038781169890338a148015610b9a575b6109e790611e90565b8560005b88878c8c858510610adf57505050505050811680996040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610a348d8d8d8d85612102565b0390a43b15610acd576105279792610a6d6020969593600093604051998a988997889663bc197c8160e01b9e8f89523360048a01612129565b03925af1908115610ac0575b600091610a92575b506001600160e01b03191614612032565b610ab3915060203d8111610ab9575b610aab8183610469565b810190611fbc565b38610a81565b503d610aa1565b610ac8612025565b610a79565b50505050505050610527901515611f7c565b610afe85610b1b92610af78260019a610b8c986120c6565b35966120c6565b3593610b3a610b3284610b1b846000526001602052604060002090565b9060018060a01b0316600052602052604060002090565b541515611ecd565b610b5e85610b5685610b1b856000526001602052604060002090565b541015611f06565b610b7689610b1b836000526001602052604060002090565b8581540190556000526001602052604060002090565b9081540390550186906109eb565b506109e7610bc8610bc133610b1b8d60018060a01b03166000526000602052604060002090565b5460ff1690565b90506109de565b503461000e57600036600319011261000e576006546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b828110610c19575050505090565b835185529381019392810192600101610c0b565b906020610582928181520190610bf9565b503461000e5760408060031936011261000e576001600160401b0360043581811161000e57610c719036906004016108c8565b9160243590811161000e57610c8a9036906004016108c8565b92610c96848214612071565b610c9f81612179565b93600091825b818110610cb9578751806106258982610c2d565b80610d00610cca600193858a6120c6565b35610cd4816102d6565b610cdf83878a6120c6565b358752836020528a87209060018060a01b0316600052602052604060002090565b54610d0b828a6121ab565b5201610ca5565b503461000e5760208060031936011261000e576004803591610d33836102d6565b81546001600160a01b039190610d4c9083163314611e55565b6006548390610d6b906001600160a01b03165b6001600160a01b031690565b948260409687519687809263e919ecad60e01b82525afa948515610fc6575b600095610fa7575b50610d9c85612179565b92610da686612179565b94600a549081151580610f9c575b15610f915790610dcf91610dc88247611f6f565b9416612be2565b610dd96000600a55565b6006546000908590610df3906001600160a01b0316610d5f565b915b89898210610e435789898460005b838110610e0c57005b80610e3d610e2c610e1f600194866121ab565b516001600160a01b031690565b610e3683876121ab565b5190612be2565b01610e03565b610ef4610eee600194610eb687868a8d8882610efc9a518096631419245f60e11b82528180610e79898883019190602083019252565b03915afa948515610f84575b600095610f53575b505163b34c8caf60e01b81526001600160a01b0385169181019182529485918291602090910190565b03818d5afa928315610f46575b600093610f0f575b50610eda90610ee993946121ab565b6001600160a01b039091169052565b612463565b87612485565b612710900490565b610f06828a6121ab565b52018590610df5565b610ee9935090610f37610eda928d803d10610f3f575b610f2f8183610469565b81019061286e565b935090610ecb565b503d610f25565b610f4e612025565b610ec3565b610f7591929550833d8511610f7d575b610f6d8183610469565b81019061287d565b939038610e8d565b503d610f63565b610f8c612025565b610e85565b505090504790610dd9565b508084161515610db4565b610fbf919550833d8511610f3f57610f2f8183610469565b9338610d92565b610fce612025565b610d8a565b503461000e57600080600319360112611094576040519080600c54610ff781612316565b8085529160019180831690811561106a5750600114611021575b6106258561061981870382610469565b9250600c8352600080516020612d1b8339815191525b82841061105257505050810160200161061982610625611011565b80546020858701810191909152909301928101611037565b8695506106259693506020925061061994915060ff191682840152151560051b8201019293611011565b80fd5b503461000e57600036600319011261000e576007546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760043580151580910361000e576000906110f860018060a01b03600454163314611e55565b60ff19600f541660ff821617600f55604051907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e68383a2f35b503461000e57600036600319011261000e576004546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576020600954604051908152f35b503461000e5760408060031936011261000e5760049081359161119c836102d6565b602435926111a9846102d6565b81546001600160a01b0392906111c29084163314611e55565b6006546111d7906001600160a01b0316610d5f565b90845193849263e919ecad60e01b8452838360209586935afa9485156113f0575b6000956113d1575b5061120a85612179565b9661121486612179565b93600086858a600a5493841515806113c6575b1561135a5750516370a0823160e01b8152309181019182529495939461127b946112749385938892849291839003602001918391165afa90811561134d575b600091611330575b50611f6f565b9387612ca9565b6112856000600a55565b600654600090899061129f906001600160a01b0316610d5f565b915b898982106112e7575050505050505060005b8381106112bc57005b806112e16112cf610e1f6001948a6121ab565b6112d983866121ab565b519086612ca9565b016112b3565b610ef4610eee600194610eb687868a8d888261131d9a518096631419245f60e11b82528180610e79898883019190602083019252565b61132782896121ab565b520189906112a1565b6113479150863d8811610f3f57610f2f8183610469565b3861126e565b611355612025565b611266565b90516370a0823160e01b815230898201908152959791965094879450859350839003602001915082908a165afa9182156113b9575b9161139c575b5090611285565b6113b39150823d8411610f3f57610f2f8183610469565b38611395565b6113c1612025565b61138f565b508787161515611227565b6113e9919550833d8511610f3f57610f2f8183610469565b9338611200565b6113f8612025565b6111f8565b503461000e57600036600319011261000e576020600d54604051908152f35b503461000e57604036600319011261000e5760043561143a816102d6565b6024359081151580920361000e57336000908152602081815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e576114bc36610925565b5050505050505050602060405163bc197c8160e01b8152f35b503461000e57600036600319011261000e576114fc60018060a01b03600454163314611e55565b600160ff19600b541617600b55600060405180611518816123e6565b039020604051907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08383a2f35b503461000e57600036600319011261000e57602060ff600b54166040519015158152f35b6020906001600160401b038111611582575b60051b0190565b61158a61042a565b61157b565b81601f8201121561000e578035916115a683611569565b926115b46040519485610469565b808452602092838086019260051b82010192831161000e578301905b8282106115de575050505090565b813581529083019083016115d0565b50604036600319011261000e5760046001600160401b03813581811161000e5761161a903690840161158f565b9060243590811161000e57611632903690840161158f565b60016116418160055414612892565b600260055560ff600f5416156117935761165a82612951565b600954908101809111611786575b600e541061177557600d54835161169b611680612b7b565b91600a54838101809111611768575b600a5561079333612b01565b90810180911161175b575b0361174a576116b883518351146128cb565b6116c133612b01565b83516007549092916001600160a01b039091169081611736575b50506000905b82821061171957501061170c5761170292506116fb612498565b9133612617565b6105276001600555565b8263dfb035c9600052601cfd5b8161172e6117288394876121ab565b51612935565b5001906116e1565b6117439130903390612c2d565b38806116db565b60405163f7760f2560e01b81528490fd5b611763611f43565b6116a6565b611770611f43565b61168f565b60405163d05cb60960e01b81528490fd5b61178e611f43565b611668565b6040516316851fc760e11b81528490fd5b608060031982011261000e576004356117bc816102d6565b916001600160401b0360243581811161000e57836117dc9160040161158f565b9260443591821161000e576117f39160040161158f565b90606435610582816102d6565b5061180a366117a4565b61182260018060a09695961b03600454163314611e55565b61182b82612951565b6009549081018091116118b1575b600e541061189f5761184a906129e3565b825160005b818110611883571061187557610527926040519261186c84610441565b60008452612617565b63dfb035c96000526004601cfd5b80611890600192856121ab565b5160089081540190550161184f565b60405163d05cb60960e01b8152600490fd5b6118b9611f43565b611839565b503461000e57600036600319011261000e576020600e54604051908152f35b50608036600319011261000e576001600160401b0360043581811161000e573660238201121561000e57806004013561191581611569565b916119236040519384610469565b81835260209160248385019160051b8301019136831161000e57602401905b82821061198d57858560243582811161000e5761196390369060040161158f565b60443592831161000e5761197e61052793369060040161158f565b906119876102e7565b926126c7565b838091833561199b816102d6565b815201910190611942565b506119b0366117a4565b600480549394936001600160a01b03926119e3916119d19085163314611e55565b6119de8751865114612071565b612a3f565b845160005b818110611ac35710611ab75750821691611a03831515612833565b83519060005b828110611a4c57600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb611a47886040519182913395836125a7565b0390a4005b80611a59600192886121ab565b51611a88611a7585610b1b846000526001602052604060002090565b54611a8084896121ab565b511115611ecd565b611aab84610b1b611a99858a6121ab565b51936000526001602052604060002090565b90815403905501611a09565b63dfb035c9600052601cfd5b611acd81866121ab565b5160089081548015611ae4570390556001016119e8565b8563ce3a3d37600052601cfd5b503461000e57600036600319011261000e576020600a54604051908152f35b503461000e57604036600319011261000e57602060ff611b6d600435611b35816102d6565b60243590611b42826102d6565b60018060a01b03166000526000845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b60a060031982011261000e57600435611b91816102d6565b91602435611b9e816102d6565b916044359160643591608435906001600160401b03821161000e576109a0916004016108f8565b503461000e57611bd436611b79565b505050505050602060405163f23a6e6160e01b8152f35b503461000e57611bfa36611b79565b6001600160a01b038087169695919492939291903388148015611d2c575b611c2190611e90565b611c3c610b3288610b1b866000526001602052604060002090565b611c5884610b5689610b1b876000526001602052604060002090565b611c7082610b1b856000526001602052604060002090565b611c7b858254611f5a565b9055611c9587610b1b856000526001602052604060002090565b611ca0858254611f6f565b9055811680976040517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62339180611ce589898360209093929193604081019481520152565b0390a43b15611d1c579460209291600061052797610a6d6040519788968795869463f23a6e6160e01b9c8d87523360048801611ff2565b5050505050610527901515611f7c565b50611c21611d53610bc133610b1b8b60018060a01b03166000526000602052604060002090565b9050611c18565b50608036600319011261000e57600435611d73816102d6565b6024356044356001600160401b03811161000e57611d9590369060040161158f565b606435611da1816102d6565b611db660018060a01b03600454163314611e55565b611dc883611dc384612951565b612485565b600954908101809111611e48575b600e541061189f5783611de984926129e3565b60009283915b838310611e0f57505010611e0257604051f35b63dfb035c990526004601cfd5b9091600190611e40611e1f612909565b611e2983876121ab565b5160405191611e3783610441565b898352866124fa565b019190611def565b611e50611f43565b611dd6565b15611e5c57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b15611e9757565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15611ed457565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b15611f0d57565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b50634e487b7160e01b600052601160045260246000fd5b91908201809211611f6757565b6102f4611f43565b91908203918211611f6757565b15611f8357565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9081602091031261000e575161058281610391565b908060209392818452848401376000828201840152601f01601f1916010190565b919261058296949160a094600180871b038092168552166020840152604083015260608201528160808201520191611fd1565b506040513d6000823e3d90fd5b1561203957565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b1561207857565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b50634e487b7160e01b600052603260045260246000fd5b91908110156120d65760051b0190565b61158a6120af565b81835290916001600160fb1b03831161000e5760209260051b809284830137010190565b929061211b9061058295936040865260408601916120de565b9260208185039101526120de565b96949261216b9461215d926105829a989460018060a01b038092168b521660208a015260a060408a015260a08901916120de565b9186830360608801526120de565b926080818503910152611fd1565b9061218382611569565b6121906040519182610469565b82815280926121a1601f1991611569565b0190602036910137565b60209181518110156121c0575b60051b010190565b6121c86120af565b6121b8565b906121e360018060a01b03600454163314611e55565b6001918260ff600b54161515146123045780516001600160401b0381116122f7575b61221981612214600c54612316565b612350565b60209384601f8311600114612283575081809161224f9596600093612278575b501b916000199060031b1c191617600c556123c6565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f66000604051a2565b850151925038612239565b600c600052601f19831695919291600080516020612d1b833981519152916000905b8882106122e05750508261224f9697106122c7575b5050811b01600c556123c6565b84015160001960f88460031b161c1916905538806122ba565b808684958294958a015181550194019201906122a5565b6122ff61042a565b612205565b604051639619d74760e01b8152600490fd5b90600182811c92168015612346575b602083101461233057565b634e487b7160e01b600052602260045260246000fd5b91607f1691612325565b601f811161235c575050565b600090600c8252600080516020612d1b833981519152906020601f850160051c830194106123a5575b601f0160051c01915b82811061239a57505050565b81815560010161238e565b9092508290612385565b906123c260209282815194859201610529565b0190565b6123de90602060405192828480945193849201610529565b810103902090565b600c54600092916123f682612316565b91600190818116908115612450575060011461241157505050565b9091929350600c600052600080516020612d1b833981519152906000915b84831061243d575050500190565b818160209254858701520192019161242f565b60ff191683525050811515909102019150565b6064908060001904821181151516612479570290565b612481611f43565b0290565b8060001904821181151516612479570290565b60405190602082018281106001600160401b038211176124bc575b60405260008252565b6124c461042a565b6124b3565b909260a0926105829594600180861b031683526000602084015260408301526060820152816080820152019061054c565b92909161251584610b1b856000526001602052604060002090565b612520828254611f5a565b905560408051848152602081018390526001600160a01b0386169591869160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43b1561259957610a6d916102f494602092600060405180968195829463f23a6e6160e01b9a8b855233600486016124c9565b5050506102f4901515611f7c565b90916125be61058293604084526040840190610bf9565b916020818403910152610bf9565b926125fb61058295936126099360018060a01b031686526000602087015260a0604087015260a0860190610bf9565b908482036060860152610bf9565b91608081840391015261054c565b929091825160005b81811061269c57505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180612667888b836125a7565b0390a43b1561259957610a6d916102f494602092600060405180968195829463bc197c8160e01b9a8b855233600486016125cc565b806126a9600192876121ab565b516126bb88610b1b611a9985896121ab565b9081540190550161261f565b90916126e36004946119de60018060a01b038754163314611e55565b60009283918151938481511480612780575b6127029093929193612071565b8484106127205750505010612715575050565b63dfb035c99052601cfd5b90919261272d81836121ab565b51600890815480156127745703905560019061276b61274f610e1f83886121ab565b61275983876121ab565b5161276484876121ab565b519161278a565b01929190612702565b8963ce3a3d378a52601cfd5b50815185146126f5565b60009282845260016020526127b881610b5684604088209060018060a01b0316600052602052604060002090565b8284526001602090815260408086206001600160a01b0385166000908152925290208054918203918211612826575b556040519182526001602083015260018060a01b0316907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260403392a4565b61282e611f43565b6127e7565b1561283a57565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f46524f4d60a01b6044820152606490fd5b9081602091031261000e575190565b9081602091031261000e5751610582816102d6565b1561289957565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b156128d257565b60405162461bcd60e51b815260206004820152600f60248201526e09a92a69a82a88690be988a9c8ea89608b1b6044820152606490fd5b60016008540160085560095460018101809111612928575b8060095590565b612930611f43565b612921565b8060085401600855600954908101809111612928578060095590565b9060009180516000915b81831061296757505050565b90919360019061297786846121ab565b51810180911161298b575b9401919061295b565b612993611f43565b612982565b6129a181612b01565b6001600160a01b03338382161480156129d7575b6129be57505050565b60075416806129cc57505050565b6102f4923091612c2d565b508060075416156129b5565b6129ec81612b01565b6001600160a01b0333838216148015612a33575b612a0957505050565b612a11612b7b565b8203612a255760075416806129cc57505050565b63f7760f256000526004601cfd5b50806007541615612a00565b612a4881612b01565b6001600160a01b0333838216148015612af5575b612a6557505050565b6004546000908216803b63ffffffff16612a8f5750829050612a255760075416806129cc57505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa918215612ae8575b91612aca575b50612a11565b612ae2915060203d8111610f3f57610f2f8183610469565b38612ac4565b612af0612025565b612abe565b50806007541615612a5c565b6007546001600160a01b0390811691908215612b745760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa908115612b67575b600091612b4f575090565b610582915060203d8111610f3f57610f2f8183610469565b612b6f612025565b612b44565b5050503490565b6004546000906001600160a01b0316803b63ffffffff16612b9d575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa918215612bd5575b91612b4f575090565b612bdd612025565b612bcc565b600080809381935af115612bf257565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160016000511416171615612c6d57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d1160016000511416171615612ce357565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfedf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7a2646970667358221220530ac512ec81ae92dbbe9ecfce11a8acaf9fdfd0e818201d3db5051c20e7f0c964736f6c63430008100033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
