/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../../contracts/lib/tokens/ERC1155/Impl/ERC1155Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "URILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003135762002ed0803803806200001d816200032d565b92833981019060e081830312620003135780516001600160401b03908181116200031357820191601f918483850112156200031357835193818511620002fd57602094601f199162000075868301841688016200032d565b978289528783830101116200031357869060005b8381106200031857505060009188010152848301519060408401519260608501519660018060a01b0396878916809903620003135760808701516001600160601b0381169a908b9003620003135760a088015197898916809903620003135760c001519889168099036200031357600480546001600160a01b03199081168a179091559760007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3600192836005558151948511620002fd57600c548481811c91168015620002f2575b82821014620002dc5783811162000290575b50809285116001146200022557508394509083929160009462000219575b50501b916000199060031b1c191617600c555b600d55600e558281600654161760065583600255828160035416176003556007541617600755604051917fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2612b7c9081620003548239f35b01519250388062000185565b929484908116600c60005284600020946000905b888383106200027557505050106200025b575b505050811b01600c5562000198565b015160001960f88460031b161c191690553880806200024c565b85870151885590960195948501948793509081019062000239565b600c600052816000208480880160051c820192848910620002d2575b0160051c019085905b828110620002c557505062000167565b60008155018590620002b5565b92508192620002ac565b634e487b7160e01b600052602260045260246000fd5b90607f169062000155565b634e487b7160e01b600052604160045260246000fd5b600080fd5b8181018301518a820184015288920162000089565b6040519190601f01601f191682016001600160401b03811183821017620002fd5760405256fe6080604052600436101561001257600080fd5b60003560e01c8062f7486714610245578062fdd58e1461024057806301ffc9a71461023b57806302fe5305146102365780630e89341c1461023157806313af40351461022c57806318160ddd146102275780631b2ef1ca1461022257806322ab47a11461021d5780632a55205a146102185780632eb2c2d6146102135780633cd8045e1461020e5780634e1273f41461020957806351cff8d9146102045780637754305c146101ff578063785e9e86146101fa578063879fbedf146101f55780638da5cb5b146101f05780638fc3b549146101eb5780639456fbcc146101e6578063a035b1fe146101e1578063a22cb465146101dc578063bc197c81146101d7578063c360a1b7146101d2578063c8110264146101cd578063d351cfdc146101c8578063d580725d146101c3578063d5abeb01146101be578063d6fa7b10146101b9578063d78147cb146101b4578063e1c38ed9146101af578063e985e9c5146101aa578063f23a6e61146101a5578063f242432a146101a05763f745586f1461019b57600080fd5b611c09565b611a9f565b611a7a565b6119c6565b6119a8565b61185e565b611796565b611778565b6116d7565b6114ed565b611455565b6113ea565b6113c3565b611333565b611315565b611054565b611036565b61100d565b610fa4565b610f7b565b610eb8565b610c32565b610b5f565b610af1565b6108cf565b6107b7565b610794565b610669565b61064b565b6105ac565b6104e2565b610412565b61031a565b6102c0565b61026f565b6001600160a01b0381160361025b57565b600080fd5b6064359061026d8261024a565b565b3461025b57604036600319011261025b5760206102b76024356102918161024a565b6004356000526001835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b3461025b57604036600319011261025b5760206102b76004356102e28161024a565b6024356000526001835260406000209060018060a01b0316600052602052604060002090565b6001600160e01b031981160361025b57565b3461025b57602036600319011261025b57602060043561033981610308565b63ffffffff60e01b166301ffc9a760e01b811490811561038f575b811561037e575b811561036d575b506040519015158152f35b63152a902d60e11b14905038610362565b6303a24d0760e21b8114915061035b565b636cdb3d1360e11b81149150610354565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176103d157604052565b6103a0565b90601f801991011681019081106001600160401b038211176103d157604052565b6001600160401b0381116103d157601f01601f191660200190565b3461025b57602036600319011261025b576004356001600160401b03811161025b573660238201121561025b57806004013561044d816103f7565b9061045b60405192836103d6565b808252366024828501011161025b57602081600092602461048496018386013783010152612042565b005b60005b8381106104995750506000910152565b8181015183820152602001610489565b906020916104c281518092818552858086019101610486565b601f01601f1916010190565b9060206104df9281815201906104a9565b90565b3461025b57602036600319011261025b57600435600954811161059e576040519060808201604052607f820190600a80603092818106840185530491825b6105855761058161055861057586886080601f199283810192030181526105696040519485926105526020850161224b565b90612214565b64173539b7b760d91b815260050190565b039081018352826103d6565b604051918291826104ce565b0390f35b9080929360001901938181068301855304919082610520565b63bad086ea6000526004601cfd5b3461025b57602036600319011261025b576004356105c98161024a565b6004546001600160a01b03906105e29082163314611ce6565b811690811561061657600455337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b3461025b57600036600319011261025b576020600854604051908152f35b60408060031936011261025b57600435906024359060019061068e82600554146126e5565b600260055560ff600f541615610784576106a883856122de565b60095490810180911161076f57600e541061077457600d546106c8612995565b600a5481810180911161076f57600a556106eb866106e533612929565b936122de565b90810180911161076f570361075f579190610705336127ce565b6000925b8484106107305750505010610722576104846001600555565b63dfb035c96000526004601cfd5b9080929361075661073f61275c565b8685519161074c836103b6565b6000835233612335565b01929190610709565b5163f7760f2560e01b8152600490fd5b611dd4565b5163d05cb60960e01b8152600490fd5b516316851fc760e11b8152600490fd5b3461025b57600036600319011261025b57602060ff600f54166040519015158152f35b3461025b57604036600319011261025b57604060018060a01b03600354166127106107e66002546024356122de565b0482519182526020820152f35b9181601f8401121561025b578235916001600160401b03831161025b576020808501948460051b01011161025b57565b9181601f8401121561025b578235916001600160401b03831161025b576020838186019501011161025b57565b9060a060031983011261025b576004356108698161024a565b916024356108768161024a565b916001600160401b0360443581811161025b5783610896916004016107f3565b9390939260643583811161025b57826108b1916004016107f3565b9390939260843591821161025b576108cb91600401610823565b9091565b3461025b576108dd36610850565b906108f083869498959699979914611ef8565b6001600160a01b0386811694903386148015610abc575b61091090611d21565b8460005b888c8b8d858510610a0157505050505050811680958a7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61095f8c6040519182918d8c339785611f85565b0390a43b156109ee579661099460009260209798996040519a8b988997889663bc197c8160e01b9d8e89523360048a01611fac565b03925af180156109e957610484926000916109bb575b506001600160e01b03191614611eb9565b6109dc915060203d81116109e2575b6109d481836103d6565b810190611e44565b386109aa565b503d6109ca565b611ead565b5050509250505061048491501515611e04565b610a2085610a3d92610a198260019a610aae98611f4c565b3596611f4c565b3593610a5c610a5484610a3d846000526001602052604060002090565b9060018060a01b0316600052602052604060002090565b541515611d5e565b610a8085610a7885610a3d856000526001602052604060002090565b541015611d97565b610a9889610a3d836000526001602052604060002090565b8581540190556000526001602052604060002090565b908154039055018590610914565b50610910610aea610ae333610a3d8c60018060a01b03166000526000602052604060002090565b5460ff1690565b9050610907565b3461025b57600036600319011261025b576006546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b828110610b3a575050505090565b835185529381019392810192600101610b2c565b9060206104df928181520190610b1a565b3461025b5760408060031936011261025b576001600160401b0360043581811161025b57610b919036906004016107f3565b9160243590811161025b57610baa9036906004016107f3565b92610bb6848214611ef8565b610bbf81611ffc565b93600091825b818110610bd9578751806105818982610b4e565b80610c20610bea600193858a611f4c565b35610bf48161024a565b610bff83878a611f4c565b358752836020528a87209060018060a01b0316600052602052604060002090565b54610c2b828a61202e565b5201610bc5565b3461025b5760208060031936011261025b5760048035610c518161024a565b81546001600160a01b03938391610c6b9086163314611ce6565b600654610c88906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa9485156109e957600095610e99575b50610cb885611ffc565b93610cc286611ffc565b96600a549081151580610e8e575b15610e835790610ceb91610ce48247611df7565b94166129ee565b610cf56000600a55565b60065460009390610d0e906001600160a01b0316610c7c565b935b878110610d5d5788888860005b828110610d2657005b80610d57610d46610d396001948661202e565b516001600160a01b031690565b610d50838861202e565b51906129ee565b01610d1d565b825190631419245f60e11b8252828280610d7e848b83019190602083019252565b0381895afa9182156109e957600092610e54575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa80156109e957610dfe8a610e049260019686610e0c96600093610e1d575b50610dea90610df9939461202e565b6001600160a01b039091169052565b6122c8565b876122de565b612710900490565b610e16828c61202e565b5201610d10565b610df9935090610e45610dea928c8d3d10610e4d575b610e3d81836103d6565b8101906126c1565b935090610ddb565b503d610e33565b610e75919250833d8511610e7c575b610e6d81836103d6565b8101906126d0565b9038610d92565b503d610e63565b505090504790610cf5565b508084161515610cd0565b610eb1919550823d8411610e4d57610e3d81836103d6565b9338610cae565b3461025b57600080600319360112610f78576040519080600c54610edb8161217b565b80855291600191808316908115610f4e5750600114610f05575b61058185610575818703826103d6565b9250600c8352600080516020612b278339815191525b828410610f3657505050810160200161057582610581610ef5565b80546020858701810191909152909301928101610f1b565b8695506105819693506020925061057594915060ff191682840152151560051b8201019293610ef5565b80fd5b3461025b57600036600319011261025b576007546040516001600160a01b039091168152602090f35b3461025b57602036600319011261025b5760043580151580910361025b57610fd760018060a01b03600454163314611ce6565b60ff19600f541660ff821617600f557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b3461025b57600036600319011261025b576004546040516001600160a01b039091168152602090f35b3461025b57600036600319011261025b576020600954604051908152f35b3461025b5760408060031936011261025b576004908135906110758261024a565b602435916110828361024a565b83546001600160a01b03949061109b9086163314611ce6565b6006546110b0906001600160a01b0316610c7c565b835194859163e919ecad60e01b8352828460209485935afa9586156109e9576000966112f6575b506110e186611ffc565b946110eb87611ffc565b976000600a5490811515806112eb575b1561128e575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa80156109e957816111459161114c94600091611271575b50611df7565b9387612ab5565b6111566000600a55565b6006546000939061116f906001600160a01b0316610c7c565b935b8881106111b55750505050505060005b83811061118a57005b806111af61119d610d396001948761202e565b6111a7838961202e565b519085612ab5565b01611181565b825190631419245f60e11b82528282806111d6848b83019190602083019252565b0381895afa9182156109e957600092611252575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa80156109e957610dfe8b610e04926001968661124196600093610e1d5750610dea90610df9939461202e565b61124b828d61202e565b5201611171565b61126a919250833d8511610e7c57610e6d81836103d6565b90386111ea565b6112889150883d8a11610e4d57610e3d81836103d6565b3861113f565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa9182156109e957916112ce575b5090611156565b6112e59150833d8511610e4d57610e3d81836103d6565b386112c7565b5082851615156110fb565b61130e919650823d8411610e4d57610e3d81836103d6565b94386110d7565b3461025b57600036600319011261025b576020600d54604051908152f35b3461025b57604036600319011261025b576004356113508161024a565b6024359081151580920361025b57336000908152602081815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b3461025b576113d136610850565b5050505050505050602060405163bc197c8160e01b8152f35b3461025b57600080600319360112610f785761141160018060a01b03600454163314611ce6565b600160ff19600b541617600b556040518061142b8161224b565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b3461025b57600036600319011261025b57602060ff600b54166040519015158152f35b6001600160401b0381116103d15760051b60200190565b81601f8201121561025b578035916114a683611478565b926114b460405194856103d6565b808452602092838086019260051b82010192831161025b578301905b8282106114de575050505090565b813581529083019083016114d0565b604036600319011261025b5760046001600160401b03813581811161025b57611519903690840161148f565b9060243590811161025b57611531903690840161148f565b600161154081600554146126e5565b600260055560ff600f54161561166a5761155982612796565b60095490810180911161076f57600e541061165957600d54835161157b612995565b90600a549082820180921161076f5761159a91600a556106e533612929565b90810180911161076f5703611648576115b6835183511461271e565b6115bf33612929565b83516007549092916001600160a01b039091169081611634575b50506000905b82821061161757501061160a5761160092506115f96122f1565b9133612475565b6104846001600555565b8263dfb035c9600052601cfd5b8161162c61162683948761202e565b5161277a565b5001906115df565b6116419130903390612a39565b38806115d9565b60405163f7760f2560e01b81528490fd5b60405163d05cb60960e01b81528490fd5b6040516316851fc760e11b81528490fd5b608060031982011261025b576004356116938161024a565b916001600160401b0360243581811161025b57836116b39160040161148f565b9260443591821161025b576116ca9160040161148f565b906064356104df8161024a565b6116e03661167b565b6116f860018060a09695961b03600454163314611ce6565b61170182612796565b60095490810180911161076f57600e54106117665761171f90612819565b825160005b81811061174a5710610722576104849260405192611741846103b6565b60008452612475565b806117576001928561202e565b51600890815401905501611724565b60405163d05cb60960e01b8152600490fd5b3461025b57600036600319011261025b576020600e54604051908152f35b608036600319011261025b576001600160401b0360043581811161025b573660238201121561025b5780600401356117cd81611478565b916117db60405193846103d6565b81835260209160248385019160051b8301019136831161025b57602401905b82821061184557858560243582811161025b5761181b90369060040161148f565b60443592831161025b5761183661048493369060040161148f565b9061183f610260565b92612522565b83809183356118538161024a565b8152019101906117fa565b6118673661167b565b600480549394936001600160a01b039261189a916118889085163314611ce6565b6118958751865114611ef8565b612875565b845160005b81811061197a571061196e57508216916118ba831515612686565b83519060005b82811061190357600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6118fe88604051918291339583612405565b0390a4005b806119106001928861202e565b5161193f61192c85610a3d846000526001602052604060002090565b54611937848961202e565b511115611d5e565b61196284610a3d611950858a61202e565b51936000526001602052604060002090565b908154039055016118c0565b63dfb035c9600052601cfd5b611984818661202e565b516008908154801561199b5703905560010161189f565b8563ce3a3d37600052601cfd5b3461025b57600036600319011261025b576020600a54604051908152f35b3461025b57604036600319011261025b57602060ff611a226004356119ea8161024a565b602435906119f78261024a565b60018060a01b03166000526000845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b60a060031982011261025b57600435611a468161024a565b91602435611a538161024a565b916044359160643591608435906001600160401b03821161025b576108cb91600401610823565b3461025b57611a8836611a2e565b505050505050602060405163f23a6e6160e01b8152f35b3461025b57611aad36611a2e565b9294929390916001600160a01b0380851692903384148015611bdb575b611ad390611d21565b611aee610a5487610a3d8b6000526001602052604060002090565b611b0a83610a7888610a3d8c6000526001602052604060002090565b611b2282610a3d8a6000526001602052604060002090565b611b2d848254611dea565b9055611b4786610a3d8a6000526001602052604060002090565b611b52848254611df7565b905581168093887fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405180611b978833958360209093929193604081019481520152565b0390a43b15611bca57600060209495966109946040519889968795869463f23a6e6160e01b9b8c87523360048801611e7a565b509250505061048491501515611e04565b50611ad3611c02610ae333610a3d8a60018060a01b03166000526000602052604060002090565b9050611aca565b608036600319011261025b57600435611c218161024a565b602435906044356001600160401b03811161025b57611c4490369060040161148f565b90606435611c518161024a565b611c6660018060a01b03600454163314611ce6565b611c7884611c7385612796565b6122de565b60095490810180911161076f57600e54106117665791611c988493612819565b6000915b838310611cac5750501061072257005b9091600190611cde611cbc61275c565b611cc6838761202e565b5160405191611cd4836103b6565b6000835286612335565b019190611c9c565b15611ced57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b15611d2857565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b15611d6557565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b15611d9e57565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9190820180921161076f57565b9190820391821161076f57565b15611e0b57565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9081602091031261025b57516104df81610308565b908060209392818452848401376000828201840152601f01601f1916010190565b91926104df96949160a094600180871b038092168552166020840152604083015260608201528160808201520191611e59565b6040513d6000823e3d90fd5b15611ec057565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b15611eff57565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015611f5c5760051b0190565b611f36565b81835290916001600160fb1b03831161025b5760209260051b809284830137010190565b9290611f9e906104df9593604086526040860191611f61565b926020818503910152611f61565b969492611fee94611fe0926104df9a989460018060a01b038092168b521660208a015260a060408a015260a0890191611f61565b918683036060880152611f61565b926080818503910152611e59565b9061200682611478565b61201360405191826103d6565b8281528092612024601f1991611478565b0190602036910137565b8051821015611f5c5760209160051b010190565b9061205860018060a01b03600454163314611ce6565b6001918260ff600b54161515146121695780516001600160401b0381116103d15761208d81612088600c5461217b565b6121b5565b60209384601f83116001146120f557508180916120c395966000936120ea575b501b916000199060031b1c191617600c5561222b565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b8501519250386120ad565b600c600052601f19831695919291600080516020612b27833981519152916000905b888210612152575050826120c3969710612139575b5050811b01600c5561222b565b84015160001960f88460031b161c19169055388061212c565b808684958294958a01518155019401920190612117565b604051639619d74760e01b8152600490fd5b90600182811c921680156121ab575b602083101461219557565b634e487b7160e01b600052602260045260246000fd5b91607f169161218a565b601f81116121c1575050565b600090600c8252600080516020612b27833981519152906020601f850160051c8301941061220a575b601f0160051c01915b8281106121ff57505050565b8181556001016121f3565b90925082906121ea565b9061222760209282815194859201610486565b0190565b61224390602060405192828480945193849201610486565b810103902090565b600c546000929161225b8261217b565b916001908181169081156122b5575060011461227657505050565b9091929350600c600052600080516020612b27833981519152906000915b8483106122a2575050500190565b8181602092548587015201920191612294565b60ff191683525050811515909102019150565b9060648202918083046064149015171561076f57565b8181029291811591840414171561076f57565b604051906122fe826103b6565b60008252565b909260a0926104df9594600180861b03168352600060208401526040830152606082015281608082015201906104a9565b92909161235084610a3d856000526001602052604060002090565b61235b828254611dea565b905560408051848152602081018390526001600160a01b0386169591869160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43b156123f757906123d193602092600060405180978195829463f23a6e6160e01b998a85523360048601612304565b03925af180156109e95761026d926000916109bb57506001600160e01b03191614611eb9565b50505061026d901515611e04565b909161241c6104df93604084526040840190610b1a565b916020818403910152610b1a565b926124596104df95936124679360018060a01b031686526000602087015260a0604087015260a0860190610b1a565b908482036060860152610b1a565b9160808184039101526104a9565b929091825160005b8181106124f757505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806124c5888b83612405565b0390a43b156123f757906123d193602092600060405180978195829463bc197c8160e01b998a8552336004860161242a565b806125046001928761202e565b5161251688610a3d611950858961202e565b9081540190550161247d565b909161253e60049461189560018060a01b038754163314611ce6565b600092839181519384815114806125db575b61255d9093929193611ef8565b84841061257b5750505010612570575050565b63dfb035c99052601cfd5b909192612588818361202e565b51600890815480156125cf570390556001906125c66125aa610d39838861202e565b6125b4838761202e565b516125bf848761202e565b51916125e5565b0192919061255d565b8963ce3a3d378a52601cfd5b5081518514612550565b81600052600160205261261283610a788360406000209060018060a01b0316600052602052604060002090565b60008281526001602090815260408083206001600160a01b0385168452909152902092835490810390811161076f5790925560408051918252600160208301526000926001600160a01b03169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a4565b1561268d57565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f46524f4d60a01b6044820152606490fd5b9081602091031261025b575190565b9081602091031261025b57516104df8161024a565b156126ec57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b1561272557565b60405162461bcd60e51b815260206004820152600f60248201526e09a92a69a82a88690be988a9c8ea89608b1b6044820152606490fd5b6001600854016008556009546001810180911161076f578060095590565b806008540160085560095490810180911161076f578060095590565b9060009180516000915b8183106127ac57505050565b9091936127b9858361202e565b51810180911161076f579360010191906127a0565b6127d781612929565b6001600160a01b033383821614801561280d575b6127f457505050565b600754168061280257505050565b61026d923091612a39565b508060075416156127eb565b61282281612929565b6001600160a01b0333838216148015612869575b61283f57505050565b612847612995565b820361285b57600754168061280257505050565b63f7760f256000526004601cfd5b50806007541615612836565b61287e81612929565b6001600160a01b033383821614801561291d575b61289b57505050565b6004546000908216803b63ffffffff166128c5575082905061285b57600754168061280257505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa9182156109e957916128ff575b50612847565b612917915060203d8111610e4d57610e3d81836103d6565b386128f9565b50806007541615612892565b6007546001600160a01b039081169190821561298e5760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa9081156109e957600091612976575090565b6104df915060203d8111610e4d57610e3d81836103d6565b5050503490565b6004546000906001600160a01b0316803b63ffffffff166129b7575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa9182156109e95791612976575090565b600080809381935af1156129fe57565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160016000511416171615612a7957565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d1160016000511416171615612aef57565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfedf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7a2646970667358221220e88830a3b4b7002f3e112c30573ef6bc9091431ddeeda3b6c45cba7debff2eb264736f6c63430008130033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
