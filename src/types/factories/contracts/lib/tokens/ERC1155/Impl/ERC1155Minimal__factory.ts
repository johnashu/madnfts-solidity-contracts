/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Minimal,
  ERC1155MinimalInterface,
} from "../../../../../../contracts/lib/tokens/ERC1155/Impl/ERC1155Minimal";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c1338038062002c13833981016040819052620000349162000196565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35060086200008f87826200034d565b506007859055600580546001600160a01b038087166001600160a01b031992831681179093556001600160601b038616600281905560038054841690941790935560068054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050505062000419565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200017957600080fd5b919050565b80516001600160601b03811681146200017957600080fd5b60008060008060008060c08789031215620001b057600080fd5b86516001600160401b0380821115620001c857600080fd5b818901915089601f830112620001dd57600080fd5b815181811115620001f257620001f26200014b565b604051601f8201601f19908116603f011681019083821181831017156200021d576200021d6200014b565b81604052828152602093508c848487010111156200023a57600080fd5b600091505b828210156200025e57848201840151818301850152908301906200023f565b6000848483010152809a505050508089015196505050620002826040880162000161565b935062000292606088016200017e565b9250620002a26080880162000161565b9150620002b260a0880162000161565b90509295509295509295565b600181811c90821680620002d357607f821691505b602082108103620002f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034857600081815260208120601f850160051c81016020861015620003235750805b601f850160051c820191505b8181101562000344578281556001016200032f565b5050505b505050565b81516001600160401b038111156200036957620003696200014b565b62000381816200037a8454620002be565b84620002fa565b602080601f831160018114620003b95760008415620003a05750858301515b600019600386901b1c1916600185901b17855562000344565b600085815260208120601f198616915b82811015620003ea57888601518255948401946001909101908401620003c9565b5085821015620004095787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6127ea80620004296000396000f3fe6080604052600436106101945760003560e01c806351cff8d9116100e1578063a22cb4651161008a578063e1c38ed911610064578063e1c38ed9146104de578063e985e9c5146104f4578063f23a6e611461052c578063f242432a1461055957600080fd5b8063a22cb46514610463578063b8ce670d14610483578063bc197c811461049657600080fd5b80638da5cb5b116100bb5780638da5cb5b1461040d5780639456fbcc1461042d578063a035b1fe1461044d57600080fd5b806351cff8d9146103ad578063785e9e86146103cd578063879fbedf146103ed57600080fd5b806322ab47a1116101435780632eb2c2d61161011d5780632eb2c2d6146103285780633cd8045e146103485780634e1273f41461038057600080fd5b806322ab47a1146102b75780632a55205a146102d65780632db115441461031557600080fd5b80630e89341c116101745780630e89341c1461025557806313af40351461028257806320e469d6146102a457600080fd5b8062f7486714610199578062fdd58e146101e457806301ffc9a714610225575b600080fd5b3480156101a557600080fd5b506101d16101b4366004612094565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101f057600080fd5b506101d16101ff3660046120c4565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561023157600080fd5b50610245610240366004612106565b610579565b60405190151581526020016101db565b34801561026157600080fd5b5061027561027036600461212a565b6105e6565b6040516101db9190612189565b34801561028e57600080fd5b506102a261029d36600461219c565b6106be565b005b6102a26102b23660046121b9565b6107a0565b3480156102c357600080fd5b5060095461024590610100900460ff1681565b3480156102e257600080fd5b506102f66102f13660046121fb565b61086b565b604080516001600160a01b0390931683526020830191909152016101db565b6102a261032336600461212a565b6108a1565b34801561033457600080fd5b506102a26103433660046122ab565b61098b565b34801561035457600080fd5b50600554610368906001600160a01b031681565b6040516001600160a01b0390911681526020016101db565b34801561038c57600080fd5b506103a061039b36600461236a565b610d80565b6040516101db91906123d6565b3480156103b957600080fd5b506102a26103c836600461219c565b610eaa565b3480156103d957600080fd5b50600654610368906001600160a01b031681565b3480156103f957600080fd5b506102a261040836600461242f565b6111f4565b34801561041957600080fd5b50600454610368906001600160a01b031681565b34801561043957600080fd5b506102a261044836600461244a565b61128c565b34801561045957600080fd5b506101d160075481565b34801561046f57600080fd5b506102a261047e366004612478565b6116a9565b6102a26104913660046121b9565b611713565b3480156104a257600080fd5b506104c56104b13660046122ab565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101db565b3480156104ea57600080fd5b506101d1600a5481565b34801561050057600080fd5b5061024561050f36600461244a565b600060208181529281526040808220909352908152205460ff1681565b34801561053857600080fd5b506104c56105473660046124a4565b63f23a6e6160e01b9695505050505050565b34801561056557600080fd5b506102a26105743660046124a4565b611773565b60006301ffc9a760e01b6001600160e01b0319831614806105aa5750636cdb3d1360e11b6001600160e01b03198316145b806105c557506303a24d0760e21b6001600160e01b03198316145b806105e0575063152a902d60e11b6001600160e01b03198316145b92915050565b60608160011461060957604051631bf4348160e31b815260040160405180910390fd5b60095460ff1661062c57604051634d5e5fb360e01b815260040160405180910390fd5b6008805461063990612520565b80601f016020809104026020016040519081016040528092919081815260200182805461066590612520565b80156106b25780601f10610687576101008083540402835291602001916106b2565b820191906000526020600020905b81548152906001019060200180831161069557829003601f168201915b50505050509050919050565b6004546001600160a01b0316331461070c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6001600160a01b0381166107625760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152606401610703565b60048190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6004546001600160a01b031633146107e95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610703565b60095460ff161561080d57604051631bbdf5c560e31b815260040160405180910390fd5b600182111561082f57604051631bf4348160e31b815260040160405180910390fd5b61083a816000611a8c565b6009805460ff191660019081179091556040805160208101909152600081526108669185918590611b24565b505050565b6003546002546001600160a01b03909116906000906127109061088e9085612570565b610898919061258f565b90509250929050565b600954610100900460ff166108c95760405163287588a160e11b815260040160405180910390fd5b60006108d433611ccd565b905060006108e86340d097c360e01b611d5a565b9050806007546108f891906125b1565b82146109175760405163f7760f2560e01b815260040160405180910390fd5b60095460ff161561093b57604051631bbdf5c560e31b815260040160405180910390fd5b610946336002611a8c565b6009805460ff19166001179055600a80548291906000906109689084906125b1565b925050819055506108663360018560405180602001604052806000815250611b24565b8483146109cc5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610703565b336001600160a01b0389161480610a0457506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610a415760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610703565b60008060005b87811015610bf057888882818110610a6157610a616125c4565b905060200201359250868682818110610a7c57610a7c6125c4565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610af85760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610703565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610b5b5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610703565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610a47565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610c449493929190612625565b60405180910390a46001600160a01b0389163b15610d2a5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610c989033908f908e908e908e908e908e908e90600401612680565b6020604051808303816000875af1158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb91906126e4565b6001600160e01b03191614610d255760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610703565b610d74565b6001600160a01b038916610d745760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610703565b50505050505050505050565b6060838214610dc35760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610703565b8367ffffffffffffffff811115610ddc57610ddc612701565b604051908082528060200260200182016040528015610e05578160200160208202803683370190505b50905060005b84811015610ea157610e7c868683818110610e2857610e286125c4565b9050602002016020810190610e3d919061219c565b858584818110610e4f57610e4f6125c4565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b828281518110610e8e57610e8e6125c4565b6020908102919091010152600101610e0b565b50949350505050565b6004546001600160a01b03163314610ef35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610703565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f619190612717565b905060008167ffffffffffffffff811115610f7e57610f7e612701565b604051908082528060200260200182016040528015610fa7578160200160208202803683370190505b50905060008267ffffffffffffffff811115610fc557610fc5612701565b604051908082528060200260200182016040528015610fee578160200160208202803683370190505b509050600080600a5411801561100c57506001600160a01b03851615155b1561103657600a5461101e9047612730565b905061102c85600a54611dfe565b6000600a55611039565b50475b60005b8481101561119c57600554604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561108e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b29190612743565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611102573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111269190612717565b90508186848151811061113b5761113b6125c4565b6001600160a01b0390921660209283029190910190910152612710611161826064612570565b61116b9086612570565b611175919061258f565b858481518110611187576111876125c4565b6020908102919091010152505060010161103c565b60005b858110156111eb576111e38582815181106111bc576111bc6125c4565b60200260200101518583815181106111d6576111d66125c4565b6020026020010151611dfe565b60010161119f565b50505050505050565b6004546001600160a01b0316331461123d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610703565b6009805461ff0019166101008315158102919091179182905560405160ff91909204161515907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6004546001600160a01b031633146112d55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610703565b6005546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa15801561131f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113439190612717565b905060008167ffffffffffffffff81111561136057611360612701565b604051908082528060200260200182016040528015611389578160200160208202803683370190505b50905060008267ffffffffffffffff8111156113a7576113a7612701565b6040519080825280602002602001820160405280156113d0578160200160208202803683370190505b509050600080600a541180156113ee57506001600160a01b03851615155b1561148157600a546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561143a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145e9190612717565b6114689190612730565b90506114778686600a54611e59565b6000600a556114ec565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156114c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e99190612717565b90505b60005b8481101561164f57600554604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115659190612743565b60055460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d99190612717565b9050818684815181106115ee576115ee6125c4565b6001600160a01b0390921660209283029190910190910152612710611614826064612570565b61161e9086612570565b611628919061258f565b85848151811061163a5761163a6125c4565b602090810291909101015250506001016114ef565b60005b8581101561169f5761169788868381518110611670576116706125c4565b602002602001015186848151811061168a5761168a6125c4565b6020026020010151611e59565b600101611652565b5050505050505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b0316331461175c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610703565b611767816001611a8c565b61086683600184611edf565b336001600160a01b03871614806117ab57506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6117e85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610703565b60008481526001602090815260408083206001600160a01b038a1684529091529020546118445760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610703565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156118a75760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610703565b60008481526001602090815260408083206001600160a01b0389168452909152812080548592906118d99084906125b1565b909155505060008481526001602090815260408083206001600160a01b038a16845290915281208054859290611910908490612730565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15611a3a5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906119a89033908b908a908a908a908a90600401612760565b6020604051808303816000875af11580156119c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119eb91906126e4565b6001600160e01b03191614611a355760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610703565b611a84565b6001600160a01b038516611a845760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610703565b505050505050565b6000611a9783611ccd565b9050336001600160a01b0384161480611ab957506006546001600160a01b0316155b15610866578160ff16600003611adf57611ada6340d097c360e01b82611fc7565b611afb565b8160ff16600103611afb57611afb63044df8e760e41b82611fc7565b6006546001600160a01b03161561086657600654610866906001600160a01b0316843084611fe9565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290611b569084906125b1565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15611c7d5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190611beb9033906000908990899089906004016127a5565b6020604051808303816000875af1158015611c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2e91906126e4565b6001600160e01b03191614611c785760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610703565b611cc7565b6001600160a01b038416611cc75760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610703565b50505050565b6006546000906001600160a01b0316611ce657346105e0565b600654604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611d36573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190612717565b6004546000906001600160a01b0316803b63ffffffff811615611df35760048054604051633b7279e960e21b81526001600160e01b03198716928101929092526001600160a01b03169063edc9e7a490602401602060405180830381865afa158015611dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dee9190612717565b611df6565b60005b949350505050565b600080600080600085875af19050806108665760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610703565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611cc75760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610703565b60008281526001602090815260408083206001600160a01b0387168452909152902054811115611f425760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610703565b60008281526001602090815260408083206001600160a01b038716845290915281208054839290611f74908490612730565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6000611fd283611d5a565b90508082146108665763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806120755760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610703565b5050505050565b6001600160a01b038116811461209157600080fd5b50565b600080604083850312156120a757600080fd5b8235915060208301356120b98161207c565b809150509250929050565b600080604083850312156120d757600080fd5b82356120e28161207c565b946020939093013593505050565b6001600160e01b03198116811461209157600080fd5b60006020828403121561211857600080fd5b8135612123816120f0565b9392505050565b60006020828403121561213c57600080fd5b5035919050565b6000815180845260005b818110156121695760208185018101518683018201520161214d565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006121236020830184612143565b6000602082840312156121ae57600080fd5b81356121238161207c565b6000806000606084860312156121ce57600080fd5b83356121d98161207c565b92506020840135915060408401356121f08161207c565b809150509250925092565b6000806040838503121561220e57600080fd5b50508035926020909101359150565b60008083601f84011261222f57600080fd5b50813567ffffffffffffffff81111561224757600080fd5b6020830191508360208260051b850101111561226257600080fd5b9250929050565b60008083601f84011261227b57600080fd5b50813567ffffffffffffffff81111561229357600080fd5b60208301915083602082850101111561226257600080fd5b60008060008060008060008060a0898b0312156122c757600080fd5b88356122d28161207c565b975060208901356122e28161207c565b9650604089013567ffffffffffffffff808211156122ff57600080fd5b61230b8c838d0161221d565b909850965060608b013591508082111561232457600080fd5b6123308c838d0161221d565b909650945060808b013591508082111561234957600080fd5b506123568b828c01612269565b999c989b5096995094979396929594505050565b6000806000806040858703121561238057600080fd5b843567ffffffffffffffff8082111561239857600080fd5b6123a48883890161221d565b909650945060208701359150808211156123bd57600080fd5b506123ca8782880161221d565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561240e578351835292840192918401916001016123f2565b50909695505050505050565b8035801515811461242a57600080fd5b919050565b60006020828403121561244157600080fd5b6121238261241a565b6000806040838503121561245d57600080fd5b82356124688161207c565b915060208301356120b98161207c565b6000806040838503121561248b57600080fd5b82356124968161207c565b91506108986020840161241a565b60008060008060008060a087890312156124bd57600080fd5b86356124c88161207c565b955060208701356124d88161207c565b94506040870135935060608701359250608087013567ffffffffffffffff81111561250257600080fd5b61250e89828a01612269565b979a9699509497509295939492505050565b600181811c9082168061253457607f821691505b60208210810361255457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561258a5761258a61255a565b500290565b6000826125ac57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156105e0576105e061255a565b634e487b7160e01b600052603260045260246000fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561260c57600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006126396040830186886125da565b828103602084015261264c8185876125da565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a060408301526126ad60a08301888a6125da565b82810360608401526126c08187896125da565b905082810360808401526126d5818587612657565b9b9a5050505050505050505050565b6000602082840312156126f657600080fd5b8151612123816120f0565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561272957600080fd5b5051919050565b818103818111156105e0576105e061255a565b60006020828403121561275557600080fd5b81516121238161207c565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261279960a083018486612657565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261264c60a083018461214356fea164736f6c6343000810000a";

type ERC1155MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Minimal__factory extends ContractFactory {
  constructor(...args: ERC1155MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Minimal> {
    return super.deploy(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Minimal>;
  }
  override getDeployTransaction(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Minimal {
    return super.attach(address) as ERC1155Minimal;
  }
  override connect(signer: Signer): ERC1155Minimal__factory {
    return super.connect(signer) as ERC1155Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MinimalInterface {
    return new utils.Interface(_abi) as ERC1155MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Minimal;
  }
}
