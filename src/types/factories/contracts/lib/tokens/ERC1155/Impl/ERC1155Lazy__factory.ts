/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../../contracts/lib/tokens/ERC1155/Impl/ERC1155Lazy";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "URILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b5060405162004324380380620043248339810160408190526200003991620002a2565b600480546001600160a01b0319166001600160a01b0385169081179091556040518491906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a052600c8054610100600160a81b0319166101006001600160a01b03851602179055600b62000175878262000462565b50600680546001600160a01b03199081166001600160a01b038881169182179093556007805483168585161790556001600160601b03871660025560038054909216179055604051908316907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a26002546040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050506200052e565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028557600080fd5b919050565b80516001600160601b03811681146200028557600080fd5b60008060008060008060c08789031215620002bc57600080fd5b86516001600160401b0380821115620002d457600080fd5b818901915089601f830112620002e957600080fd5b815181811115620002fe57620002fe62000257565b604051601f8201601f19908116603f0116810190838211818310171562000329576200032962000257565b81604052828152602093508c848487010111156200034657600080fd5b600091505b828210156200036a57848201840151818301850152908301906200034b565b6000848483010152809a5050505062000385818a016200026d565b9650505062000397604088016200028a565b9350620003a7606088016200026d565b9250620003b7608088016200026d565b9150620003c760a088016200026d565b90509295509295509295565b600181811c90821680620003e857607f821691505b6020821081036200040957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200045d57600081815260208120601f850160051c81016020861015620004385750805b601f850160051c820191505b81811015620004595782815560010162000444565b5050505b505050565b81516001600160401b038111156200047e576200047e62000257565b62000496816200048f8454620003d3565b846200040f565b602080601f831160018114620004ce5760008415620004b55750858301515b600019600386901b1c1916600185901b17855562000459565b600085815260208120601f198616915b82811015620004ff57888601518255948401946001909101908401620004de565b50858210156200051e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051613dd062000554600039600061118f015260006110b00152613dd06000f3fe6080604052600436106101fc5760003560e01c80636c19e7831161011d578063bfa556e4116100b0578063d78147cb1161007f578063e985e9c511610064578063e985e9c514610632578063f23a6e611461066a578063f242432a1461069757600080fd5b8063d78147cb14610609578063e1c38ed91461061c57600080fd5b8063bfa556e414610597578063c360a1b7146105c7578063c8110264146105dc578063d6fa7b10146105f657600080fd5b80638fc3b549116100ec5780638fc3b549146104fa5780639456fbcc1461050f578063a22cb4651461052f578063bc197c811461054f57600080fd5b80636c19e783146104855780637754305c146104a5578063785e9e86146104ba5780638da5cb5b146104da57600080fd5b8063238ac933116101955780633644e515116101645780633644e515146104035780633cd8045e146104185780634e1273f41461043857806351cff8d91461046557600080fd5b8063238ac933146103545780632a55205a146103915780632eb2c2d6146103d057806332667d43146103f057600080fd5b80630e89341c116101d15780630e89341c146102df57806310251d7f1461030c57806313af40351461031f57806318160ddd1461033f57600080fd5b8062f7486714610201578062fdd58e1461024c57806301ffc9a71461028d57806302fe5305146102bd575b600080fd5b34801561020d57600080fd5b5061023961021c366004613072565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561025857600080fd5b506102396102673660046130a2565b60009081526001602090815260408083206001600160a01b039094168352929052205490565b34801561029957600080fd5b506102ad6102a83660046130e4565b6106b7565b6040519015158152602001610243565b3480156102c957600080fd5b506102dd6102d836600461314f565b610724565b005b3480156102eb57600080fd5b506102ff6102fa3660046131e4565b6107e8565b604051610243919061324d565b6102dd61031a366004613289565b61083f565b34801561032b57600080fd5b506102dd61033a3660046132e6565b6109a1565b34801561034b57600080fd5b50610239610a7e565b34801561036057600080fd5b50600c546103799061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610243565b34801561039d57600080fd5b506103b16103ac366004613303565b610a8e565b604080516001600160a01b039093168352602083019190915201610243565b3480156103dc57600080fd5b506102dd6103eb3660046133b3565b610ac4565b6102dd6103fe366004613289565b610eb9565b34801561040f57600080fd5b506102396110ac565b34801561042457600080fd5b50600654610379906001600160a01b031681565b34801561044457600080fd5b50610458610453366004613472565b6111b1565b6040516102439190613519565b34801561047157600080fd5b506102dd6104803660046132e6565b6112db565b34801561049157600080fd5b506102dd6104a03660046132e6565b611625565b3480156104b157600080fd5b506102ff6116d7565b3480156104c657600080fd5b50600754610379906001600160a01b031681565b3480156104e657600080fd5b50600454610379906001600160a01b031681565b34801561050657600080fd5b50600954610239565b34801561051b57600080fd5b506102dd61052a36600461352c565b611769565b34801561053b57600080fd5b506102dd61054a36600461355a565b611b86565b34801561055b57600080fd5b5061057e61056a3660046133b3565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610243565b3480156105a357600080fd5b506102ad6105b23660046131e4565b600d6020526000908152604090205460ff1681565b3480156105d357600080fd5b506102dd611bf0565b3480156105e857600080fd5b50600c546102ad9060ff1681565b6102dd61060436600461361c565b611c87565b6102dd610617366004613713565b611dee565b34801561062857600080fd5b50610239600a5481565b34801561063e57600080fd5b506102ad61064d36600461352c565b600060208181529281526040808220909352908152205460ff1681565b34801561067657600080fd5b5061057e61068536600461379c565b63f23a6e6160e01b9695505050505050565b3480156106a357600080fd5b506102dd6106b236600461379c565b611ede565b60006301ffc9a760e01b6001600160e01b0319831614806106e85750636cdb3d1360e11b6001600160e01b03198316145b8061070357506303a24d0760e21b6001600160e01b03198316145b8061071e575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146107725760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600c5460ff16151560010361079a57604051639619d74760e01b815260040160405180910390fd5b600b6107a68282613892565b50806040516107b59190613952565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b606060095482111561080d57604051635d68437560e11b815260040160405180910390fd5b600b610818836121ef565b6040516020016108299291906139e1565b6040516020818303038152906040529050919050565b60055460011461087e5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610769565b600260055560006108918585858561223e565b9050600061089e336123bd565b90506108ab82878361244a565b6007546001600160a01b0316156108d4576007546108d4906001600160a01b031633308461253f565b85356000908152600d602090815260408220805460ff191660011790556108fd90880188613a2e565b9050905060005b818110156109925761098a606089013561092160408b018b613a2e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109609250505060208c018c613a2e565b8581811061097057610970613a78565b905060200201602081019061098591906132e6565b6125d2565b600101610904565b50506001600555505050505050565b6004546001600160a01b031633146109ea5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b6001600160a01b038116610a405760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152606401610769565b60048190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610a8960085490565b905090565b6003546002546001600160a01b039091169060009061271090610ab19085613aa4565b610abb9190613ac3565b90509250929050565b848314610b055760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610769565b336001600160a01b0389161480610b3d57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610b7a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610769565b60008060005b87811015610d2957888882818110610b9a57610b9a613a78565b905060200201359250868682818110610bb557610bb5613a78565b90506020020135915060006001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b031681526020019081526020016000205411610c315760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610769565b60008381526001602090815260408083206001600160a01b038f168452909152902054821115610c945760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b816001600085815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008282540192505081905550816001600085815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600082825403925050819055508080600101915050610b80565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610d7d9493929190613b17565b60405180910390a46001600160a01b0389163b15610e635760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610dd19033908f908e908e908e908e908e908e90600401613b72565b6020604051808303816000875af1158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190613bd6565b6001600160e01b03191614610e5e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610769565b610ead565b6001600160a01b038916610ead5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610769565b50505050505050505050565b600554600114610ef85760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610769565b60026005556000610f0b85858585612681565b90506000610f18336123bd565b9050610f2582878361276c565b6007546001600160a01b031615610f4e57600754610f4e906001600160a01b031633308461253f565b85356000908152600d602090815260408220805460ff19166001179055610f7790880188613a2e565b915060009050610f8a6040890189613a2e565b90508214610fcb5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b8181101561100857610fff610fe360408a018a613a2e565b83818110610ff357610ff3613a78565b9050602002013561282a565b50600101610fcb565b61099261101b60a08a0160808b016132e6565b61102860208b018b613a2e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506110679250505060408c018c613a2e565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250612859915050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461118c5750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60608382146111f45760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610769565b8367ffffffffffffffff81111561120d5761120d613108565b604051908082528060200260200182016040528015611236578160200160208202803683370190505b50905060005b848110156112d2576112ad86868381811061125957611259613a78565b905060200201602081019061126e91906132e6565b85858481811061128057611280613a78565b9050602002013560009081526001602090815260408083206001600160a01b039094168352929052205490565b8282815181106112bf576112bf613a78565b602090810291909101015260010161123c565b50949350505050565b6004546001600160a01b031633146113245760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b6006546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa15801561136e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113929190613bf3565b905060008167ffffffffffffffff8111156113af576113af613108565b6040519080825280602002602001820160405280156113d8578160200160208202803683370190505b50905060008267ffffffffffffffff8111156113f6576113f6613108565b60405190808252806020026020018201604052801561141f578160200160208202803683370190505b509050600080600a5411801561143d57506001600160a01b03851615155b1561146757600a5461144f9047613c0c565b905061145d85600a546129b9565b6000600a5561146a565b50475b60005b848110156115cd57600654604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa1580156114bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e39190613c1f565b60065460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115579190613bf3565b90508186848151811061156c5761156c613a78565b6001600160a01b0390921660209283029190910190910152612710611592826064613aa4565b61159c9086613aa4565b6115a69190613ac3565b8584815181106115b8576115b8613a78565b6020908102919091010152505060010161146d565b60005b8581101561161c576116148582815181106115ed576115ed613a78565b602002602001015185838151811061160757611607613a78565b60200260200101516129b9565b6001016115d0565b50505050505050565b6004546001600160a01b0316331461166e5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b600c80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038416908102919091179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b6060600b80546116e690613818565b80601f016020809104026020016040519081016040528092919081815260200182805461171290613818565b801561175f5780601f106117345761010080835404028352916020019161175f565b820191906000526020600020905b81548152906001019060200180831161174257829003601f168201915b5050505050905090565b6004546001600160a01b031633146117b25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b6006546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa1580156117fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118209190613bf3565b905060008167ffffffffffffffff81111561183d5761183d613108565b604051908082528060200260200182016040528015611866578160200160208202803683370190505b50905060008267ffffffffffffffff81111561188457611884613108565b6040519080825280602002602001820160405280156118ad578160200160208202803683370190505b509050600080600a541180156118cb57506001600160a01b03851615155b1561195e57600a546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193b9190613bf3565b6119459190613c0c565b90506119548686600a54612a19565b6000600a556119c9565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190613bf3565b90505b60005b84811015611b2c57600654604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a429190613c1f565b60065460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015611a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab69190613bf3565b905081868481518110611acb57611acb613a78565b6001600160a01b0390921660209283029190910190910152612710611af1826064613aa4565b611afb9086613aa4565b611b059190613ac3565b858481518110611b1757611b17613a78565b602090810291909101015250506001016119cc565b60005b85811015611b7c57611b7488868381518110611b4d57611b4d613a78565b6020026020010151868481518110611b6757611b67613a78565b6020026020010151612a19565b600101611b2f565b5050505050505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b03163314611c395760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b600c805460ff19166001179055604051611c5590600b90613c3c565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b6004546001600160a01b03163314611cd05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b611cdb816001612a9f565b825182516000919081148015611cf15750855181145b611d2e5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b80821015611dc457611d63848381518110611d4b57611d4b613a78565b60200260200101516008612b3790919063ffffffff16565b611db9868381518110611d7857611d78613a78565b6020026020010151868481518110611d9257611d92613a78565b6020026020010151868581518110611dac57611dac613a78565b6020026020010151612b51565b816001019150611d2e565b80821015611de6576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b505050505050565b6004546001600160a01b03163314611e375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610769565b611e42816001612a9f565b82518251600091908114611e895760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b80821015611eb157611ea6848381518110611d4b57611d4b613a78565b816001019150611e89565b80821015611ed3576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b611de6868686612c39565b336001600160a01b0387161480611f1657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b611f535760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610769565b60008481526001602090815260408083206001600160a01b038a168452909152902054611faf5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610769565b60008481526001602090815260408083206001600160a01b038a1684529091529020548311156120125760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b60008481526001602090815260408083206001600160a01b038916845290915281208054859290612044908490613c48565b909155505060008481526001602090815260408083206001600160a01b038a1684529091528120805485929061207b908490613c0c565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156121a55760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906121139033908b908a908a908a908a90600401613c5b565b6020604051808303816000875af1158015612132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121569190613bd6565b6001600160e01b031916146121a05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610769565b611de6565b6001600160a01b038516611de65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610769565b604080516080810191829052607f0190826030600a8206018353600a90045b801561222c57600183039250600a81066030018353600a900461220e565b50819003601f19909101908152919050565b6000600161224a6110ac565b7f7562780e3e1258910f178c30fecd6ae3b924da6aa34235bd88bd8bb8276c7c69873561227a60208a018a613a2e565b60405160200161228b929190613ca0565b604051602081830303815290604052805190602001208980604001906122b19190613a2e565b6040516020016122c2929190613ce2565b60408051601f1981840301815282825280516020918201209083019590955281019290925260608083019190915260808083019390935289013560a08201529088013560c082015260e0015b6040516020818303038152906040528051906020012060405160200161234b92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156123a9573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6007546000906001600160a01b03166123d6573461071e565b600754604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190613bf3565b600c546001600160a01b03848116610100909204161461247d57604051632057875960e21b815260040160405180910390fd5b81356000908152600d602052604090205460ff16156124af5760405163e647f41360e01b815260040160405180910390fd5b60006124c16340d097c360e01b612de1565b90508181118061250457506124d96020840184613a2e565b90506124ed60608501356080860135613aa4565b6124f79190613aa4565b6125018284613c0c565b14155b156125225760405163f7760f2560e01b815260040160405180910390fd5b80600a60008282546125349190613c48565b909155505050505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806125cb5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610769565b5050505050565b828251146126135760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b60005b8381101561267b576126738261264485848151811061263757612637613a78565b602002602001015161282a565b85848151811061265657612656613a78565b602002602001015160405180602001604052806000815250612e85565b600101612616565b50505050565b6000600161268d6110ac565b7f88eeb939a1fadf971504119ae8f94096bc598ebe36aaeb4f3aeaecc88ed4353887356126bd60208a018a613a2e565b6040516020016126ce929190613ce2565b604051602081830303815290604052805190602001208980604001906126f49190613a2e565b604051602001612705929190613ce2565b60408051601f19818403018152919052805160209091012060608b013561273260a08d0160808e016132e6565b6040805160208101979097528601949094526060850192909252608084015260a08301526001600160a01b031660c082015260e00161230e565b600c546001600160a01b03848116610100909204161461279f57604051632057875960e21b815260040160405180910390fd5b81356000908152600d602052604090205460ff16156127d15760405163e647f41360e01b815260040160405180910390fd5b60006127e36340d097c360e01b612de1565b90506127f26020840184613a2e565b61280191506060850135613aa4565b61280b9082613c48565b82146125225760405163f7760f2560e01b815260040160405180910390fd5b60006128396008838154019055565b816009600082825461284b9190613c48565b909155505060095492915050565b82516000805b828110156128cf5785818151811061287957612879613a78565b6020026020010151915084818151811061289557612895613a78565b6020908102919091018101516000848152600180845260408083206001600160a01b038d168452909452929020805490910190550161285f565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8888604051612920929190613d0b565b60405180910390a46001600160a01b0386163b1561296f5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c81906121139033906000908b908b908b90600401613d39565b6001600160a01b038616611de65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610769565b600080600080600085875af1905080612a145760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610769565b505050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061267b5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610769565b6000612aaa836123bd565b9050336001600160a01b0384161480612acc57506007546001600160a01b0316155b15612a14578160ff16600003612af257612aed6340d097c360e01b82613028565b612b0e565b8160ff16600103612b0e57612b0e63044df8e760e41b82613028565b6007546001600160a01b031615612a1457600754612a14906001600160a01b031684308461253f565b815480612b4c5763ce3a3d376000526004601cfd5b039055565b60008281526001602090815260408083206001600160a01b0387168452909152902054811115612bb45760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610769565b60008281526001602090815260408083206001600160a01b038716845290915281208054839290612be6908490613c0c565b909155505060408051838152600160208201526000916001600160a01b0386169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6001600160a01b038316612c8f5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610769565b81516000805b82811015612d8157848181518110612caf57612caf613a78565b60200260200101519150838181518110612ccb57612ccb613a78565b60209081029190910181015160008481526001835260408082206001600160a01b038b16835290935291909120541015612d345760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610769565b838181518110612d4657612d46613a78565b6020908102919091018101516000848152600180845260408083206001600160a01b038c168452909452929020805491909103905501612c95565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612dd2929190613d0b565b60405180910390a45050505050565b6004546000906001600160a01b0316803b63ffffffff811615612e7a5760048054604051633b7279e960e21b81526001600160e01b03198716928101929092526001600160a01b03169063edc9e7a490602401602060405180830381865afa158015612e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e759190613bf3565b612e7d565b60005b949350505050565b60008381526001602090815260408083206001600160a01b038816845290915281208054849290612eb7908490613c48565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15612fde5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190612f4c903390600090899089908990600401613d8b565b6020604051808303816000875af1158015612f6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f8f9190613bd6565b6001600160e01b03191614612fd95760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610769565b61267b565b6001600160a01b03841661267b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610769565b600061303383612de1565b9050808214612a145763f7760f256000526004601cfd5b6001600160a01b038116811461305f57600080fd5b50565b803561306d8161304a565b919050565b6000806040838503121561308557600080fd5b8235915060208301356130978161304a565b809150509250929050565b600080604083850312156130b557600080fd5b82356130c08161304a565b946020939093013593505050565b6001600160e01b03198116811461305f57600080fd5b6000602082840312156130f657600080fd5b8135613101816130ce565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561314757613147613108565b604052919050565b6000602080838503121561316257600080fd5b823567ffffffffffffffff8082111561317a57600080fd5b818501915085601f83011261318e57600080fd5b8135818111156131a0576131a0613108565b6131b2601f8201601f1916850161311e565b915080825286848285010111156131c857600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156131f657600080fd5b5035919050565b60005b83811015613218578181015183820152602001613200565b50506000910152565b600081518084526132398160208601602086016131fd565b601f01601f19169290920160200192915050565b6020815260006131016020830184613221565b600060a0828403121561327257600080fd5b50919050565b803560ff8116811461306d57600080fd5b6000806000806080858703121561329f57600080fd5b843567ffffffffffffffff8111156132b657600080fd5b6132c287828801613260565b9450506132d160208601613278565b93969395505050506040820135916060013590565b6000602082840312156132f857600080fd5b81356131018161304a565b6000806040838503121561331657600080fd5b50508035926020909101359150565b60008083601f84011261333757600080fd5b50813567ffffffffffffffff81111561334f57600080fd5b6020830191508360208260051b850101111561336a57600080fd5b9250929050565b60008083601f84011261338357600080fd5b50813567ffffffffffffffff81111561339b57600080fd5b60208301915083602082850101111561336a57600080fd5b60008060008060008060008060a0898b0312156133cf57600080fd5b88356133da8161304a565b975060208901356133ea8161304a565b9650604089013567ffffffffffffffff8082111561340757600080fd5b6134138c838d01613325565b909850965060608b013591508082111561342c57600080fd5b6134388c838d01613325565b909650945060808b013591508082111561345157600080fd5b5061345e8b828c01613371565b999c989b5096995094979396929594505050565b6000806000806040858703121561348857600080fd5b843567ffffffffffffffff808211156134a057600080fd5b6134ac88838901613325565b909650945060208701359150808211156134c557600080fd5b506134d287828801613325565b95989497509550505050565b600081518084526020808501945080840160005b8381101561350e578151875295820195908201906001016134f2565b509495945050505050565b60208152600061310160208301846134de565b6000806040838503121561353f57600080fd5b823561354a8161304a565b915060208301356130978161304a565b6000806040838503121561356d57600080fd5b82356135788161304a565b91506020830135801515811461309757600080fd5b600067ffffffffffffffff8211156135a7576135a7613108565b5060051b60200190565b600082601f8301126135c257600080fd5b813560206135d76135d28361358d565b61311e565b82815260059290921b840181019181810190868411156135f657600080fd5b8286015b8481101561361157803583529183019183016135fa565b509695505050505050565b6000806000806080858703121561363257600080fd5b843567ffffffffffffffff8082111561364a57600080fd5b818701915087601f83011261365e57600080fd5b8135602061366e6135d28361358d565b82815260059290921b8401810191818101908b84111561368d57600080fd5b948201945b838610156136b45785356136a58161304a565b82529482019490820190613692565b985050880135925050808211156136ca57600080fd5b6136d6888389016135b1565b945060408701359150808211156136ec57600080fd5b506136f9878288016135b1565b92505061370860608601613062565b905092959194509250565b6000806000806080858703121561372957600080fd5b84356137348161304a565b9350602085013567ffffffffffffffff8082111561375157600080fd5b61375d888389016135b1565b9450604087013591508082111561377357600080fd5b50613780878288016135b1565b92505060608501356137918161304a565b939692955090935050565b60008060008060008060a087890312156137b557600080fd5b86356137c08161304a565b955060208701356137d08161304a565b94506040870135935060608701359250608087013567ffffffffffffffff8111156137fa57600080fd5b61380689828a01613371565b979a9699509497509295939492505050565b600181811c9082168061382c57607f821691505b60208210810361327257634e487b7160e01b600052602260045260246000fd5b601f821115612a1457600081815260208120601f850160051c810160208610156138735750805b601f850160051c820191505b81811015611de65782815560010161387f565b815167ffffffffffffffff8111156138ac576138ac613108565b6138c0816138ba8454613818565b8461384c565b602080601f8311600181146138f557600084156138dd5750858301515b600019600386901b1c1916600185901b178555611de6565b600085815260208120601f198616915b8281101561392457888601518255948401946001909101908401613905565b50858210156139425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516139648184602087016131fd565b9190910192915050565b6000815461397b81613818565b6001828116801561399357600181146139a8576139d7565b60ff19841687528215158302870194506139d7565b8560005260208060002060005b858110156139ce5781548a8201529084019082016139b5565b50505082870194505b5050505092915050565b60006139ed828561396e565b83516139fd8183602088016131fd565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101908152600501949350505050565b6000808335601e19843603018112613a4557600080fd5b83018035915067ffffffffffffffff821115613a6057600080fd5b6020019150600581901b360382131561336a57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613abe57613abe613a8e565b500290565b600082613ae057634e487b7160e01b600052601260045260246000fd5b500490565b81835260006001600160fb1b03831115613afe57600080fd5b8260051b80836020870137939093016020019392505050565b604081526000613b2b604083018688613ae5565b8281036020840152613b3e818587613ae5565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352808a1660208401525060a06040830152613b9f60a08301888a613ae5565b8281036060840152613bb2818789613ae5565b90508281036080840152613bc7818587613b49565b9b9a5050505050505050505050565b600060208284031215613be857600080fd5b8151613101816130ce565b600060208284031215613c0557600080fd5b5051919050565b8181038181111561071e5761071e613a8e565b600060208284031215613c3157600080fd5b81516131018161304a565b6000613101828461396e565b8082018082111561071e5761071e613a8e565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152613c9460a083018486613b49565b98975050505050505050565b60008184825b85811015613cd7578135613cb98161304a565b6001600160a01b031683526020928301929190910190600101613ca6565b509095945050505050565b60006001600160fb1b03831115613cf857600080fd5b8260051b80858437919091019392505050565b604081526000613d1e60408301856134de565b8281036020840152613d3081856134de565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152613d6560a08301866134de565b8281036060840152613d7781866134de565b90508281036080840152613c948185613221565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152613b3e60a083018461322156fea164736f6c6343000810000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
