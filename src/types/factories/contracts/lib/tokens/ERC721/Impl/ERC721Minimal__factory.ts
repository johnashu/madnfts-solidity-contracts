/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721Minimal,
  ERC721MinimalInterface,
} from "../../../../../../contracts/lib/tokens/ERC721/Impl/ERC721Minimal";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "__tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b50604051620027c0380380620027c083398101604081905262000039916200026e565b81888860006200004a8382620003e3565b506001620000598282620003e3565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600d620000b68782620003e3565b50600c859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b0386166006819055600780548416909417909355600b8054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050505050620004af565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019c57600080fd5b81516001600160401b0380821115620001b957620001b962000174565b604051601f8301601f19908116603f01168101908282118183101715620001e457620001e462000174565b816040528381526020925086838588010111156200020157600080fd5b600091505b8382101562000225578582018301518183018401529082019062000206565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025157600080fd5b919050565b80516001600160601b03811681146200025157600080fd5b600080600080600080600080610100898b0312156200028c57600080fd5b88516001600160401b0380821115620002a457600080fd5b620002b28c838d016200018a565b995060208b0151915080821115620002c957600080fd5b620002d78c838d016200018a565b985060408b0151915080821115620002ee57600080fd5b50620002fd8b828c016200018a565b965050606089015194506200031560808a0162000239565b93506200032560a08a0162000256565b92506200033560c08a0162000239565b91506200034560e08a0162000239565b90509295985092959890939650565b600181811c908216806200036957607f821691505b6020821081036200038a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003de57600081815260208120601f850160051c81016020861015620003b95750805b601f850160051c820191505b81811015620003da57828155600101620003c5565b5050505b505050565b81516001600160401b03811115620003ff57620003ff62000174565b620004178162000410845462000354565b8462000390565b602080601f8311600181146200044f5760008415620004365750858301515b600019600386901b1c1916600185901b178555620003da565b600085815260208120601f198616915b8281101562000480578886015182559484019460019091019084016200045f565b50858210156200049f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61230180620004bf6000396000f3fe6080604052600436106101b75760003560e01c806370a08231116100ec578063a035b1fe1161008a578063c87b56dd11610064578063c87b56dd1461051a578063e1c38ed91461053a578063e59aee0c14610550578063e985e9c51461056357600080fd5b8063a035b1fe146104c4578063a22cb465146104da578063b88d4fde146104fa57600080fd5b806389afcb44116100c657806389afcb441461045c5780638da5cb5b1461046f5780639456fbcc1461048f57806395d89b41146104af57600080fd5b806370a08231146103ee578063785e9e861461041c578063879fbedf1461043c57600080fd5b806323b872dd116101595780633cd8045e116101335780633cd8045e1461036e57806342842e0e1461038e57806351cff8d9146103ae5780636352211e146103ce57600080fd5b806323b872dd1461030757806326092b83146103275780632a55205a1461032f57600080fd5b8063095ea7b311610195578063095ea7b31461026157806313af403514610283578063150b7a02146102a357806322ab47a1146102e857600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004611eef565b61059e565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b5061020661060b565b6040516101e89190611f13565b34801561021f57600080fd5b5061024961022e366004611f61565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b34801561026d57600080fd5b5061028161027c366004611f8f565b610699565b005b34801561028f57600080fd5b5061028161029e366004611fbb565b610780565b3480156102af57600080fd5b506102cf6102be366004611fd8565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101e8565b3480156102f457600080fd5b50600e546101dc90610100900460ff1681565b34801561031357600080fd5b50610281610322366004612077565b61085d565b610281610a43565b34801561033b57600080fd5b5061034f61034a3660046120b8565b610b7b565b604080516001600160a01b0390931683526020830191909152016101e8565b34801561037a57600080fd5b50600a54610249906001600160a01b031681565b34801561039a57600080fd5b506102816103a9366004612077565b610bb1565b3480156103ba57600080fd5b506102816103c9366004611fbb565b610ca9565b3480156103da57600080fd5b506102496103e9366004611f61565b610ff3565b3480156103fa57600080fd5b5061040e610409366004611fbb565b61104a565b6040519081526020016101e8565b34801561042857600080fd5b50600b54610249906001600160a01b031681565b34801561044857600080fd5b506102816104573660046120ea565b6110be565b61028161046a366004611fbb565b61114c565b34801561047b57600080fd5b50600854610249906001600160a01b031681565b34801561049b57600080fd5b506102816104aa366004612105565b6111ad565b3480156104bb57600080fd5b506102066115ca565b3480156104d057600080fd5b5061040e600c5481565b3480156104e657600080fd5b506102816104f536600461213e565b6115d7565b34801561050657600080fd5b50610281610515366004611fd8565b611643565b34801561052657600080fd5b50610206610535366004611f61565b61172b565b34801561054657600080fd5b5061040e600f5481565b61028161055e366004612105565b611803565b34801561056f57600080fd5b506101dc61057e366004612105565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806105cf57506380ac58cd60e01b6001600160e01b03198316145b806105ea5750635b5e139f60e01b6001600160e01b03198316145b80610605575063152a902d60e11b6001600160e01b03198316145b92915050565b600080546106189061216a565b80601f01602080910402602001604051908101604052809291908181526020018280546106449061216a565b80156106915780601f1061066657610100808354040283529160200191610691565b820191906000526020600020905b81548152906001019060200180831161067457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806106e257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6107245760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146107c95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b6001600160a01b03811661081f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e657200000000000000000000000000000000000000604482015260640161071b565b60088190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000818152600260205260409020546001600160a01b038481169116146108c65760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161071b565b6001600160a01b03821661091c5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161071b565b336001600160a01b038416148061095657506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061097757506000818152600460205260409020546001600160a01b031633145b6109b45760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161071b565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600954600114610a955760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e435900000000000000000000000000000000000000000000604482015260640161071b565b6002600955600e54610100900460ff16610ac25760405163287588a160e11b815260040160405180910390fd5b6000610acd3361189a565b90506000610ae16340d097c360e01b611927565b905080600c54610af191906121ba565b8214610b105760405163f7760f2560e01b815260040160405180910390fd5b600e5460ff1615610b3457604051631bbdf5c560e31b815260040160405180910390fd5b610b3f3360026119ca565b600e805460ff19166001179055600f8054829190600090610b619084906121ba565b90915550610b729050336001611a62565b50506001600955565b6007546006546001600160a01b039091169060009061271090610b9e90856121cd565b610ba891906121ec565b90509250929050565b610bbc83838361085d565b6001600160a01b0382163b1580610c655750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c59919061220e565b6001600160e01b031916145b610ca45760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b505050565b6008546001600160a01b03163314610cf25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d60919061222b565b905060008167ffffffffffffffff811115610d7d57610d7d612244565b604051908082528060200260200182016040528015610da6578160200160208202803683370190505b50905060008267ffffffffffffffff811115610dc457610dc4612244565b604051908082528060200260200182016040528015610ded578160200160208202803683370190505b509050600080600f54118015610e0b57506001600160a01b03851615155b15610e3557600f54610e1d904761225a565b9050610e2b85600f54611b51565b6000600f55610e38565b50475b60005b84811015610f9b57600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb1919061226d565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f25919061222b565b905081868481518110610f3a57610f3a61228a565b6001600160a01b0390921660209283029190910190910152612710610f608260646121cd565b610f6a90866121cd565b610f7491906121ec565b858481518110610f8657610f8661228a565b60209081029190910101525050600101610e3b565b60005b85811015610fea57610fe2858281518110610fbb57610fbb61228a565b6020026020010151858381518110610fd557610fd561228a565b6020026020010151611b51565b600101610f9e565b50505050505050565b6000818152600260205260409020546001600160a01b0316806110455760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161071b565b919050565b60006001600160a01b0382166110a25760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161071b565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146111075760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600e805461ff001916610100831515908102919091179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b031633146111955760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b6111a08160016119ca565b6111aa6001611bac565b50565b6008546001600160a01b031633146111f65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611240573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611264919061222b565b905060008167ffffffffffffffff81111561128157611281612244565b6040519080825280602002602001820160405280156112aa578160200160208202803683370190505b50905060008267ffffffffffffffff8111156112c8576112c8612244565b6040519080825280602002602001820160405280156112f1578160200160208202803683370190505b509050600080600f5411801561130f57506001600160a01b03851615155b156113a257600f546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561135b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137f919061222b565b611389919061225a565b90506113988686600f54611c79565b6000600f5561140d565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156113e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140a919061222b565b90505b60005b8481101561157057600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611462573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611486919061226d565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156114d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fa919061222b565b90508186848151811061150f5761150f61228a565b6001600160a01b03909216602092830291909101909101526127106115358260646121cd565b61153f90866121cd565b61154991906121ec565b85848151811061155b5761155b61228a565b60209081029190910101525050600101611410565b60005b858110156115c0576115b8888683815181106115915761159161228a565b60200260200101518684815181106115ab576115ab61228a565b6020026020010151611c79565b600101611573565b5050505050505050565b600180546106189061216a565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61164e85858561085d565b6001600160a01b0384163b15806116e55750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906116969033908a908990899089906004016122a0565b6020604051808303816000875af11580156116b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d9919061220e565b6001600160e01b031916145b6117245760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b5050505050565b60608160011461174e57604051631bf4348160e31b815260040160405180910390fd5b600e5460ff1661177157604051634d5e5fb360e01b815260040160405180910390fd5b600d805461177e9061216a565b80601f01602080910402602001604051908101604052809291908181526020018280546117aa9061216a565b80156117f75780601f106117cc576101008083540402835291602001916117f7565b820191906000526020600020905b8154815290600101906020018083116117da57829003601f168201915b50505050509050919050565b6008546001600160a01b0316331461184c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161071b565b600e5460ff161561187057604051631bbdf5c560e31b815260040160405180910390fd5b61187b8160006119ca565b600e805460ff19166001908117909155611896908390611a62565b5050565b600b546000906001600160a01b03166118b35734610605565b600b54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015611903573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610605919061222b565b6008546000906001600160a01b0316803b63ffffffff8116156119bf57600854604051633b7279e960e21b81526001600160e01b0319861660048201526001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ba919061222b565b6119c2565b60005b949350505050565b60006119d58361189a565b9050336001600160a01b03841614806119f75750600b546001600160a01b0316155b15610ca4578160ff16600003611a1d57611a186340d097c360e01b82611d05565b611a39565b8160ff16600103611a3957611a3963044df8e760e41b82611d05565b600b546001600160a01b031615610ca457600b54610ca4906001600160a01b0316843084611d27565b611a6c8282611db3565b6001600160a01b0382163b1580611b125750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b06919061220e565b6001600160e01b031916145b6118965760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161071b565b600080600080600085875af1905080610ca45760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161071b565b6000818152600260205260409020546001600160a01b031680611bfe5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161071b565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611cff5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161071b565b50505050565b6000611d1083611927565b9050808214610ca45763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806117245760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015260640161071b565b6001600160a01b038216611e095760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161071b565b6000818152600260205260409020546001600160a01b031615611e6e5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161071b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146111aa57600080fd5b600060208284031215611f0157600080fd5b8135611f0c81611ed9565b9392505050565b600060208083528351808285015260005b81811015611f4057858101830151858201604001528201611f24565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215611f7357600080fd5b5035919050565b6001600160a01b03811681146111aa57600080fd5b60008060408385031215611fa257600080fd5b8235611fad81611f7a565b946020939093013593505050565b600060208284031215611fcd57600080fd5b8135611f0c81611f7a565b600080600080600060808688031215611ff057600080fd5b8535611ffb81611f7a565b9450602086013561200b81611f7a565b935060408601359250606086013567ffffffffffffffff8082111561202f57600080fd5b818801915088601f83011261204357600080fd5b81358181111561205257600080fd5b89602082850101111561206457600080fd5b9699959850939650602001949392505050565b60008060006060848603121561208c57600080fd5b833561209781611f7a565b925060208401356120a781611f7a565b929592945050506040919091013590565b600080604083850312156120cb57600080fd5b50508035926020909101359150565b8035801515811461104557600080fd5b6000602082840312156120fc57600080fd5b611f0c826120da565b6000806040838503121561211857600080fd5b823561212381611f7a565b9150602083013561213381611f7a565b809150509250929050565b6000806040838503121561215157600080fd5b823561215c81611f7a565b9150610ba8602084016120da565b600181811c9082168061217e57607f821691505b60208210810361219e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610605576106056121a4565b60008160001904831182151516156121e7576121e76121a4565b500290565b60008261220957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561222057600080fd5b8151611f0c81611ed9565b60006020828403121561223d57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b81810381811115610605576106056121a4565b60006020828403121561227f57600080fd5b8151611f0c81611f7a565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea164736f6c6343000810000a";

type ERC721MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Minimal__factory extends ContractFactory {
  constructor(...args: ERC721MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Minimal> {
    return super.deploy(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Minimal>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    __tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      __tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Minimal {
    return super.attach(address) as ERC721Minimal;
  }
  override connect(signer: Signer): ERC721Minimal__factory {
    return super.connect(signer) as ERC721Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MinimalInterface {
    return new utils.Interface(_abi) as ERC721MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC721Minimal;
  }
}
