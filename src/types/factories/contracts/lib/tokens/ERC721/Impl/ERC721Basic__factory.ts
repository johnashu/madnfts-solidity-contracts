/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../../contracts/lib/tokens/ERC721/Impl/ERC721Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200059557620029ba803803806200001d816200059a565b92833981019061012081830312620005955780516001600160401b03929083811162000595578162000051918401620005c0565b906020808401518581116200059557826200006e918601620005c0565b9160408501519086821162000595576200008a918601620005c0565b93606081015160808201519060a08301519560018060a01b0394858816809803620005955760c08501516001600160601b03811699908a9003620005955760e0860151958787168097036200059557610100015196871680970362000595578251918b83116200057f576000988954936001958686811c9616801562000574575b848710146200047b578190601f968781116200051e575b5084908d888411600114620004ba5792620004ae575b5050600019600383901b1c191690861b178a555b8051908d82116200049a5785548681811c911680156200048f575b848210146200047b5790818684931162000428575b508390868311600114620003c4578c92620003b8575b5050600019600383901b1c191690851b1784555b600880546001600160a01b0319908116891790915596897f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a38360095581519b8c11620003a457600f548481811c9116801562000399575b82821014620003855780848e92116200033a575b505080928c11600114620002bf575099809281926000805160206200299a8339815191529a9b9c8a94620002b3575b50501b916000199060031b1c191617600f555b6011556012558481600a541617600a558560065584816007541617600755600b541617600b55604051937fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c8280a280a26123679081620006338239f35b01519250388062000243565b909a91601f1983169b600f8a528c838b20938b915b821062000321575050836000805160206200299a8339815191529b9c9d1062000307575b505050811b01600f5562000256565b015160001960f88460031b161c19169055388080620002f8565b8284015185559386019392830192908101908e620002d4565b600f8b5284838c20918482850160051c840194106200037b575b0160051c019085905b8281106200036f57508d915062000214565b8b81550185906200035d565b9250819262000354565b634e487b7160e01b8a52602260045260248afd5b90607f169062000200565b634e487b7160e01b89526041600452602489fd5b01519050388062000192565b878d52848d208894509190601f1984168e5b87828210620004115750508411620003f7575b505050811b018455620001a6565b015160001960f88460031b161c19169055388080620003e9565b8385015186558b97909501949384019301620003d6565b909150868c52838c208680850160051c82019286861062000471575b918991869594930160051c01915b828110620004625750506200017c565b8e815585945089910162000452565b9250819262000444565b634e487b7160e01b8c52602260045260248cfd5b90607f169062000167565b634e487b7160e01b8b52604160045260248bfd5b01519050388062000138565b9190899450601f198416838052878420935b88828210620005075750508411620004ed575b505050811b018a556200014c565b015160001960f88460031b161c19169055388080620004df565b8385015186558c97909501949384019301620004cc565b9091508c8052848d208780850160051c8201928786106200056a575b859493910160051c9091019089908f5b8382106200055b5750505062000122565b81558594508a91018f6200054a565b925081926200053a565b95607f16956200010b565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200057f57604052565b919080601f84011215620005955782516001600160401b0381116200057f57602090620005f6601f8201601f191683016200059a565b92818452828287010111620005955760005b8181106200061e57508260009394955001015290565b85810183015184820184015282016200060856fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461024757806306fdde0314610242578063081812fc1461023d578063095ea7b31461023857806313af403514610233578063150b7a021461022e57806318160ddd1461022957806322ab47a11461022457806323b872dd1461021f5780632a55205a1461021a578063362c0cb5146102155780633cd8045e1461021057806342842e0e1461020b578063438b1b4b146102065780634edd2d491461020157806351cff8d9146101fc57806355f804b3146101f75780636352211e146101f257806366c879a9146101ed57806370a08231146101e8578063714c5398146101e3578063785e9e86146101de578063879fbedf146101d95780638da5cb5b146101d45780638fc3b549146101cf5780639456fbcc146101ca57806395d89b41146101c5578063a035b1fe146101c0578063a0712d68146101bb578063a22cb465146101b6578063b88d4fde146101b1578063c87b56dd146101ac578063d5abeb01146101a7578063e1c38ed9146101a25763e985e9c51461019d57600080fd5b6116ce565b6116b0565b611692565b6115d4565b6114fb565b611469565b61133e565b611320565b61127b565b610fb9565b610f9b565b610f72565b610f09565b610ee0565b610e4b565b610dc9565b610d5e565b610d1f565b610ca3565b610a1c565b6109f9565b61094a565b610874565b61084b565b6107be565b61076a565b610751565b610702565b6106e4565b6106c0565b6105ba565b6104e6565b610492565b6103af565b610263565b6001600160e01b031981160361025e57565b600080fd5b3461025e57602036600319011261025e5760206004356102828161024c565b63ffffffff60e01b166301ffc9a760e01b81149081156102d8575b81156102c7575b81156102b6575b506040519015158152f35b63152a902d60e11b149050386102ab565b635b5e139f60e01b811491506102a4565b6380ac58cd60e01b8114915061029d565b90600182811c92168015610319575b602083101461030357565b634e487b7160e01b600052602260045260246000fd5b91607f16916102f8565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761035b57604052565b610323565b60005b8381106103735750506000910152565b8181015183820152602001610363565b604091602082526103a38151809281602086015260208686019101610360565b601f01601f1916010190565b3461025e5760008060031936011261048f57604051908080546103d1816102e9565b80855291600191808316908115610465575060011461040b575b610407856103fb81870382610339565b60405191829182610383565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061044d5750505081016020016103fb826104076103eb565b80546020858701810191909152909301928101610432565b869550610407969350602092506103fb94915060ff191682840152151560051b82010192936103eb565b80fd5b3461025e57602036600319011261025e576004356000526004602052602060018060a01b0360406000205416604051908152f35b6001600160a01b0381160361025e57565b602435906104e4826104c6565b565b3461025e57604036600319011261025e57600435610503816104c6565b60243560008181526002602052604081205490926001600160a01b0391821691903383148015610597575b610537906117aa565b61056e8161054f866000526004602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b16907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b50828552600560209081526040808720336000908152925290205460ff1661052e565b3461025e57602036600319011261025e576004356105d7816104c6565b6008546001600160a01b03906105f09082163314611736565b811690811561062457600855337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b608060031982011261025e57600435610671816104c6565b9160243561067e816104c6565b916044359160643567ffffffffffffffff9283821161025e578060238301121561025e57816004013593841161025e576024848301011161025e576024019190565b3461025e576106ce36610659565b50505050506020604051630a85bd0160e11b8152f35b3461025e57600036600319011261025e576020600c54604051908152f35b3461025e57600036600319011261025e57602060ff601354166040519015158152f35b606090600319011261025e5760043561073d816104c6565b9060243561074a816104c6565b9060443590565b3461025e5761076861076236610725565b91611827565b005b3461025e57604036600319011261025e57604060018060a01b0360075416612710610799600654602435611f88565b0482519182526020820152f35b67ffffffffffffffff811161035b5760051b60200190565b604036600319011261025e5760043567ffffffffffffffff811161025e573660238201121561025e578060040135906107f6826107a6565b906108046040519283610339565b82825260209260248484019160051b8301019136831161025e57602401905b82821061083c57610768846108366104d7565b90611df4565b81358152908401908401610823565b3461025e57600036600319011261025e57600a546040516001600160a01b039091168152602090f35b3461025e5761088236610725565b909161088f828483611827565b823b159283156108a3575b610768846119f4565b604051630a85bd0160e11b8082523360048301526001600160a01b039384166024830152604482019490945260806064820152600060848201819052909450602092859260a49284929091165af180156109455761076892600091610917575b506001600160e01b0319161490388061089a565b610938915060203d811161093e575b6109308183610339565b8101906119d0565b38610903565b503d610926565b6119e8565b606036600319011261025e57600435610962816104c6565b60243590604435610972816104c6565b61098760018060a01b03600854163314611736565b600d548381018091116109f457601254106109e2576109a590611f9b565b6000905b8282106109c65750106109b857005b63dfb035c96000526004601cfd5b906001906109db6109d56120f6565b84611c96565b01906109a9565b60405163d05cb60960e01b8152600490fd5b611c80565b3461025e57600036600319011261025e57602060ff601054166040519015158152f35b3461025e5760208060031936011261025e5760048035610a3b816104c6565b6008546001600160a01b03938391610a569086163314611736565b600a54610a73906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa94851561094557600095610c84575b50610aa385611f1e565b93610aad86611f1e565b96600e549081151580610c79575b15610c6e5790610ad691610acf8247611f50565b94166121d9565b610ae06000600e55565b600a5460009390610af9906001600160a01b0316610a67565b935b878110610b485788888860005b828110610b1157005b80610b42610b31610b2460019486611ee5565b516001600160a01b031690565b610b3b8388611ee5565b51906121d9565b01610b08565b825190631419245f60e11b8252828280610b69848b83019190602083019252565b0381895afa91821561094557600092610c3f575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561094557610be98a610bef9260019686610bf796600093610c08575b50610bd590610be49394611ee5565b6001600160a01b039091169052565b611f72565b87611f88565b612710900490565b610c01828c611ee5565b5201610afb565b610be4935090610c30610bd5928c8d3d10610c38575b610c288183610339565b810190611f0f565b935090610bc6565b503d610c1e565b610c60919250833d8511610c67575b610c588183610339565b810190611f5d565b9038610b7d565b503d610c4e565b505090504790610ae0565b508084161515610abb565b610c9c919550823d8411610c3857610c288183610339565b9338610a99565b3461025e57602036600319011261025e5760043567ffffffffffffffff80821161025e573660238301121561025e57816004013590811161035b5760405190610cf6601f8201601f191660200183610339565b808252366024828501011161025e57602081600092602461076896018386013783010152611a33565b3461025e57602036600319011261025e576004356000526002602052602060018060a01b0360406000205416610d56811515611771565b604051908152f35b3461025e5760008060031936011261048f57610d8560018060a01b03600854163314611736565b600160ff19601054161760105560405180610d9f81611c03565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b3461025e57602036600319011261025e57600435610de6816104c6565b6001600160a01b03168015610e17576000526003602052610407604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b3461025e5760008060031936011261048f576040519080600f54610e6e816102e9565b808552916001918083169081156104655750600114610e9757610407856103fb81870382610339565b9250600f83526000805160206123128339815191525b828410610ec85750505081016020016103fb826104076103eb565b80546020858701810191909152909301928101610ead565b3461025e57600036600319011261025e57600b546040516001600160a01b039091168152602090f35b3461025e57602036600319011261025e5760043580151580910361025e57610f3c60018060a01b03600854163314611736565b60ff196013541660ff8216176013557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b3461025e57600036600319011261025e576008546040516001600160a01b039091168152602090f35b3461025e57600036600319011261025e576020600d54604051908152f35b3461025e5760408060031936011261025e57600490813590610fda826104c6565b60243591610fe7836104c6565b6008546001600160a01b0394906110019086163314611736565b600a54611016906001600160a01b0316610a67565b835194859163e919ecad60e01b8352828460209485935afa9586156109455760009661125c575b5061104786611f1e565b9461105187611f1e565b976000600e549081151580611251575b156111f4575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa801561094557816110ab916110b2946000916111d7575b50611f50565b93876122a0565b6110bc6000600e55565b600a54600093906110d5906001600160a01b0316610a67565b935b88811061111b5750505050505060005b8381106110f057005b80611115611103610b2460019487611ee5565b61110d8389611ee5565b5190856122a0565b016110e7565b825190631419245f60e11b825282828061113c848b83019190602083019252565b0381895afa918215610945576000926111b8575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561094557610be98b610bef92600196866111a796600093610c085750610bd590610be49394611ee5565b6111b1828d611ee5565b52016110d7565b6111d0919250833d8511610c6757610c588183610339565b9038611150565b6111ee9150883d8a11610c3857610c288183610339565b386110a5565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa9182156109455791611234575b50906110bc565b61124b9150833d8511610c3857610c288183610339565b3861122d565b508285161515611061565b611274919650823d8411610c3857610c288183610339565b943861103d565b3461025e5760008060031936011261048f57604051908060018054916112a0836102e9565b8086529282811690811561046557506001146112c657610407856103fb81870382610339565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106113085750505081016020016103fb826104076103eb565b805460208587018101919091529093019281016112ed565b3461025e57600036600319011261025e576020601154604051908152f35b602036600319011261025e57600480356001806009540361143857600260095560ff601354161561142757600d548281018091116109f4576012541061141657601154611389612180565b600e548181018091116109f457600e556113ac846113a633612114565b93611f88565b9081018091116109f45703611405576113c433612002565b6000905b8282106113eb5750106113df576107686001600955565b63dfb035c9600052601cfd5b80916113fe6113f86120f6565b33611c96565b01906113c8565b60405163f7760f2560e01b81528390fd5b60405163d05cb60960e01b81528390fd5b6040516316851fc760e11b81528390fd5b60405162461bcd60e51b8152602081850152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b3461025e57604036600319011261025e57600435611486816104c6565b6024359081151580920361025e573360009081526005602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b3461025e5761150936610659565b939290611517838386611827565b813b1593841561152b575b610768856119f4565b602093945090600086939260a4604051809981978296630a85bd0160e11b9b8c855233600486015260018060a01b038097166024860152604485015260806064850152816084850152848401378181018301859052601f01601f19168101030193165af1801561094557610768926000916115b6575b506001600160e01b0319161438808080611522565b6115ce915060203d811161093e576109308183610339565b386115a1565b3461025e57602036600319011261025e57600435600d548111611680576040519060808201604052607f820190600a80603092818106840185530491825b6116675761040761164a6103fb86886080601f1992838101920301815261165b60405194859261164460208501611c03565b90611bcc565b64173539b7b760d91b815260050190565b03908101835282610339565b9080929360001901938181068301855304919082611612565b604051635d68437560e11b8152600490fd5b3461025e57600036600319011261025e576020601254604051908152f35b3461025e57600036600319011261025e576020600e54604051908152f35b3461025e57604036600319011261025e57602060ff61172a6004356116f2816104c6565b602435906116ff826104c6565b60018060a01b03166000526005845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b1561173d57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b1561177857565b60405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606490fd5b156117b157565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b156117ee57565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b9060018060a01b0380611844856000526002602052604060002090565b54169181841692830361199e5761189a6118d5928216946118668615156117e7565b8433148015611957575b8015611923575b611880906117aa565b6001600160a01b0316600090815260036020526040902090565b80546000190190556001600160a01b03811660009081526003602052604090208054600101905561054f856000526002602052604060002090565b6118fc6118ec846000526004602052604060002090565b80546001600160a01b0319169055565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b5061188061194e610a676119418a6000526004602052604060002090565b546001600160a01b031690565b33149050611877565b506119996119923361197b8460018060a01b03166000526005602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b611870565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b9081602091031261025e57516119e58161024c565b90565b6040513d6000823e3d90fd5b156119fb57565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b90611a4960018060a01b03600854163314611736565b6001918260ff60105416151514611b5b57805167ffffffffffffffff811161035b57611a7f81611a7a600f546102e9565b611b6d565b60209384601f8311600114611ae75750818091611ab59596600093611adc575b501b916000199060031b1c191617600f55611be3565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b850151925038611a9f565b600f600052601f19831695919291600080516020612312833981519152916000905b888210611b4457505082611ab5969710611b2b575b5050811b01600f55611be3565b84015160001960f88460031b161c191690553880611b1e565b808684958294958a01518155019401920190611b09565b604051639619d74760e01b8152600490fd5b601f8111611b79575050565b600090600f8252600080516020612312833981519152906020601f850160051c83019410611bc2575b601f0160051c01915b828110611bb757505050565b818155600101611bab565b9092508290611ba2565b90611bdf60209282815194859201610360565b0190565b611bfb90602060405192828480945193849201610360565b810103902090565b600f5460009291611c13826102e9565b91600190818116908115611c6d5750600114611c2e57505050565b9091929350600f600052600080516020612312833981519152906000915b848310611c5a575050500190565b8181602092548587015201920191611c4c565b60ff191683525050811515909102019150565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039181831691611cae8315156117e7565b6000938285526002602052604085205416611dbe576001600160a01b038116600090815260036020526040902060018154019055611cfa8161054f846000526002602052604060002090565b8183857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a43b15918215611d37575b50506104e491506119f4565b604051630a85bd0160e11b8082523360048301526000602483018190526044830194909452608060648301526084820193909352919250602090829060a490829087905af1908115610945576104e49391611da0575b506001600160e01b031916143880611d2b565b611db8915060203d811161093e576109308183610339565b38611d8d565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606490fd5b90611e1460018060a01b0391611e0f83600854163314611736565b612042565b6000908251925b838310611e2b575050106109b857565b9091600c9081548015611ed75760019260001980920190556000611e4f8386611ee5565b5191828252602090600282526040600389828620541693611e71851515611771565b848652528320908154019055611e946118ec846000526002602052604060002090565b611eab6118ec846000526004602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4019190611e1b565b63ce3a3d376000526004601cfd5b8051821015611ef95760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261025e575190565b90611f28826107a6565b611f356040519182610339565b8281528092611f46601f19916107a6565b0190602036910137565b919082039182116109f457565b9081602091031261025e57516119e5816104c6565b906064820291808304606414901517156109f457565b818102929181159184041417156109f457565b611fa481612114565b6001600160a01b0333838216148015611ff6575b611fc157505050565b611fc9612180565b8203611fe857600b541680611fdd57505050565b6104e4923091612224565b63f7760f256000526004601cfd5b5080600b541615611fb8565b61200b81612114565b6001600160a01b0333838216148015612036575b61202857505050565b600b541680611fdd57505050565b5080600b54161561201f565b61204b81612114565b6001600160a01b03338382161480156120ea575b61206857505050565b6008546000908216803b63ffffffff166120925750829050611fe857600b541680611fdd57505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa91821561094557916120cc575b50611fc9565b6120e4915060203d8111610c3857610c288183610339565b386120c6565b5080600b54161561205f565b6001600c5401600c55600d54600181018091116109f45780600d5590565b600b546001600160a01b03908116919082156121795760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561094557600091612161575090565b6119e5915060203d8111610c3857610c288183610339565b5050503490565b6008546000906001600160a01b0316803b63ffffffff166121a2575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa9182156109455791612161575090565b600080809381935af1156121e957565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d116001600051141617161561226457565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d11600160005114161716156122da57565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfe8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802a26469706673582212206cc2f8bb63767f102b57fae9bb6883875824bce325c2f770d2fc81bfe7a0c0fe64736f6c634300081300332a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
