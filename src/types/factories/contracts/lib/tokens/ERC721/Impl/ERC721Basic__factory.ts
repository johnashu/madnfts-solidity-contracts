/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721Basic,
  ERC721BasicInterface,
} from "../../../../../../contracts/lib/tokens/ERC721/Impl/ERC721Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "UriLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162002f7b38038062002f7b833981016040819052620000399162000274565b81898960006200004a8382620003f3565b506001620000598282620003f3565b5050600880546001600160a01b0319166001600160a01b0384169081179091556040519091506000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600f620000b68882620003f3565b5060118690556012859055600a80546001600160a01b038087166001600160a01b031992831681179093556001600160601b0386166006819055600780548416909417909355600b8054918516919092161790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26007546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050505050620004bf565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a257600080fd5b81516001600160401b0380821115620001bf57620001bf6200017a565b604051601f8301601f19908116603f01168101908282118183101715620001ea57620001ea6200017a565b816040528381526020925086838588010111156200020757600080fd5b600091505b838210156200022b57858201830151818301840152908201906200020c565b600093810190920192909252949350505050565b80516001600160a01b03811681146200025757600080fd5b919050565b80516001600160601b03811681146200025757600080fd5b60008060008060008060008060006101208a8c0312156200029457600080fd5b89516001600160401b0380821115620002ac57600080fd5b620002ba8d838e0162000190565b9a5060208c0151915080821115620002d157600080fd5b620002df8d838e0162000190565b995060408c0151915080821115620002f657600080fd5b50620003058c828d0162000190565b97505060608a0151955060808a015194506200032460a08b016200023f565b93506200033460c08b016200025c565b92506200034460e08b016200023f565b9150620003556101008b016200023f565b90509295985092959850929598565b600181811c908216806200037957607f821691505b6020821081036200039a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ee57600081815260208120601f850160051c81016020861015620003c95750805b601f850160051c820191505b81811015620003ea57828155600101620003d5565b5050505b505050565b81516001600160401b038111156200040f576200040f6200017a565b620004278162000420845462000364565b84620003a0565b602080601f8311600181146200045f5760008415620004465750858301515b600019600386901b1c1916600185901b178555620003ea565b600085815260208120601f198616915b8281101562000490578886015182559484019460019091019084016200046f565b5085821015620004af5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612aac80620004cf6000396000f3fe6080604052600436106102345760003560e01c80636352211e1161013857806395d89b41116100b0578063b88d4fde1161007f578063d5abeb0111610064578063d5abeb011461065e578063e1c38ed914610674578063e985e9c51461068a57600080fd5b8063b88d4fde1461061e578063c87b56dd1461063e57600080fd5b806395d89b41146105c0578063a035b1fe146105d5578063a0712d68146105eb578063a22cb465146105fe57600080fd5b8063785e9e86116101075780638da5cb5b116100ec5780638da5cb5b1461056b5780638fc3b5491461058b5780639456fbcc146105a057600080fd5b8063785e9e861461052b578063879fbedf1461054b57600080fd5b80636352211e146104c157806366c879a9146104e157806370a08231146104f6578063714c53981461051657600080fd5b806323b872dd116101cb57806342842e0e1161019a5780634edd2d491161017f5780634edd2d491461046757806351cff8d91461048157806355f804b3146104a157600080fd5b806342842e0e14610434578063438b1b4b1461045457600080fd5b806323b872dd146103a25780632a55205a146103c2578063362c0cb5146104015780633cd8045e1461041457600080fd5b806313af40351161020757806313af403514610300578063150b7a021461032057806318160ddd1461036557806322ab47a11461038857600080fd5b806301ffc9a71461023957806306fdde031461026e578063081812fc14610290578063095ea7b3146102de575b600080fd5b34801561024557600080fd5b506102596102543660046122d0565b6106c5565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b50610283610732565b6040516102659190612318565b34801561029c57600080fd5b506102c66102ab36600461234b565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610265565b3480156102ea57600080fd5b506102fe6102f9366004612384565b6107c0565b005b34801561030c57600080fd5b506102fe61031b3660046123b0565b6108a7565b34801561032c57600080fd5b5061034c61033b3660046123cd565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610265565b34801561037157600080fd5b5061037a610984565b604051908152602001610265565b34801561039457600080fd5b506013546102599060ff1681565b3480156103ae57600080fd5b506102fe6103bd36600461246c565b610994565b3480156103ce57600080fd5b506103e26103dd3660046124ad565b610b7a565b604080516001600160a01b039093168352602083019190915201610265565b6102fe61040f366004612516565b610bb0565b34801561042057600080fd5b50600a546102c6906001600160a01b031681565b34801561044057600080fd5b506102fe61044f36600461246c565b610c65565b6102fe6104623660046125ce565b610d5d565b34801561047357600080fd5b506010546102599060ff1681565b34801561048d57600080fd5b506102fe61049c3660046123b0565b610e23565b3480156104ad57600080fd5b506102fe6104bc366004612610565b61116d565b3480156104cd57600080fd5b506102c66104dc36600461234b565b61122c565b3480156104ed57600080fd5b506102fe611283565b34801561050257600080fd5b5061037a6105113660046123b0565b61131a565b34801561052257600080fd5b5061028361138e565b34801561053757600080fd5b50600b546102c6906001600160a01b031681565b34801561055757600080fd5b506102fe6105663660046126b5565b611420565b34801561057757600080fd5b506008546102c6906001600160a01b031681565b34801561059757600080fd5b50600d5461037a565b3480156105ac57600080fd5b506102fe6105bb3660046126d0565b6114a6565b3480156105cc57600080fd5b506102836118c3565b3480156105e157600080fd5b5061037a60115481565b6102fe6105f936600461234b565b6118d0565b34801561060a57600080fd5b506102fe610619366004612709565b611a3a565b34801561062a57600080fd5b506102fe6106393660046123cd565b611aa6565b34801561064a57600080fd5b5061028361065936600461234b565b611b87565b34801561066a57600080fd5b5061037a60125481565b34801561068057600080fd5b5061037a600e5481565b34801561069657600080fd5b506102596106a53660046126d0565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806106f657506380ac58cd60e01b6001600160e01b03198316145b806107115750635b5e139f60e01b6001600160e01b03198316145b8061072c575063152a902d60e11b6001600160e01b03198316145b92915050565b6000805461073f90612735565b80601f016020809104026020016040519081016040528092919081815260200182805461076b90612735565b80156107b85780601f1061078d576101008083540402835291602001916107b8565b820191906000526020600020905b81548152906001019060200180831161079b57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061080957506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61084b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146108f05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b6001600160a01b0381166109465760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152606401610842565b60088190556040516001600160a01b0382169033907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600061098f600c5490565b905090565b6000818152600260205260409020546001600160a01b038481169116146109fd5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610842565b6001600160a01b038216610a535760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610842565b336001600160a01b0384161480610a8d57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610aae57506000818152600460205260409020546001600160a01b031633145b610aeb5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610842565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546006546001600160a01b039091169060009061271090610b9d9085612785565b610ba791906127a4565b90509250929050565b6008546001600160a01b03163314610bf95760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b610c04816001611bde565b81516000905b80821015610c4957610c1c600c611c76565b610c3e848381518110610c3157610c316127c6565b6020026020010151611c93565b816001019150610c0a565b80821015610c5f5763dfb035c96000526004601cfd5b50505050565b610c70838383610994565b6001600160a01b0382163b1580610d195750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0d91906127dc565b6001600160e01b031916145b610d585760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610842565b505050565b6008546001600160a01b03163314610da65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b8160125481600d54610db891906127f9565b1115610dd75760405163d05cb60960e01b815260040160405180910390fd5b610de2826000611bde565b60005b83811015610e0657610dfe85610df9611d60565b611d90565b600101610de5565b83811015610e1c5763dfb035c96000526004601cfd5b5050505050565b6008546001600160a01b03163314610e6c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eda919061280c565b905060008167ffffffffffffffff811115610ef757610ef76124cf565b604051908082528060200260200182016040528015610f20578160200160208202803683370190505b50905060008267ffffffffffffffff811115610f3e57610f3e6124cf565b604051908082528060200260200182016040528015610f67578160200160208202803683370190505b509050600080600e54118015610f8557506001600160a01b03851615155b15610faf57600e54610f979047612825565b9050610fa585600e54611e83565b6000600e55610fb2565b50475b60005b8481101561111557600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190612838565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa15801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f919061280c565b9050818684815181106110b4576110b46127c6565b6001600160a01b03909216602092830291909101909101526127106110da826064612785565b6110e49086612785565b6110ee91906127a4565b858481518110611100576111006127c6565b60209081029190910101525050600101610fb5565b60005b858110156111645761115c858281518110611135576111356127c6565b602002602001015185838151811061114f5761114f6127c6565b6020026020010151611e83565b600101611118565b50505050505050565b6008546001600160a01b031633146111b65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b60105460ff1615156001036111de57604051639619d74760e01b815260040160405180910390fd5b600f6111ea82826128a3565b50806040516111f99190612963565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6000818152600260205260409020546001600160a01b03168061127e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610842565b919050565b6008546001600160a01b031633146112cc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b6010805460ff191660011790556040516112e890600f906129f2565b604051908190038120907f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca090600090a2565b60006001600160a01b0382166113725760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610842565b506001600160a01b031660009081526003602052604090205490565b6060600f805461139d90612735565b80601f01602080910402602001604051908101604052809291908181526020018280546113c990612735565b80156114165780601f106113eb57610100808354040283529160200191611416565b820191906000526020600020905b8154815290600101906020018083116113f957829003601f168201915b5050505050905090565b6008546001600160a01b031633146114695760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b6013805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6008546001600160a01b031633146114ef5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610842565b600a546040805163e919ecad60e01b815290516000926001600160a01b03169163e919ecad9160048083019260209291908290030181865afa158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d919061280c565b905060008167ffffffffffffffff81111561157a5761157a6124cf565b6040519080825280602002602001820160405280156115a3578160200160208202803683370190505b50905060008267ffffffffffffffff8111156115c1576115c16124cf565b6040519080825280602002602001820160405280156115ea578160200160208202803683370190505b509050600080600e5411801561160857506001600160a01b03851615155b1561169b57600e546040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611678919061280c565b6116829190612825565b90506116918686600e54611ede565b6000600e55611706565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a0823190602401602060405180830381865afa1580156116df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611703919061280c565b90505b60005b8481101561186957600a54604051631419245f60e11b8152600481018390526000916001600160a01b03169063283248be90602401602060405180830381865afa15801561175b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177f9190612838565b600a5460405163b34c8caf60e01b81526001600160a01b0380841660048301529293506000929091169063b34c8caf90602401602060405180830381865afa1580156117cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f3919061280c565b905081868481518110611808576118086127c6565b6001600160a01b039092166020928302919091019091015261271061182e826064612785565b6118389086612785565b61184291906127a4565b858481518110611854576118546127c6565b60209081029190910101525050600101611709565b60005b858110156118b9576118b18886838151811061188a5761188a6127c6565b60200260200101518684815181106118a4576118a46127c6565b6020026020010151611ede565b60010161186c565b5050505050505050565b6001805461073f90612735565b6009546001146119225760405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610842565b600260095560135460ff1661194a576040516316851fc760e11b815260040160405180910390fd5b8060125481600d5461195c91906127f9565b111561197b5760405163d05cb60960e01b815260040160405180910390fd5b6011548260006119916340d097c360e01b611f64565b905080600e60008282546119a591906127f9565b90915550600090506119b633612007565b905080826119c48587612785565b6119ce91906127f9565b146119ec5760405163f7760f2560e01b815260040160405180910390fd5b6119f7336002611bde565b60005b86811015611a1657611a0e33610df9611d60565b6001016119fa565b86811015611a2c5763dfb035c96000526004601cfd5b505060016009555050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611ab1858585610994565b6001600160a01b0384163b1580611b485750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290611af99033908a908990899089906004016129fe565b6020604051808303816000875af1158015611b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3c91906127dc565b6001600160e01b031916145b610e1c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610842565b6060600d54821115611bac57604051635d68437560e11b815260040160405180910390fd5b600f611bb783612094565b604051602001611bc8929190612a52565b6040516020818303038152906040529050919050565b6000611be983612007565b9050336001600160a01b0384161480611c0b5750600b546001600160a01b0316155b15610d58578160ff16600003611c3157611c2c6340d097c360e01b826120e3565b611c4d565b8160ff16600103611c4d57611c4d63044df8e760e41b826120e3565b600b546001600160a01b031615610d5857600b54610d58906001600160a01b0316843084612105565b805480611c8b5763ce3a3d376000526004601cfd5b600019019055565b6000818152600260205260409020546001600160a01b031680611ce55760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610842565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000611d70600c80546001019055565b6001600d6000828254611d8391906127f9565b9091555050600d54919050565b611d9a8282612191565b6001600160a01b0382163b1580611e405750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3491906127dc565b6001600160e01b031916145b611e7f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610842565b5050565b600080600080600085875af1905080610d585760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610842565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610c5f5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610842565b6008546000906001600160a01b0316803b63ffffffff811615611ffc57600854604051633b7279e960e21b81526001600160e01b0319861660048201526001600160a01b039091169063edc9e7a490602401602060405180830381865afa158015611fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff7919061280c565b611fff565b60005b949350505050565b600b546000906001600160a01b0316612020573461072c565b600b54604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015612070573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c919061280c565b604080516080810191829052607f0190826030600a8206018353600a90045b80156120d157600183039250600a81066030018353600a90046120b3565b50819003601f19909101908152919050565b60006120ee83611f64565b9050808214610d585763f7760f256000526004601cfd5b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610e1c5760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610842565b6001600160a01b0382166121e75760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610842565b6000818152600260205260409020546001600160a01b03161561224c5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610842565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146122cd57600080fd5b50565b6000602082840312156122e257600080fd5b81356122ed816122b7565b9392505050565b60005b8381101561230f5781810151838201526020016122f7565b50506000910152565b60208152600082518060208401526123378160408501602087016122f4565b601f01601f19169190910160400192915050565b60006020828403121561235d57600080fd5b5035919050565b6001600160a01b03811681146122cd57600080fd5b803561127e81612364565b6000806040838503121561239757600080fd5b82356123a281612364565b946020939093013593505050565b6000602082840312156123c257600080fd5b81356122ed81612364565b6000806000806000608086880312156123e557600080fd5b85356123f081612364565b9450602086013561240081612364565b935060408601359250606086013567ffffffffffffffff8082111561242457600080fd5b818801915088601f83011261243857600080fd5b81358181111561244757600080fd5b89602082850101111561245957600080fd5b9699959850939650602001949392505050565b60008060006060848603121561248157600080fd5b833561248c81612364565b9250602084013561249c81612364565b929592945050506040919091013590565b600080604083850312156124c057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561250e5761250e6124cf565b604052919050565b6000806040838503121561252957600080fd5b823567ffffffffffffffff8082111561254157600080fd5b818501915085601f83011261255557600080fd5b8135602082821115612569576125696124cf565b8160051b925061257a8184016124e5565b828152928401810192818101908985111561259457600080fd5b948201945b848610156125b257853582529482019490820190612599565b96506125c19050878201612379565b9450505050509250929050565b6000806000606084860312156125e357600080fd5b83356125ee81612364565b925060208401359150604084013561260581612364565b809150509250925092565b6000602080838503121561262357600080fd5b823567ffffffffffffffff8082111561263b57600080fd5b818501915085601f83011261264f57600080fd5b813581811115612661576126616124cf565b612673601f8201601f191685016124e5565b9150808252868482850101111561268957600080fd5b8084840185840137600090820190930192909252509392505050565b8035801515811461127e57600080fd5b6000602082840312156126c757600080fd5b6122ed826126a5565b600080604083850312156126e357600080fd5b82356126ee81612364565b915060208301356126fe81612364565b809150509250929050565b6000806040838503121561271c57600080fd5b823561272781612364565b9150610ba7602084016126a5565b600181811c9082168061274957607f821691505b60208210810361276957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561279f5761279f61276f565b500290565b6000826127c157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156127ee57600080fd5b81516122ed816122b7565b8082018082111561072c5761072c61276f565b60006020828403121561281e57600080fd5b5051919050565b8181038181111561072c5761072c61276f565b60006020828403121561284a57600080fd5b81516122ed81612364565b601f821115610d5857600081815260208120601f850160051c8101602086101561287c5750805b601f850160051c820191505b8181101561289b57828155600101612888565b505050505050565b815167ffffffffffffffff8111156128bd576128bd6124cf565b6128d1816128cb8454612735565b84612855565b602080601f83116001811461290657600084156128ee5750858301515b600019600386901b1c1916600185901b17855561289b565b600085815260208120601f198616915b8281101561293557888601518255948401946001909101908401612916565b50858210156129535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516129758184602087016122f4565b9190910192915050565b6000815461298c81612735565b600182811680156129a457600181146129b9576129e8565b60ff19841687528215158302870194506129e8565b8560005260208060002060005b858110156129df5781548a8201529084019082016129c6565b50505082870194505b5050505092915050565b60006122ed828461297f565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000612a5e828561297f565b8351612a6e8183602088016122f4565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000910190815260050194935050505056fea164736f6c6343000810000a";

type ERC721BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Basic__factory extends ContractFactory {
  constructor(...args: ERC721BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Basic> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC721Basic>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC721Basic {
    return super.attach(address) as ERC721Basic;
  }
  override connect(signer: Signer): ERC721Basic__factory {
    return super.connect(signer) as ERC721Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BasicInterface {
    return new utils.Interface(_abi) as ERC721BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Basic;
  }
}
