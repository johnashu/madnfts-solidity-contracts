/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADRouter721,
  MADRouter721Interface,
} from "../../contracts/MADRouter721";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [],
    name: "MADFactory721",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setBaseLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200022d5762001b7d80380390601f19601f83011683019183831060018060401b038411176200021757808492606094604052833981010312620002125780519060018060a01b038083168093036200020d57620000716040620000696020850162000232565b930162000232565b91600093828554926040519333887f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768188a360ff60a01b1933169060018060a81b03191617875560018055866005556722b1c8c1227a00006006556706f05b59d3b200006007556703782dace9d9000060045560018060a01b03199283600254161760025516908115156000146200020557819060035416176003557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9138583a25b818454163303620001c3575081169081156200017f576008557f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64666040519283a261193190816200024c8239f35b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b60649062461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b505062000132565b600080fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b519060018060a01b03821682036200024657565b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde0314610235578063089f8b1b146102275780630b78f9c01461021957806313af40351461020b5780633bbed4a0146101fd5780633f4ba83a146101ef5780634328bd00146101e1578063490f7027146101d3578063583fef34146101c5578063586ba782146101b75780635c975abb146101a957806366d003ac1461019b578063785e9e861461018d5780638456cb591461017f5780638da5cb5b14610171578063ba36b92d14610163578063c5cd1d3c14610155578063c99aa4e514610147578063d44619e314610139578063e427affe1461012b578063edc9e7a41461011d5763f940e38514610110575b61000e565b610118610ddc565b61010b565b50610126610d58565b61010b565b50610134610d2f565b61010b565b50610142610cfe565b61010b565b50610150610cd5565b61010b565b5061015e610be7565b61010b565b5061016c610b2a565b61010b565b5061017a610af9565b61010b565b50610188610a7a565b61010b565b50610196610a49565b61010b565b506101a4610a18565b61010b565b506101b26109d3565b61010b565b506101c061099c565b61010b565b506101ce610973565b61010b565b506101dc610859565b61010b565b506101ea6107a0565b61010b565b506101f861067f565b61010b565b506102066105c5565b61010b565b5061021461050b565b61010b565b50610222610434565b61010b565b50610230610304565b61010b565b5061023e6102a4565b61010b565b600091031261024e57565b600080fd5b60005b838110610267575050906000910152565b806020918301518185015201610256565b604091602082526102988151809281602086015260208686019101610253565b601f8019910116010190565b50346102d05760006003193601126102cb57602080526606726f7574657260465260606020f35b600080fd5b600080fd5b60018060a01b031690565b60018060a01b038116036102f057565b600080fd5b801515036102ff57565b600080fd5b503461042f57604060031936011261042a57600435610322816102e0565b60243561032e816102f5565b61033b6001805414611042565b600260015560ff60009261035582855460a01c1615611194565b61035e8161144e565b92909216906001821460001461040d5760018060a01b0316803b156104095784604051809263879fbedf60e01b825281838161039d8a600483016109c5565b03925af180156103fc575b6103e3575b50604051921515917f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d8585a46103e161108d565bf35b806103f06103f69261074e565b80610243565b386103ad565b610404611217565b6103a8565b8480fd5b60405162461bcd60e51b815280610426600482016111df565b0390fd5b600080fd5b600080fd5b50346105065760406003193601126105015760043560243561046160018060a01b0360005416331461182c565b600654821115806104f5575b156104b1577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191816040926005558160045582519182526020820152a16000604051f35b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d61786044820152fd5b5060075481111561046d565b600080fd5b600080fd5b50346105c05760206003193601126105bb57600435610529816102e0565b60018060a01b0361053f8160005416331461182c565b8116801561057757600091825560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b503461067a576020600319360112610675576004356105e3816102e0565b60018060a01b036105f98160005416331461182c565b8116801561063157600091600855604051907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668383a2f35b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b50346107325760008060031936011261072f5780546106a760018060a01b038216331461182c565b60ff8160a01c16156106eb5760ff60a01b191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1604051f35b606460405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152fd5b80fd5b600080fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610763575b604052565b61076b610737565b61075e565b90601f8019910116810190811067ffffffffffffffff821117610793575b604052565b61079b610737565b61078e565b503461085457604060031936011261084f576004356107be816102e0565b6024359067ffffffffffffffff9081831161084a5736602384011215610845578260040135918211610838575b604051916108036020601f19601f8401160184610770565b808352366024828601011161083357602081600092602461082c97018387013784010152611093565b6000604051f35b600080fd5b610840610737565b6107eb565b600080fd5b600080fd5b600080fd5b600080fd5b50606060031936011261096457600435610872816102e0565b6024359061087f826102e0565b61088c6001805414611042565b60026001556108a360ff60005460a01c1615611194565b600160ff6108b08361144e565b90501614156000146108d95760405162461bcd60e51b8152806108d5600482016111df565b0390fd5b6108e16115d6565b60018060a01b0316803b1561095f5761091891600091604051808095819463438b1b4b60e01b835233906044359060048501611244565b039134905af18015610952575b610939575b61093261108d565b6000604051f35b8061094661094c9261074e565b80610243565b3861092a565b61095a611217565b610925565b600080fd5b600080fd5b9190602083019252565b5034610997576000600319360112610992576020600554604051908152f35b600080fd5b600080fd5b50346109c05760006003193601126109bb576020600454604051908152f35b600080fd5b600080fd5b919091602081019215159052565b50346109ff5760006003193601126109fa57602060ff60005460a01c166040519015158152f35b600080fd5b600080fd5b919091602081019260018060a01b03169052565b5034610a44576000600319360112610a3f57602060018060a01b0360085416604051908152f35b600080fd5b600080fd5b5034610a75576000600319360112610a7057602060018060a01b0360035416604051908152f35b600080fd5b600080fd5b5034610af457600080600319360112610af1578054610aa260018060a01b038216331461182c565b610ab260ff8260a01c1615611194565b600160a01b9060ff60a01b19161781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1604051f35b80fd5b600080fd5b5034610b25576000600319360112610b2057602060018060a01b0360005416604051908152f35b600080fd5b600080fd5b506040600319360112610be257600435610b43816102e0565b60243567ffffffffffffffff808211610bdd5736602383011215610bd8578160040135908111610bcb575b8060051b9160405192602092610b8684830186610770565b845260248385019183010191368311610bc657602401905b828210610bb657610baf8587611267565b6000604051f35b8380918335815201910190610b9e565b600080fd5b610bd3610737565b610b6e565b600080fd5b600080fd5b600080fd5b5034610cd0576020600319360112610ccb57600435610c05816102e0565b610c126001805414611042565b6002600155600090610c2b60ff835460a01c1615611194565b600160ff610c388361144e565b90501614600014610cae57819060018060a01b0316803b15610cab5781906004604051809481936366c879a960e01b83525af18015610c9e575b610c85575b50610c8061108d565b604051f35b80610c92610c989261074e565b80610243565b38610c77565b610ca6611217565b610c72565b50fd5b60405162461bcd60e51b815280610cc7600482016111df565b0390fd5b600080fd5b600080fd5b5034610cf9576000600319360112610cf4576020600654604051908152f35b600080fd5b600080fd5b5034610d2a576000600319360112610d2557602060018060a01b0360025416604051908152f35b600080fd5b600080fd5b5034610d53576000600319360112610d4e576020600754604051908152f35b600080fd5b600080fd5b5034610dd7576020600319360112610dd2576004803563ffffffff60e01b81168103610dcd57600091816340d097c360e01b149163044df8e760e41b1491610dc05750610db457610db0905b60405191829182610969565b0390f35b50610db0600554610da4565b9050610db0915054610da4565b600080fd5b600080fd5b600080fd5b503461103d576040806003193601126110385760049060ff8235610dff816102e0565b602435610e0b816102e0565b610e186001805414611042565b6002600155610e268261144e565b93909316916001831460001461101b5760018060a01b0390818316818115159182610f9f575b5050600014610efc571694610e626008546102d5565b863b15610ef757600096610e8d93888094895196879586948593632515bef360e21b855284016113e0565b03925af18015610eea575b610ed1575b505b33917ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a1858551a4610ece61108d565b51f35b80610ede610ee49261074e565b80610243565b38610e9d565b610ef2611217565b610e98565b600080fd5b80919250311515600014610f825716610f166008546102d5565b94813b15610f7d57600095610f419287928388518096819582946351cff8d960e01b84528301610a04565b03925af18015610f70575b610f57575b50610e9f565b80610f64610f6a9261074e565b80610243565b38610f51565b610f78611217565b610f4c565b600080fd5b610f9b86865191829162461bcd60e51b835282016113a8565b0390fd5b610fc29250906020918a8a518095819482936370a0823160e01b84528301610a04565b03915afa90811561100e575b600091610fe0575b5015158138610e4c565b611001915060203d8111611007575b610ff98183610770565b810190611394565b38610fd6565b503d610fef565b611016611217565b610fce565b61103486865191829162461bcd60e51b835282016111df565b0390fd5b600080fd5b600080fd5b1561104957565b606460405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152fd5b60018055565b9060ff906110a46001805414611042565b60026001556000926110bc83855460a01c1615611194565b60016110c78261144e565b94909416146000146111775760018060a01b0316803b15611173577f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb79161113e918560405180926355f804b360e01b82528183816111288860048301610278565b03925af18015611166575b61114d575b50611224565b92604051a361114b61108d565b565b8061115a6111609261074e565b80610243565b38611138565b61116e611217565b611133565b8380fd5b60405162461bcd60e51b815280611190600482016111df565b0390fd5b1561119b57565b606460405162461bcd60e51b815260206004820152600660248201527f50415553454400000000000000000000000000000000000000000000000000006044820152fd5b60609060208152600c60208201527f494e56414c49445f54595045000000000000000000000000000000000000000060408201520190565b506040513d6000823e3d90fd5b61123c90602060405192828480945193849201610253565b810103902090565b91939290604091606084019560018060a01b038093168552602085015216910152565b6112746001805414611042565b600260015561128b60ff60005460a01c1615611194565b600160ff6112988361144e565b90506112a2611701565b16146000146113265760018060a01b0316803b15611321576112de91600091604051808095819463362c0cb560e01b8352339060048401611343565b039134905af18015611314575b6112fb575b506112f961108d565b565b8061130861130e9261074e565b80610243565b386112f0565b61131c611217565b6112eb565b600080fd5b60405162461bcd60e51b81528061133f600482016111df565b0390fd5b9092919260408201604083528151809152606083019060208093019060005b8482821061137c57505050509360018060a01b0316910152565b80849560019394955181520194019101919091611362565b908160209103126113a3575190565b600080fd5b60609060208152600860208201527f4e4f5f46554e445300000000000000000000000000000000000000000000000060408201520190565b90602090939293604083019460018060a01b03809216845216910152565b91908260409103126114265760208251611417816102e0565b920151611423816102f5565b90565b600080fd5b90816020910312611449575160ff811681036114445790565b600080fd5b600080fd5b9061146261145d6002546102d5565b6102d5565b6114ea61148b604094855193849163617d1d3b60e01b8352826020968795869360048301610a04565b0381845afa9182156115a5575b600092611576575b508196805163b64bd5eb60e01b81528181806114bf8760048301610969565b0381865afa8015611569575b61153d575b5051808095819463d93cb8fd60e01b835260048301610969565b03915afa918215611530575b600092611503575b505090565b6115229250803d10611529575b61151a8183610770565b81019061142b565b38806114fe565b503d611510565b611538611217565b6114f6565b61155c90823d8411611562575b6115548183610770565b8101906113fe565b506114d0565b503d61154a565b611571611217565b6114cb565b611597919250833d851161159e575b61158f8183610770565b810190611394565b90386114a0565b503d611585565b6115ad611217565b611498565b9060208201916340d097c360e01b9052565b90602082019163044df8e760e41b9052565b6115e16003546102d5565b60018060a01b0381168015156000146116fa576040518091636eb1769f60e11b8252602091829181806116183033600484016113e0565b03915afa9182156116ed575b6000926116be575b50604051633b7279e960e21b8152818180611649600482016115b2565b0381305afa9182156116b1575b600092611684575b50508103611676576116739130903390611877565b5b565b63f7760f256000526004601cfd5b6116a39250803d106116aa575b61169b8183610770565b810190611394565b388061165e565b503d611691565b6116b9611217565b611656565b816116df9293503d84116116e6575b6116d78183610770565b810190611394565b903861162c565b503d6116cd565b6116f5611217565b611624565b5050611674565b61170c6003546102d5565b60018060a01b038116801515600014611825576040518091636eb1769f60e11b8252602091829181806117433033600484016113e0565b03915afa918215611818575b6000926117e9575b50604051633b7279e960e21b8152818180611774600482016115c4565b0381305afa9182156117dc575b6000926117af575b505081036117a15761179e9130903390611877565b5b565b63f7760f256000526004601cfd5b6117ce9250803d106117d5575b6117c68183610770565b810190611394565b3880611789565b503d6117bc565b6117e4611217565b611781565b8161180a9293503d8411611811575b6118028183610770565b810190611394565b9038611757565b503d6117f8565b611820611217565b61174f565b505061179f565b1561183357565b606460405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d11600160005114161716156118b757565b606460405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea26469706673582212204858819dc701b00804fcc9f8187971407f71c23f059cf43007cf4174aff78d5764736f6c63430008100033";

type MADRouter721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter721__factory extends ContractFactory {
  constructor(...args: MADRouter721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter721> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter721>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter721 {
    return super.attach(address) as MADRouter721;
  }
  override connect(signer: Signer): MADRouter721__factory {
    return super.connect(signer) as MADRouter721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter721Interface {
    return new utils.Interface(_abi) as MADRouter721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter721 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter721;
  }
}
