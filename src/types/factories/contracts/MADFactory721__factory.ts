/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADFactory721,
  MADFactory721Interface,
} from "../../contracts/MADFactory721";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC721BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC721Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "_project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03462000210576200275280380390601f19601f83011683019183831060018060401b03841117620001fa57808492606094604052833981010312620001f5576200004b8162000215565b6200006760406200005f6020850162000215565b930162000215565b9060009160018355306080526001546040519033857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768185a360ff60a01b1933169060018060a81b0319161760015560018060a01b03928381169182151590818092620001e9575b15620001a75750620000e1906200022e565b6006557f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc84604051a2818416936200011b8515156200022e565b600755604051937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738486a216908115156000146200019f577fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913908260018060a01b0319600854161760085583a25b6124d790816200027b8239608051816123ad0152f35b505062000189565b60649062461bcd60e51b815260206004820152600b60248201527f5a65726f416464726573730000000000000000000000000000000000000000006044820152fd5b508588161515620000cf565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b519060018060a01b03821682036200022957565b600080fd5b156200023657565b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461024e57806313af4035146102405780633f4ba83a146102325780635c975abb14610224578063617d1d3b146102165780636c19e783146102085780636dcea85f146101fa57806376de0f3d146101ec578063785e9e86146101de57806380f55605146101d05780638456cb59146101c25780638691fe46146101b45780638da5cb5b146101a657806395cd5193146101985780639750f2e01461018a578063b64bd5eb1461017c578063b7762c6d1461016e578063bc8b583814610160578063c0d7865514610152578063d93cb8fd14610144578063f887ea4014610136578063f9f411d8146101285763fa2405171461011b575b61000e565b610123611055565b610116565b50610131610fdb565b610116565b5061013f610f74565b610116565b5061014d610f3a565b610116565b5061015b610ebf565b610116565b50610169610dda565b610116565b50610177610bf2565b610116565b50610185610b8a565b610116565b50610193610ae5565b610116565b506101a16109d2565b610116565b506101af610850565b610116565b506101bd610808565b610116565b506101cb610784565b610116565b506101d9610753565b610116565b506101e7610702565b610116565b506101f5610623565b610116565b5061020361057b565b610116565b50610211610500565b610116565b5061021f6104bb565b610116565b5061022d61048a565b610116565b5061023b6103ba565b610116565b506102496102ff565b610116565b5061025761029e565b610116565b919082519283825260005b848110610288575050826000602080949584010152601f8019910116010190565b6020908180828501015190828601015201610267565b50346102cb5760006003193601126102c657602080526707666163746f727960475260606020f35b600080fd5b600080fd5b60018060a01b031690565b60018060a01b038116036102eb57565b600080fd5b60e435906102fd826102db565b565b50346103b55760206003193601126103b05760043561031d816102db565b60018060a01b036103338160015416331461151c565b8116801561036c5760009160015560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b503461047257600060031936011261046d576001546103e260018060a01b038216331461151c565b60ff8160a01c16156104295760ff60a01b19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16000604051f35b606460405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b151590565b919091602081019215159052565b50346104b65760006003193601126104b157602060ff60015460a01c166040519015158152f35b600080fd5b600080fd5b50346104fb5760206003193601126104f65760206004356104db816102db565b604051906bffffffffffffffffffffffff199060601b168152f35b600080fd5b600080fd5b5034610576576020600319360112610571576000600435610520816102db565b60018060a01b036105368160015416331461151c565b811690610544821515611567565b600755604051907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738383a2f35b600080fd5b600080fd5b50346105f15760206003193601126105ec57600060043561059b816102db565b60018060a01b036105b18160015416331461151c565b8116906105bf821515611567565b600655604051907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc8383a2f35b600080fd5b600080fd5b604090600319011261061e5760043561060e816102db565b9060243561061b816102db565b90565b600080fd5b50346106fd57610632366105f6565b600060065433036106eb5761064f6106498361237c565b15610477565b6000146106e45790915b6bffffffffffffffffffffffff199060601b169161067f61067982610a9e565b546122ce565b9260009351915b8285106106a15761069d846040519182918261047c565b0390f35b9091926106c06106b9866106b485610a9e565b610fa5565b9054610fd3565b83146000146106db5750600180945b01929190939293610686565b936001906106cf565b9091610659565b6004906001630995110d60e31b038152fd5b600080fd5b503461072e57600060031936011261072957602060018060a01b0360085416604051908152f35b600080fd5b600080fd5b60018060a01b03169052565b919091602081019260018060a01b03169052565b503461077f57600060031936011261077a57602060018060a01b0360065416604051908152f35b600080fd5b600080fd5b50346108035760006003193601126107fe576001546107ac60018060a01b038216331461151c565b6107bc60ff8260a01c161561112c565b600160a01b9060ff60a01b1916176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16000604051f35b600080fd5b600080fd5b503461084b57602060031936011261084657600435610826816102db565b60018060a01b031660005260036020526020604060002054604051908152f35b600080fd5b600080fd5b503461087c57600060031936011261087757602060018060a01b0360015416604051908152f35b600080fd5b600080fd5b6004359060ff8216820361089157565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176108ca575b604052565b6108d2610896565b6108c5565b90601f8019910116810190811067ffffffffffffffff8211176108fa575b604052565b610902610896565b6108f5565b6040519060a0820182811067ffffffffffffffff821117610928575b604052565b610930610896565b610923565b6040519060e0820182811067ffffffffffffffff821117610956575b604052565b61095e610896565b610951565b81601f820112156109cd5780359067ffffffffffffffff82116109c0575b604051926109996020601f19601f86011601856108d7565b828452602083830101116109bb57816000926020809301838601378301015290565b600080fd5b6109c8610896565b610981565b600080fd5b5034610a9957610120600319360112610a94576109ed610881565b6024359067ffffffffffffffff91828111610a8f57610a10903690600401610963565b604435838111610a8a57610a28903690600401610963565b91606435848111610a8557610a41903690600401610963565b9160c435948511610a8057610a5d610a79953690600401610963565b91610a666102f0565b93610104359560a4359360843593611177565b6000604051f35b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60018060a01b03166000526003602052604060002090565b60018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b5034610b6e5760e0610b18610af9366105f6565b60018060a09493941b0380931660005260046020526040600020610ace565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b600080fd5b6020906003190112610b855760043590565b600080fd5b5034610bed57610b9936610b73565b600090610ba4612300565b8152600260205260018060a01b0360408220541690328214610be5575b15610bd757604090815190815260016020820152f35b634ca888676000526004601cfd5b506001610bc1565b600080fd5b5034610dd55760a0600319360112610dd05760043567ffffffffffffffff8111610dcb57610c24903690600401610963565b602435610c30816102db565b60443590610c3d826102db565b6064359160843590610c536001600054146110da565b6002600055610c606123a4565b610c7260ff60015460a01c161561112c565b60018060a01b0380841615808091610dc1575b600014610cab57505050505050610c9b90611d60565b5b610ca4611125565b6000604051f35b801591828093610db7575b80610dae575b80610da4575b600014610cdd575050505050610cd792611c16565b5b610c9c565b83959396949616151580918192610d9c575b5080610d93575b80610d89575b600014610d165750505050610d1092611acc565b5b610cd8565b8194939491610d81575b5080610d78575b80610d6e575b80610d65575b80610d5b575b600014610d4e57610d499461196a565b610d11565b62adecf06000526004601cfd5b5060478410610d39565b50831515610d33565b5060158310610d2d565b50821515610d27565b905038610d20565b50605b8610610cfc565b50851515610cf6565b905038610cef565b5060158710610cc2565b50861515610cbc565b5080841615610cb6565b5081831615610c85565b600080fd5b600080fd5b600080fd5b5034610eba576020600319360112610eb55760043567ffffffffffffffff8111610eb057610ea0610e12610eac923690600401610963565b60208151910120604051610e25816108ad565b6010815260206f67363d3d37363d34f03d5260086018f360801b910152610e756040519182610e596020820192308461241d565b0392610e6d601f19948581018352826108d7565b5190206102d0565b90610e986040519182610e8c602082019586612470565b039081018352826108d7565b5190206102d0565b6040519182918261073f565b0390f35b600080fd5b600080fd5b600080fd5b5034610f35576020600319360112610f30576000600435610edf816102db565b60018060a01b03610ef58160015416331461151c565b811690610f03821515611567565b600555604051907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc808383a2f35b600080fd5b600080fd5b5034610f6f57610f4936610b73565b610f51612300565b6000526002602052602060406000205460a01c60ff60405191168152f35b600080fd5b5034610fa0576000600319360112610f9b57602060018060a01b0360055416604051908152f35b600080fd5b600080fd5b8054821015610fbd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9060031b1c90565b503461104057604060031936011261103b57600435610ff9816102db565b6024359060018060a01b03166000526003602052604060002080548210156110365760209161102791610fa5565b90549060031b1c604051908152f35b600080fd5b600080fd5b600080fd5b6000526002602052604060002090565b50346110d55761106436610b73565b600052600260205260406000208054600360ff8260a01c1692600181015460028201549160018060a01b03938491015416926040519416845260048510156110bf5760a0946020850152604084015260608301526080820152f35b634e487b7160e01b600052602160045260246000fd5b600080fd5b156110e157565b606460405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152fd5b6001600055565b1561113357565b606460405162461bcd60e51b815260206004820152600660248201527f50415553454400000000000000000000000000000000000000000000000000006044820152fd5b97929490959391969760005460011461118f906110da565b600260005561119c6123a4565b8860015460a01c60ff16156111b09061112c565b6111b99161231f565b6111c28361235c565b8785886005546111d1906102d0565b986008546111de906102d0565b8760409b8c96888a89519d8e998a996373c7896760e01b8b5260048b01996112059a611354565b038173__$785115ade85da2325a219769175abf82ff$__5af4928315967fd38668b789b354d9abe5d3efe253309559c51f02aa63fc24edd259c19611801097611323575b60009586956112e9575b506112c56112dc95966112c08c6112bb6bffffffffffffffffffffffff198b60601b16916112898361128432610a9e565b6113e4565b611291610907565b9461129c328761142f565b6112a86020870161143c565b878601524360608601526080850161142f565b611045565b611463565b5195869560018060a01b038091169a1698866114e2565b0390a36112e7611125565b565b6112c596506112dc955061131290823d841161131c575b61130a81836108d7565b810190611330565b9690969550611253565b503d611300565b61132b6113d7565b611249565b919082604091031261134f576020825192015161134c816102db565b90565b600080fd5b98949a99959261139b9061138d6113a99461137e6101209c9b98958e61014090818152019061025c565b908d602081840391015261025c565b908b820360408d015261025c565b9089820360608b015261025c565b98608088015260a087015260018060a01b03938480921660c08801521660e086015261010085015216910152565b506040513d6000823e3d90fd5b6114089080549068010000000000000000821015611422575b600182018155610fa5565b819291549060031b600019811b9283911b16911916179055565b61142a610896565b6113fd565b9060018060a01b03169052565b60019052565b9060018060a01b03166bffffffffffffffffffffffff60a01b825416179055565b61147660018060a01b0383511682611442565b602082015160048110156114cc576114c360806114ca9460039385549060ff60a01b9060a01b169060ff60a01b1916178555604081015160018601556060810151600286015501516102d0565b9101611442565b565b634e487b7160e01b600052602160045260246000fd5b9161150d906114ff6080959897969360a0865260a086019061025c565b90848203602086015261025c565b95604083015260608201520152565b1561152357565b606460405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b1561156e57565b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b91908260409103126115d157602082516115cb816102db565b92015190565b600080fd5b91906115ea9060608452606084019061025c565b916020928181038483015283808451928381520193019060005b81811061164e57505050604081830391015281808451928381520193019160005b828110611633575050505090565b90919293828060019287518152019501910192919092611625565b909194938480600192838060a01b0389511681520196019101949394919091611604565b600660c0916116ba60018060a01b0361168e8187511684611442565b602086015160018401556116ab8160408801511660028501611442565b60608601511660038301611442565b6080840151600482015560a0840151600582015501910151151560ff80198354169116179055565b91909392936080830160808452815180915260a084019060208093019060005b818110611767575050508381038285015281808451928381520193019160005b8281106117455750505050600391611741606092956040830190610733565b0152565b909192938280600192838060a01b038851168152019501910192919092611722565b909193928380600192875181520195019101939293919091611702565b91909392936080830160808452815180915260a084019060208093019060005b818110611809575050508381038285015281808451928381520193019160005b8281106117e757505050506002916117e3606092956040830190610733565b0152565b909192938280600192838060a01b0388511681520195019101929190926117c4565b9091939283806001928751815201950191019392939190916117a4565b91909392936080830160808452815180915260a084019060208093019060005b8181106118ab575050508381038285015281808451928381520193019160005b8281106118895750505050600191611885606092956040830190610733565b0152565b909192938280600192838060a01b038851168152019501910192919092611866565b909193928380600192875181520195019101939293919091611846565b91909392936080830160808452815180915260a084019060208093019060005b81811061194d575050508381038285015281808451928381520193019160005b82811061192b5750505050600091611927606092956040830190610733565b0152565b909192938280600192838060a01b038851168152019501910192919092611908565b9091939283806001928751815201950191019392939190916118e8565b919390927fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9361199a8682611fac565b92826119a78286956121b1565b97889660409586916119cc83519a8b938493636ec6cf1560e01b8552600485016115d6565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4938415611abf575b6000978895611a71575b5091611a33611a609492611a2a611a6c989795611a12610935565b96611a1d8d8961142f565b602088015288870161142f565b6060850161142f565b608083015260a0820152611a4960c0820161143c565b611a5b86611a5632610ab6565b610ace565b611672565b519283923296846116e2565b0390a2565b611a2a9850869550611a609492611aa6611a3392611a6c999694963d8a11611ab8575b611a9e81836108d7565b8101906115b2565b9a909a979850509294509290926119f7565b503d611a94565b611ac76113d7565b6119ed565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91611af781611e9b565b8091611b0286612096565b9586946040938491611b2783519889938493636ec6cf1560e01b8552600485016115d6565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611c09575b6000958693611bc7575b5091611bb691611b87611bc29594611b68610935565b93611b738a8661142f565b60208501526000868501526060840161142f565b6000608083015260a0820152611b9f60c0820161143c565b611bb186611bac32610ab6565b610ace565b611672565b51928392329684611784565b0390a2565b611b87965084935091611bf5611bb693611bc2963d8711611c02575b611bed81836108d7565b8101906115b2565b9790979495505091611b52565b503d611be3565b611c116113d7565b611b48565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91611c4181611f38565b8091611c4c86612138565b9586946040938491611c7183519889938493636ec6cf1560e01b8552600485016115d6565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611d53575b6000958693611d11575b5091611d0091611cca611d0c9594611cb2610935565b93611cbd8a8661142f565b602085015285840161142f565b600060608301526080820152600060a0820152611ce960c0820161143c565b611cfb86611cf632610ab6565b610ace565b611672565b51928392329684611826565b0390a2565b611cca965084935091611d3f611d0093611d0c963d8711611d4c575b611d3781836108d7565b8101906115b2565b9790979495505091611c9c565b503d611d2d565b611d5b6113d7565b611c92565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f611d89611f95565b9182611d93612199565b9384926040918291611db883519687938493636ec6cf1560e01b8552600485016115d6565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af48015611e8e575b6000938491611e52575b5090611e41611e4d92611df3610935565b90611dfe878361142f565b60208201526000838201526000606082015260006080820152600060a0820152611e2a60c0820161143c565b611e3c86611e3732610ab6565b610ace565b611672565b519283923296846118c8565b0390a2565b611e419450829150611e7c90611e4d933d8411611e87575b611e7481836108d7565b8101906115b2565b949094919250611de2565b503d611e6a565b611e966113d7565b611dd8565b9060609180158060011680600114611f1757600014611eb9575b5050565b80600114611ef157600014611ecf575b80611eb5565b9150604051916002835260208301523260408301526060820160405238611ec9565b505090506040519060028252600060208301523260408301526060820160405238611ec9565b50505090506040519060018252326020830152604082016040523880611eb5565b90606091600181151680600114611f7657600014611f54575b50565b9150604051916002835260208301523260408301526060820160405238611f51565b5050905060405190600182523260208301526040820160405238611f51565b604051906001825232602083015260408201604052565b91909160609280158215908082168060011461207157600014611fd0575b50505050565b8060011461204a57600014611fe6575b80611fca565b8060011461202557600014611ffc575b80611fe0565b909250604051926003845260208401526040830152326060830152608082016040523880611ff6565b5092505060405191600283526020830152326040830152606082016040523880611ff6565b50505091506040519160028352602083015232604083015260608201604052388080611fe0565b5050505050905060405190600182523260208301526040820160405238808080611fca565b9060609180158060011680600114612116576000146120b4575b5050565b806001146120ef576000146120ca575b806120b0565b91506040519160028352806020840152606403604083015260608201604052386120c4565b505090506040519060028252600060208301526064604083015260608201604052386120c4565b50505090506040519060018252606460208301526040820160405238806120b0565b9060609160018115168060011461217957600014612154575b50565b9150604051916002835280602084015260640360408301526060820160405238612151565b505090506040519060018252606460208301526040820160405238612151565b60405190600182526064602083015260408201604052565b919091606092801582159080821680600114612281576000146121d5575b50505050565b80600114612257576000146121eb575b806121cf565b8060011461222f57600014612201575b806121e5565b90925060405192600384528060208501528160408501520160640360608301526080820160405238806121fb565b50925050604051916002835280602084015260640360408301526060820160405238806121fb565b505050915060405191600283528060208401526064036040830152606082016040523880806121e5565b5050505050905060405190600182526064602083015260408201604052388080806121cf565b60209067ffffffffffffffff81116122c1575b60051b0190565b6122c9610896565b6122ba565b906122d8826122a7565b6122e560405191826108d7565b82815280926122f6601f19916122a7565b0190602036910137565b600554330361230b57565b6001630995110d60e31b0360005260046000fd5b90600661233b60ff923260005260046020526040600020610ace565b0154161590600114151761234b57565b634ca8886760e01b60005260046000fd5b6103e860198206151591111761236e57565b63e0e54ced6000526004601cfd5b906040600092815190600360208301528282015220541561239a575b565b9050600090612398565b60018060a01b037f00000000000000000000000000000000000000000000000000000000000000001630141560001461241b57606460405162461bcd60e51b815260206004820152600860248201527f4241445f43414c4c0000000000000000000000000000000000000000000000006044820152fd5b565b909160559260ff60f81b83526bffffffffffffffffffffffff199060601b16600183015260158201527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f60358201520190565b6017916135a560f21b82526bffffffffffffffffffffffff199060601b166002820152600160f81b6016820152019056fea2646970667358221220be522c5c6385090f6986d4c9611850289fb613cdfa2f1256a03595f249bf636664736f6c63430008100033";

type MADFactory721ConstructorParams =
  | [linkLibraryAddresses: MADFactory721LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory721__factory extends ContractFactory {
  constructor(...args: MADFactory721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory721__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory721LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$785115ade85da2325a219769175abf82ff\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory721> {
    return super.deploy(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADFactory721>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory721 {
    return super.attach(address) as MADFactory721;
  }
  override connect(signer: Signer): MADFactory721__factory {
    return super.connect(signer) as MADFactory721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory721Interface {
    return new utils.Interface(_abi) as MADFactory721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory721 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory721;
  }
}

export interface MADFactory721LibraryAddresses {
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
