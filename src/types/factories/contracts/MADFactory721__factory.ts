/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADFactory721,
  MADFactory721Interface,
} from "../../contracts/MADFactory721";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC721BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC721Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "_project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034620001e157601f620022e638819003918201601f19168301916001600160401b03831184841017620001e657808492606094604052833981010312620001e1576200004d81620001fc565b6200006960406200006160208501620001fc565b9301620001fc565b9060009160018355306080526001546040519033857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768185a36001600160a81b0319163360ff60a01b1916176001556001600160a01b039280841691821515908180620001d5575b15620001a55750620000e39062000211565b6006557f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc84604051a2818416936200011d85151562000211565b600755604051937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738486a216908162000167575b612095838162000251823960805181611fdf0152f35b600880546001600160a01b031916831790557fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9139083a2388062000151565b62461bcd60e51b815260206004820152600b60248201526a5a65726f4164647265737360a81b6044820152606490fd5b508588161515620000d1565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001e157565b156200021957565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde03146101df57806313af4035146101d65780633f4ba83a146101cd5780635c975abb146101c4578063617d1d3b146101bb5780636c19e783146101b25780636dcea85f146101a957806376de0f3d146101a0578063785e9e861461019757806380f556051461018e5780638456cb59146101855780638691fe461461017c5780638da5cb5b1461017357806395cd51931461016a5780639750f2e014610161578063b64bd5eb14610158578063b7762c6d1461014f578063bc8b583814610146578063c0d786551461013d578063d93cb8fd14610134578063f887ea401461012b578063f9f411d8146101225763fa2405171461011a57600080fd5b61000e610e74565b5061000e610e16565b5061000e610dbe565b5061000e610d89565b5061000e610d15565b5061000e610bca565b5061000e610a0d565b5061000e6109a9565b5061000e610904565b5061000e61085c565b5061000e61071b565b5061000e6106dd565b5061000e610666565b5061000e61063c565b5061000e610612565b5061000e61051f565b5061000e610483565b5061000e61040f565b5061000e6103d9565b5061000e6103b2565b5061000e610315565b5061000e610270565b5061000e610228565b919082519283825260005b848110610214575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016101f3565b503461000e57600036600319011261000e57602080526707666163746f727960475260606020f35b6001600160a01b0381160361000e57565b60e4359061026e82610250565b565b503461000e57602036600319011261000e5760043561028e81610250565b6001546001600160a01b03906102a790821633146112fa565b811680156102e05760009160015560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b503461000e57600036600319011261000e5760015461033e336001600160a01b038316146112fa565b60ff8160a01c16156103825760ff60a01b19166001556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1005b60405162461bcd60e51b8152602060048201526008602482015267155394105554d15160c21b6044820152606490fd5b503461000e57600036600319011261000e57602060ff60015460a01c166040519015158152f35b503461000e57602036600319011261000e5760206004356103f981610250565b604051906001600160601b03199060601b168152f35b503461000e57602036600319011261000e57600060043561042f81610250565b6001546001600160a01b039061044890821633146112fa565b811690610456821515611335565b600755604051907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738383a2f35b503461000e57602036600319011261000e5760006004356104a381610250565b6001546001600160a01b03906104bc90821633146112fa565b8116906104ca821515611335565b600655604051907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc8383a2f35b604090600319011261000e5760043561050f81610250565b9060243561051c81610250565b90565b503461000e5761052e366104f7565b60009160065433036106005782604080516003602082015284828201522054156105f8575b156105f3575b6001600160601b03199060601b1661058c6105868360018060a01b03166000526003602052604060002090565b54611f1c565b519160005b8381106105a9576040518515158152602090f35b0390f35b6105db6105d1826105cc8560018060a01b03166000526003602052604060002090565b610de8565b90549060031b1c90565b83146105ea575b600101610591565b600194506105e2565b610559565b506000610553565b6001630995110d60e31b038352600483fd5b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576006546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e5760015461068f336001600160a01b038316146112fa565b61069f60ff8260a01c1615610f2d565b60ff60a01b1916600160a01b176001556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b503461000e57602036600319011261000e576004356106fb81610250565b60018060a01b031660005260036020526020604060002054604051908152f35b503461000e57600036600319011261000e576001546040516001600160a01b039091168152602090f35b6004359060ff8216820361000e57565b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761078857604052565b610790610755565b604052565b90601f8019910116810190811067ffffffffffffffff82111761078857604052565b6040519060a0820182811067ffffffffffffffff82111761078857604052565b6040519060e0820182811067ffffffffffffffff82111761078857604052565b81601f8201121561000e5780359067ffffffffffffffff821161084f575b6040519261082d601f8401601f191660200185610795565b8284526020838301011161000e57816000926020809301838601378301015290565b610857610755565b610815565b503461000e5761012036600319011261000e57610877610745565b67ffffffffffffffff9060243582811161000e576108999036906004016107f7565b60443583811161000e576108b19036906004016107f7565b9160643584811161000e576108ca9036906004016107f7565b9160c43594851161000e576108e66109029536906004016107f7565b916108ef610261565b93610104359560a4359360843593610f62565b005b503461000e5760e0610941610918366104f7565b6001600160a01b0391821660009081526004602090815260408083209385168352929052209091565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b602090600319011261000e5760043590565b503461000e576109b836610997565b6000906109c3611f4e565b8152600260205260408120546001600160a01b031690328214610a05575b156109f757604090815190815260016020820152f35b634ca888676000526004601cfd5b5060016109e1565b503461000e5760a036600319011261000e5760043567ffffffffffffffff811161000e57610a3f9036906004016107f7565b602435610a4b81610250565b60443590610a5882610250565b6064359160843590610a6e600160005414610ef4565b6002600055610a7b611fdd565b610a8d60ff60015460a01c1615610f2d565b6001600160a01b03838116158080610bc0575b15610abe57505050505050610ab490611a89565b6109026001600055565b8015918280610bb6575b80610bad575b80610ba3575b15610aec575050505050610ae792611974565b610ab4565b83959396949616151580918192610b9b575b5080610b92575b80610b88575b15610b1d5750505050610ae792611860565b92939281610b80575b5080610b77575b80610b6d575b80610b64575b80610b5a575b15610b4d57610ae794611678565b62adecf06000526004601cfd5b5060478410610b3f565b50831515610b39565b5060158310610b33565b50821515610b2d565b905038610b26565b50605b8610610b0b565b50851515610b05565b905038610afe565b5060158710610ad4565b50861515610ace565b5080841615610ac8565b5081831615610aa0565b503461000e57602036600319011261000e5760043567ffffffffffffffff811161000e57610cfb610c026105a59236906004016107f7565b60208151910120604051610c158161076c565b601081526f67363d3d37363d34f03d5260086018f360801b6020918201526040516001600160f81b03199181019182526bffffffffffffffffffffffff193060601b16602182015260358101929092527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f6055808401919091528252601f1991610cb49190610ca5607582610795565b5190206001600160a01b031690565b6040516135a560f21b6020820190815260609290921b6bffffffffffffffffffffffff19166022820152600160f81b6036820152603792830181529091610ca59082610795565b6040516001600160a01b0390911681529081906020820190565b503461000e57602036600319011261000e576000600435610d3581610250565b6001546001600160a01b0390610d4e90821633146112fa565b811690610d5c821515611335565b600555604051907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc808383a2f35b503461000e57610d9836610997565b610da0611f4e565b6000526002602052602060406000205460a01c60ff60405191168152f35b503461000e57600036600319011261000e576005546040516001600160a01b039091168152602090f35b8054821015610e005760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b503461000e57604036600319011261000e57600435610e3481610250565b6001600160a01b031660009081526003602052604090208054602435919082101561000e57602091610e6591610de8565b90549060031b1c604051908152f35b503461000e57610e8336610997565b600052600260205260406000208054600360ff8260a01c1692600181015460028201549160018060a01b0393849101541692604051941684526004851015610ede5760a0946020850152604084015260608301526080820152f35b634e487b7160e01b600052602160045260246000fd5b15610efb57565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b15610f3457565b60405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606490fd5b979294909593919697600054600114610f7a90610ef4565b6002600055610f87611fdd565b8860015460a01c60ff1615610f9b90610f2d565b610fa491611f6e565b610fad83611fbd565b6005548890869089906001600160a01b03166008549099906001600160a01b03168760409b8c96888a89519d8e998a996373c7896760e01b8b5260048b0199610ff59a611154565b038173__$785115ade85da2325a219769175abf82ff$__5af4928315967fd38668b789b354d9abe5d3efe253309559c51f02aa63fc24edd259c1961180109761112b575b60009586956110f1575b506110c96110e495966110c48c6110b46001600160601b03198b60601b1691611087836110823260018060a01b03166000526003602052604060002090565b6111e6565b61108f6107b7565b3281529460016020870152858801524360608601526001600160a01b03166080850152565b6000526002602052604060002090565b611230565b516001600160a01b03958616999095169794958695866112c0565b0390a361026e6001600055565b6110c996506110e4955061111a90823d8411611124575b6111128183610795565b810190611138565b9690969550611043565b503d611108565b6111336111d9565b611039565b919082604091031261000e576020825192015161051c81610250565b98949a99959261119a9061118c6111a89461117e6101209c9b98958e6101409081815201906101e8565b8d810360208f0152906101e8565b908b820360408d01526101e8565b9089820360608b01526101e8565b608088019990995260a08701526001600160a01b0390811660c087015292831660e086015261010085015216910152565b506040513d6000823e3d90fd5b80546112099168010000000000000000821015611223575b600182018155610de8565b819291549060031b600019811b9283911b16911916179055565b61122b610755565b6111fe565b815181546001600160a01b0319166001600160a01b039190911617815560208201516004811015610ede57815460ff60a01b191660a09190911b60ff60a01b1617815560408201516001820155606082015160028201556080919091015161026e91906003906001600160a01b0316910180546001600160a01b0319166001600160a01b03909216919091179055565b916112eb906112dd6080959897969360a0865260a08601906101e8565b9084820360208601526101e8565b95604083015260608201520152565b1561130157565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b1561133c57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b919082604091031261000e576020825161138c81610250565b92015190565b91906113a6906060845260608401906101e8565b916020928181038483015283808451928381520193019060005b81811061140357505050604081830391015281808451928381520193019160005b8281106113ef575050505090565b8351855293810193928101926001016113e1565b82516001600160a01b0316855293850193918501916001016113c0565b91909392936080830160808452815180915260a084019060208093019060005b8181106114a2575050508381038285015281808451928381520193019160005b828110611485575050506001600160a01b039094166040830152925060039060600152565b83516001600160a01b031685529381019392810192600101611460565b825184529284019291840191600101611440565b91909392936080830160808452815180915260a084019060208093019060005b818110611538575050508381038285015281808451928381520193019160005b82811061151b575050506001600160a01b039094166040830152925060029060600152565b83516001600160a01b0316855293810193928101926001016114f6565b8251845292840192918401916001016114d6565b91909392936080830160808452815180915260a084019060208093019060005b8181106115ce575050508381038285015281808451928381520193019160005b8281106115b1575050506001600160a01b039094166040830152925060019060600152565b83516001600160a01b03168552938101939281019260010161158c565b82518452928401929184019160010161156c565b91909392936080830160808452815180915260a084019060208093019060005b818110611664575050508381038285015281808451928381520193019160005b828110611647575050506001600160a01b039094166040830152925060009060600152565b83516001600160a01b031685529381019392810192600101611622565b825184529284019291840191600101611602565b91939092600080516020612040833981519152936116968682611c69565b92826116a3828695611e0b565b97889660409586916116c883519a8b938493636ec6cf1560e01b855260048501611392565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4938415611853575b6000978895611806575b509161173f6117f5949261172f61180198979561170e6107d7565b6001600160a01b038d1681529660208801526001600160a01b031688870152565b6001600160a01b03166060850152565b608083015260a0820152600160c08201525b3260009081526004602090815260408083206001600160a01b038a1684529091529020815181546001600160a01b03199081166001600160a01b03928316178355602084015160018401556040840151600284018054918416918316919091179055606084015160038401805491909316911617905560c0906006906080840151600482015560a0840151600582015501910151151560ff80198354169116179055565b51928392329684611420565b0390a2565b61172f98508695506117f5949261183b61173f92611801999694963d8a1161184c575b6118338183610795565b810190611373565b909a509697509294509092906116f3565b503d611829565b61185b6111d9565b6116e9565b6000805160206120408339815191529161187981611bae565b809161188486611d4a565b95869460409384916118a983519889938493636ec6cf1560e01b855260048501611392565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611967575b6000958693611936575b509161192a9161191261180195946118ea6107d7565b6001600160a01b038a1681529360208501526000868501526001600160a01b03166060840152565b6000608083015260a0820152600160c0820152611751565b519283923296846114b6565b61191296508493509161195b61192a93611801963d871161184c576118338183610795565b909750939450916118d4565b61196f6111d9565b6118ca565b6000805160206120408339815191529161198d81611c35565b809161199886611dd6565b95869460409384916119bd83519889938493636ec6cf1560e01b855260048501611392565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611a7c575b6000958693611a4b575b5091611a3f91611a1f61180195946119fe6107d7565b6001600160a01b038a1681529360208501526001600160a01b031685840152565b600060608301526080820152600060a082015261175160c0820160019052565b5192839232968461154c565b611a1f965084935091611a70611a3f93611801963d871161184c576118338183610795565b909750939450916119e8565b611a846111d9565b6119de565b600080516020612040833981519152611ab2604051906001825232602083015260408201604052565b9182611acf60405190600182526064602083015260408201604052565b9384926040918291611af483519687938493636ec6cf1560e01b855260048501611392565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af48015611ba1575b6000938491611b75575b5090611b6961180192611b2f6107d7565b6001600160a01b03871681529060208201526000838201526000606082015260006080820152600060a082015261175160c0820160019052565b519283923296846115e2565b611b699450829150611b9690611801933d841161184c576118338183610795565b949094919250611b1e565b611ba96111d9565b611b14565b9060609180158060011680600114611c195715611bc9575050565b80600114611bf75715611bd95750565b91506040519160028352602083015232604083015260608201604052565b5050905060405190600282526000602083015232604083015260608201604052565b5050509050604051906001825232602083015260408201604052565b90606091600181151680600114611c4e5715611bd95750565b50509050604051906001825232602083015260408201604052565b606092918115811581811660018114611d255715611c88575b50505050565b80600114611cfe5715611c9c575b80611c82565b80600114611cd95715611cb0575b80611c96565b909250604051926003845260208401526040830152326060830152608082016040523880611caa565b5092505060405191600283526020830152326040830152606082016040523880611caa565b50505091506040519160028352602083015232604083015260608201604052388080611c96565b5050505050905060405190600182523260208301526040820160405238808080611c82565b9060609180158060011680600114611db95715611d65575050565b80600114611d965715611d755750565b91506040519160028352806020840152606403604083015260608201604052565b505090506040519060028252600060208301526064604083015260608201604052565b505050905060405190600182526064602083015260408201604052565b90606091600181151680600114611def5715611d755750565b5050905060405190600182526064602083015260408201604052565b606092918115811581811660018114611ecf5715611e295750505050565b80600114611ea55715611e3c5780611c82565b80600114611e7d5715611e4f5780611c96565b9092506040519260038452806020850152816040850152016064036060830152608082016040523880611caa565b5092505060405191600283528060208401526064036040830152606082016040523880611caa565b50505091506040519160028352806020840152606403604083015260608201604052388080611c96565b505050505090506040519060018252606460208301526040820160405238808080611c82565b60209067ffffffffffffffff8111611f0f575b60051b0190565b611f17610755565b611f08565b90611f2682611ef5565b611f336040519182610795565b8281528092611f44601f1991611ef5565b0190602036910137565b6005543303611f5957565b6001630995110d60e31b036000908152600490fd5b906006611f9c60ff9232600052600460205260406000209060018060a01b0316600052602052604060002090565b01541615906001141517611fac57565b634ca8886760e01b60005260046000fd5b6103e8601982061515911117611fcf57565b63e0e54ced6000526004601cfd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361200f57565b60405162461bcd60e51b815260206004820152600860248201526710905117d0d0531360c21b6044820152606490fdfec3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7fa26469706673582212202ba7a216a0aa25b4e5f8d579a379f4967840d1a113b9718e0c076f3ca1708e2d64736f6c63430008100033";

type MADFactory721ConstructorParams =
  | [linkLibraryAddresses: MADFactory721LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory721__factory extends ContractFactory {
  constructor(...args: MADFactory721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory721__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory721LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$785115ade85da2325a219769175abf82ff\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory721> {
    return super.deploy(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADFactory721>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory721 {
    return super.attach(address) as MADFactory721;
  }
  override connect(signer: Signer): MADFactory721__factory {
    return super.connect(signer) as MADFactory721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory721Interface {
    return new utils.Interface(_abi) as MADFactory721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory721 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory721;
  }
}

export interface MADFactory721LibraryAddresses {
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
