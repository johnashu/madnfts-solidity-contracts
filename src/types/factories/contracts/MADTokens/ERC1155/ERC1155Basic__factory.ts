/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../contracts/MADTokens/ERC1155/ERC1155Basic";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "URILocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURILocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liveSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "balance",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "erc20Owner",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBaseURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriLock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200035b5762002f3b803803806200001d8162000375565b92833981019060e0818303126200035b5780516001600160401b03908181116200035b57820191601f918483850112156200035b578351908082116200031057602091601f1995620000758488888501160162000375565b978289528483830101116200035b57839060005b83811062000360575050600091880101528183015160408401519160608501519660018060a01b03968789168099036200035b5760808701516001600160601b0381169a908b90036200035b5760a0880151978989168099036200035b5760c001519889168099036200035b5787156200032657600280546001600160a01b03199081168a179091559760007f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a36001968760035581519485116200031057600954938885811c9516801562000305575b82861014620002ef57848487961162000292575b5081938511600114620002285750506000926200021c575b5050600019600383901b1c191690841b176009555b600b55600c55838260045416176004558460005583828254161790556005541617600555604051917fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c600080a27f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b1600080a2612b9f90816200039c8239f35b01519050388062000188565b88959392919316600960005283600020936000905b8282106200027857505084116200025e575b505050811b016009556200019d565b015160001960f88460031b161c191690553880806200024f565b8484015186558a979095019493840193908101906200023d565b9091929394506009600052826000208580880160051c820192858910620002e5575b9188978c9297969594930160051c01915b828110620002d557505062000170565b600081558897508b9101620002c5565b92508192620002b4565b634e487b7160e01b600052602260045260246000fd5b94607f16946200015c565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260048101889052600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b600080fd5b8181018301518a820184015285920162000089565b6040519190601f01601f191682016001600160401b03811183821017620003105760405256fe6080604052600436101561001257600080fd5b60003560e01c8062f7486714610250578062fdd58e1461024b57806301ffc9a71461024657806305e39833146102415780630e89341c1461023c57806313af40351461023757806318160ddd146101d85780631b2ef1ca1461023257806322ab47a11461022d5780632a55205a146102285780632eb2c2d6146102235780633cd8045e1461021e5780634e1273f41461021957806351cff8d91461021457806355f804b31461020f57806366c879a91461020a5780636c0360eb14610205578063785e9e8614610200578063879fbedf146101fb5780638da5cb5b146101f65780639456fbcc146101f15780639659867e146101ec578063a035b1fe146101e7578063a22cb465146101e2578063bc197c81146101dd578063cb4f1c18146101d8578063d351cfdc146101d3578063d580725d146101ce578063d5abeb01146101c9578063d6fa7b10146101c4578063d78147cb146101bf578063e1c38ed9146101ba578063e985e9c5146101b5578063f23a6e61146101b0578063f242432a146101ab5763f745586f146101a657600080fd5b611c44565b611ada565b611ab5565b611a01565b6119e3565b6118a4565b6117dc565b6117be565b61171d565b611533565b610593565b611497565b611405565b6113e7565b6113c9565b611109565b6110e0565b611077565b61104e565b610f8e565b610ee6565b610e74565b610b7d565b610aa9565b610a3b565b610819565b610701565b6106de565b6105b1565b6104f4565b61042a565b6103ab565b610325565b6102cb565b61027a565b6001600160a01b0381160361026657565b600080fd5b6064359061027882610255565b565b346102665760403660031901126102665760206102c260243561029c81610255565b600435600052600f835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b346102665760403660031901126102665760206102c26004356102ed81610255565b602435600052600f835260406000209060018060a01b0316600052602052604060002090565b6001600160e01b031981160361026657565b3461026657602036600319011261026657602060043561034481610313565b63ffffffff60e01b166301ffc9a760e01b811490811561039a575b8115610389575b8115610378575b506040519015158152f35b63152a902d60e11b1490503861036d565b6303a24d0760e21b81149150610366565b636cdb3d1360e11b8114915061035f565b3461026657600036600319011261026657602060ff600a54166040519015158152f35b60005b8381106103e15750506000910152565b81810151838201526020016103d1565b9060209161040a815180928185528580860191016103ce565b601f01601f1916010190565b9060206104279281815201906103f1565b90565b346102665760203660031901126102665760043560075481116104e6576040519060808201604052607f820190600a80603092818106840185530491825b6104cd576104c96104a06104bd86886080601f199283810192030181526104b160405194859261049a60208501611fbc565b90612039565b64173539b7b760d91b815260050190565b03908101835282610e38565b60405191829182610416565b0390f35b9080929360001901938181068301855304919082610468565b63bad086ea6000526004601cfd5b346102665760203660031901126102665760043561051181610255565b6002546001600160a01b039061052a9082163314611d7a565b811690811561055e57600255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76600080a3005b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b34610266576000366003190112610266576020600654604051908152f35b6040806003193601126102665760043590602435906001906105d68260035414611d41565b600260035560ff600d5416156106ce576105f08385611de1565b6007549081018091116106b957600c54106106be57600b54610610612478565b6008548181018091116106b9576008556106338661062d3361240c565b93611de1565b9081018091116106b957036106a957919061064d336122b1565b6000925b84841061067a575050501061066c5761066a6001600355565b005b63dfb035c96000526004601cfd5b908092936106a0610689612277565b8685519161069683610e18565b6000835233612748565b01929190610651565b5163f7760f2560e01b8152600490fd5b611db5565b5163d05cb60960e01b8152600490fd5b516316851fc760e11b8152600490fd5b3461026657600036600319011261026657602060ff600d54166040519015158152f35b3461026657604036600319011261026657604060018060a01b0360015416612710610730600054602435611de1565b0482519182526020820152f35b9181601f84011215610266578235916001600160401b038311610266576020808501948460051b01011161026657565b9181601f84011215610266578235916001600160401b038311610266576020838186019501011161026657565b9060a0600319830112610266576004356107b381610255565b916024356107c081610255565b916001600160401b0360443581811161026657836107e09160040161073d565b9390939260643583811161026657826107fb9160040161073d565b93909392608435918211610266576108159160040161076d565b9091565b34610266576108273661079a565b9061083a83869498959699979914611f08565b6001600160a01b0386811694903386148015610a06575b61085a906124d1565b8460005b888c8b8d85851061094b57505050505050811680958a7f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6108a98c6040519182918d8c3397856126a0565b0390a43b1561093857966108de60009260209798996040519a8b988997889663bc197c8160e01b9d8e89523360048a016126c7565b03925af180156109335761066a92600091610905575b506001600160e01b0319161461262d565b610926915060203d811161092c575b61091e8183610e38565b8101906125c4565b386108f4565b503d610914565b612217565b5050509250505061066a91501515612584565b61096a85610987926109638260019a6109f89861266c565b359661266c565b35936109a661099e8461098784600052600f602052604060002090565b9060018060a01b0316600052602052604060002090565b54151561250e565b6109ca856109c28561098785600052600f602052604060002090565b541015612547565b6109e28961098783600052600f602052604060002090565b858154019055600052600f602052604060002090565b90815403905501859061085e565b5061085a610a34610a2d336109878c60018060a01b0316600052600e602052604060002090565b5460ff1690565b9050610851565b34610266576000366003190112610266576004546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b828110610a84575050505090565b835185529381019392810192600101610a76565b906020610427928181520190610a64565b3461026657604080600319360112610266576001600160401b0360043581811161026657610adb90369060040161073d565b9160243590811161026657610af490369060040161073d565b92610b00848214611f08565b610b0981612223565b93600091825b818110610b23578751806104c98982610a98565b80610b6b610b34600193858a61266c565b35610b3e81610255565b610b4983878a61266c565b358752600f6020528a87209060018060a01b0316600052602052604060002090565b54610b76828a611e17565b5201610b0f565b34610266576020806003193601126102665760048035610b9c81610255565b6002546001600160a01b03938391610bb79086163314611d7a565b8154610bd3906001600160a01b03165b6001600160a01b031690565b928160409485519687809263e919ecad60e01b82525afa94851561093357600095610de3575b50610c0385612223565b93610c0d86612223565b966008549081151580610dd8575b15610dcd5790610c3691610c2f8247612255565b9416612a11565b610c406000600855565b835460009390610c58906001600160a01b0316610bc7565b935b878110610ca75788888860005b828110610c7057005b80610ca1610c90610c8360019486611e17565b516001600160a01b031690565b610c9a8388611e17565b5190612a11565b01610c67565b825190631419245f60e11b8252828280610cc8848b83019190602083019252565b0381895afa91821561093357600092610d9e575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561093357610d488a610d4e9260019686610d5696600093610d67575b50610d3490610d439394611e17565b6001600160a01b039091169052565b611dcb565b87611de1565b612710900490565b610d60828c611e17565b5201610c5a565b610d43935090610d8f610d34928c8d3d10610d97575b610d878183610e38565b810190612208565b935090610d25565b503d610d7d565b610dbf919250833d8511610dc6575b610db78183610e38565b810190612262565b9038610cdc565b503d610dad565b505090504790610c40565b508084161515610c1b565b610dfb919550823d8411610d9757610d878183610e38565b9338610bf9565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117610e3357604052565b610e02565b90601f801991011681019081106001600160401b03821117610e3357604052565b6001600160401b038111610e3357601f01601f191660200190565b34610266576020366003190112610266576004356001600160401b0381116102665736602382011215610266578060040135610eaf81610e59565b90610ebd6040519283610e38565b808252366024828501011161026657602081600092602461066a96018386013783010152612050565b3461026657600080600319360112610f5157610f0d60018060a01b03600254163314611d7a565b600160ff19600a541617600a5560405180610f2781611fbc565b0390207f8f0a54da7ee5bbe880036935fcef1dc9f0568cbde68bcbd5e1eedd56df052ca08280a280f35b80fd5b90600182811c92168015610f84575b6020831014610f6e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f63565b3461026657600080600319360112610f51576040519080600954610fb181610f54565b808552916001918083169081156110245750600114610fdb575b6104c9856104bd81870382610e38565b925060098352600080516020612b4a8339815191525b82841061100c5750505081016020016104bd826104c9610fcb565b80546020858701810191909152909301928101610ff1565b8695506104c9969350602092506104bd94915060ff191682840152151560051b8201019293610fcb565b34610266576000366003190112610266576005546040516001600160a01b039091168152602090f35b3461026657602036600319011261026657600435801515809103610266576110aa60018060a01b03600254163314611d7a565b60ff19600d541660ff821617600d557f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e6600080a2005b34610266576000366003190112610266576002546040516001600160a01b039091168152602090f35b34610266576040806003193601126102665760049081359061112a82610255565b6024359161113783610255565b6002546001600160a01b0394906111519086163314611d7a565b8054611165906001600160a01b0316610bc7565b835194859163e919ecad60e01b8352828460209485935afa958615610933576000966113aa575b5061119686612223565b946111a087612223565b976000600854908115158061139f575b15611342575082516370a0823160e01b815230878201908152909286918491908290819060200103918b165afa801561093357816111fa9161120194600091611325575b50612255565b9387612ad8565b61120b6000600855565b835460009390611223906001600160a01b0316610bc7565b935b8881106112695750505050505060005b83811061123e57005b80611263611251610c8360019487611e17565b61125b8389611e17565b519085612ad8565b01611235565b825190631419245f60e11b825282828061128a848b83019190602083019252565b0381895afa91821561093357600092611306575b50835163b34c8caf60e01b81526001600160a01b03831688820190815284908290819060200103818a5afa801561093357610d488b610d4e92600196866112f596600093610d675750610d3490610d439394611e17565b6112ff828d611e17565b5201611225565b61131e919250833d8511610dc657610db78183610e38565b903861129e565b61133c9150883d8a11610d9757610d878183610e38565b386111f4565b83516370a0823160e01b8152308882019081529495509093909286925083918290819060200103918a165afa9182156109335791611382575b509061120b565b6113999150833d8511610d9757610d878183610e38565b3861137b565b5082851615156111b0565b6113c2919650823d8411610d9757610d878183610e38565b943861118c565b34610266576000366003190112610266576020600754604051908152f35b34610266576000366003190112610266576020600b54604051908152f35b346102665760403660031901126102665760043561142281610255565b6024359081151580920361026657336000908152600e602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b34610266576114a53661079a565b5050505050505050602060405163bc197c8160e01b8152f35b6001600160401b038111610e335760051b60200190565b81601f82011215610266578035916114ec836114be565b926114fa6040519485610e38565b808452602092838086019260051b820101928311610266578301905b828210611524575050505090565b81358152908301908301611516565b60403660031901126102665760046001600160401b0381358181116102665761155f90369084016114d5565b906024359081116102665761157790369084016114d5565b60016115868160035414611d41565b600260035560ff600d5416156116b05761159f82611f84565b6007549081018091116106b957600c541061169f57600b5483516115c1612478565b90600854908282018092116106b9576115e09160085561062d3361240c565b9081018091116106b9570361168e576115fc8351835114611f46565b6116053361240c565b83516005549092916001600160a01b03909116908161167a575b50506000905b82821061165d57501061165057611646925061163f611e30565b9133612888565b61066a6001600355565b8263dfb035c9600052601cfd5b8161167261166c839487611e17565b51612295565b500190611625565b6116879130903390612a5c565b388061161f565b60405163f7760f2560e01b81528490fd5b60405163d05cb60960e01b81528490fd5b6040516316851fc760e11b81528490fd5b6080600319820112610266576004356116d981610255565b916001600160401b0360243581811161026657836116f9916004016114d5565b9260443591821161026657611710916004016114d5565b9060643561042781610255565b611726366116c1565b61173e60018060a09695961b03600254163314611d7a565b61174782611f84565b6007549081018091116106b957600c54106117ac57611765906122fc565b825160005b818110611790571061066c5761066a926040519261178784610e18565b60008452612888565b8061179d60019285611e17565b5160069081540190550161176a565b60405163d05cb60960e01b8152600490fd5b34610266576000366003190112610266576020600c54604051908152f35b6080366003190112610266576001600160401b036004358181116102665736602382011215610266578060040135611813816114be565b916118216040519384610e38565b81835260209160248385019160051b8301019136831161026657602401905b82821061188b578585602435828111610266576118619036906004016114d5565b6044359283116102665761187c61066a9336906004016114d5565b9061188561026b565b92611e43565b838091833561189981610255565b815201910190611840565b6118ad366116c1565b6002549293926001600160a01b03916118df916118cd9084163314611d7a565b6118da8651855114611f08565b612358565b835160005b8181106119b2571061066c578216916118fe831515612935565b83519060005b82811061194757600085877f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61194288604051918291339583612818565b0390a4005b8061195460019288611e17565b516119836119708561098784600052600f602052604060002090565b5461197b8489611e17565b51111561250e565b6119a684610987611994858a611e17565b5193600052600f602052604060002090565b90815403905501611904565b6119bc8185611e17565b5190600680549283156119d557600193039055016118e4565b63ce3a3d376000526004601cfd5b34610266576000366003190112610266576020600854604051908152f35b3461026657604036600319011261026657602060ff611a5d600435611a2581610255565b60243590611a3282610255565b60018060a01b0316600052600e845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b60a060031982011261026657600435611a8181610255565b91602435611a8e81610255565b916044359160643591608435906001600160401b038211610266576108159160040161076d565b3461026657611ac336611a69565b505050505050602060405163f23a6e6160e01b8152f35b3461026657611ae836611a69565b9294929390916001600160a01b0380851692903384148015611c16575b611b0e906124d1565b611b2961099e876109878b600052600f602052604060002090565b611b45836109c2886109878c600052600f602052604060002090565b611b5d826109878a600052600f602052604060002090565b611b68848254611df4565b9055611b82866109878a600052600f602052604060002090565b611b8d848254612255565b905581168093887fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260405180611bd28833958360209093929193604081019481520152565b0390a43b15611c0557600060209495966108de6040519889968795869463f23a6e6160e01b9b8c875233600488016125fa565b509250505061066a91501515612584565b50611b0e611c3d610a2d336109878a60018060a01b0316600052600e602052604060002090565b9050611b05565b608036600319011261026657600435611c5c81610255565b602435906044356001600160401b03811161026657611c7f9036906004016114d5565b9060643590611c8d82610255565b600191611c9d8360035414611d41565b6002600355611cb760018060a01b03600254163314611d7a565b611cc985611cc486611f84565b611de1565b6007549081018091116106b957600c54106117ac578492611cea85926122fc565b6000925b848410611d07575050501061066c5761066a6001600355565b90809293611d38611d16612277565b611d208388611e17565b5160405191611d2e83610e18565b6000835286612748565b01929190611cee565b15611d4857565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b15611d8157565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b906064820291808304606414901517156106b957565b818102929181159184041417156106b957565b919082018092116106b957565b634e487b7160e01b600052603260045260246000fd5b8051821015611e2b5760209160051b010190565b611e01565b60405190611e3d82610e18565b60008252565b919092611e5f906118da60018060a01b03600254163314611d7a565b60009283918151938481511480611efe575b611e7e9093929193611f08565b848410611e9d5750505010611e905750565b63dfb035c990526004601cfd5b909192611eaa8183611e17565b5160069081548015611ef157039055600190611ee8611ecc610c838388611e17565b611ed68387611e17565b51611ee18487611e17565b5191612970565b01929190611e7e565b63ce3a3d3789526004601cfd5b5081518514611e71565b15611f0f57565b60405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606490fd5b15611f4d57565b60405162461bcd60e51b815260206004820152600f60248201526e09a92a69a82a88690be988a9c8ea89608b1b6044820152606490fd5b9060009180516000915b818310611f9a57505050565b909193611fa78583611e17565b5181018091116106b957936001019190611f8e565b60095460009291611fcc82610f54565b916001908181169081156120265750600114611fe757505050565b90919293506009600052600080516020612b4a833981519152906000915b848310612013575050500190565b8181602092548587015201920191612005565b60ff191683525050811515909102019150565b9061204c602092828151948592016103ce565b0190565b9061206660018060a01b03600254163314611d7a565b6001918260ff600a54161515146121775780516001600160401b038111610e335761209b81612096600954610f54565b612189565b60209384601f831160011461210357508180916120d195966000936120f8575b501b916000199060031b1c1916176009556121e8565b7ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6600080a2565b8501519250386120bb565b6009600052601f19831695919291600080516020612b4a833981519152916000905b888210612160575050826120d1969710612147575b5050811b016009556121e8565b84015160001960f88460031b161c19169055388061213a565b808684958294958a01518155019401920190612125565b6040516331d1c0a360e01b8152600490fd5b601f8111612195575050565b60009060098252600080516020612b4a833981519152906020601f850160051c830194106121de575b601f0160051c01915b8281106121d357505050565b8181556001016121c7565b90925082906121be565b612200906020604051928284809451938492016103ce565b810103902090565b90816020910312610266575190565b6040513d6000823e3d90fd5b9061222d826114be565b61223a6040519182610e38565b828152809261224b601f19916114be565b0190602036910137565b919082039182116106b957565b90816020910312610266575161042781610255565b600160065401600655600754600181018091116106b9578060075590565b80600654016006556007549081018091116106b9578060075590565b6122ba8161240c565b6001600160a01b03338382161480156122f0575b6122d757505050565b60055416806122e557505050565b610278923091612a5c565b508060055416156122ce565b6123058161240c565b6001600160a01b033383821614801561234c575b61232257505050565b61232a612478565b820361233e5760055416806122e557505050565b63f7760f256000526004601cfd5b50806005541615612319565b6123618161240c565b6001600160a01b0333838216148015612400575b61237e57505050565b6002546000908216803b63ffffffff166123a8575082905061233e5760055416806122e557505050565b604051633b7279e960e21b815263044df8e760e41b600482015290602090829060249082905afa91821561093357916123e2575b5061232a565b6123fa915060203d8111610d9757610d878183610e38565b386123dc565b50806005541615612375565b6005546001600160a01b03908116919082156124715760446020926040519485938492636eb1769f60e11b84521660048301523060248301525afa90811561093357600091612459575090565b610427915060203d8111610d9757610d878183610e38565b5050503490565b6002546000906001600160a01b0316803b63ffffffff1661249a575050600090565b604051633b7279e960e21b81526340d097c360e01b600482015290602090829060249082905afa9182156109335791612459575090565b156124d857565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b1561251557565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b1561254e57565b60405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606490fd5b1561258b57565b60405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b90816020910312610266575161042781610313565b908060209392818452848401376000828201840152601f01601f1916010190565b919261042796949160a094600180871b0380921685521660208401526040830152606082015281608082015201916125d9565b1561263457565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fd5b9190811015611e2b5760051b0190565b81835290916001600160fb1b0383116102665760209260051b809284830137010190565b92906126b990610427959360408652604086019161267c565b92602081850391015261267c565b969492612709946126fb926104279a989460018060a01b038092168b521660208a015260a060408a015260a089019161267c565b91868303606088015261267c565b9260808185039101526125d9565b909260a0926104279594600180861b03168352600060208401526040830152606082015281608082015201906103f1565b9290916127638461098785600052600f602052604060002090565b61276e828254611df4565b905560408051848152602081018390526001600160a01b0386169591869160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43b1561280a57906127e493602092600060405180978195829463f23a6e6160e01b998a85523360048601612717565b03925af18015610933576102789260009161090557506001600160e01b0319161461262d565b505050610278901515612584565b909161282f61042793604084526040840190610a64565b916020818403910152610a64565b9261286c610427959361287a9360018060a01b031686526000602087015260a0604087015260a0860190610a64565b908482036060860152610a64565b9160808184039101526103f1565b929091825160005b81811061290a57505060018060a01b038416938460006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806128d8888b83612818565b0390a43b1561280a57906127e493602092600060405180978195829463bc197c8160e01b998a8552336004860161283d565b8061291760019287611e17565b51612929886109876119948589611e17565b90815401905501612890565b1561293c57565b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f46524f4d60a01b6044820152606490fd5b81600052600f60205261299d836109c28360406000209060018060a01b0316600052602052604060002090565b6000828152600f602090815260408083206001600160a01b038516845290915290209283549081039081116106b95790925560408051918252600160208301526000926001600160a01b03169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a4565b600080809381935af115612a2157565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160016000511416171615612a9c57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b600091826044926020956040519363a9059cbb60e01b8552600485015260248401525af13d15601f3d1160016000511416171615612b1257565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fdfe6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7afa2646970667358221220692ee3bb404c1ef8bf8606a5ed03161161e5f901f9cc8c536967e689bd55e02364736f6c63430008130033";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    _baseURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _erc20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseURI,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      _erc20,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
