/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MADRouter1155,
  MADRouter1155Interface,
} from "../../../contracts/Router/MADRouter1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "BaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract FactoryVerifier",
        name: "newFactory",
        type: "address",
      },
    ],
    name: "FactoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "FreeClaimState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "PublicMintState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_payee",
        type: "address",
      },
    ],
    name: "TokenFundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "_type",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "WhitelistMintState",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintBatchTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "basicMintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "batchBurn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amount",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "sigHash",
        type: "bytes4",
      },
    ],
    name: "feeLookup",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "madFactory",
    outputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFeeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract FactoryVerifier",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBurn",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setURILock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_erc20",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x34620000835762001a47388190036080601f8201601f19168101906001600160401b03821190821017620000885760609282916040526080391262000083576200007360805162000050816200009e565b60a0516200005e816200009e565b60c051916200006d836200009e565b620000b0565b6040516117449081620003038239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116036200008357565b9190600090815433837f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a36001600160a81b0319163360ff60a01b19161782556001805560048290556722b1c8c1227a00006006556706f05b59d3b200006007556703782dace9d900006003556001600160a01b031690811580156200014d575b505050620001456200014b926200021f565b6200027c565b565b939091936200019e57600280546001600160a01b031916851790556200014b9362000145927fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd9139080a2923862000133565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b15620001eb57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b6000546001600160a01b0391906200023b9083163314620001e3565b80156200026e5780600855167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d344936600080a2565b63d92e233d6000526004601cfd5b6000546001600160a01b0390620002979082163314620001e3565b8116908115620002cb576005557f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da6466600080a2565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101a7578063089f8b1b146101a25780630a98eae51461019d5780630b78f9c01461019857806313af4035146101935780633bbed4a01461018e5780633f4ba83a14610189578063535f64e714610184578063583fef341461017f578063586ba7821461017a5780635bb47808146101755780635c975abb1461017057806366d003ac1461016b578063785e9e86146101665780638456cb59146101615780638b9f18151461015c5780638da5cb5b14610157578063ae6e7faf14610152578063b611f9d61461014d578063c99aa4e514610148578063cd22e7d514610143578063e427affe1461013e578063edc9e7a414610139578063f940e385146101345763fde3704e1461012f57600080fd5b611029565b610dbd565b610d46565b610d28565b610c58565b610c3a565b610b9f565b610b13565b610aea565b610a65565b6109ef565b6109c6565b61099d565b610977565b610903565b6108e5565b6108c7565b61083e565b61073e565b61069e565b610600565b610539565b610445565b61024c565b61020b565b60009103126101b757565b600080fd5b60005b8381106101cf5750506000910152565b81810151838201526020016101bf565b604091602082526101ff81518092816020860152602086860191016101bc565b601f01601f1916010190565b346101b75760003660031901126101b757602080526606726f7574657260465260606020f35b6001600160a01b038116036101b757565b801515036101b757565b346101b75760403660031901126101b75760043561026981610231565b60ff6024359161027883610242565b6102856001805414611052565b600260015560009261029d83855460a01c1615611155565b6102a6826113ca565b9093169160018303610346576001600160a01b0316803b156103425760405163879fbedf60e01b815282151560048201529085908290602490829084905af1801561033d57610324575b501515917f0c2bd698c33cf5bea165c8a607bdd7c7d806b8b10284bfcd5b6899674b5a486d8480a461032160018055565b80f35b8061033161033792610394565b806101ac565b386102f0565b61118a565b8480fd5b60405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f5459504560a01b6044820152606490fd5b0390fd5b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116103a857604052565b61037e565b90601f8019910116810190811067ffffffffffffffff8211176103a857604052565b67ffffffffffffffff81116103a85760051b60200190565b81601f820112156101b7578035916103fe836103cf565b9261040c60405194856103ad565b808452602092838086019260051b8201019283116101b7578301905b828210610436575050505090565b81358152908301908301610428565b60803660031901126101b75760043561045d81610231565b6024359061046a82610231565b60643567ffffffffffffffff81116101b75761048a9036906004016103e7565b906104986001805414611052565b60026001556000926104b160ff855460a01c1615611155565b600160ff6104be846113ca565b905016036103465783916104d06114e1565b6001600160a01b0316803b156105355760405163f745586f60e01b81529384928391829161050791339160443590600486016111ea565b039134905af1801561033d57610522575b5061032160018055565b8061033161052f92610394565b38610518565b8280fd5b346101b75760403660031901126101b75760043560243561056560018060a01b03600054163314611657565b600654821115806105f4575b156105b0577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a191816040926004558160035582519182526020820152a1005b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c6964206665652073657474696e67732c206265796f6e64206d61786044820152fd5b50600754811115610571565b346101b75760203660031901126101b75760043561061d81610231565b60018060a01b0390600091610636818454163314611657565b8116908115610669578255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b346101b75760203660031901126101b7576004356106bb81610231565b6000546001600160a01b03906106d49082163314611657565b8116908115610707576005557f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da6466600080a2005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b346101b7576000806003193601126107da578054610766336001600160a01b03831614611657565b60ff8160a01c16156107aa5760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b60405162461bcd60e51b8152602060048201526008602482015267155394105554d15160c21b6044820152606490fd5b80fd5b9060806003198301126101b7576004356107f681610231565b9160243561080381610231565b9167ffffffffffffffff6044358181116101b75783610824916004016103e7565b926064359182116101b75761083b916004016103e7565b90565b610847366107dd565b9290916108576001805414611052565b600260015560009361087060ff865460a01c1615611155565b600160ff61087d856113ca565b9050160361034657849261088f6114e1565b6001600160a01b031690813b156108c357610507946040519586948593849363d580725d60e01b855233926004860161121e565b8380fd5b346101b75760003660031901126101b7576020600454604051908152f35b346101b75760003660031901126101b7576020600354604051908152f35b346101b75760203660031901126101b75760043561092081610231565b60018060a01b03600091610938828454163314611657565b801561096a5780600855167f24cd1310c8883cbeaf5b805ab13586ce018b79c022827158ff3e8df14d3449368280a280f35b63d92e233d83526004601cfd5b346101b75760003660031901126101b757602060ff60005460a01c166040519015158152f35b346101b75760003660031901126101b7576005546040516001600160a01b039091168152602090f35b346101b75760003660031901126101b7576002546040516001600160a01b039091168152602090f35b346101b7576000806003193601126107da578054610a17336001600160a01b03831614611657565b610a2760ff8260a01c1615611155565b60ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b610a6e366107dd565b929091610a7e6001805414611052565b6002600155600093610a9760ff865460a01c1615611155565b600160ff610aa4856113ca565b9050610aae6115c4565b16036103465784926001600160a01b031690813b156108c357610507946040519586948593849363d78147cb60e01b855233926004860161121e565b346101b75760003660031901126101b7576000546040516001600160a01b039091168152602090f35b346101b75760403660031901126101b757600435610b3081610231565b6024359067ffffffffffffffff908183116101b757366023840112156101b75782600401359182116103a85760405191610b74601f8201601f1916602001846103ad565b80835236602482860101116101b7576020816000926024610b9d9701838701378401015261108b565b005b346101b75760203660031901126101b757600435610bbc81610231565b610bc96001805414611052565b6002600155600090610be260ff835460a01c1615611155565b600160ff610bef836113ca565b905016146000146103465781906001600160a01b0316803b15610c3757819060046040518094819363c360a1b760e01b83525af1801561033d57610522575061032160018055565b50fd5b346101b75760003660031901126101b7576020600654604051908152f35b60803660031901126101b757600435610c7081610231565b67ffffffffffffffff906024358281116101b757610c929036906004016103e7565b604435908382116101b757366023830112156101b7578160040135610cb6816103cf565b92610cc460405194856103ad565b81845260209160248386019160051b830101913683116101b757602401905b828210610d0f57505050506064359384116101b757610d09610b9d9436906004016103e7565b92611257565b8380918335610d1d81610231565b815201910190610ce3565b346101b75760003660031901126101b7576020600754604051908152f35b346101b75760203660031901126101b75760048035906001600160e01b0319821682036101b75763044df8e760e41b821491600091906340d097c360e01b14610daf57610da392610da757505b6040519081529081906020820190565b0390f35b905054610d93565b505050610da3600354610d93565b346101b7576040806003193601126101b75760ff90600490813591610de183610231565b602435610ded81610231565b610dfa6001805414611052565b6002600155610e08846113ca565b9095169360018503610ff0576001600160a01b03908282168015159081610f7c575b5015610ed0576005549116906001600160a01b031691813b156101b7579351632515bef360e21b81526001600160a01b0394851693810193845293909116602083015260009183919082908490829060400103925af1801561033d57610ebd575b505b33917ff15624beb70c8e7a7515ad5f81ee4c24dba144c4ef1b258f8075e1a519b1a5a1600080a4610b9d60018055565b80610331610eca92610394565b38610e8b565b929392909150803115610f46576005546001600160a01b03169116803b156101b75791516351cff8d960e01b81526001600160a01b0390911692810192835291600091839182908490829060200103925af1801561033d57610f33575b50610e8d565b80610331610f4092610394565b38610f2d565b825162461bcd60e51b81526020818601818152600891810191909152674e4f5f46554e445360c01b604082015281906060010390fd5b86516370a0823160e01b81526001600160a01b038416878201908152909250602091839182908190850103915afa90811561033d57600091610fc2575b50151538610e2a565b610fe3915060203d8111610fe9575b610fdb81836103ad565b81019061137d565b38610fb9565b503d610fd1565b835162461bcd60e51b81528061037a81860160609060208152600c60208201526b494e56414c49445f5459504560a01b60408201520190565b346101b75760003660031901126101b7576008546040516001600160a01b039091168152602090f35b1561105957565b60405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606490fd5b9060ff9061109c6001805414611052565b60026001556000926110b483855460a01c1615611155565b60016110bf826113ca565b90941603610346576001600160a01b031690813b156108c3578360405180936302fe530560e01b82528183816110f887600483016101df565b03925af190811561033d577f6f8750bee7bd7661be202812d7503ffaf307fb27b6d6a954a1989fdcd156bfb79261113492611142575b50611196565b9280a361114060018055565b565b8061033161114f92610394565b3861112e565b1561115c57565b60405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606490fd5b6040513d6000823e3d90fd5b6111ae906020604051928284809451938492016101bc565b810103902090565b90815180825260208080930193019160005b8281106111d6575050505090565b8351855293810193928101926001016111c8565b926112179060609396959660018060a01b03809416865260208601526080604086015260808501906111b6565b9416910152565b926112179061124960609497969760018060a01b0380951687526080602088015260808701906111b6565b9085820360408701526111b6565b9190916112676001805414611052565b600260015561127e60ff60005460a01c1615611155565b600160ff61128b836113ca565b90506112956115c4565b1603610346576001600160a01b0316803b156101b7576112d19360009360405195869485938493630d6fa7b160e41b85523392600486016112ff565b039134905af1801561033d576112ec575b5061114060018055565b806103316112f992610394565b386112e2565b9291949394608084019160808552805180935260a085019260208092019060005b81811061136057505050826060949261134292876113509603908801526111b6565b9084820360408601526111b6565b6001600160a01b03909416910152565b82516001600160a01b031686529483019491830191600101611320565b908160209103126101b7575190565b91908260409103126101b757602082516113a581610231565b92015161083b81610242565b908160209103126101b7575160ff811681036101b75790565b6008546040805163617d1d3b60e01b81526001600160a01b039384166004820152939260209216908285602481855afa94851561033d576000956114c2575b50805163b64bd5eb60e01b8152600481018690529185908284602481845afa92831561033d57611459948694611496575b5051808095819463d93cb8fd60e01b8352600483019190602083019252565b03915afa91821561033d5760009261147057505090565b61083b9250803d1061148f575b61148781836103ad565b8101906113b1565b503d61147d565b6114b590823d84116114bb575b6114ad81836103ad565b81019061138c565b5061143a565b503d6114a3565b6114da919550833d8511610fe957610fdb81836103ad565b9338611409565b6002546001600160a01b031680806114f7575050565b604051636eb1769f60e11b8152336004820152306024820152906020908190839060449082905afa91821561033d576000926115a5575b50604051633b7279e960e21b81526340d097c360e01b6004820152818180602481015b0381305afa91821561033d57600092611588575b5050810361157a576111409130903390611692565b63f7760f256000526004601cfd5b61159e9250803d10610fe957610fdb81836103ad565b3880611565565b816115bd9293503d8411610fe957610fdb81836103ad565b903861152e565b6002546001600160a01b031680806115da575050565b604051636eb1769f60e11b8152336004820152306024820152906020908190839060449082905afa91821561033d57600092611638575b50604051633b7279e960e21b815263044df8e760e41b600482015281818060248101611551565b816116509293503d8411610fe957610fdb81836103ad565b9038611611565b1561165e57565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d11600160005114161716156116d257565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea26469706673582212200e5e2d9bfcac985accc07aa70837189e8fabca7c92be25c2d38874264e8cdd4b64736f6c63430008130033";

type MADRouter1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADRouter1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADRouter1155__factory extends ContractFactory {
  constructor(...args: MADRouter1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADRouter1155> {
    return super.deploy(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    ) as Promise<MADRouter1155>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _paymentTokenAddress,
      _recipient,
      overrides || {}
    );
  }
  override attach(address: string): MADRouter1155 {
    return super.attach(address) as MADRouter1155;
  }
  override connect(signer: Signer): MADRouter1155__factory {
    return super.connect(signer) as MADRouter1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADRouter1155Interface {
    return new utils.Interface(_abi) as MADRouter1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADRouter1155 {
    return new Contract(address, _abi, signerOrProvider) as MADRouter1155;
  }
}
