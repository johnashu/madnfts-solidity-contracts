/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MADFactory721,
  MADFactory721Interface,
} from "../../../contracts/Factory/MADFactory721";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC721BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC721Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "_project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "$785115ade85da2325a219769175abf82ff$__5af4928315611053577fd38668b789b354d9abe5d3efe253309559c51f02aa63fc24edd259c196118010966000958695611019575b50610ff261100d9596610fed8c610fdd6001600160601b03198b60601b1691610fb083610fab3260018060a01b03166000526003602052604060002090565b61113a565b610fb861073d565b3281529460016020870152858801524360608601526001600160a01b03166080850152565b6000526008602052604060002090565b611174565b516001600160a01b0395861699909516979495869586611204565b0390a361021660018055565b610ff2965061100d955061104290823d841161104c575b61103a818361071b565b81019061108d565b9690969550610f6c565b503d611030565b61112e565b1561105f57565b60405162461bcd60e51b815260206004820152600660248201526514105554d15160d21b6044820152606490fd5b91908260409103126101f357602082519201516104b1816101f8565b98949a9995926110ef906110e16110fd946110d36101209c9b98958e61014090818152019061018c565b8d810360208f01529061018c565b908b820360408d015261018c565b9089820360608b015261018c565b608088019990995260a08701526001600160a01b0390811660c087015292831660e086015261010085015216910152565b6040513d6000823e3d90fd5b8054680100000000000000008110156107165761115c91600182018155610d51565b819291549060031b91821b91600019901b1916179055565b815181546001600160a01b0319166001600160a01b039190911617815560208201516004811015610e4557815460ff60a01b191660a09190911b60ff60a01b1617815560408201516001820155606082015160028201556080919091015161021691906003906001600160a01b0316910180546001600160a01b0319166001600160a01b03909216919091179055565b9161122f906112216080959897969360a0865260a086019061018c565b90848203602086015261018c565b95604083015260608201520152565b91908260409103126101f35760208251611257816101f8565b92015190565b91906112719060608452606084019061018c565b916020928181038483015283808451928381520193019060005b8181106112ce57505050604081830391015281808451928381520193019160005b8281106112ba575050505090565b8351855293810193928101926001016112ac565b82516001600160a01b03168552938501939185019160010161128b565b91909392936080830160808452815180915260a084019060208093019060005b81811061136d575050508381038285015281808451928381520193019160005b828110611350575050506001600160a01b039094166040830152925060039060600152565b83516001600160a01b03168552938101939281019260010161132b565b82518452928401929184019160010161130b565b91909392936080830160808452815180915260a084019060208093019060005b818110611403575050508381038285015281808451928381520193019160005b8281106113e6575050506001600160a01b039094166040830152925060029060600152565b83516001600160a01b0316855293810193928101926001016113c1565b8251845292840192918401916001016113a1565b91909392936080830160808452815180915260a084019060208093019060005b818110611499575050508381038285015281808451928381520193019160005b82811061147c575050506001600160a01b039094166040830152925060019060600152565b83516001600160a01b031685529381019392810192600101611457565b825184529284019291840191600101611437565b91909392936080830160808452815180915260a084019060208093019060005b81811061152f575050508381038285015281808451928381520193019160005b828110611512575050506001600160a01b039094166040830152925060009060600152565b83516001600160a01b0316855293810193928101926001016114ed565b8251845292840192918401916001016114cd565b919092936115518285611afc565b918161155e849388611c9e565b96879560409485916115838351998a938493636ec6cf1560e01b85526004850161125d565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af492831561105357600080516020611f3d8339815191529760009788956116d0575b50916116096116bf94926115f96116cb9897956115d861075d565b6001600160a01b038d1681529660208801526001600160a01b031688870152565b6001600160a01b03166060850152565b608083015260a0820152600160c08201525b3260009081526004602090815260408083206001600160a01b038a1684529091529020815181546001600160a01b03199081166001600160a01b03928316178355602084015160018401556040840151600284018054918416918316919091179055606084015160038401805491909316911617905560c0906006906080840151600482015560a0840151600582015501910151151560ff80198354169116179055565b519283923296846112eb565b0390a2565b6115f998508695506116bf9492611705611609926116cb999694963d8a11611716575b6116fd818361071b565b81019061123e565b909a509697509294509092906115bd565b503d6116f3565b61172682611a41565b8061173085611bdd565b948593604092839161175583519788938493636ec6cf1560e01b85526004850161125d565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af490811561105357600080516020611f3d8339815191529560009586936117f1575b50916117e5916117cd6116cb95946117a561075d565b6001600160a01b038a1681529360208501526000868501526001600160a01b03166060840152565b6000608083015260a0820152600160c082015261161b565b51928392329684611381565b6117cd9650849350916118166117e5936116cb963d8711611716576116fd818361071b565b9097509394509161178f565b61182b82611ac8565b8061183585611c69565b948593604092839161185a83519788938493636ec6cf1560e01b85526004850161125d565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af490811561105357600080516020611f3d8339815191529560009586936118f7575b50916118eb916118cb6116cb95946118aa61075d565b6001600160a01b038a1681529360208501526001600160a01b031685840152565b600060608301526080820152600060a082015261161b60c0820160019052565b51928392329684611417565b6118cb96508493509161191c6118eb936116cb963d8711611716576116fd818361071b565b90975093945091611894565b611942604051906001825232602083015260408201604052565b809161195f60405190600182526064602083015260408201604052565b928391604093849161198483519586938493636ec6cf1560e01b85526004850161125d565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af492831561105357600080516020611f3d833981519152936000938491611a15575b5090611a096116cb926119cf61075d565b6001600160a01b03871681529060208201526000838201526000606082015260006080820152600060a082015261161b60c0820160019052565b519283923296846114ad565b611a099450829150611a36906116cb933d8411611716576116fd818361071b565b9490949192506119be565b9060609180158060011680600114611aac5715611a5c575050565b80600114611a8a5715611a6c5750565b91506040519160028352602083015232604083015260608201604052565b5050905060405190600282526000602083015232604083015260608201604052565b5050509050604051906001825232602083015260408201604052565b90606091600181151680600114611ae15715611a6c5750565b50509050604051906001825232602083015260408201604052565b606092918115811581811660018114611bb85715611b1b575b50505050565b80600114611b915715611b2f575b80611b15565b80600114611b6c5715611b43575b80611b29565b909250604051926003845260208401526040830152326060830152608082016040523880611b3d565b5092505060405191600283526020830152326040830152606082016040523880611b3d565b50505091506040519160028352602083015232604083015260608201604052388080611b29565b5050505050905060405190600182523260208301526040820160405238808080611b15565b9060609180158060011680600114611c4c5715611bf8575050565b80600114611c295715611c085750565b91506040519160028352806020840152606403604083015260608201604052565b505090506040519060028252600060208301526064604083015260608201604052565b505050905060405190600182526064602083015260408201604052565b90606091600181151680600114611c825715611c085750565b5050905060405190600182526064602083015260408201604052565b606092918115811581811660018114611d625715611cbc5750505050565b80600114611d385715611ccf5780611b15565b80600114611d105715611ce25780611b29565b9092506040519260038452806020850152816040850152016064036060830152608082016040523880611b3d565b5092505060405191600283528060208401526064036040830152606082016040523880611b3d565b50505091506040519160028352806020840152606403604083015260608201604052388080611b29565b505050505090506040519060018252606460208301526040820160405238808080611b15565b67ffffffffffffffff81116107165760051b60200190565b90611daa82611d88565b611db7604051918261071b565b8281528092611dc8601f1991611d88565b0190602036910137565b6005543303611ddd57565b6001630995110d60e31b036000908152600490fd5b6103e8601982061515911117611e0457565b63e0e54ced6000526004601cfd5b906006611e4060ff9232600052600460205260406000209060018060a01b0316600052602052604060002090565b01541615906001141517611e5057565b634ca8886760e01b60005260046000fd5b15611e6857565b60405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606490fd5b15611ea357565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f0c57565b60405162461bcd60e51b815260206004820152600860248201526710905117d0d0531360c21b6044820152606490fdfec3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7fa264697066735822122017618ceb43e9cafb8f304415a0e032309708400055af173be0db44c92c63a81664736f6c63430008130033";

type MADFactory721ConstructorParams =
  | [linkLibraryAddresses: MADFactory721LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory721__factory extends ContractFactory {
  constructor(...args: MADFactory721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory721__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory721LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$785115ade85da2325a219769175abf82ff\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory721> {
    return super.deploy(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADFactory721>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory721 {
    return super.attach(address) as MADFactory721;
  }
  override connect(signer: Signer): MADFactory721__factory {
    return super.connect(signer) as MADFactory721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory721Interface {
    return new utils.Interface(_abi) as MADFactory721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory721 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory721;
  }
}

export interface MADFactory721LibraryAddresses {
  ["contracts/lib/deployers/ERC721Deployer.sol:ERC721BasicDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
