/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  MADFactory1155,
  MADFactory1155Interface,
} from "../../contracts/MADFactory1155";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "SplitterFail",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
    ],
    name: "ERC1155BasicCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "colInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "enum Types.ERC1155Type",
        name: "colType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "colSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSalt",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colAddress",
        type: "address",
      },
    ],
    name: "getColID",
    outputs: [
      {
        internalType: "bytes32",
        name: "colID",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    name: "getDeployedAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_splitterSalt",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "_project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectShare",
        type: "uint256",
      },
    ],
    name: "splitterCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_colID",
        type: "bytes32",
      },
    ],
    name: "typeChecker",
    outputs: [
      {
        internalType: "uint8",
        name: "pointer",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03462000210576200271f80380390601f19601f83011683019183831060018060401b03841117620001fa57808492606094604052833981010312620001f5576200004b8162000215565b6200006760406200005f6020850162000215565b930162000215565b9060009160018355306080526001546040519033857f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768185a360ff60a01b1933169060018060a81b0319161760015560018060a01b03928381169182151590818092620001e9575b15620001a75750620000e1906200022e565b6006557f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc84604051a2818416936200011b8515156200022e565b600755604051937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738486a216908115156000146200019f577fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913908260018060a01b0319600854161760085583a25b6124a490816200027b82396080518161237a0152f35b505062000189565b60649062461bcd60e51b815260206004820152600b60248201527f5a65726f416464726573730000000000000000000000000000000000000000006044820152fd5b508588161515620000cf565b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b519060018060a01b03821682036200022957565b600080fd5b156200023657565b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461024e57806313af4035146102405780633f4ba83a146102325780635c975abb14610224578063617d1d3b146102165780636c19e783146102085780636dcea85f146101fa57806376de0f3d146101ec578063785e9e86146101de57806380f55605146101d05780638456cb59146101c25780638691fe46146101b45780638da5cb5b146101a657806395cd5193146101985780639750f2e01461018a578063b64bd5eb1461017c578063b7762c6d1461016e578063bc8b583814610160578063c0d7865514610152578063d93cb8fd14610144578063f887ea4014610136578063f9f411d8146101285763fa2405171461011b575b61000e565b610123611055565b610116565b50610131610fdb565b610116565b5061013f610f74565b610116565b5061014d610f3a565b610116565b5061015b610ebf565b610116565b50610169610dda565b610116565b50610177610bf2565b610116565b50610185610b8a565b610116565b50610193610ae5565b610116565b506101a16109d2565b610116565b506101af610850565b610116565b506101bd610808565b610116565b506101cb610784565b610116565b506101d9610753565b610116565b506101e7610702565b610116565b506101f5610623565b610116565b5061020361057b565b610116565b50610211610500565b610116565b5061021f6104bb565b610116565b5061022d61048a565b610116565b5061023b6103ba565b610116565b506102496102ff565b610116565b5061025761029e565b610116565b919082519283825260005b848110610288575050826000602080949584010152601f8019910116010190565b6020908180828501015190828601015201610267565b50346102cb5760006003193601126102c657602080526707666163746f727960475260606020f35b600080fd5b600080fd5b60018060a01b031690565b60018060a01b038116036102eb57565b600080fd5b60e435906102fd826102db565b565b50346103b55760206003193601126103b05760043561031d816102db565b60018060a01b03610333816001541633146114e9565b8116801561036c5760009160015560405190337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768484a3f35b606460405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964206f776e6572000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b503461047257600060031936011261046d576001546103e260018060a01b03821633146114e9565b60ff8160a01c16156104295760ff60a01b19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a16000604051f35b606460405162461bcd60e51b815260206004820152600860248201527f554e5041555345440000000000000000000000000000000000000000000000006044820152fd5b600080fd5b600080fd5b151590565b919091602081019215159052565b50346104b65760006003193601126104b157602060ff60015460a01c166040519015158152f35b600080fd5b600080fd5b50346104fb5760206003193601126104f65760206004356104db816102db565b604051906bffffffffffffffffffffffff199060601b168152f35b600080fd5b600080fd5b5034610576576020600319360112610571576000600435610520816102db565b60018060a01b03610536816001541633146114e9565b811690610544821515611534565b600755604051907f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c738383a2f35b600080fd5b600080fd5b50346105f15760206003193601126105ec57600060043561059b816102db565b60018060a01b036105b1816001541633146114e9565b8116906105bf821515611534565b600655604051907f210690abd7fd6cdbb8f2beb202b2a253d58d7a0813b2175c4172c14c0c1af6dc8383a2f35b600080fd5b600080fd5b604090600319011261061e5760043561060e816102db565b9060243561061b816102db565b90565b600080fd5b50346106fd57610632366105f6565b600060065433036106eb5761064f61064983612349565b15610477565b6000146106e45790915b6bffffffffffffffffffffffff199060601b169161067f61067982610a9e565b5461229b565b9260009351915b8285106106a15761069d846040519182918261047c565b0390f35b9091926106c06106b9866106b485610a9e565b610fa5565b9054610fd3565b83146000146106db5750600180945b01929190939293610686565b936001906106cf565b9091610659565b6004906001630995110d60e31b038152fd5b600080fd5b503461072e57600060031936011261072957602060018060a01b0360085416604051908152f35b600080fd5b600080fd5b60018060a01b03169052565b919091602081019260018060a01b03169052565b503461077f57600060031936011261077a57602060018060a01b0360065416604051908152f35b600080fd5b600080fd5b50346108035760006003193601126107fe576001546107ac60018060a01b03821633146114e9565b6107bc60ff8260a01c161561112c565b600160a01b9060ff60a01b1916176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a16000604051f35b600080fd5b600080fd5b503461084b57602060031936011261084657600435610826816102db565b60018060a01b031660005260036020526020604060002054604051908152f35b600080fd5b600080fd5b503461087c57600060031936011261087757602060018060a01b0360015416604051908152f35b600080fd5b600080fd5b6004359060ff8216820361089157565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176108ca575b604052565b6108d2610896565b6108c5565b90601f8019910116810190811067ffffffffffffffff8211176108fa575b604052565b610902610896565b6108f5565b6040519060a0820182811067ffffffffffffffff821117610928575b604052565b610930610896565b610923565b6040519060e0820182811067ffffffffffffffff821117610956575b604052565b61095e610896565b610951565b81601f820112156109cd5780359067ffffffffffffffff82116109c0575b604051926109996020601f19601f86011601856108d7565b828452602083830101116109bb57816000926020809301838601378301015290565b600080fd5b6109c8610896565b610981565b600080fd5b5034610a9957610120600319360112610a94576109ed610881565b6024359067ffffffffffffffff91828111610a8f57610a10903690600401610963565b604435838111610a8a57610a28903690600401610963565b91606435848111610a8557610a41903690600401610963565b9160c435948511610a8057610a5d610a79953690600401610963565b91610a666102f0565b93610104359560a4359360843593611177565b6000604051f35b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60018060a01b03166000526003602052604060002090565b60018060a01b03166000526004602052604060002090565b9060018060a01b0316600052602052604060002090565b5034610b6e5760e0610b18610af9366105f6565b60018060a09493941b0380931660005260046020526040600020610ace565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b600080fd5b6020906003190112610b855760043590565b600080fd5b5034610bed57610b9936610b73565b600090610ba46122cd565b8152600260205260018060a01b0360408220541690328214610be5575b15610bd757604090815190815260016020820152f35b634ca888676000526004601cfd5b506001610bc1565b600080fd5b5034610dd55760a0600319360112610dd05760043567ffffffffffffffff8111610dcb57610c24903690600401610963565b602435610c30816102db565b60443590610c3d826102db565b6064359160843590610c536001600054146110da565b6002600055610c60612371565b610c7260ff60015460a01c161561112c565b60018060a01b0380841615808091610dc1575b600014610cab57505050505050610c9b90611d2d565b5b610ca4611125565b6000604051f35b801591828093610db7575b80610dae575b80610da4575b600014610cdd575050505050610cd792611be3565b5b610c9c565b83959396949616151580918192610d9c575b5080610d93575b80610d89575b600014610d165750505050610d1092611a99565b5b610cd8565b8194939491610d81575b5080610d78575b80610d6e575b80610d65575b80610d5b575b600014610d4e57610d4994611937565b610d11565b62adecf06000526004601cfd5b5060478410610d39565b50831515610d33565b5060158310610d2d565b50821515610d27565b905038610d20565b50605b8610610cfc565b50851515610cf6565b905038610cef565b5060158710610cc2565b50861515610cbc565b5080841615610cb6565b5081831615610c85565b600080fd5b600080fd5b600080fd5b5034610eba576020600319360112610eb55760043567ffffffffffffffff8111610eb057610ea0610e12610eac923690600401610963565b60208151910120604051610e25816108ad565b6010815260206f67363d3d37363d34f03d5260086018f360801b910152610e756040519182610e59602082019230846123ea565b0392610e6d601f19948581018352826108d7565b5190206102d0565b90610e986040519182610e8c60208201958661243d565b039081018352826108d7565b5190206102d0565b6040519182918261073f565b0390f35b600080fd5b600080fd5b600080fd5b5034610f35576020600319360112610f30576000600435610edf816102db565b60018060a01b03610ef5816001541633146114e9565b811690610f03821515611534565b600555604051907f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc808383a2f35b600080fd5b600080fd5b5034610f6f57610f4936610b73565b610f516122cd565b6000526002602052602060406000205460a01c60ff60405191168152f35b600080fd5b5034610fa0576000600319360112610f9b57602060018060a01b0360055416604051908152f35b600080fd5b600080fd5b8054821015610fbd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9060031b1c90565b503461104057604060031936011261103b57600435610ff9816102db565b6024359060018060a01b03166000526003602052604060002080548210156110365760209161102791610fa5565b90549060031b1c604051908152f35b600080fd5b600080fd5b600080fd5b6000526002602052604060002090565b50346110d55761106436610b73565b600052600260205260406000208054600360ff8260a01c1692600181015460028201549160018060a01b03938491015416926040519416845260048510156110bf5760a0946020850152604084015260608301526080820152f35b634e487b7160e01b600052602160045260246000fd5b600080fd5b156110e157565b606460405162461bcd60e51b815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152fd5b6001600055565b1561113357565b606460405162461bcd60e51b815260206004820152600660248201527f50415553454400000000000000000000000000000000000000000000000000006044820152fd5b97877fb43c8475aa9c4cf4da7fc44af5e7f20a6c524658de0c04167eb16162eecc1b22976111d98288969b9c999597996111b56001600054146110da565b60026000556111c2612371565b6111d460ff60015460a01c161561112c565b6122ec565b6111e283612329565b6111ed6005546102d0565b9561121d6111fc6008546102d0565b856040998a968988519d8e9889986355d253b560e01b8a5260048a01611349565b038173__$fcf875cc5906322e911192ca0ce957b541$__5af4938415611318575b60009586956112de575b506112ba6112d195966112b58c6112b06bffffffffffffffffffffffff198b60601b169161127e8361127932610a9e565b6113b1565b611286610907565b9461129132876113fc565b61129d60208701611409565b87860152436060860152608085016113fc565b611045565b611430565b5195869560018060a01b038091169a1698866114af565b0390a36112dc611125565b565b6112ba96506112d1955061130790823d8411611311575b6112ff81836108d7565b810190611325565b9690969550611248565b503d6112f5565b6113206113a4565b61123e565b91908260409103126113445760208251920151611341816102db565b90565b600080fd5b96929897939060e096959261136961137792610100808c528b019061025c565b9089820360208b015261025c565b986040880152606087015260018060a01b03938480921660808801521660a086015260c085015216910152565b506040513d6000823e3d90fd5b6113d590805490680100000000000000008210156113ef575b600182018155610fa5565b819291549060031b600019811b9283911b16911916179055565b6113f7610896565b6113ca565b9060018060a01b03169052565b60019052565b9060018060a01b03166bffffffffffffffffffffffff60a01b825416179055565b61144360018060a01b038351168261140f565b602082015160048110156114995761149060806114979460039385549060ff60a01b9060a01b169060ff60a01b1916178555604081015160018601556060810151600286015501516102d0565b910161140f565b565b634e487b7160e01b600052602160045260246000fd5b916114da906114cc6080959897969360a0865260a086019061025c565b90848203602086015261025c565b95604083015260608201520152565b156114f057565b606460405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b1561153b57565b606460405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152fd5b919082604091031261159e5760208251611598816102db565b92015190565b600080fd5b91906115b79060608452606084019061025c565b916020928181038483015283808451928381520193019060005b81811061161b57505050604081830391015281808451928381520193019160005b828110611600575050505090565b909192938280600192875181520195019101929190926115f2565b909194938480600192838060a01b03895116815201960191019493949190916115d1565b600660c09161168760018060a01b0361165b818751168461140f565b60208601516001840155611678816040880151166002850161140f565b6060860151166003830161140f565b6080840151600482015560a0840151600582015501910151151560ff80198354169116179055565b91909392936080830160808452815180915260a084019060208093019060005b818110611734575050508381038285015281808451928381520193019160005b828110611712575050505060039161170e606092956040830190610733565b0152565b909192938280600192838060a01b0388511681520195019101929190926116ef565b9091939283806001928751815201950191019392939190916116cf565b91909392936080830160808452815180915260a084019060208093019060005b8181106117d6575050508381038285015281808451928381520193019160005b8281106117b457505050506002916117b0606092956040830190610733565b0152565b909192938280600192838060a01b038851168152019501910192919092611791565b909193928380600192875181520195019101939293919091611771565b91909392936080830160808452815180915260a084019060208093019060005b818110611878575050508381038285015281808451928381520193019160005b8281106118565750505050600191611852606092956040830190610733565b0152565b909192938280600192838060a01b038851168152019501910192919092611833565b909193928380600192875181520195019101939293919091611813565b91909392936080830160808452815180915260a084019060208093019060005b81811061191a575050508381038285015281808451928381520193019160005b8281106118f857505050506000916118f4606092956040830190610733565b0152565b909192938280600192838060a01b0388511681520195019101929190926118d5565b9091939283806001928751815201950191019392939190916118b5565b919390927fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f936119678682611f79565b928261197482869561217e565b978896604095869161199983519a8b938493636ec6cf1560e01b8552600485016115a3565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4938415611a8c575b6000978895611a3e575b5091611a00611a2d94926119f7611a399897956119df610935565b966119ea8d896113fc565b60208801528887016113fc565b606085016113fc565b608083015260a0820152611a1660c08201611409565b611a2886611a2332610ab6565b610ace565b61163f565b519283923296846116af565b0390a2565b6119f79850869550611a2d9492611a73611a0092611a39999694963d8a11611a85575b611a6b81836108d7565b81019061157f565b9a909a979850509294509290926119c4565b503d611a61565b611a946113a4565b6119ba565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91611ac481611e68565b8091611acf86612063565b9586946040938491611af483519889938493636ec6cf1560e01b8552600485016115a3565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611bd6575b6000958693611b94575b5091611b8391611b54611b8f9594611b35610935565b93611b408a866113fc565b6020850152600086850152606084016113fc565b6000608083015260a0820152611b6c60c08201611409565b611b7e86611b7932610ab6565b610ace565b61163f565b51928392329684611751565b0390a2565b611b54965084935091611bc2611b8393611b8f963d8711611bcf575b611bba81836108d7565b81019061157f565b9790979495505091611b1f565b503d611bb0565b611bde6113a4565b611b15565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91611c0e81611f05565b8091611c1986612105565b9586946040938491611c3e83519889938493636ec6cf1560e01b8552600485016115a3565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af4918215611d20575b6000958693611cde575b5091611ccd91611c97611cd99594611c7f610935565b93611c8a8a866113fc565b60208501528584016113fc565b600060608301526080820152600060a0820152611cb660c08201611409565b611cc886611cc332610ab6565b610ace565b61163f565b519283923296846117f3565b0390a2565b611c97965084935091611d0c611ccd93611cd9963d8711611d19575b611d0481836108d7565b81019061157f565b9790979495505091611c69565b503d611cfa565b611d286113a4565b611c5f565b7fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f611d56611f62565b9182611d60612166565b9384926040918291611d8583519687938493636ec6cf1560e01b8552600485016115a3565b038173__$e0b3dea100c37e1c0d530933159e390817$__5af48015611e5b575b6000938491611e1f575b5090611e0e611e1a92611dc0610935565b90611dcb87836113fc565b60208201526000838201526000606082015260006080820152600060a0820152611df760c08201611409565b611e0986611e0432610ab6565b610ace565b61163f565b51928392329684611895565b0390a2565b611e0e9450829150611e4990611e1a933d8411611e54575b611e4181836108d7565b81019061157f565b949094919250611daf565b503d611e37565b611e636113a4565b611da5565b9060609180158060011680600114611ee457600014611e86575b5050565b80600114611ebe57600014611e9c575b80611e82565b9150604051916002835260208301523260408301526060820160405238611e96565b505090506040519060028252600060208301523260408301526060820160405238611e96565b50505090506040519060018252326020830152604082016040523880611e82565b90606091600181151680600114611f4357600014611f21575b50565b9150604051916002835260208301523260408301526060820160405238611f1e565b5050905060405190600182523260208301526040820160405238611f1e565b604051906001825232602083015260408201604052565b91909160609280158215908082168060011461203e57600014611f9d575b50505050565b8060011461201757600014611fb3575b80611f97565b80600114611ff257600014611fc9575b80611fad565b909250604051926003845260208401526040830152326060830152608082016040523880611fc3565b5092505060405191600283526020830152326040830152606082016040523880611fc3565b50505091506040519160028352602083015232604083015260608201604052388080611fad565b5050505050905060405190600182523260208301526040820160405238808080611f97565b90606091801580600116806001146120e357600014612081575b5050565b806001146120bc57600014612097575b8061207d565b9150604051916002835280602084015260640360408301526060820160405238612091565b50509050604051906002825260006020830152606460408301526060820160405238612091565b505050905060405190600182526064602083015260408201604052388061207d565b9060609160018115168060011461214657600014612121575b50565b915060405191600283528060208401526064036040830152606082016040523861211e565b50509050604051906001825260646020830152604082016040523861211e565b60405190600182526064602083015260408201604052565b91909160609280158215908082168060011461224e576000146121a2575b50505050565b80600114612224576000146121b8575b8061219c565b806001146121fc576000146121ce575b806121b2565b90925060405192600384528060208501528160408501520160640360608301526080820160405238806121c8565b50925050604051916002835280602084015260640360408301526060820160405238806121c8565b505050915060405191600283528060208401526064036040830152606082016040523880806121b2565b50505050509050604051906001825260646020830152604082016040523880808061219c565b60209067ffffffffffffffff811161228e575b60051b0190565b612296610896565b612287565b906122a582612274565b6122b260405191826108d7565b82815280926122c3601f1991612274565b0190602036910137565b60055433036122d857565b6001630995110d60e31b0360005260046000fd5b90600661230860ff923260005260046020526040600020610ace565b0154161590600114151761231857565b634ca8886760e01b60005260046000fd5b6103e860198206151591111761233b57565b63e0e54ced6000526004601cfd5b9060406000928151906003602083015282820152205415612367575b565b9050600090612365565b60018060a01b037f0000000000000000000000000000000000000000000000000000000000000000163014156000146123e857606460405162461bcd60e51b815260206004820152600860248201527f4241445f43414c4c0000000000000000000000000000000000000000000000006044820152fd5b565b909160559260ff60f81b83526bffffffffffffffffffffffff199060601b16600183015260158201527f21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f60358201520190565b6017916135a560f21b82526bffffffffffffffffffffffff199060601b166002820152600160f81b6016820152019056fea264697066735822122038581c1672ac94d5952bb6cb7f5b9da022c769eb556b0c309ac8ec240e76465764736f6c63430008100033";

type MADFactory1155ConstructorParams =
  | [linkLibraryAddresses: MADFactory1155LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactory1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MADFactory1155__factory extends ContractFactory {
  constructor(...args: MADFactory1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MADFactory1155__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MADFactory1155LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fcf875cc5906322e911192ca0ce957b541\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/ERC1155Deployer.sol:ERC1155BasicDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0b3dea100c37e1c0d530933159e390817\\$__", "g"),
      linkLibraryAddresses[
        "contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MADFactory1155> {
    return super.deploy(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    ) as Promise<MADFactory1155>;
  }
  override getDeployTransaction(
    _marketplace: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplace,
      _signer,
      _paymentTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MADFactory1155 {
    return super.attach(address) as MADFactory1155;
  }
  override connect(signer: Signer): MADFactory1155__factory {
    return super.connect(signer) as MADFactory1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactory1155Interface {
    return new utils.Interface(_abi) as MADFactory1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MADFactory1155 {
    return new Contract(address, _abi, signerOrProvider) as MADFactory1155;
  }
}

export interface MADFactory1155LibraryAddresses {
  ["contracts/lib/deployers/ERC1155Deployer.sol:ERC1155BasicDeployer"]: string;
  ["contracts/lib/deployers/SplitterDeployer.sol:SplitterDeployer"]: string;
}
