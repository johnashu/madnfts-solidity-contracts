/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MADFactory, MADFactoryInterface } from "../../Factory/MADFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSplitter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenType",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "CollectionTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "impl",
        type: "bytes",
      },
    ],
    name: "addCollectionType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionId",
        type: "address",
      },
    ],
    name: "collectionCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionId",
        type: "address",
      },
    ],
    name: "collectionInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "collectionType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "collectionSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionIndex",
        type: "uint256",
      },
    ],
    name: "collectionTypes",
    outputs: [
      {
        internalType: "bytes",
        name: "collectionBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "splitterSalt",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "ambassador",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ambassadorShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CreateSplitterParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createSplitter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateCollectionErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateSplitter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateSplitterErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getDeployedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "invalidateCollectionFee",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "invalidateSplitterFee",
        type: "bool",
      },
    ],
    name: "invalidateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionNew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterNew",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionErc20New",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterErc20New",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambassadorShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "address",
        name: "deployedCollections",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x346200006d576200445b388190036080601f8201601f19168101906001600160401b0382119082101762000071576020928291604052608039126200006d576080516001600160a01b03811681036200006d576200005d9062000085565b6040516143169081620001458239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b33156200012c57600180546001600160a01b03199081169091555f805433928116831782556001600160a01b03939291908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3670de0b6b3a76400008060035560045580156200011f5780600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2565b63d92e233d5f526004601cfd5b604051631e4fbdf760e01b81525f6004820152602490fdfe6080604052600436101562000012575f80fd5b5f3560e01c806306fdde0314620002305780630b78f9c0146200022a5780631b52c9c014620002245780631f0c602d146200021e57806322ea34d514620002185780633bbed4a014620002125780636042dd5d146200020c57806365e11e6e146200020657806366d003ac146200020057806366e7950914620001fa5780637133739114620001f4578063715018a614620001ee57806376de0f3d14620001e857806379ba509714620001e25780638691fe4614620001dc5780638da5cb5b14620001d65780639750f2e014620001d057806397cf65af14620001ca578063b37eea1514620001c4578063b7e7d27814620001be578063c0d7865514620001b8578063c661d4b114620001b2578063cbf71c1c14620001ac578063e30c397814620001a6578063e4d73e5914620001a0578063f2fde38b146200019a578063f887ea401462000194578063f9f411d8146200018e578063fb0059e314620001885763fec89cd81462000182575f80fd5b62001cbe565b62001c9f565b62001c2f565b62001bb1565b62001ae3565b6200198a565b62001955565b620018bd565b6200180d565b62001797565b620016a2565b6200117f565b62001127565b62001071565b6200103d565b62000ff0565b62000f32565b62000e37565b62000d81565b62000bbb565b62000b9f565b62000b6a565b62000a18565b6200080d565b6200078d565b620003bb565b6200031e565b620002e0565b62000285565b62000259565b5f5b838110620002485750505f910152565b818101518382015260200162000238565b3462000281575f6003193601126200028157602080526707666163746f727960475260606020f35b5f80fd5b346200028157604060031936011262000281577f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a16040600435602435620002cb62001e83565b816003558060045582519182526020820152a1005b3462000281575f60031936011262000281576020600454604051908152f35b73ffffffffffffffffffffffffffffffffffffffff8116036200028157565b3462000281576020600319360112620002815760c06004356200034181620002ff565b73ffffffffffffffffffffffffffffffffffffffff8091165f52600760205260ff60405f2080549260018201549160036002820154910154928460405196848116885260a01c166020870152604086015260608501528116608084015260a01c16151560a0820152f35b9081610140910312620002815790565b6020600319360112620002815760043567ffffffffffffffff81116200028157620003eb903690600401620003ab565b610100908181013591620003ff83620002ff565b6200042962000423600b5473ffffffffffffffffffffffffffffffffffffffff1690565b620028e8565b73ffffffffffffffffffffffffffffffffffffffff90816200044d82850162001d53565b1615158062000767575b62000722575b620004688362001d53565b8083166200070f57506200047e60035462002dd9565b6200048c6020840162001f12565b6200049b606085018562001ea4565b608086019291620004ad848862001ea4565b90620004bd60e08a018a62001ea4565b620004ca8b8a0162001d53565b92620004da6101208d0162001ef8565b94600b54620004fc9073ffffffffffffffffffffffffffffffffffffffff1690565b966200050762001e05565b983690620005159262002a73565b88523690620005249262002a73565b60208701523690620005369262002a73565b604085015260a089810135606086015260c08a0135608086015273ffffffffffffffffffffffffffffffffffffffff909116908401526bffffffffffffffffffffffff1660c083015273ffffffffffffffffffffffffffffffffffffffff1660e08201525f81850152336101208201526040860135620005b69262003289565b918233620005e29073ffffffffffffffffffffffffffffffffffffffff165f52600a60205260405f2090565b90620005ee9162002aae565b620005fc6020860162001f12565b9085016200060a9062001d53565b6200061462001e27565b3381529160ff1660208301526040868101359083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a08201526200067b8373ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b90620006879162002aff565b62000696606085018562001ea4565b949091620006a5908262001ea4565b9190956101208201620006b89062001ef8565b620006c66020840162001f12565b9387604051988998169a169860a08501359460c0013593620006e9978962001f5f565b037f53da1f292ba9ca211753ef0bfe01ba3e5626fd3c61b03d473ee950f4c91fb85b91a3005b6200071c90309062002c9e565b6200047e565b62000748620007346020850162001f12565b6200074183860162001d53565b90620030f3565b620007616200075b610120850162001ef8565b62003180565b6200045d565b506bffffffffffffffffffffffff62000784610120850162001ef8565b16151562000457565b34620002815760206003193601126200028157600435620007ae81620002ff565b620007b862001e83565b801562000800578073ffffffffffffffffffffffffffffffffffffffff91600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2005b63d92e233d5f526004601cfd5b60c0600319360112620002815773ffffffffffffffffffffffffffffffffffffffff6200083962001d29565b161580620009f7575b15620008545762000852620027ae565b005b6200087b6200086262001d29565b73ffffffffffffffffffffffffffffffffffffffff1690565b151580620009e1575b80620009d4575b80620009c6575b15620008a25762000852620026b7565b620008b06200086262001d37565b151580620009b0575b80620009a3575b8062000995575b15620008d75762000852620025c0565b620008e56200086262001d29565b1515806200097e575b8062000971575b8062000963575b8062000956575b8062000948575b806200092d575b1562000921576200085262002353565b62adecf05f526004601cfd5b506127116200094160843560643562001d8c565b1062000911565b50612711608435106200090a565b5060636084351162000903565b506107d160643510620008fc565b50606360643511620008f5565b506200098d6200086262001d37565b1515620008ee565b5061271160843510620008c7565b50606360843511620008c0565b50620009bf6200086262001d29565b15620008b9565b506107d16064351062000892565b506063606435116200088b565b50620009f06200086262001d37565b1562000884565b5062000a066200086262001d37565b1562000842565b801515036200028157565b3462000281576060600319360112620002815760043562000a3981620002ff565b60243562000a478162000a0d565b6044359062000a568262000a0d565b62000a6062001e83565b73ffffffffffffffffffffffffffffffffffffffff831690811562000b405762000ad4575b5062000a8d57005b620008529062000ace62000aa062001df4565b915f83525f602084015273ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b620028a5565b62000b399060016040519162000aea83620015c8565b5f835260208301905f82525f52600560205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b5f62000a85565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b3462000281575f6003193601126200028157602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b3462000281575f600319360112620002815760206040515f8152f35b346200028157604060031936011262000281576024600435813567ffffffffffffffff8082116200028157366023830112156200028157816004013590811162000281573660248284010111620002815762000c1662001e83565b825f52602093600960205260405f209262000c3e8362000c37865462001547565b8662001da0565b5f91601f841160011462000cca575062000c92939495509082915f9262000cbb575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b7f44e972c56c15144b740184a8e110ba77f8929877b701f0dce3df06ebc39a09235f80a2005b602492500101355f8062000c60565b95917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084169662000cfe865f5260205f2090565b935f915b89831062000d64575050508360019596971062000d28575b505050811b01905562000c95565b01602401357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600384901b60f8161c191690555f808062000d1a565b908060018597848396978901013581550196019301919062000d02565b3462000281575f600319360112620002815762000d9d62001e83565b5f73ffffffffffffffffffffffffffffffffffffffff7fffffffffffffffffffffffff0000000000000000000000000000000000000000806001541660015582549081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b6003196040910112620002815760043562000e2581620002ff565b9060243562000e3481620002ff565b90565b34620002815762000e483662000e0a565b90600160408051600a6020820152848282015220541562000f2a575b9073ffffffffffffffffffffffffffffffffffffffff8084165f52600a60205260405f2054935f5b85811062000ea6575b6040518515158152602090f35b0390f35b62000f026200086262000ee28362000edc8673ffffffffffffffffffffffffffffffffffffffff165f52600a60205260405f2090565b62001c13565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b8385161462000f145760010162000e8c565b50505050505062000ea260015f80808062000e95565b505f62000e64565b3462000281575f600319360112620002815760015473ffffffffffffffffffffffffffffffffffffffff338183160362000fc0577fffffffffffffffffffffffff00000000000000000000000000000000000000008092166001555f549133908316175f553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b3462000281576020600319360112620002815773ffffffffffffffffffffffffffffffffffffffff6004356200102681620002ff565b165f52600a602052602060405f2054604051908152f35b3462000281575f6003193601126200028157602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b34620002815760e0620010d1620010883662000e0a565b73ffffffffffffffffffffffffffffffffffffffff9291928093165f52600860205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b3462000281576020600319360112620002815773ffffffffffffffffffffffffffffffffffffffff6004356200115d81620002ff565b165f526007602052602060ff600360405f20015460a01c166040519015158152f35b6040600319360112620002815760043567ffffffffffffffff81116200028157620011af903690600401620003ab565b620011bc602435620002ff565b61010081013590620011ce82620002ff565b620011f262000423600b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8062001217610100840162001d53565b1615158062001521575b620014e7575b620012328262001d53565b808216620014d457506200124860035462002dd9565b620012566020830162001f12565b62001265606084018462001ea4565b60808501929162001277848762001ea4565b906200128760e089018962001ea4565b620012966101008b0162001d53565b92620012a66101208c0162001ef8565b94600b54620012c89073ffffffffffffffffffffffffffffffffffffffff1690565b96620012d362001e05565b983690620012e19262002a73565b88523690620012f09262002a73565b60208701523690620013029262002a73565b604085015260a088810135606086015260c0890135608086015273ffffffffffffffffffffffffffffffffffffffff909116908401526bffffffffffffffffffffffff1660c083015273ffffffffffffffffffffffffffffffffffffffff1660e082015273ffffffffffffffffffffffffffffffffffffffff602435166101008201523361012082015260408501356200139c9262003289565b908133620013c89073ffffffffffffffffffffffffffffffffffffffff165f52600a60205260405f2090565b90620013d49162002aae565b620013e26020850162001f12565b620013f1610100860162001d53565b620013fb62001e27565b3381529160ff1660208301526040868101359083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a0820152620014628373ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b906200146e9162002aff565b6200147d606085018562001ea4565b9490916200148c908262001ea4565b9590916200149e610120820162001ef8565b91620014ad6020830162001f12565b9287604051988998169a16986024359560a08501359460c0013593620006e9988a62001fbc565b620014e190309062002c9e565b62001248565b62001508620014f96020840162001f12565b62000741610100850162001d53565b6200151b6200075b610120840162001ef8565b62001227565b506bffffffffffffffffffffffff6200153e610120840162001ef8565b16151562001221565b90600182811c9216801562001590575b60208310146200156357565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f169162001557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff821117620015e557604052565b6200159b565b6080810190811067ffffffffffffffff821117620015e557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117620015e557604052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093620016888151809281875287808801910162000236565b0116010190565b90602062000e349281815201906200164a565b34620002815760208060031936011262000281576004355f526009815260405f2090604051905f928054620016d78162001547565b8085529160019180831690811562001754575060011462001713575b62000ea285620017068189038262001608565b604051918291826200168f565b5f908152838120939550925b82841062001740575050508162000ea2936200170692820101935f620016f3565b80548585018701529285019281016200171f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686860152505050151560051b8201019150620017068162000ea25f620016f3565b3462000281576020600319360112620002815773ffffffffffffffffffffffffffffffffffffffff600435620017cd81620002ff565b620017d762001e83565b620017e281620028e8565b80600b55167f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc805f80a2005b3462000281576040600319360112620002815760206200189f6024356200183481620002ff565b6040805173ffffffffffffffffffffffffffffffffffffffff90921684830190815260043560208201529190620018969082908401037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528262001608565b51902062002966565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b3462000281576020600319360112620002815773ffffffffffffffffffffffffffffffffffffffff600435620018f381620002ff565b620018fd62001e69565b5016801562000b40575f52600660205262000ea260405f2060ff6001604051926200192884620015c8565b80548452015416151560208201526040519182918291909160208060408301948051845201511515910152565b3462000281575f6003193601126200028157602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b34620002815760606003193601126200028157604435602435600435620019b183620002ff565b620019bb62001e83565b73ffffffffffffffffffffffffffffffffffffffff8316801562000b40577f660e7095066fd91b05cfad0851f3cefa62b4a62de319c3c13ef7db8982e785019362001a6462001ade9260016040519162001a1583620015c8565b86835260208301908282525f52600560205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b62001aa960405162001a7681620015c8565b8581526001602082015262000ace8373ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b6040519384938491604091949373ffffffffffffffffffffffffffffffffffffffff9160608501968552602085015216910152565b0390a1005b3462000281576020600319360112620002815760043562001b0481620002ff565b62001b0e62001e83565b73ffffffffffffffffffffffffffffffffffffffff80911690811562001b8157817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001555f54167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b3462000281575f6003193601126200028157602073ffffffffffffffffffffffffffffffffffffffff600b5416604051908152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b805482101562001c29575f5260205f2001905f90565b62001be6565b3462000281576040600319360112620002815760043562001c5081620002ff565b6024359073ffffffffffffffffffffffffffffffffffffffff8091165f52600a60205260405f208054831015620002815760209262001c8f9162001c13565b9190546040519260031b1c168152f35b3462000281575f60031936011262000281576020600354604051908152f35b3462000281576020600319360112620002815773ffffffffffffffffffffffffffffffffffffffff60043562001cf481620002ff565b62001cfe62001e69565b5016801562000b40575f52600560205262000ea260405f2060ff6001604051926200192884620015c8565b60243562000e3481620002ff565b60443562000e3481620002ff565b60a43562000e3481620002ff565b3562000e3481620002ff565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820180921162001d9a57565b62001d5f565b601f821162001dae57505050565b5f5260205f20906020601f840160051c8301931062001de9575b601f0160051c01905b81811062001ddd575050565b5f815560010162001dd1565b909150819062001dc8565b6040519062001e0382620015c8565b565b60405190610140820182811067ffffffffffffffff821117620015e557604052565b6040519060c0820182811067ffffffffffffffff821117620015e557604052565b6040519060e0820182811067ffffffffffffffff821117620015e557604052565b6040519062001e7882620015c8565b5f6020838281520152565b73ffffffffffffffffffffffffffffffffffffffff5f5416330362000fc057565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121562000281570180359067ffffffffffffffff821162000281576020019181360383136200028157565b356bffffffffffffffffffffffff81168103620002815790565b3560ff81168103620002815790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b9498979262001fa16bffffffffffffffffffffffff9160ff9662001f9260c09a955f9c9760e08c5260e08c019162001f21565b9189830360208b015262001f21565b99166040860152606085015260808401521660a08201520152565b9792620020136bffffffffffffffffffffffff9160ff966200200473ffffffffffffffffffffffffffffffffffffffff9a95999e9d9960c09c9760e08f818152019162001f21565b8c810360208e01529162001f21565b9a166040890152606088015260808701521660a085015216910152565b9061271091820391821162001d9a57565b8181029291811591840414171562001d9a57565b604051906200206482620015c8565b6001825260203681840137565b604051906200208082620015eb565b600382526060366020840137565b604051906060820182811067ffffffffffffffff821117620015e55760405260028252604082602036910137565b80511562001c295760200190565b80516001101562001c295760400190565b80516002101562001c295760600190565b600660c062001e0393620021fa73ffffffffffffffffffffffffffffffffffffffff6200215781845116879073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60208301516001870155620021b081604085015116600288019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015116600386019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6080810151600485015560a081015160058501550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b9081518082526020808093019301915f5b82811062002264575050505090565b83518552938101939281019260010162002255565b9081518082526020808093019301915f5b82811062002299575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016200228a565b9291620022f2604091620022e360039460608852606088019062002244565b90868203602088015262002279565b930152565b9291620022f2604091620022e360029460608852606088019062002244565b9291620022f2604091620022e360019460608852606088019062002244565b9291620022f2604091620022e35f9460608852606088019062002244565b6200235d62001d45565b73ffffffffffffffffffffffffffffffffffffffff90808216620025ad57506200238960045462002dd9565b60643590620023b2620023aa620023a08462002030565b6084359062002041565b612710900490565b90612710808310156200252857507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9062002401620023f062001d29565b620023fa62001d37565b9062002e40565b936200250e62002412858362002f26565b945b600435906200242587898462003007565b93620024a66200243462001d29565b620024896200244262001d37565b916200244d62001e48565b73ffffffffffffffffffffffffffffffffffffffff8a16815296602088015273ffffffffffffffffffffffffffffffffffffffff166040870152565b73ffffffffffffffffffffffffffffffffffffffff166060850152565b608083015260a0820152600160c08201526200250883620024e53373ffffffffffffffffffffffffffffffffffffffff165f52600860205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b620020ec565b620025236040519283921695339583620022c4565b0390a3565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f916200250e6200255b62002055565b95620025906200256a62001d37565b6200257589620020bc565b9073ffffffffffffffffffffffffffffffffffffffff169052565b6200259a62002055565b95620025a687620020bc565b5262002414565b620025ba90309062002d5b565b62002389565b620025ca62001d45565b73ffffffffffffffffffffffffffffffffffffffff90808216620026a45750620025f660045462002dd9565b606435906200260d620023aa620023a08462002030565b90612710808310156200267157507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f906200264b620023f062001d29565b936200265c62002412858362002f26565b620025236040519283921695339583620022f7565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f916200265c6200255b62002055565b620026b190309062002d5b565b620025f6565b620026c162001d45565b73ffffffffffffffffffffffffffffffffffffffff908082166200279b5750620026ed60045462002dd9565b6064359062002704620023aa620023a08462002030565b90612710808310156200276857507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9062002742620023f062001d29565b936200275362002412858362002f26565b62002523604051928392169533958362002316565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620027536200255b62002055565b620027a890309062002d5b565b620026ed565b620027b862001d45565b73ffffffffffffffffffffffffffffffffffffffff90808216620028925750620027e460045462002dd9565b60643590620027fb620023aa620023a08462002030565b90612710808310156200285f57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9062002839620023f062001d29565b936200284a62002412858362002f26565b62002523604051928392169533958362002335565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f916200284a6200255b62002055565b6200289f90309062002d5b565b620027e4565b6001602062001e0393805184550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b156200080057565b67ffffffffffffffff8111620015e557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b604051906200293a82620015c8565b601082527f67363d3d37363d34f03d5260086018f3000000000000000000000000000000006020830152565b62000e3490620029756200292b565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b60218401526035830152605582015260558152620029ca81620015eb565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f010000000000000000000000000000000000000000000000000000000000000060368201526017815262002a5781620015c8565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b92919262002a8182620028f0565b9162002a91604051938462001608565b82948184528183011162000281578281602093845f960137010152565b805468010000000000000000811015620015e55762002ad39160018201815562001c13565b73ffffffffffffffffffffffffffffffffffffffff9291928084549260031b9316831b921b1916179055565b9060a062002c599162002c12600373ffffffffffffffffffffffffffffffffffffffff9562002b6c87855116829073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b602084015181547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1660a09190911b74ff00000000000000000000000000000000000000001617815560408401516001820155606084015160028201550194608083015116859073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b015182547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690151560a01b74ff0000000000000000000000000000000000000000161790565b9055565b90816040910312620002815760206040519162002c7a83620015c8565b80518352015162002c8b8162000a0d565b602082015290565b6040513d5f823e3d90fd5b90604051907ffec89cd800000000000000000000000000000000000000000000000000000000825260408260248173ffffffffffffffffffffffffffffffffffffffff809716948560048301525afa91821562002d55575f9262002d1d575b50602082519201511562000b405762001e03926002541690339062003485565b62002d4591925060403d60401162002d4d575b62002d3c818362001608565b81019062002c5d565b905f62002cfd565b503d62002d30565b62002c93565b90604051907fcbf71c1c00000000000000000000000000000000000000000000000000000000825260408260248173ffffffffffffffffffffffffffffffffffffffff809716948560048301525afa91821562002d55575f9262002d1d5750602082519201511562000b405762001e03926002541690339062003485565b80340362002e16575f8080809373ffffffffffffffffffffffffffffffffffffffff600254165af11562002e0957565b63b12d13eb5f526004601cfd5b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b919062002e4c62002071565b5073ffffffffffffffffffffffffffffffffffffffff8381161590818062002f1b575b1562002e9557505050905062002e8462002055565b9062001e03336200257584620020bc565b821662002ec857505062002eb862002eac6200208e565b926200257584620020bc565b62001e03336200257584620020ca565b9092901562002ee0575062002eb862002eac6200208e565b9162002f0b9062002f0062002ef462002071565b946200257586620020bc565b6200257584620020ca565b62001e03336200257584620020db565b508083161562002e6f565b8015808062002fe5575b1562002f555750505062002f4362002055565b61271062002f5182620020bc565b5290565b8262002f8b5750905062002f8062002f6c6200208e565b918062002f7984620020bc565b5262002030565b62002f5182620020ca565b1562002fa0575062002f8062002f6c6200208e565b62002faa62002071565b918162002fb784620020bc565b528062002fc484620020ca565b52810180911162001d9a5762002fda9062002030565b62002f5182620020db565b50821562002f30565b90620030036020928281519485920162000236565b0190565b6040805133602082019081528183019390935281815262000e3494620030d99493620030ed937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093620030e092620030ad9291620030ca91906200306d60608262001608565b51902097620030bd610ca5968451976200308b602082018a62001608565b8089526200363c60208a01398451958693866020860152606085019062002279565b9089848303018685015262002244565b0386810184528362001608565b51968793602085019062002fee565b9062002fee565b0390810184528362001608565b62003541565b9060066200312c60ff92335f52600860205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b0154161562003156575f52600960205260405f2054156200314957565b63a1e9dd9d5f526004601cfd5b60046040517feed7778f000000000000000000000000000000000000000000000000000000008152fd5b6bffffffffffffffffffffffff809116906103e88211918215620031d2575b5050620031a857565b60046040517fe0e54ced000000000000000000000000000000000000000000000000000000008152fd5b6019919250061615155f806200319f565b5f92918154620031f38162001547565b926001918083169081156200324f575060011462003212575b50505050565b9091929394505f5260209060205f20905f915b8583106200323d575050505001905f8080806200320c565b80548584015291830191810162003225565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684525050508115159091020191505f8080806200320c565b620030ed62000e3493604093620030e085519260ff60209385620032d48682019233846020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0395620033087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09788810183528262001608565b51902096165f5260098352620030d9875f2097620034788151809487808301526200346b81516200339b6200334b6101409283898801526101808701906200164a565b620033868c860151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc092838983030160608a01526200164a565b9088860151908783030160808801526200164a565b92606081015160a0860152608081015160c0860152620033d860a082015160e087019073ffffffffffffffffffffffffffffffffffffffff169052565b6200344b60c0820151926200340061010094858901906bffffffffffffffffffffffff169052565b60e0830151936200342c61012095868a019073ffffffffffffffffffffffffffffffffffffffff169052565b83015173ffffffffffffffffffffffffffffffffffffffff1690870152565b015173ffffffffffffffffffffffffffffffffffffffff16610160840152565b0387810185528462001608565b51978894850190620031e3565b601c5f60649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d1560015f5114171615620034ce575f606052604052565b637939f4245f526004601cfd5b15620034e357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c454400000000000000000000006044820152fd5b9190826200354e6200292b565b6020815191015ff59273ffffffffffffffffffffffffffffffffffffffff841615620035dd575f9162003582839262002966565b9482602083519301915af13d15620035d7573d620035a081620028f0565b90620035b0604051928362001608565b81525f60203d92013e5b80620035cc575b62001e0390620034db565b50813b1515620035c1565b620035ba565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c45440000000000000000000000000000006044820152fdfe60406080815262000ca5803803806200001881620002a5565b92833981018282820312620002805781516001600160401b0390818111620002805783019180601f840112156200028057825191602094620000646200005e85620002cb565b620002a5565b948686868152018760059660051b8301019185831162000280578801905b8282106200028457505050858101519182116200028057019080601f8301121562000280578151620000b86200005e82620002cb565b92868085848152019260051b820101928311620002805786809101915b8383106200026f5750505050825192815184036200025b5783156200024a575f5b8481106200010d5786516109ac9081620002f98239f35b6001600160a01b03620001218284620002e3565b511690620001308185620002e3565b518215620002395780156200022857825f52858852885f20546200021757600680549068010000000000000000821015620002035760018201808255821015620001ef575f52885f20018360018060a01b0319825416179055825f5285885280895f20555f54818101809111620001db576001937f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928b925f5582519182528a820152a101620000f6565b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b885163215a865160e11b8152600490fd5b885163040357dd60e21b8152600490fd5b88516384ff3e1b60e01b8152600490fd5b8551637b21919d60e01b8152600490fd5b85516001621398b960e31b03198152600490fd5b8251815291810191879101620000d5565b5f80fd5b81516001600160a01b03811681036200028057815290880190880162000082565b6040519190601f01601f191682016001600160401b038111838210176200020357604052565b6001600160401b038111620002035760051b60200190565b8051821015620001ef5760209160051b01019056fe604060808152600436101561004b575b3615610019575f80fd5b513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77090604090a1005b5f3560e01c8063191655871461041c578063283248be146103cd5780633a98ef39146103b0578063406072a91461035957806348b750441461032e578063580fc80a146102b85780635be7fde81461024d5780639852595c14610209578063a3f8eace146101e4578063b34c8caf146101a0578063c45ac0501461016c578063d79779b214610128578063e33b7de31461010a5763e919ecad0361000f5734610106575f600319360112610106576020906006549051908152f35b5f80fd5b5034610106575f600319360112610106576020906001549051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61015a6104b8565b165f5260038252805f20549051908152f35b503461010657806003193601126101065760209061019961018b6104b8565b6101936104db565b906107d1565b9051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff6101d26104b8565b165f5260058252805f20549051908152f35b5034610106576020600319360112610106576020906101996102046104b8565b610794565b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61023b6104b8565b165f5260028252805f20549051908152f35b34610106575f600319360112610106576006545f5b81811061026b57005b8073ffffffffffffffffffffffffffffffffffffffff61028c600193610456565b90549060031b1c1661029d81610794565b6102a9575b5001610262565b6102b290610538565b836102a2565b34610106576020600319360112610106576102d16104b8565b6006545f5b8181106102df57005b8073ffffffffffffffffffffffffffffffffffffffff610300600193610456565b90549060031b1c1661031281866107d1565b61031e575b50016102d6565b610328908561063c565b84610317565b503461010657600319360112610106576103576103496104b8565b6103516104db565b9061063c565b005b50346101065780600319360112610106576020906103756104b8565b61037d6104db565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260048452825f2091165f528252805f20549051908152f35b5034610106575f600319360112610106576020905f549051908152f35b503461010657602060031936011261010657600435906006548210156101065773ffffffffffffffffffffffffffffffffffffffff61040d602093610456565b92905490519260031b1c168152f35b346101065760206003193601126101065760043573ffffffffffffffffffffffffffffffffffffffff811681036101065761035790610538565b60065481101561048b5760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b9190820180921161050b57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff16805f5260056020526040805f2054156106135761056a82610794565b9182156105ea57805f52600260205261058683835f20546104fe565b815f526002602052825f205561059e836001546104fe565b6001555f80808086855af1156105dd577fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569282519182526020820152a1565b63b12d13eb5f526004601cfd5b600482517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600490517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff80831692835f526005602052604092835f20541561076b5761067382826107d1565b92831561074257604460105f84819460209616998a83526004875289832090835286528882206106a48982546104fe565b9055898252600386528882206106bb8982546104fe565b905586601452876034526fa9059cbb00000000000000000000000082525af13d1560015f5114171615610735575f603452915173ffffffffffffffffffffffffffffffffffffffff909216825260208201527f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a90604090a2565b6390b8ec185f526004601cfd5b600485517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600484517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b6107ce906107a547600154906104fe565b73ffffffffffffffffffffffffffffffffffffffff82165f52600260205260405f2054916108ff565b90565b9073ffffffffffffffffffffffffffffffffffffffff80921660408051937f70a0823100000000000000000000000000000000000000000000000000000000855230600486015260208086602481875afa9586156108f5575f96610862575b506108496107ce96855f5260038352845f2054906104fe565b935f5260048152825f209185165f52525f2054916108ff565b9550803d82116108ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116870187811067ffffffffffffffff8211176108c1578291889186528101031261010657945194610849610830565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b503d61086d565b83513d5f823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f20549081810291818304149015171561050b575f54908115610949570490810390811161050b5790565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212206eccfbedc3169c194ca081c9f8188ce45bd717d6f7d44a191cb893bb78ffe63064736f6c63430008170033a26469706673582212202d359e81bd6cc3a48d3c5438944a71f8c0d7d62b7636ef43dff84506763fcd0064736f6c63430008170033";

type MADFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADFactory__factory extends ContractFactory {
  constructor(...args: MADFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      MADFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MADFactory__factory {
    return super.connect(runner) as MADFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactoryInterface {
    return new Interface(_abi) as MADFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MADFactory {
    return new Contract(address, _abi, runner) as unknown as MADFactory;
  }
}
