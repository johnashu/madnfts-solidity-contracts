/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MADFactory, MADFactoryInterface } from "../../Factory/MADFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSplitter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenType",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "CollectionTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "erc20Token",
        type: "address",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "impl",
        type: "bytes",
      },
    ],
    name: "addCollectionType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionId",
        type: "address",
      },
    ],
    name: "collectionCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionId",
        type: "address",
      },
    ],
    name: "collectionInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "collectionType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "collectionSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionIndex",
        type: "uint256",
      },
    ],
    name: "collectionTypes",
    outputs: [
      {
        internalType: "bytes",
        name: "collectionBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct FactoryTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "splitterSalt",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "ambassador",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ambassadorShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "madFeeTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct FactoryTypes.CreateSplitterParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createSplitter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateCollectionErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateSplitter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "feeCreateSplitterErc20",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct FeeHandlerFactory.Fee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getDeployedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "invalidateCollectionFee",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "invalidateSplitterFee",
        type: "bool",
      },
    ],
    name: "invalidateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionNew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterNew",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollectionErc20New",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitterErc20New",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "madFeeTokenAddress",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambassadorShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "address",
        name: "deployedCollections",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x346200006d57620041d9388190036080601f8201601f19168101906001600160401b0382119082101762000071576020928291604052608039126200006d576080516001600160a01b03811681036200006d576200005d9062000085565b6040516140bc90816200011d8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b33156200010f575f80546001600160a01b031916339081178255907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3670de0b6b3a76400008060025560035580156200010f5760018190556001600160a01b03167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2565b63d92e233d5f526004601cfdfe6080604052600436101562000012575f80fd5b5f3560e01c806306fdde0314620001fa5780630b78f9c014620001f457806313af403514620001ee5780631b52c9c014620001e85780631f0c602d14620001e257806322ea34d514620001dc5780633bbed4a014620001d65780636042dd5d14620001d057806365e11e6e14620001ca57806366d003ac14620001c457806366e7950914620001be5780637133739114620001b857806376de0f3d14620001b25780638691fe4614620001ac5780638da5cb5b14620001a65780639750f2e014620001a057806397cf65af146200019a578063b37eea151462000194578063b7e7d278146200018e578063c0d786551462000188578063c661d4b11462000182578063cbf71c1c146200017c578063e4d73e591462000176578063f887ea401462000170578063f9f411d8146200016a578063fb0059e314620001645763fec89cd8146200015e575f80fd5b62001a85565b62001a66565b620019f6565b62001978565b6200181e565b62001786565b620016d6565b6200165e565b62001569565b6200106c565b62001014565b62000f5e565b62000f2a565b62000edd565b62000de2565b62000bda565b62000bbe565b62000b89565b62000a36565b6200082b565b620007b7565b62000447565b620003aa565b6200038b565b6200030a565b6200024f565b62000223565b5f5b838110620002125750505f910152565b818101518382015260200162000202565b346200024b575f6003193601126200024b57602080526707666163746f727960475260606020f35b5f80fd5b346200024b5760406003193601126200024b5760043560243573ffffffffffffffffffffffffffffffffffffffff5f54163303620002c157816040917f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1936002558060035582519182526020820152a1005b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff8116036200024b57565b346200024b5760206003193601126200024b576004356200032b81620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c15780156200037e57805f5516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d765f80a3005b63d92e233d5f526004601cfd5b346200024b575f6003193601126200024b576020600354604051908152f35b346200024b5760206003193601126200024b5760c0600435620003cd81620002eb565b73ffffffffffffffffffffffffffffffffffffffff8091165f52600660205260ff60405f2080549260018201549160036002820154910154928460405196848116885260a01c166020870152604086015260608501528116608084015260a01c16151560a0820152f35b90816101409103126200024b5790565b60206003193601126200024b5760043567ffffffffffffffff81116200024b576200047790369060040162000437565b610100808201918235926200048c84620002eb565b620004b6620004b0600a5473ffffffffffffffffffffffffffffffffffffffff1690565b6200268e565b6020820191620004dc620004ca8462001cb8565b620004d58462001b1a565b9062002e99565b6101208181810191620004f9620004f38462001c9e565b62002f26565b620005048262001b1a565b73ffffffffffffffffffffffffffffffffffffffff9690878116620007a457506200053160025462002b7f565b6200053c8162001cb8565b60408401359660608501918862000554848862001c4a565b919096608089019d620005688f8b62001c4a565b9099908c8c6200057c60e082018262001c4a565b909160a001359e60c001359d620005938c62001b1a565b936200059f9062001c9e565b94600a54620005c19073ffffffffffffffffffffffffffffffffffffffff1690565b96620005cc62001bcc565b9b3690620005da9262002819565b8b523690620005e99262002819565b60208a01523690620005fb9262002819565b6040880152606087018d9052608087018c905273ffffffffffffffffffffffffffffffffffffffff1660a08701526bffffffffffffffffffffffff1660c086015273ffffffffffffffffffffffffffffffffffffffff1660e08501525f9084015233908301526200066c926200302f565b978833620006989073ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b90620006a49162002854565b620006af8462001cb8565b91620006bb9062001b1a565b90620006c662001bee565b3381529260ff166020840152604083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a0820152620007288873ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b906200073491620028a5565b62000740908662001c4a565b986200074d919662001c4a565b90946200075a9062001c9e565b91620007669062001cb8565b9488604051998a99169b16996200077e978962001d05565b037f53da1f292ba9ca211753ef0bfe01ba3e5626fd3c61b03d473ee950f4c91fb85b91a3005b620007b190309062002a44565b62000531565b346200024b5760206003193601126200024b57600435620007d881620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c15780156200037e5780600155167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64665f80a2005b60c06003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff6200085762001af0565b16158062000a15575b1562000872576200087062002554565b005b620008996200088062001af0565b73ffffffffffffffffffffffffffffffffffffffff1690565b151580620009ff575b80620009f2575b80620009e4575b15620008c057620008706200245d565b620008ce6200088062001afe565b151580620009ce575b80620009c1575b80620009b3575b15620008f5576200087062002366565b620009036200088062001af0565b1515806200099c575b806200098f575b8062000981575b8062000974575b8062000966575b806200094b575b156200093f5762000870620020f9565b62adecf05f526004601cfd5b506127116200095f60843560643562001b53565b106200092f565b506127116084351062000928565b5060636084351162000921565b506107d1606435106200091a565b5060636064351162000913565b50620009ab6200088062001afe565b15156200090c565b5061271160843510620008e5565b50606360843511620008de565b50620009dd6200088062001af0565b15620008d7565b506107d160643510620008b0565b50606360643511620008a9565b5062000a0e6200088062001afe565b15620008a2565b5062000a246200088062001afe565b1562000860565b801515036200024b57565b346200024b5760606003193601126200024b5760043562000a5781620002eb565b60243562000a658162000a2b565b6044359062000a748262000a2b565b73ffffffffffffffffffffffffffffffffffffffff805f54163303620002c157831690811562000b5f5762000af3575b5062000aac57005b620008709062000aed62000abf62001bbb565b915f83525f602084015273ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f2090565b6200264b565b62000b589060016040519162000b09836200148f565b5f835260208301905f82525f52600460205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b5f62000aa4565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346200024b575f6003193601126200024b5760206040515f8152f35b346200024b5760406003193601126200024b576024600435813567ffffffffffffffff8082116200024b57366023830112156200024b5781600401359081116200024b5736602482840101116200024b5773ffffffffffffffffffffffffffffffffffffffff5f54163303620002c157825f52602093600860205260405f209262000c728362000c6b86546200140e565b8662001b67565b5f91601f841160011462000cfe575062000cc6939495509082915f9262000cef575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b7f44e972c56c15144b740184a8e110ba77f8929877b701f0dce3df06ebc39a09235f80a2005b602492500101355f8062000c94565b95917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084169662000d32865f5260205f2090565b935f915b89831062000d98575050508360019596971062000d5c575b505050811b01905562000cc9565b01602401357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600384901b60f8161c191690555f808062000d4e565b908060018597848396978901013581550196019301919062000d36565b60031960409101126200024b5760043562000dd081620002eb565b9060243562000ddf81620002eb565b90565b346200024b5762000df33662000db5565b9060016040805160096020820152848282015220541562000ed5575b9073ffffffffffffffffffffffffffffffffffffffff8084165f52600960205260405f2054935f5b85811062000e51575b6040518515158152602090f35b0390f35b62000ead6200088062000e8d8362000e878673ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b620019da565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b8385161462000ebf5760010162000e37565b50505050505062000e4d60015f80808062000e40565b505f62000e0f565b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff60043562000f1381620002eb565b165f526009602052602060405f2054604051908152f35b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346200024b5760e062000fbe62000f753662000db5565b73ffffffffffffffffffffffffffffffffffffffff9291928093165f52600760205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff6004356200104a81620002eb565b165f526006602052602060ff600360405f20015460a01c166040519015158152f35b60406003193601126200024b5760043567ffffffffffffffff81116200024b576200109c90369060040162000437565b620010a9602435620002eb565b610100908181013591620010bd83620002eb565b620010e1620004b0600a5473ffffffffffffffffffffffffffffffffffffffff1690565b62001100620010f36020840162001cb8565b620004d583850162001b1a565b62001113620004f3610120840162001c9e565b6200111e8262001b1a565b73ffffffffffffffffffffffffffffffffffffffff8116620013fb57506200114860025462002b7f565b620011566020830162001cb8565b9062001166606084018462001c4a565b93909262001178608083018362001c4a565b9590946200118a60e085018562001c4a565b97909660a08601359760c087013599888801620011a79062001b1a565b92620011b76101208a0162001c9e565b94600a54620011d99073ffffffffffffffffffffffffffffffffffffffff1690565b96620011e462001bcc565b983690620011f29262002819565b88523690620012019262002819565b60208701523690620012139262002819565b6040850152606084018890526080840189905273ffffffffffffffffffffffffffffffffffffffff1660a08401526bffffffffffffffffffffffff1660c083015273ffffffffffffffffffffffffffffffffffffffff1660e082015273ffffffffffffffffffffffffffffffffffffffff6024351681850152336101208201526040830135620012a3926200302f565b918233620012cf9073ffffffffffffffffffffffffffffffffffffffff165f52600960205260405f2090565b90620012db9162002854565b620012e96020830162001cb8565b908201620012f79062001b1a565b6200130162001bee565b3381529160ff1660208301526040838101359083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152600160a0820152620013688373ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b906200137491620028a5565b62001383606082018262001c4a565b909162001394608082018262001c4a565b9590966101208301620013a79062001c9e565b92602001620013b69062001cb8565b926040519773ffffffffffffffffffffffffffffffffffffffff8998169a73ffffffffffffffffffffffffffffffffffffffff1699602435966200077e988a62001d62565b6200140890309062002a44565b62001148565b90600182811c9216801562001457575b60208310146200142a57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916200141e565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff821117620014ac57604052565b62001462565b6080810190811067ffffffffffffffff821117620014ac57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117620014ac57604052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936200154f8151809281875287808801910162000200565b0116010190565b90602062000ddf92818152019062001511565b346200024b576020806003193601126200024b576004355f526008815260405f2090604051905f9280546200159e816200140e565b808552916001918083169081156200161b5750600114620015da575b62000e4d85620015cd81890382620014cf565b6040519182918262001556565b5f908152838120939550925b82841062001607575050508162000e4d93620015cd92820101935f620015ba565b8054858501870152928501928101620015e6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686860152505050151560051b8201019150620015cd8162000e4d5f620015ba565b346200024b5760206003193601126200024b576004356200167f81620002eb565b73ffffffffffffffffffffffffffffffffffffffff90815f54163303620002c157620016ab816200268e565b80600a55167f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc805f80a2005b346200024b5760406003193601126200024b57602062001768602435620016fd81620002eb565b6040805173ffffffffffffffffffffffffffffffffffffffff909216848301908152600435602082015291906200175f9082908401037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282620014cf565b5190206200270c565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff600435620017bc81620002eb565b620017c662001c30565b5016801562000b5f575f52600560205262000e4d60405f2060ff600160405192620017f1846200148f565b80548452015416151560208201526040519182918291909160208060408301948051845201511515910152565b346200024b5760606003193601126200024b576044356024356004356200184583620002eb565b73ffffffffffffffffffffffffffffffffffffffff805f54163303620002c1578316801562000b5f577f660e7095066fd91b05cfad0851f3cefa62b4a62de319c3c13ef7db8982e7850193620018f96200197392600160405191620018aa836200148f565b86835260208301908282525f52600460205260405f209251835551151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b6200193e6040516200190b816200148f565b8581526001602082015262000aed8373ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f2090565b6040519384938491604091949373ffffffffffffffffffffffffffffffffffffffff9160608501968552602085015216910152565b0390a1005b346200024b575f6003193601126200024b57602073ffffffffffffffffffffffffffffffffffffffff600a5416604051908152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b8054821015620019f0575f5260205f2001905f90565b620019ad565b346200024b5760406003193601126200024b5760043562001a1781620002eb565b6024359073ffffffffffffffffffffffffffffffffffffffff8091165f52600960205260405f2080548310156200024b5760209262001a5691620019da565b9190546040519260031b1c168152f35b346200024b575f6003193601126200024b576020600254604051908152f35b346200024b5760206003193601126200024b5773ffffffffffffffffffffffffffffffffffffffff60043562001abb81620002eb565b62001ac562001c30565b5016801562000b5f575f52600460205262000e4d60405f2060ff600160405192620017f1846200148f565b60243562000ddf81620002eb565b60443562000ddf81620002eb565b60a43562000ddf81620002eb565b3562000ddf81620002eb565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9190820180921162001b6157565b62001b26565b601f821162001b7557505050565b5f5260205f20906020601f840160051c8301931062001bb0575b601f0160051c01905b81811062001ba4575050565b5f815560010162001b98565b909150819062001b8f565b6040519062001bca826200148f565b565b60405190610140820182811067ffffffffffffffff821117620014ac57604052565b6040519060c0820182811067ffffffffffffffff821117620014ac57604052565b6040519060e0820182811067ffffffffffffffff821117620014ac57604052565b6040519062001c3f826200148f565b5f6020838281520152565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156200024b570180359067ffffffffffffffff82116200024b576020019181360383136200024b57565b356bffffffffffffffffffffffff811681036200024b5790565b3560ff811681036200024b5790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b9498979262001d476bffffffffffffffffffffffff9160ff9662001d3860c09a955f9c9760e08c5260e08c019162001cc7565b9189830360208b015262001cc7565b99166040860152606085015260808401521660a08201520152565b979262001db96bffffffffffffffffffffffff9160ff9662001daa73ffffffffffffffffffffffffffffffffffffffff9a95999e9d9960c09c9760e08f818152019162001cc7565b8c810360208e01529162001cc7565b9a166040890152606088015260808701521660a085015216910152565b9061271091820391821162001b6157565b8181029291811591840414171562001b6157565b6040519062001e0a826200148f565b6001825260203681840137565b6040519062001e2682620014b2565b600382526060366020840137565b604051906060820182811067ffffffffffffffff821117620014ac5760405260028252604082602036910137565b805115620019f05760200190565b805160011015620019f05760400190565b805160021015620019f05760600190565b600660c062001bca9362001fa073ffffffffffffffffffffffffffffffffffffffff62001efd81845116879073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6020830151600187015562001f5681604085015116600288019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015116600386019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6080810151600485015560a081015160058501550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b9081518082526020808093019301915f5b8281106200200a575050505090565b83518552938101939281019260010162001ffb565b9081518082526020808093019301915f5b8281106200203f575050505090565b835173ffffffffffffffffffffffffffffffffffffffff168552938101939281019260010162002030565b9291620020986040916200208960039460608852606088019062001fea565b9086820360208801526200201f565b930152565b9291620020986040916200208960029460608852606088019062001fea565b9291620020986040916200208960019460608852606088019062001fea565b929162002098604091620020895f9460608852606088019062001fea565b6200210362001b0c565b73ffffffffffffffffffffffffffffffffffffffff908082166200235357506200212f60035462002b7f565b606435906200215862002150620021468462001dd6565b6084359062001de7565b612710900490565b9061271080831015620022ce57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620021a76200219662001af0565b620021a062001afe565b9062002be6565b93620022b4620021b8858362002ccc565b945b60043590620021cb87898462002dad565b936200224c620021da62001af0565b6200222f620021e862001afe565b91620021f362001c0f565b73ffffffffffffffffffffffffffffffffffffffff8a16815296602088015273ffffffffffffffffffffffffffffffffffffffff166040870152565b73ffffffffffffffffffffffffffffffffffffffff166060850152565b608083015260a0820152600160c0820152620022ae836200228b3373ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b62001e92565b620022c960405192839216953395836200206a565b0390a3565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620022b46200230162001dfb565b95620023366200231062001afe565b6200231b8962001e62565b9073ffffffffffffffffffffffffffffffffffffffff169052565b6200234062001dfb565b956200234c8762001e62565b52620021ba565b6200236090309062002b01565b6200212f565b6200237062001b0c565b73ffffffffffffffffffffffffffffffffffffffff908082166200244a57506200239c60035462002b7f565b60643590620023b362002150620021468462001dd6565b90612710808310156200241757507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620023f16200219662001af0565b9362002402620021b8858362002ccc565b620022c960405192839216953395836200209d565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620024026200230162001dfb565b6200245790309062002b01565b6200239c565b6200246762001b0c565b73ffffffffffffffffffffffffffffffffffffffff908082166200254157506200249360035462002b7f565b60643590620024aa62002150620021468462001dd6565b90612710808310156200250e57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620024e86200219662001af0565b93620024f9620021b8858362002ccc565b620022c96040519283921695339583620020bc565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620024f96200230162001dfb565b6200254e90309062002b01565b62002493565b6200255e62001b0c565b73ffffffffffffffffffffffffffffffffffffffff908082166200263857506200258a60035462002b7f565b60643590620025a162002150620021468462001dd6565b90612710808310156200260557507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620025df6200219662001af0565b93620025f0620021b8858362002ccc565b620022c96040519283921695339583620020db565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620025f06200230162001dfb565b6200264590309062002b01565b6200258a565b6001602062001bca93805184550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b156200037e57565b67ffffffffffffffff8111620014ac57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60405190620026e0826200148f565b601082527f67363d3d37363d34f03d5260086018f3000000000000000000000000000000006020830152565b62000ddf906200271b620026d1565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b602184015260358301526055820152605581526200277081620014b2565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f0100000000000000000000000000000000000000000000000000000000000000603682015260178152620027fd816200148f565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b929192620028278262002696565b91620028376040519384620014cf565b8294818452818301116200024b578281602093845f960137010152565b805468010000000000000000811015620014ac576200287991600182018155620019da565b73ffffffffffffffffffffffffffffffffffffffff9291928084549260031b9316831b921b1916179055565b9060a0620029ff91620029b8600373ffffffffffffffffffffffffffffffffffffffff956200291287855116829073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b602084015181547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1660a09190911b74ff00000000000000000000000000000000000000001617815560408401516001820155606084015160028201550194608083015116859073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b015182547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690151560a01b74ff0000000000000000000000000000000000000000161790565b9055565b908160409103126200024b5760206040519162002a20836200148f565b80518352015162002a318162000a2b565b602082015290565b6040513d5f823e3d90fd5b90604051907ffec89cd800000000000000000000000000000000000000000000000000000000825260408260248173ffffffffffffffffffffffffffffffffffffffff809716948560048301525afa91821562002afb575f9262002ac3575b50602082519201511562000b5f5762001bca92600154169033906200322b565b62002aeb91925060403d60401162002af3575b62002ae28183620014cf565b81019062002a03565b905f62002aa3565b503d62002ad6565b62002a39565b90604051907fcbf71c1c00000000000000000000000000000000000000000000000000000000825260408260248173ffffffffffffffffffffffffffffffffffffffff809716948560048301525afa91821562002afb575f9262002ac35750602082519201511562000b5f5762001bca92600154169033906200322b565b80340362002bbc575f8080809373ffffffffffffffffffffffffffffffffffffffff600154165af11562002baf57565b63b12d13eb5f526004601cfd5b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b919062002bf262001e17565b5073ffffffffffffffffffffffffffffffffffffffff8381161590818062002cc1575b1562002c3b57505050905062002c2a62001dfb565b9062001bca336200231b8462001e62565b821662002c6e57505062002c5e62002c5262001e34565b926200231b8462001e62565b62001bca336200231b8462001e70565b9092901562002c86575062002c5e62002c5262001e34565b9162002cb19062002ca662002c9a62001e17565b946200231b8662001e62565b6200231b8462001e70565b62001bca336200231b8462001e81565b508083161562002c15565b8015808062002d8b575b1562002cfb5750505062002ce962001dfb565b61271062002cf78262001e62565b5290565b8262002d315750905062002d2662002d1262001e34565b918062002d1f8462001e62565b5262001dd6565b62002cf78262001e70565b1562002d46575062002d2662002d1262001e34565b62002d5062001e17565b918162002d5d8462001e62565b528062002d6a8462001e70565b52810180911162001b615762002d809062001dd6565b62002cf78262001e81565b50821562002cd6565b9062002da96020928281519485920162000200565b0190565b6040805133602082019081528183019390935281815262000ddf9462002e7f949362002e93937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09362002e869262002e53929162002e70919062002e13606082620014cf565b5190209762002e63610ca59684519762002e31602082018a620014cf565b808952620033e260208a0139845195869386602086015260608501906200201f565b9089848303018685015262001fea565b03868101845283620014cf565b51968793602085019062002d94565b9062002d94565b03908101845283620014cf565b620032e7565b90600662002ed260ff92335f52600760205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b0154161562002efc575f52600860205260405f20541562002eef57565b63a1e9dd9d5f526004601cfd5b60046040517feed7778f000000000000000000000000000000000000000000000000000000008152fd5b6bffffffffffffffffffffffff809116906103e8821191821562002f78575b505062002f4e57565b60046040517fe0e54ced000000000000000000000000000000000000000000000000000000008152fd5b6019919250061615155f8062002f45565b5f9291815462002f99816200140e565b9260019180831690811562002ff5575060011462002fb8575b50505050565b9091929394505f5260209060205f20905f915b85831062002fe3575050505001905f80808062002fb2565b80548584015291830191810162002fcb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684525050508115159091020191505f80808062002fb2565b62002e9362000ddf9360409362002e8685519260ff602093856200307a8682019233846020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0395620030ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe097888101835282620014cf565b51902096165f526008835262002e7f875f20976200321e81518094878083015262003211815162003141620030f161014092838988015261018087019062001511565b6200312c8c860151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc092838983030160608a015262001511565b90888601519087830301608088015262001511565b92606081015160a0860152608081015160c08601526200317e60a082015160e087019073ffffffffffffffffffffffffffffffffffffffff169052565b620031f160c082015192620031a661010094858901906bffffffffffffffffffffffff169052565b60e083015193620031d261012095868a019073ffffffffffffffffffffffffffffffffffffffff169052565b83015173ffffffffffffffffffffffffffffffffffffffff1690870152565b015173ffffffffffffffffffffffffffffffffffffffff16610160840152565b03878101855284620014cf565b5197889485019062002f89565b601c5f60649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d1560015f511417161562003274575f606052604052565b637939f4245f526004601cfd5b156200328957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c454400000000000000000000006044820152fd5b919082620032f4620026d1565b6020815191015ff59273ffffffffffffffffffffffffffffffffffffffff84161562003383575f916200332883926200270c565b9482602083519301915af13d156200337d573d620033468162002696565b90620033566040519283620014cf565b81525f60203d92013e5b8062003372575b62001bca9062003281565b50813b151562003367565b62003360565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c45440000000000000000000000000000006044820152fdfe60406080815262000ca5803803806200001881620002a5565b92833981018282820312620002805781516001600160401b0390818111620002805783019180601f840112156200028057825191602094620000646200005e85620002cb565b620002a5565b948686868152018760059660051b8301019185831162000280578801905b8282106200028457505050858101519182116200028057019080601f8301121562000280578151620000b86200005e82620002cb565b92868085848152019260051b820101928311620002805786809101915b8383106200026f5750505050825192815184036200025b5783156200024a575f5b8481106200010d5786516109ac9081620002f98239f35b6001600160a01b03620001218284620002e3565b511690620001308185620002e3565b518215620002395780156200022857825f52858852885f20546200021757600680549068010000000000000000821015620002035760018201808255821015620001ef575f52885f20018360018060a01b0319825416179055825f5285885280895f20555f54818101809111620001db576001937f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928b925f5582519182528a820152a101620000f6565b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b885163215a865160e11b8152600490fd5b885163040357dd60e21b8152600490fd5b88516384ff3e1b60e01b8152600490fd5b8551637b21919d60e01b8152600490fd5b85516001621398b960e31b03198152600490fd5b8251815291810191879101620000d5565b5f80fd5b81516001600160a01b03811681036200028057815290880190880162000082565b6040519190601f01601f191682016001600160401b038111838210176200020357604052565b6001600160401b038111620002035760051b60200190565b8051821015620001ef5760209160051b01019056fe604060808152600436101561004b575b3615610019575f80fd5b513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77090604090a1005b5f3560e01c8063191655871461041c578063283248be146103cd5780633a98ef39146103b0578063406072a91461035957806348b750441461032e578063580fc80a146102b85780635be7fde81461024d5780639852595c14610209578063a3f8eace146101e4578063b34c8caf146101a0578063c45ac0501461016c578063d79779b214610128578063e33b7de31461010a5763e919ecad0361000f5734610106575f600319360112610106576020906006549051908152f35b5f80fd5b5034610106575f600319360112610106576020906001549051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61015a6104b8565b165f5260038252805f20549051908152f35b503461010657806003193601126101065760209061019961018b6104b8565b6101936104db565b906107d1565b9051908152f35b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff6101d26104b8565b165f5260058252805f20549051908152f35b5034610106576020600319360112610106576020906101996102046104b8565b610794565b50346101065760206003193601126101065760209073ffffffffffffffffffffffffffffffffffffffff61023b6104b8565b165f5260028252805f20549051908152f35b34610106575f600319360112610106576006545f5b81811061026b57005b8073ffffffffffffffffffffffffffffffffffffffff61028c600193610456565b90549060031b1c1661029d81610794565b6102a9575b5001610262565b6102b290610538565b836102a2565b34610106576020600319360112610106576102d16104b8565b6006545f5b8181106102df57005b8073ffffffffffffffffffffffffffffffffffffffff610300600193610456565b90549060031b1c1661031281866107d1565b61031e575b50016102d6565b610328908561063c565b84610317565b503461010657600319360112610106576103576103496104b8565b6103516104db565b9061063c565b005b50346101065780600319360112610106576020906103756104b8565b61037d6104db565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260048452825f2091165f528252805f20549051908152f35b5034610106575f600319360112610106576020905f549051908152f35b503461010657602060031936011261010657600435906006548210156101065773ffffffffffffffffffffffffffffffffffffffff61040d602093610456565b92905490519260031b1c168152f35b346101065760206003193601126101065760043573ffffffffffffffffffffffffffffffffffffffff811681036101065761035790610538565b60065481101561048b5760065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361010657565b9190820180921161050b57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff16805f5260056020526040805f2054156106135761056a82610794565b9182156105ea57805f52600260205261058683835f20546104fe565b815f526002602052825f205561059e836001546104fe565b6001555f80808086855af1156105dd577fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0569282519182526020820152a1565b63b12d13eb5f526004601cfd5b600482517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600490517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff80831692835f526005602052604092835f20541561076b5761067382826107d1565b92831561074257604460105f84819460209616998a83526004875289832090835286528882206106a48982546104fe565b9055898252600386528882206106bb8982546104fe565b905586601452876034526fa9059cbb00000000000000000000000082525af13d1560015f5114171615610735575f603452915173ffffffffffffffffffffffffffffffffffffffff909216825260208201527f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a90604090a2565b6390b8ec185f526004601cfd5b600485517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600484517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b6107ce906107a547600154906104fe565b73ffffffffffffffffffffffffffffffffffffffff82165f52600260205260405f2054916108ff565b90565b9073ffffffffffffffffffffffffffffffffffffffff80921660408051937f70a0823100000000000000000000000000000000000000000000000000000000855230600486015260208086602481875afa9586156108f5575f96610862575b506108496107ce96855f5260038352845f2054906104fe565b935f5260048152825f209185165f52525f2054916108ff565b9550803d82116108ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116870187811067ffffffffffffffff8211176108c1578291889186528101031261010657945194610849610830565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b503d61086d565b83513d5f823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff165f52600560205260405f20549081810291818304149015171561050b575f54908115610949570490810390811161050b5790565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea26469706673582212204438d449333bab050b08c8d1a039f6649a64a0d9364d292dc38ef01da116418864736f6c63430008160033a2646970667358221220fb2b372d1d4e9e1e990e58cabf7450988169e1d9850f5e765eb6cf00a053ec8364736f6c63430008160033";

type MADFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADFactory__factory extends ContractFactory {
  constructor(...args: MADFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      MADFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MADFactory__factory {
    return super.connect(runner) as MADFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactoryInterface {
    return new Interface(_abi) as MADFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MADFactory {
    return new Contract(address, _abi, runner) as unknown as MADFactory;
  }
}
