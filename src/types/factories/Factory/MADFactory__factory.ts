/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { MADFactory, MADFactoryInterface } from "../../Factory/MADFactory";
import type { NonPayableOverrides } from "../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "BadCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFees",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRoyalty",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSplitter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenType",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroMaxSupply",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSplitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCollection",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "collectionSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royalties",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "CollectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "CollectionTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeVal3",
        type: "uint256",
      },
    ],
    name: "FeesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "MarketplaceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPaymentToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flag",
        type: "uint256",
      },
    ],
    name: "SplitterCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESS_ZERO",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "impl",
        type: "bytes",
      },
    ],
    name: "addCollectionType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionId",
        type: "address",
      },
    ],
    name: "collectionInfo",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "collectionType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "collectionSalt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blocknumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionIndex",
        type: "uint256",
      },
    ],
    name: "collectionTypes",
    outputs: [
      {
        internalType: "bytes",
        name: "collectionBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct ContractTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "tokenSalt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "collectionName",
            type: "string",
          },
          {
            internalType: "string",
            name: "collectionSymbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "address",
            name: "splitter",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royalty",
            type: "uint96",
          },
        ],
        internalType: "struct ContractTypes.CreateCollectionParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "collectionToken",
        type: "address",
      },
    ],
    name: "createCollection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "splitterSalt",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "ambassador",
            type: "address",
          },
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ambassadorShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectShare",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
        ],
        internalType: "struct ContractTypes.CreateSplitterParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createSplitter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "creatorAuth",
    outputs: [
      {
        internalType: "bool",
        name: "stdout",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collectionId",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "creatorCheck",
    outputs: [
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateCollection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeCreateCollectionErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCreateSplitter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "feeCreateSplitterErc20",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getDeployedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getIDsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollection",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitter",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeCreateCollection",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeCreateSplitter",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "splitterInfo",
    outputs: [
      {
        internalType: "address",
        name: "splitter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "splitterSalt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ambassador",
        type: "address",
      },
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ambassadorShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "projectShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTokens",
    outputs: [
      {
        internalType: "address",
        name: "deployedCollections",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x3462000076576200427f3881900360a0601f8201601f19168101906001600160401b038211908210176200007b57602092829160405260a03912620000765760a0516001600160a01b038116810362000076576200005d9062000091565b604051614137908162000148823960805181611d730152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b3315620001395760008054336001600160a01b031991821681178355919291837f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a330608052670de0b6b3a764000080600355600455600c5416600c5580156200012c5760028190556001600160a01b0316907f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64669080a2565b63d92e233d82526004601cfd5b63d92e233d6000526004601cfdfe608060405260043610156200001357600080fd5b60003560e01c806306fdde0314620001fd5780630b78f9c014620001f757806313af403514620001f15780631b52c9c014620001eb5780631f0c602d14620001e557806322ea34d514620001df5780633bbed4a014620001d957806353ce963f14620001d35780636042dd5d14620001cd57806366d003ac14620001c757806366e7950914620001c15780637133739114620001bb57806376de0f3d14620001b5578063785e9e8614620001af5780638691fe4614620001a95780638da5cb5b14620001a35780639750f2e0146200019d578063b37eea151462000197578063b7e7d2781462000191578063c0d78655146200018b578063c661d4b11462000185578063cbf71c1c146200017f578063e4d73e591462000179578063f887ea401462000173578063f9f411d8146200016d578063fb0059e314620001675763fec89cd8146200016157600080fd5b62001375565b62001355565b620012e3565b6200125f565b6200116b565b620010fd565b6200104d565b62000fd3565b62000eda565b62000cfa565b62000c40565b62000c0a565b62000bbb565b62000b85565b62000a84565b620008a1565b6200086b565b62000835565b620005ff565b620005a4565b62000500565b62000414565b62000384565b62000364565b620002e0565b62000256565b62000228565b60005b838110620002175750506000910152565b818101518382015260200162000206565b34620002515760006003193601126200025157602080526707666163746f727960475260606020f35b600080fd5b3462000251576040600319360112620002515773ffffffffffffffffffffffffffffffffffffffff6000541633036200029757600480356003556024359055005b60046040517f1648fd01000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff8116036200025157565b346200025157602060031936011262000251576004356200030181620002c1565b73ffffffffffffffffffffffffffffffffffffffff60009181835416330362000297578015620003575780835516337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b63d92e233d83526004601cfd5b346200025157600060031936011262000251576020600454604051908152f35b3462000251576020600319360112620002515760a0600435620003a781620002c1565b73ffffffffffffffffffffffffffffffffffffffff80911660005260076020526040600020805490600181015460ff846003600285015494015416936040519581168652861c166020850152604084015260608301526080820152f35b9081610140910312620002515790565b6020600319360112620002515760043567ffffffffffffffff811162000251576200044490369060040162000404565b620004fb7f5549948fa126d352f1235cb987623b8abee55ba2a4052f03154de61beefb229d610100830135926200047b84620002c1565b6200048681620015cb565b62000495606083018362001419565b949092620004a7608082018262001419565b919094620004b961012083016200146d565b620004c76020840162001487565b9373ffffffffffffffffffffffffffffffffffffffff9788604051998a99169c169a60c060a08701359601359489620014d5565b0390a3005b346200025157602060031936011262000251576004356200052181620002c1565b73ffffffffffffffffffffffffffffffffffffffff60009181835416330362000297578015620003575780600255167f566f16f5ede69bb6f837d5da3a6cf41c863ba95621d677ff3c931aa687da64668280a280f35b600319604091011262000251576004356200059281620002c1565b90602435620005a181620002c1565b90565b346200025157620005b53662000577565b60009173ffffffffffffffffffffffffffffffffffffffff80911660005260076020528060406000205416911614620005f6575b6020906040519015158152f35b506001620005e9565b60c060031936011262000251576200061662001d5c565b62000620620013e3565b6200065d62000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b8073ffffffffffffffffffffffffffffffffffffffff809316148062000820575b15620006925750506200069062002626565b005b80826200069e620013e3565b161415806200080b575b80620007fe575b80620007f0575b15620006c857505062000690620024e6565b8082620006d4620013f1565b16141580620007db575b80620007ce575b80620007c0575b15620006fe57505062000690620023a6565b80826200070a620013e3565b1614159182620007a8575b5050806200079b575b806200078d575b8062000780575b8062000772575b8062000757575b156200074a5762000690620020ec565b62adecf06000526004601cfd5b506127116200076b6084356064356200155c565b106200073a565b506127116084351062000733565b506063608435116200072c565b506107d16064351062000725565b506063606435116200071e565b909150620007b5620013f1565b161415388062000715565b5061271160843510620006ec565b50606360843511620006e5565b508082620007e8620013e3565b1614620006de565b506107d160643510620006b6565b50606360643511620006af565b50808262000818620013f1565b1614620006a8565b5080826200082d620013f1565b16146200067e565b34620002515760006003193601126200025157602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b34620002515760006003193601126200025157602073ffffffffffffffffffffffffffffffffffffffff600c5416604051908152f35b34620002515760406003193601126200025157602467ffffffffffffffff60043582358281116200025157366023820112156200025157806004013592831162000251573660248483010111620002515760009273ffffffffffffffffffffffffffffffffffffffff84541633036200029757828452602094600960205260408520926200093c8362000935865462000d7b565b8662001570565b8591601f8411600114620009ca57508596509082916200099194959692620009bb575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b7f44e972c56c15144b740184a8e110ba77f8929877b701f0dce3df06ebc39a09238280a280f35b6024925001013538806200095f565b96917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe084169762000a0086600052602060002090565b9388915b8a831062000a6757505050836001959697981062000a2b575b505050811b01905562000994565b01602401357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600384901b60f8161c1916905538808062000a1d565b908060018597848396978901013581550196019301919062000a04565b34620002515762000a953662000577565b90600160408051600a6020820152848282015220541562000b7c575b9073ffffffffffffffffffffffffffffffffffffffff808416600052600a6020526040600020549360005b85811062000af6575b6040518515158152602090f35b0390f35b62000b546200064462000b348362000b2e8673ffffffffffffffffffffffffffffffffffffffff16600052600a602052604060002090565b620012c4565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b8385161462000b665760010162000adc565b50505050505062000af260013880808062000ae5565b50600062000ab1565b34620002515760006003193601126200025157602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b3462000251576020600319360112620002515773ffffffffffffffffffffffffffffffffffffffff60043562000bf181620002c1565b16600052600a6020526020604060002054604051908152f35b34620002515760006003193601126200025157602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b34620002515760e062000ca462000c573662000577565b73ffffffffffffffffffffffffffffffffffffffff929192809316600052600860205260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b908082541691600181015491806002830154169060038301541660048301549160ff600660058601549501541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b6040600319360112620002515760043567ffffffffffffffff8111620002515762000d2a90369060040162000404565b620004fb7f5549948fa126d352f1235cb987623b8abee55ba2a4052f03154de61beefb229d6024359262000d5e84620002c1565b620004866101008201359462000d7486620002c1565b82620019c4565b90600182811c9216801562000dc6575b602083101462000d9757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169162000d8b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111762000e1d57604052565b62000dd1565b6080810190811067ffffffffffffffff82111762000e1d57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111762000e1d57604052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209362000ec08151809281875287808801910162000203565b0116010190565b906020620005a192818152019062000e82565b34620002515760208060031936011262000251576000906004358252600981526040822090604051918381549062000f128262000d7b565b8086529260019280841690811562000f8e575060011462000f4e575b62000af28662000f41818a038262000e40565b6040519182918262000ec7565b9080949650528483205b82841062000f7a575050508162000af29362000f419282010193388062000f2e565b805485850187015292850192810162000f58565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168787015250505050151560051b820101915062000f418162000af2388062000f2e565b3462000251576020600319360112620002515760043562000ff481620002c1565b73ffffffffffffffffffffffffffffffffffffffff90816000541633036200029757620010218162002766565b80600b55167f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80600080a2005b346200025157604060031936011262000251576020620010df6024356200107481620002c1565b6040805173ffffffffffffffffffffffffffffffffffffffff90921684830190815260043560208201529190620010d69082908401037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528262000e40565b519020620027b7565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b3462000251576020600319360112620002515773ffffffffffffffffffffffffffffffffffffffff6004356200113381620002c1565b166000526006602052604060002060ff60018254920154169062000af260405192839283909291602090604083019483521515910152565b346200025157606060031936011262000251576044356200118c81620002c1565b73ffffffffffffffffffffffffffffffffffffffff80600054163303620002975781169081156200123557620011ee620006909260405190620011cf8262000e00565b60043582526001602083015260005260056020526040600020620028c4565b6200122f620011fc62001c1f565b6024358152600160208201529173ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b620028c4565b60046040517fd23f9521000000000000000000000000000000000000000000000000000000008152fd5b34620002515760006003193601126200025157602073ffffffffffffffffffffffffffffffffffffffff600b5416604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8054821015620012dd5760005260206000200190600090565b62001295565b346200025157604060031936011262000251576004356200130481620002c1565b6024359073ffffffffffffffffffffffffffffffffffffffff809116600052600a6020526040600020805483101562000251576020926200134591620012c4565b9190546040519260031b1c168152f35b346200025157600060031936011262000251576020600354604051908152f35b3462000251576020600319360112620002515773ffffffffffffffffffffffffffffffffffffffff600435620013ab81620002c1565b166000526005602052604060002060ff60018254920154169062000af260405192839283909291602090604083019483521515910152565b602435620005a181620002c1565b604435620005a181620002c1565b60a435620005a181620002c1565b35620005a181620002c1565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121562000251570180359067ffffffffffffffff821162000251576020019181360383136200025157565b356bffffffffffffffffffffffff81168103620002515790565b3560ff81168103620002515790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9692620015169060ff969a9995620015076bffffffffffffffffffffffff9460a09a9660c08d5260c08d019162001496565b918a830360208c015262001496565b981660408701526060860152608085015216910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116200156a57565b6200152d565b90601f81116200157f57505050565b6000916000526020600020906020601f850160051c83019410620015c0575b601f0160051c01915b828110620015b457505050565b818155600101620015a7565b90925082906200159e565b620015d562001d5c565b60c081013580156200199a576200163c90620016106200160a600b5473ffffffffffffffffffffffffffffffffffffffff1690565b62002766565b6020830192620016208462001487565b9161010080830194859462001635866200140d565b9062002907565b610120808401916200165862001652846200146d565b6200299b565b62001663856200140d565b6200168762000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8216036200195d5750620016b260035462002b1c565b620016bd8862001487565b94604081013596879460608301620016d6908462001419565b979093620016e8608082018262001419565b9490620016f960e084018462001419565b91909262001707906200140d565b9562001713906200146d565b96600b54620017359073ffffffffffffffffffffffffffffffffffffffff1690565b986200174062001c30565b9d36906200174e9262001ccf565b8d5236906200175d9262001ccf565b60208c015236906200176f9262001ccf565b60408a015260a001356060890152608088015260a0870190620017a7919073ffffffffffffffffffffffffffffffffffffffff169052565b6bffffffffffffffffffffffff1660c086015273ffffffffffffffffffffffffffffffffffffffff1660e085015260009084015233908301525b620017ec9262002c1e565b9283336200181a9073ffffffffffffffffffffffffffffffffffffffff16600052600a602052604060002090565b90620018269162001d0b565b620018319062001487565b916200183d906200140d565b906200184862001c52565b3381529260ff166020840152604083015243606083015273ffffffffffffffffffffffffffffffffffffffff166080820152620018a58273ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b90620005a1918151815460208401517fffffffffffffffffffffff00000000000000000000000000000000000000000090911673ffffffffffffffffffffffffffffffffffffffff9283161760a09190911b74ff0000000000000000000000000000000000000000161782556040830151600183015560608301516002830155608090920151600390910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055565b806200198d620019949273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b54620029d8565b620016b2565b60046040517f31c93643000000000000000000000000000000000000000000000000000000008152fd5b90620019cf62001d5c565b60c08201359081156200199a5762001a2b9162001a056200160a600b5473ffffffffffffffffffffffffffffffffffffffff1690565b602084019362001a158562001487565b926101009081830195869562001635876200140d565b610120908184019262001a4262001652856200146d565b62001a4d856200140d565b62001a7162000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff82160362001be9575062001a9c60035462002b1c565b62001aa78962001487565b9560408601359788956060880162001ac0908962001419565b9390986080810162001ad3908262001419565b949062001ae460e084018462001419565b91909262001af2906200140d565b9562001afe906200146d565b96600b5462001b209073ffffffffffffffffffffffffffffffffffffffff1690565b9862001b2b62001c30565b9e8f91369062001b3b9262001ccf565b9052369062001b4a9262001ccf565b60208d0152369062001b5c9262001ccf565b60408b015260a0013560608a0152608089015260a088019062001b94919073ffffffffffffffffffffffffffffffffffffffff169052565b6bffffffffffffffffffffffff1660c087015273ffffffffffffffffffffffffffffffffffffffff1660e086015273ffffffffffffffffffffffffffffffffffffffff909116908401523390830152620017e1565b806200198d62001c199273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b62001a9c565b6040519062001c2e8262000e00565b565b60405190610140820182811067ffffffffffffffff82111762000e1d57604052565b6040519060a0820182811067ffffffffffffffff82111762000e1d57604052565b6040519060e0820182811067ffffffffffffffff82111762000e1d57604052565b67ffffffffffffffff811162000e1d57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b92919262001cdd8262001c94565b9162001ced604051938462000e40565b82948184528183011162000251578281602093846000960137010152565b80546801000000000000000081101562000e1d5762001d3091600182018155620012c4565b73ffffffffffffffffffffffffffffffffffffffff9291928084549260031b9316831b921b1916179055565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300362001d9c57565b60046040517fcf0e4328000000000000000000000000000000000000000000000000000000008152fd5b906127109182039182116200156a57565b818102929181159184041417156200156a57565b6040519062001dfa8262000e00565b6001825260203681840137565b6040519062001e168262000e23565b600382526060366020840137565b604051906060820182811067ffffffffffffffff82111762000e1d5760405260028252604082602036910137565b805115620012dd5760200190565b805160011015620012dd5760400190565b805160021015620012dd5760600190565b600660c062001c2e9362001f9073ffffffffffffffffffffffffffffffffffffffff62001eed81845116879073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6020830151600187015562001f4681604085015116600288019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015116600386019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6080810151600485015560a081015160058501550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b90815180825260208080930193019160005b82811062001ffb575050505090565b83518552938101939281019260010162001fec565b90815180825260208080930193019160005b82811062002031575050505090565b835173ffffffffffffffffffffffffffffffffffffffff168552938101939281019260010162002022565b92916200208a6040916200207b60039460608852606088019062001fda565b90868203602088015262002010565b930152565b92916200208a6040916200207b60029460608852606088019062001fda565b92916200208a6040916200207b60019460608852606088019062001fda565b92916200208a6040916200207b60009460608852606088019062001fda565b620020f6620013ff565b6200211a62000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9190828216036200237057506200214860045462002b1c565b6064359062002171620021696200215f8462001dc6565b6084359062001dd7565b612710900490565b9061271080831015620022eb57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620021c0620021af620013e3565b620021b9620013f1565b9062002e36565b93620022d1620021d1858362002f1c565b945b60043590620021e487898462002fe4565b9362002265620021f3620013e3565b6200224862002201620013f1565b916200220c62001c73565b73ffffffffffffffffffffffffffffffffffffffff8a16815296602088015273ffffffffffffffffffffffffffffffffffffffff166040870152565b73ffffffffffffffffffffffffffffffffffffffff166060850152565b608083015260a0820152600160c0820152620022cb83620022a63373ffffffffffffffffffffffffffffffffffffffff166000526008602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b62001e82565b620022e660405192839216953395836200205c565b0390a3565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620022d16200231e62001deb565b95620023536200232d620013f1565b620023388962001e52565b9073ffffffffffffffffffffffffffffffffffffffff169052565b6200235d62001deb565b95620023698762001e52565b52620021d3565b806200198d620023a09273ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b62002148565b620023b0620013ff565b620023d462000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff919082821603620024b057506200240260045462002b1c565b6064359062002419620021696200215f8462001dc6565b90612710808310156200247d57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9062002457620021af620013e3565b9362002468620021d1858362002f1c565b620022e660405192839216953395836200208f565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620024686200231e62001deb565b806200198d620024e09273ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b62002402565b620024f0620013ff565b6200251462000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff919082821603620025f057506200254260045462002b1c565b6064359062002559620021696200215f8462001dc6565b9061271080831015620025bd57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f9062002597620021af620013e3565b93620025a8620021d1858362002f1c565b620022e66040519283921695339583620020ae565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620025a86200231e62001deb565b806200198d620026209273ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b62002542565b62002630620013ff565b6200265462000644600c5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff9190828216036200273057506200268260045462002b1c565b6064359062002699620021696200215f8462001dc6565b9061271080831015620026fd57507fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f90620026d7620021af620013e3565b93620026e8620021d1858362002f1c565b620022e66040519283921695339583620020cd565b9192907fc3e98be3c2ca9aa1dd4c2412a92784c1fbec2743569dcf90660acad411161f7f91620026e86200231e62001deb565b806200198d620027609273ffffffffffffffffffffffffffffffffffffffff166000526006602052604060002090565b62002682565b156200276e57565b63d92e233d6000526004601cfd5b604051906200278b8262000e00565b601082527f67363d3d37363d34f03d5260086018f3000000000000000000000000000000006020830152565b620005a190620027c66200277c565b602081519101206040519060208201927fff0000000000000000000000000000000000000000000000000000000000000084523060601b602184015260358301526055820152605581526200281b8162000e23565b5190206040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060208201927fd694000000000000000000000000000000000000000000000000000000000000845260601b1660228201527f0100000000000000000000000000000000000000000000000000000000000000603682015260178152620028a88162000e00565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b6001602062001c2e93805184550151151591019060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b9060066200294460ff9233600052600860205260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b0154161562002971576000526009602052604060002054156200296357565b63a1e9dd9d6000526004601cfd5b60046040517feed7778f000000000000000000000000000000000000000000000000000000008152fd5b6103e8601982061515911117620029ae57565b63e0e54ced6000526004601cfd5b9081602091031262000251575190565b6040513d6000823e3d90fd5b9062002a1a62002a16600162002a0e8473ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b015460ff1690565b1590565b62001235576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff919091169190602081602481865afa801562002b1657829160009162002ae0575b501062002ab65762001c2e9162002aad60025473ffffffffffffffffffffffffffffffffffffffff1690565b903390620030b6565b60046040517f2d8768f9000000000000000000000000000000000000000000000000000000008152fd5b62002b07915060203d60201162002b0e575b62002afe818362000e40565b810190620029bc565b3862002a81565b503d62002af2565b620029cc565b80341062002ab65760008080809373ffffffffffffffffffffffffffffffffffffffff600254165af11562002b4d57565b63b12d13eb6000526004601cfd5b60009291815462002b6c8162000d7b565b9260019180831690811562002bcb575060011462002b8b575b50505050565b9091929394506000526020906020600020906000915b85831062002bb9575050505001903880808062002b85565b80548584015291830191810162002ba1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001684525050508115159091020191503880808062002b85565b9062002c1a6020928281519485920162000203565b0190565b62002e30620005a19360409362002e2385519260ff6020938562002c698682019233846020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b039562002c9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09788810183528262000e40565b51902096166000526009835262002e1c876000209762002e0f81518094878083015262002e02815162002d3262002ce261014092838988015261018087019062000e82565b62002d1d8c860151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc092838983030160608a015262000e82565b90888601519087830301608088015262000e82565b92606081015160a0860152608081015160c086015262002d6f60a082015160e087019073ffffffffffffffffffffffffffffffffffffffff169052565b62002de260c08201519262002d9761010094858901906bffffffffffffffffffffffff169052565b60e08301519362002dc361012095868a019073ffffffffffffffffffffffffffffffffffffffff169052565b83015173ffffffffffffffffffffffffffffffffffffffff1690870152565b015173ffffffffffffffffffffffffffffffffffffffff16610160840152565b0387810185528462000e40565b5197889485019062002b5b565b9062002c05565b0390810184528362000e40565b62003176565b919062002e4262001e07565b5073ffffffffffffffffffffffffffffffffffffffff8381161590818062002f11575b1562002e8b57505050905062002e7a62001deb565b9062001c2e33620023388462001e52565b821662002ebe57505062002eae62002ea262001e24565b92620023388462001e52565b62001c2e33620023388462001e60565b9092901562002ed6575062002eae62002ea262001e24565b9162002f019062002ef662002eea62001e07565b94620023388662001e52565b620023388462001e60565b62001c2e33620023388462001e71565b508083161562002e65565b8015808062002fdb575b1562002f4b5750505062002f3962001deb565b61271062002f478262001e52565b5290565b8262002f815750905062002f7662002f6262001e24565b918062002f6f8462001e52565b5262001dc6565b62002f478262001e60565b1562002f96575062002f7662002f6262001e24565b62002fa062001e07565b918162002fad8462001e52565b528062002fba8462001e60565b5281018091116200156a5762002fd09062001dc6565b62002f478262001e71565b50821562002f26565b60408051336020820190815281830193909352818152620005a19462002e1c949362002e30937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09362002e23926200308a9291620030a791906200304a60608262000e40565b519020976200309a610e8e9684519762003068602082018a62000e40565b8089526200327460208a01398451958693866020860152606085019062002010565b9089848303018685015262001fda565b0386810184528362000e40565b51968793602085019062002c05565b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d1560016000511417161562003102576000606052604052565b637939f4246000526004601cfd5b156200311857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f494e495449414c495a4154494f4e5f4641494c454400000000000000000000006044820152fd5b919082620031836200277c565b6020815191016000f59273ffffffffffffffffffffffffffffffffffffffff8416156200321557600091620031b98392620027b7565b9482602083519301915af13d156200320f573d620031d78162001c94565b90620031e7604051928362000e40565b8152600060203d92013e5b8062003204575b62001c2e9062003110565b50813b1515620031f9565b620031f2565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4445504c4f594d454e545f4641494c45440000000000000000000000000000006044820152fdfe60406080815262000e8e803803806200001881620002b5565b928339810182828203126200028f5781516001600160401b03908181116200028f5783019180601f840112156200028f57825191602094620000646200005e85620002db565b620002b5565b948686868152018760059660051b830101918583116200028f578801905b8282106200029457505050858101519182116200028f57019080601f830112156200028f578151620000b86200005e82620002db565b92868085848152019260051b8201019283116200028f5786809101915b8383106200027e5750505050825192815184036200026a578315620002595760005b8481106200010e578651610b859081620003098239f35b6001600160a01b03620001228284620002f3565b511690620001318185620002f3565b5182156200024857801562000237578260005285885288600020546200022657600680549068010000000000000000821015620002105760018201808255821015620001fa5760005288600020018360018060a01b031982541617905582600052858852808960002055600054818101809111620001e4576001937f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac928b9260005582519182528a820152a101620000f7565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b885163215a865160e11b8152600490fd5b885163040357dd60e21b8152600490fd5b88516384ff3e1b60e01b8152600490fd5b8551637b21919d60e01b8152600490fd5b85516001621398b960e31b03198152600490fd5b8251815291810191879101620000d5565b600080fd5b81516001600160a01b03811681036200028f57815290880190880162000082565b6040519190601f01601f191682016001600160401b038111838210176200021057604052565b6001600160401b038111620002105760051b60200190565b8051821015620001fa5760209160051b01019056fe608060409080825260049081361015610052575b5050361561002057600080fd5b513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77090604090a1005b600091823560e01c918263191655871461053657508163283248be146104e65781633a98ef39146104c9578163406072a91461047257816348b7504414610445578163580fc80a146103c85781635be7fde814610264575080639852595c14610220578063a3f8eace146101fa578063b34c8caf146101b6578063c45ac05014610181578063d79779b21461013d578063e33b7de31461011e5763e919ecad146100fc5780610013565b903461011a578160031936011261011a576020906006549051908152f35b5080fd5b50903461011a578160031936011261011a576020906001549051908152f35b50903461011a57602060031936011261011a578060209273ffffffffffffffffffffffffffffffffffffffff6101716106c4565b1681526003845220549051908152f35b50903461011a578060031936011261011a576020906101af6101a16106c4565b6101a96106ec565b906108eb565b9051908152f35b50903461011a57602060031936011261011a578060209273ffffffffffffffffffffffffffffffffffffffff6101ea6106c4565b1681526005845220549051908152f35b50903461011a57602060031936011261011a576020906101af61021b6106c4565b6108ac565b50903461011a57602060031936011261011a578060209273ffffffffffffffffffffffffffffffffffffffff6102546106c4565b1681526002845220549051908152f35b839150346103c457826003193601126103c45760065490835b828110610288578480f35b60018054610296814761070f565b918780526002916102b0602094848652898b205490610a23565b6102c1575b5050505060010161027d565b8880526005845281888a20541061039c576102df6102ef914761070f565b898052838552888a205490610a23565b918183106103745788805280845261030a83898b205461070f565b9089805284528789205561031f82825461070f565b90558680808084815af1156103685785600193927fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056928251918a8352820152a1908680806102b5565b8363b12d13eb8852601cfd5b8588517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b8588517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b8234610442576020600319360112610442576103e26106c4565b60065490825b8281106103f3578380f35b8073ffffffffffffffffffffffffffffffffffffffff61041460019361065e565b90549060031b1c1661042681856108eb565b610432575b50016103e8565b61043c908461074b565b8561042b565b80fd5b82843461011a576003193601126104425761046f6104616106c4565b6104696106ec565b9061074b565b80f35b839150346103c457816003193601126103c45760209282916104926106c4565b61049a6106ec565b9173ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b82843461011a578160031936011261011a57602091549051908152f35b839150346103c45760206003193601126103c4573591600654831015610442575073ffffffffffffffffffffffffffffffffffffffff61052760209361065e565b92905490519260031b1c168152f35b848491346103c45760206003193601126103c45783359073ffffffffffffffffffffffffffffffffffffffff821680920361065a578184526005602052600183852054106106335750610588816108ac565b6001811061060b5781845260026020526105a5818486205461070f565b8285526002602052838520556105bd8160015461070f565b6001558380808084865af1156105ff577fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05693945082519182526020820152a180f35b8463b12d13eb8552601cfd5b8483517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b807fb317087b00000000000000000000000000000000000000000000000000000000869252fd5b8380fd5b6006548110156106955760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106e757565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106e757565b9190820180921161071c57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919073ffffffffffffffffffffffffffffffffffffffff80821691600094838652600560205260409081872054156108835761078783826108eb565b93841561085a57604460108984819460209616998a83526004875287832090835286528682206107b88a825461070f565b9055898252600386528682206107cf8a825461070f565b905587601452886034526fa9059cbb00000000000000000000000082525af13d15600188511417161561084d57603495909552935173ffffffffffffffffffffffffffffffffffffffff9094168452602084015290917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a90604090a2565b6390b8ec1886526004601cfd5b600483517fb8e10e7e000000000000000000000000000000000000000000000000000000008152fd5b600482517fb317087b000000000000000000000000000000000000000000000000000000008152fd5b6108e8906108bd476001549061070f565b73ffffffffffffffffffffffffffffffffffffffff8216600052600260205260406000205491610b00565b90565b919073ffffffffffffffffffffffffffffffffffffffff80931660408051947f70a0823100000000000000000000000000000000000000000000000000000000865230600487015260208087602481875afa968715610a1857600097610985575b506109686108e89697856000526003835284600020549061070f565b936000526004815282600020918516600052526000205491610b00565b96813d8311610a11575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116890189811067ffffffffffffffff8211176109e45783918a91875281010312610442575095519561096861094c565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b503d61098f565b83513d6000823e3d90fd5b600080805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc549091818102918115918304141715610ad3578154908115610aa65704918203918211610a79575090565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526012600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b9073ffffffffffffffffffffffffffffffffffffffff6000921682526005602052604082205490818102918183041490151715610ad3578154908115610aa65704918203918211610a7957509056fea2646970667358221220dacd3006968043dc8472e5e993aca6bcd2a32f80f3a5e49be6d522696db8db3b64736f6c63430008160033a2646970667358221220301f1ceb0bc1d0dd31f274be52159f5e6b31cdc57a7edc84a95f034e47696be364736f6c63430008160033";

type MADFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MADFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MADFactory__factory extends ContractFactory {
  constructor(...args: MADFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_recipient, overrides || {});
  }
  override deploy(
    _recipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_recipient, overrides || {}) as Promise<
      MADFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MADFactory__factory {
    return super.connect(runner) as MADFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MADFactoryInterface {
    return new Interface(_abi) as MADFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MADFactory {
    return new Contract(address, _abi, runner) as unknown as MADFactory;
  }
}
