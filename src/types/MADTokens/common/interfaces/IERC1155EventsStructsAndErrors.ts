/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../../../common";

export declare namespace IPublicMint {
  export type PublicMintValuesStruct = {
    publicMintState: boolean;
    price: BigNumberish;
    limit: BigNumberish;
    startDate: BigNumberish;
    endDate: BigNumberish;
  };

  export type PublicMintValuesStructOutput = [
    publicMintState: boolean,
    price: bigint,
    limit: bigint,
    startDate: bigint,
    endDate: bigint
  ] & {
    publicMintState: boolean;
    price: bigint;
    limit: bigint;
    startDate: bigint;
    endDate: bigint;
  };
}

export interface IERC1155EventsStructsAndErrorsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "BatchMaxSupplySet"
      | "BatchPublicMintDatesSet"
      | "BatchPublicMintLimitSet"
      | "BatchPublicMintPriceSet"
      | "BatchPublicMintStateSet"
      | "BatchPublicMintValuesSet"
      | "MaxSupplySet"
      | "PublicMintDatesSet"
      | "PublicMintLimitSet"
      | "PublicMintPriceSet"
      | "PublicMintStateSet"
      | "PublicMintValuesSet"
  ): EventFragment;
}

export namespace BatchMaxSupplySetEvent {
  export type InputTuple = [_ids: BigNumberish[], _maxSupplies: BigNumberish[]];
  export type OutputTuple = [_ids: bigint[], _maxSupplies: bigint[]];
  export interface OutputObject {
    _ids: bigint[];
    _maxSupplies: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchPublicMintDatesSetEvent {
  export type InputTuple = [
    _ids: BigNumberish[],
    _startDates: BigNumberish[],
    _endDates: BigNumberish[]
  ];
  export type OutputTuple = [
    _ids: bigint[],
    _startDates: bigint[],
    _endDates: bigint[]
  ];
  export interface OutputObject {
    _ids: bigint[];
    _startDates: bigint[];
    _endDates: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchPublicMintLimitSetEvent {
  export type InputTuple = [_ids: BigNumberish[], _limits: BigNumberish[]];
  export type OutputTuple = [_ids: bigint[], _limits: bigint[]];
  export interface OutputObject {
    _ids: bigint[];
    _limits: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchPublicMintPriceSetEvent {
  export type InputTuple = [_ids: BigNumberish[], _prices: BigNumberish[]];
  export type OutputTuple = [_ids: bigint[], _prices: bigint[]];
  export interface OutputObject {
    _ids: bigint[];
    _prices: bigint[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchPublicMintStateSetEvent {
  export type InputTuple = [_ids: BigNumberish[], _publicMintStates: boolean[]];
  export type OutputTuple = [_ids: bigint[], _publicMintStates: boolean[]];
  export interface OutputObject {
    _ids: bigint[];
    _publicMintStates: boolean[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchPublicMintValuesSetEvent {
  export type InputTuple = [
    _ids: BigNumberish[],
    _publicMintValues: IPublicMint.PublicMintValuesStruct[]
  ];
  export type OutputTuple = [
    _ids: bigint[],
    _publicMintValues: IPublicMint.PublicMintValuesStructOutput[]
  ];
  export interface OutputObject {
    _ids: bigint[];
    _publicMintValues: IPublicMint.PublicMintValuesStructOutput[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MaxSupplySetEvent {
  export type InputTuple = [_id: BigNumberish, _maxSupply: BigNumberish];
  export type OutputTuple = [_id: bigint, _maxSupply: bigint];
  export interface OutputObject {
    _id: bigint;
    _maxSupply: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMintDatesSetEvent {
  export type InputTuple = [
    _id: BigNumberish,
    _startDate: BigNumberish,
    _endDate: BigNumberish
  ];
  export type OutputTuple = [_id: bigint, _startDate: bigint, _endDate: bigint];
  export interface OutputObject {
    _id: bigint;
    _startDate: bigint;
    _endDate: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMintLimitSetEvent {
  export type InputTuple = [_id: BigNumberish, _limit: BigNumberish];
  export type OutputTuple = [_id: bigint, _limit: bigint];
  export interface OutputObject {
    _id: bigint;
    _limit: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMintPriceSetEvent {
  export type InputTuple = [_id: BigNumberish, _price: BigNumberish];
  export type OutputTuple = [_id: bigint, _price: bigint];
  export interface OutputObject {
    _id: bigint;
    _price: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMintStateSetEvent {
  export type InputTuple = [_id: BigNumberish, _publicMintState: boolean];
  export type OutputTuple = [_id: bigint, _publicMintState: boolean];
  export interface OutputObject {
    _id: bigint;
    _publicMintState: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicMintValuesSetEvent {
  export type InputTuple = [
    _id: BigNumberish,
    _publicMintValues: IPublicMint.PublicMintValuesStruct
  ];
  export type OutputTuple = [
    _id: bigint,
    _publicMintValues: IPublicMint.PublicMintValuesStructOutput
  ];
  export interface OutputObject {
    _id: bigint;
    _publicMintValues: IPublicMint.PublicMintValuesStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IERC1155EventsStructsAndErrors extends BaseContract {
  connect(runner?: ContractRunner | null): IERC1155EventsStructsAndErrors;
  waitForDeployment(): Promise<this>;

  interface: IERC1155EventsStructsAndErrorsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "BatchMaxSupplySet"
  ): TypedContractEvent<
    BatchMaxSupplySetEvent.InputTuple,
    BatchMaxSupplySetEvent.OutputTuple,
    BatchMaxSupplySetEvent.OutputObject
  >;
  getEvent(
    key: "BatchPublicMintDatesSet"
  ): TypedContractEvent<
    BatchPublicMintDatesSetEvent.InputTuple,
    BatchPublicMintDatesSetEvent.OutputTuple,
    BatchPublicMintDatesSetEvent.OutputObject
  >;
  getEvent(
    key: "BatchPublicMintLimitSet"
  ): TypedContractEvent<
    BatchPublicMintLimitSetEvent.InputTuple,
    BatchPublicMintLimitSetEvent.OutputTuple,
    BatchPublicMintLimitSetEvent.OutputObject
  >;
  getEvent(
    key: "BatchPublicMintPriceSet"
  ): TypedContractEvent<
    BatchPublicMintPriceSetEvent.InputTuple,
    BatchPublicMintPriceSetEvent.OutputTuple,
    BatchPublicMintPriceSetEvent.OutputObject
  >;
  getEvent(
    key: "BatchPublicMintStateSet"
  ): TypedContractEvent<
    BatchPublicMintStateSetEvent.InputTuple,
    BatchPublicMintStateSetEvent.OutputTuple,
    BatchPublicMintStateSetEvent.OutputObject
  >;
  getEvent(
    key: "BatchPublicMintValuesSet"
  ): TypedContractEvent<
    BatchPublicMintValuesSetEvent.InputTuple,
    BatchPublicMintValuesSetEvent.OutputTuple,
    BatchPublicMintValuesSetEvent.OutputObject
  >;
  getEvent(
    key: "MaxSupplySet"
  ): TypedContractEvent<
    MaxSupplySetEvent.InputTuple,
    MaxSupplySetEvent.OutputTuple,
    MaxSupplySetEvent.OutputObject
  >;
  getEvent(
    key: "PublicMintDatesSet"
  ): TypedContractEvent<
    PublicMintDatesSetEvent.InputTuple,
    PublicMintDatesSetEvent.OutputTuple,
    PublicMintDatesSetEvent.OutputObject
  >;
  getEvent(
    key: "PublicMintLimitSet"
  ): TypedContractEvent<
    PublicMintLimitSetEvent.InputTuple,
    PublicMintLimitSetEvent.OutputTuple,
    PublicMintLimitSetEvent.OutputObject
  >;
  getEvent(
    key: "PublicMintPriceSet"
  ): TypedContractEvent<
    PublicMintPriceSetEvent.InputTuple,
    PublicMintPriceSetEvent.OutputTuple,
    PublicMintPriceSetEvent.OutputObject
  >;
  getEvent(
    key: "PublicMintStateSet"
  ): TypedContractEvent<
    PublicMintStateSetEvent.InputTuple,
    PublicMintStateSetEvent.OutputTuple,
    PublicMintStateSetEvent.OutputObject
  >;
  getEvent(
    key: "PublicMintValuesSet"
  ): TypedContractEvent<
    PublicMintValuesSetEvent.InputTuple,
    PublicMintValuesSetEvent.OutputTuple,
    PublicMintValuesSetEvent.OutputObject
  >;

  filters: {
    "BatchMaxSupplySet(uint256[],uint256[])": TypedContractEvent<
      BatchMaxSupplySetEvent.InputTuple,
      BatchMaxSupplySetEvent.OutputTuple,
      BatchMaxSupplySetEvent.OutputObject
    >;
    BatchMaxSupplySet: TypedContractEvent<
      BatchMaxSupplySetEvent.InputTuple,
      BatchMaxSupplySetEvent.OutputTuple,
      BatchMaxSupplySetEvent.OutputObject
    >;

    "BatchPublicMintDatesSet(uint256[],uint256[],uint256[])": TypedContractEvent<
      BatchPublicMintDatesSetEvent.InputTuple,
      BatchPublicMintDatesSetEvent.OutputTuple,
      BatchPublicMintDatesSetEvent.OutputObject
    >;
    BatchPublicMintDatesSet: TypedContractEvent<
      BatchPublicMintDatesSetEvent.InputTuple,
      BatchPublicMintDatesSetEvent.OutputTuple,
      BatchPublicMintDatesSetEvent.OutputObject
    >;

    "BatchPublicMintLimitSet(uint256[],uint256[])": TypedContractEvent<
      BatchPublicMintLimitSetEvent.InputTuple,
      BatchPublicMintLimitSetEvent.OutputTuple,
      BatchPublicMintLimitSetEvent.OutputObject
    >;
    BatchPublicMintLimitSet: TypedContractEvent<
      BatchPublicMintLimitSetEvent.InputTuple,
      BatchPublicMintLimitSetEvent.OutputTuple,
      BatchPublicMintLimitSetEvent.OutputObject
    >;

    "BatchPublicMintPriceSet(uint256[],uint256[])": TypedContractEvent<
      BatchPublicMintPriceSetEvent.InputTuple,
      BatchPublicMintPriceSetEvent.OutputTuple,
      BatchPublicMintPriceSetEvent.OutputObject
    >;
    BatchPublicMintPriceSet: TypedContractEvent<
      BatchPublicMintPriceSetEvent.InputTuple,
      BatchPublicMintPriceSetEvent.OutputTuple,
      BatchPublicMintPriceSetEvent.OutputObject
    >;

    "BatchPublicMintStateSet(uint256[],bool[])": TypedContractEvent<
      BatchPublicMintStateSetEvent.InputTuple,
      BatchPublicMintStateSetEvent.OutputTuple,
      BatchPublicMintStateSetEvent.OutputObject
    >;
    BatchPublicMintStateSet: TypedContractEvent<
      BatchPublicMintStateSetEvent.InputTuple,
      BatchPublicMintStateSetEvent.OutputTuple,
      BatchPublicMintStateSetEvent.OutputObject
    >;

    "BatchPublicMintValuesSet(uint256[],tuple[])": TypedContractEvent<
      BatchPublicMintValuesSetEvent.InputTuple,
      BatchPublicMintValuesSetEvent.OutputTuple,
      BatchPublicMintValuesSetEvent.OutputObject
    >;
    BatchPublicMintValuesSet: TypedContractEvent<
      BatchPublicMintValuesSetEvent.InputTuple,
      BatchPublicMintValuesSetEvent.OutputTuple,
      BatchPublicMintValuesSetEvent.OutputObject
    >;

    "MaxSupplySet(uint256,uint256)": TypedContractEvent<
      MaxSupplySetEvent.InputTuple,
      MaxSupplySetEvent.OutputTuple,
      MaxSupplySetEvent.OutputObject
    >;
    MaxSupplySet: TypedContractEvent<
      MaxSupplySetEvent.InputTuple,
      MaxSupplySetEvent.OutputTuple,
      MaxSupplySetEvent.OutputObject
    >;

    "PublicMintDatesSet(uint256,uint256,uint256)": TypedContractEvent<
      PublicMintDatesSetEvent.InputTuple,
      PublicMintDatesSetEvent.OutputTuple,
      PublicMintDatesSetEvent.OutputObject
    >;
    PublicMintDatesSet: TypedContractEvent<
      PublicMintDatesSetEvent.InputTuple,
      PublicMintDatesSetEvent.OutputTuple,
      PublicMintDatesSetEvent.OutputObject
    >;

    "PublicMintLimitSet(uint256,uint256)": TypedContractEvent<
      PublicMintLimitSetEvent.InputTuple,
      PublicMintLimitSetEvent.OutputTuple,
      PublicMintLimitSetEvent.OutputObject
    >;
    PublicMintLimitSet: TypedContractEvent<
      PublicMintLimitSetEvent.InputTuple,
      PublicMintLimitSetEvent.OutputTuple,
      PublicMintLimitSetEvent.OutputObject
    >;

    "PublicMintPriceSet(uint256,uint256)": TypedContractEvent<
      PublicMintPriceSetEvent.InputTuple,
      PublicMintPriceSetEvent.OutputTuple,
      PublicMintPriceSetEvent.OutputObject
    >;
    PublicMintPriceSet: TypedContractEvent<
      PublicMintPriceSetEvent.InputTuple,
      PublicMintPriceSetEvent.OutputTuple,
      PublicMintPriceSetEvent.OutputObject
    >;

    "PublicMintStateSet(uint256,bool)": TypedContractEvent<
      PublicMintStateSetEvent.InputTuple,
      PublicMintStateSetEvent.OutputTuple,
      PublicMintStateSetEvent.OutputObject
    >;
    PublicMintStateSet: TypedContractEvent<
      PublicMintStateSetEvent.InputTuple,
      PublicMintStateSetEvent.OutputTuple,
      PublicMintStateSetEvent.OutputObject
    >;

    "PublicMintValuesSet(uint256,tuple)": TypedContractEvent<
      PublicMintValuesSetEvent.InputTuple,
      PublicMintValuesSetEvent.OutputTuple,
      PublicMintValuesSetEvent.OutputObject
    >;
    PublicMintValuesSet: TypedContractEvent<
      PublicMintValuesSetEvent.InputTuple,
      PublicMintValuesSetEvent.OutputTuple,
      PublicMintValuesSetEvent.OutputObject
    >;
  };
}
